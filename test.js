// Generated by Haxe 4.3.0-rc.1
(function ($hx_exports, $global) { "use strict";
$hx_exports["stx"] = $hx_exports["stx"] || {};
$hx_exports["stx"]["pico"] = $hx_exports["stx"]["pico"] || {};
$hx_exports["stx"]["pico"]["_Option"] = $hx_exports["stx"]["pico"]["_Option"] || {};
;$hx_exports["stx"]["nano"] = $hx_exports["stx"]["nano"] || {};
$hx_exports["stx"]["nano"]["_Contract"] = $hx_exports["stx"]["nano"]["_Contract"] || {};
var $hxClasses = {},$estr = function() { return js_Boot.__string_rec(this,''); },$hxEnums = $hxEnums || {},$_;
function $extend(from, fields) {
	var proto = Object.create(from);
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var js_node_ChildProcess = require("child_process");
var Std = function() { };
$hxClasses["Std"] = Std;
Std.__name__ = "Std";
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	var v = parseInt(x);
	if(isNaN(v)) {
		return null;
	}
	return v;
};
Std.parseFloat = function(x) {
	return parseFloat(x);
};
var Sys = function() { };
$hxClasses["Sys"] = Sys;
Sys.__name__ = "Sys";
Sys.environment = function() {
	var m = new haxe_ds_StringMap();
	var _g = 0;
	var _g1 = Reflect.fields(process.env);
	while(_g < _g1.length) {
		var key = _g1[_g];
		++_g;
		var v = process.env[key];
		m.h[key] = v;
	}
	return m;
};
Sys.systemName = function() {
	var _g = process.platform;
	switch(_g) {
	case "darwin":
		return "Mac";
	case "freebsd":
		return "BSD";
	case "linux":
		return "Linux";
	case "win32":
		return "Windows";
	default:
		var other = _g;
		return other;
	}
};
Sys.getChar = function(echo) {
	throw haxe_Exception.thrown("Sys.getChar is currently not implemented on node.js");
};
Sys.sleep = function(seconds) {
	var end = Date.now() + seconds * 1000;
	while(Date.now() <= end) {
	}
};
var Reflect = function() { };
$hxClasses["Reflect"] = Reflect;
Reflect.__name__ = "Reflect";
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( _g ) {
		return null;
	}
};
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
			a.push(f);
		}
		}
	}
	return a;
};
Reflect.isFunction = function(f) {
	if(typeof(f) == "function") {
		return !(f.__name__ || f.__ename__);
	} else {
		return false;
	}
};
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
$hxClasses["EReg"] = EReg;
EReg.__name__ = "EReg";
EReg.prototype = {
	r: null
	,match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,matched: function(n) {
		if(this.r.m != null && n >= 0 && n < this.r.m.length) {
			return this.r.m[n];
		} else {
			throw haxe_Exception.thrown("EReg::matched");
		}
	}
	,matchedLeft: function() {
		if(this.r.m == null) {
			throw haxe_Exception.thrown("No string matched");
		}
		return HxOverrides.substr(this.r.s,0,this.r.m.index);
	}
	,matchedRight: function() {
		if(this.r.m == null) {
			throw haxe_Exception.thrown("No string matched");
		}
		var sz = this.r.m.index + this.r.m[0].length;
		return HxOverrides.substr(this.r.s,sz,this.r.s.length - sz);
	}
	,matchedPos: function() {
		if(this.r.m == null) {
			throw haxe_Exception.thrown("No string matched");
		}
		return { pos : this.r.m.index, len : this.r.m[0].length};
	}
	,matchSub: function(s,pos,len) {
		if(len == null) {
			len = -1;
		}
		if(this.r.global) {
			this.r.lastIndex = pos;
			this.r.m = this.r.exec(len < 0 ? s : HxOverrides.substr(s,0,pos + len));
			var b = this.r.m != null;
			if(b) {
				this.r.s = s;
			}
			return b;
		} else {
			var b = this.match(len < 0 ? HxOverrides.substr(s,pos,null) : HxOverrides.substr(s,pos,len));
			if(b) {
				this.r.s = s;
				this.r.m.index += pos;
			}
			return b;
		}
	}
	,split: function(s) {
		var d = "#__delim__#";
		return s.replace(this.r,d).split(d);
	}
	,map: function(s,f) {
		var offset = 0;
		var buf_b = "";
		while(true) {
			if(offset >= s.length) {
				break;
			} else if(!this.matchSub(s,offset)) {
				buf_b += Std.string(HxOverrides.substr(s,offset,null));
				break;
			}
			var p = this.matchedPos();
			buf_b += Std.string(HxOverrides.substr(s,offset,p.pos - offset));
			buf_b += Std.string(f(this));
			if(p.len == 0) {
				buf_b += Std.string(HxOverrides.substr(s,p.pos,1));
				offset = p.pos + 1;
			} else {
				offset = p.pos + p.len;
			}
			if(!this.r.global) {
				break;
			}
		}
		if(!this.r.global && offset > 0 && offset < s.length) {
			buf_b += Std.string(HxOverrides.substr(s,offset,null));
		}
		return buf_b;
	}
	,__class__: EReg
};
var Console = function() { };
$hxClasses["Console"] = Console;
Console.__name__ = "Console";
Console.printlnFormatted = function(s,outputStream) {
	if(outputStream == null) {
		outputStream = 0;
	}
	if(s == null) {
		s = "";
	}
	Console.printFormatted(s + "\n",outputStream);
};
Console.println = function(s,outputStream) {
	if(outputStream == null) {
		outputStream = 0;
	}
	if(s == null) {
		s = "";
	}
	Console.print(s + "\n",outputStream);
};
Console.format = function(s,formatMode) {
	s += "<//>";
	var activeFormatFlagStack = [];
	var groupedProceedingTags = [];
	var browserFormatArguments = [];
	var result = Console.formatTagPattern.map(s,function(e) {
		var escaped = e.matched(1) != null;
		if(escaped) {
			return e.matched(0);
		}
		var open = e.matched(2) == null;
		var tags = e.matched(3).split(",");
		if(!open && tags.length == 1) {
			if(tags[0] == "") {
				var last = activeFormatFlagStack[activeFormatFlagStack.length - 1];
				var i = activeFormatFlagStack.indexOf(last);
				if(i != -1) {
					var proceedingTags = groupedProceedingTags[i];
					activeFormatFlagStack.splice(i - proceedingTags,proceedingTags + 1);
					groupedProceedingTags.splice(i - proceedingTags,proceedingTags + 1);
				}
			} else if(FormatFlag.fromString(tags[0]) == "reset") {
				activeFormatFlagStack = [];
				groupedProceedingTags = [];
			} else {
				var flag = FormatFlag.fromString(tags[0]);
				if(flag != null) {
					var i = activeFormatFlagStack.indexOf(flag);
					if(i != -1) {
						var proceedingTags = groupedProceedingTags[i];
						activeFormatFlagStack.splice(i - proceedingTags,proceedingTags + 1);
						groupedProceedingTags.splice(i - proceedingTags,proceedingTags + 1);
					}
				}
			}
		} else {
			var proceedingTags = 0;
			var _g = 0;
			while(_g < tags.length) {
				var tag = tags[_g];
				++_g;
				var flag = FormatFlag.fromString(tag);
				if(flag == null) {
					return e.matched(0);
				}
				if(open) {
					activeFormatFlagStack.push(flag);
					groupedProceedingTags.push(proceedingTags);
					++proceedingTags;
				} else {
					var i = activeFormatFlagStack.indexOf(flag);
					if(i != -1) {
						var proceedingTags1 = groupedProceedingTags[i];
						activeFormatFlagStack.splice(i - proceedingTags1,proceedingTags1 + 1);
						groupedProceedingTags.splice(i - proceedingTags1,proceedingTags1 + 1);
					}
				}
			}
		}
		switch(formatMode) {
		case 0:
			if(open) {
				if(activeFormatFlagStack.length > 0) {
					var lastFlagCount = groupedProceedingTags[groupedProceedingTags.length - 1] + 1;
					var asciiFormatString = "";
					var _g = 0;
					var _g1 = lastFlagCount;
					while(_g < _g1) {
						var i = _g++;
						var idx = groupedProceedingTags.length - 1 - i;
						asciiFormatString += Console.getAsciiFormat(activeFormatFlagStack[idx]);
					}
					return asciiFormatString;
				} else {
					return "";
				}
			} else {
				var result = Console.getAsciiFormat("reset");
				var result1 = new Array(activeFormatFlagStack.length);
				var _g = 0;
				var _g1 = activeFormatFlagStack.length;
				while(_g < _g1) {
					var i = _g++;
					result1[i] = Console.getAsciiFormat(activeFormatFlagStack[i]);
				}
				var _g = [];
				var _g1 = 0;
				var _g2 = result1;
				while(_g1 < _g2.length) {
					var v = _g2[_g1];
					++_g1;
					if(v != null) {
						_g.push(v);
					}
				}
				return result + _g.join("");
			}
			break;
		case 1:
			var browserFormatArguments1 = browserFormatArguments;
			var result = new Array(activeFormatFlagStack.length);
			var _g = 0;
			var _g1 = activeFormatFlagStack.length;
			while(_g < _g1) {
				var i = _g++;
				result[i] = Console.getBrowserFormat(activeFormatFlagStack[i]);
			}
			var _g = [];
			var _g1 = 0;
			var _g2 = result;
			while(_g1 < _g2.length) {
				var v = _g2[_g1];
				++_g1;
				if(v != null) {
					_g.push(v);
				}
			}
			browserFormatArguments1.push(_g.join(";"));
			return "%c";
		case 2:
			return "";
		}
	});
	return { formatted : result, browserFormatArguments : browserFormatArguments};
};
Console.stripFormatting = function(s) {
	return Console.format(s,2).formatted;
};
Console.printFormatted = function(s,outputStream) {
	if(outputStream == null) {
		outputStream = 0;
	}
	if(s == null) {
		s = "";
	}
	var result = Console.format(s,Console.formatMode);
	if(Console.formatMode == 1) {
		var logArgs = [result.formatted].concat(result.browserFormatArguments);
		switch(outputStream) {
		case 1:
			console.warn.apply(console, logArgs);
			break;
		case 2:
			console.error.apply(console, logArgs);
			break;
		case 0:case 3:
			console.log.apply(console, logArgs);
			break;
		}
		return;
	}
	Console.print(result.formatted,outputStream);
};
Console.print = function(s,outputStream) {
	if(outputStream == null) {
		outputStream = 0;
	}
	if(s == null) {
		s = "";
	}
	if(Console.printIntercept != null) {
		var allowDefaultPrint = Console.printIntercept(s,outputStream);
		if(!allowDefaultPrint) {
			return;
		}
	}
	if(Console.unicodeCompatibilityMode == 1 && !Console.unicodeCompatibilityEnabled) {
		Console.exec("chcp 65001");
		Console.unicodeCompatibilityEnabled = true;
	}
	switch(outputStream) {
	case 1:case 2:
		new _$Sys_FileOutput(2).writeString(s);
		break;
	case 0:case 3:
		new _$Sys_FileOutput(1).writeString(s);
		break;
	}
};
Console.getAsciiFormat = function(flag) {
	if(flag.charAt(0) == "#") {
		var hex = HxOverrides.substr(flag,1,null);
		var r = Std.parseInt("0x" + HxOverrides.substr(hex,0,2));
		var g = Std.parseInt("0x" + HxOverrides.substr(hex,2,2));
		var b = Std.parseInt("0x" + HxOverrides.substr(hex,4,2));
		return "\x1B[38;5;" + Console.rgbToAscii256(r,g,b) + "m";
	}
	if(HxOverrides.substr(flag,0,3) == "bg#") {
		var hex = HxOverrides.substr(flag,3,null);
		var r = Std.parseInt("0x" + HxOverrides.substr(hex,0,2));
		var g = Std.parseInt("0x" + HxOverrides.substr(hex,2,2));
		var b = Std.parseInt("0x" + HxOverrides.substr(hex,4,2));
		return "\x1B[48;5;" + Console.rgbToAscii256(r,g,b) + "m";
	}
	switch(flag) {
	case "bg_black":
		return "\x1B[48;5;" + 0 + "m";
	case "bg_blue":
		return "\x1B[48;5;" + 4 + "m";
	case "bg_cyan":
		return "\x1B[48;5;" + 6 + "m";
	case "bg_green":
		return "\x1B[48;5;" + 2 + "m";
	case "bg_light_black":
		return "\x1B[48;5;" + 8 + "m";
	case "bg_light_blue":
		return "\x1B[48;5;" + 12 + "m";
	case "bg_light_cyan":
		return "\x1B[48;5;" + 14 + "m";
	case "bg_light_green":
		return "\x1B[48;5;" + 10 + "m";
	case "bg_light_magenta":
		return "\x1B[48;5;" + 13 + "m";
	case "bg_light_red":
		return "\x1B[48;5;" + 9 + "m";
	case "bg_light_white":
		return "\x1B[48;5;" + 15 + "m";
	case "bg_light_yellow":
		return "\x1B[48;5;" + 11 + "m";
	case "bg_magenta":
		return "\x1B[48;5;" + 5 + "m";
	case "bg_red":
		return "\x1B[48;5;" + 1 + "m";
	case "bg_white":
		return "\x1B[48;5;" + 7 + "m";
	case "bg_yellow":
		return "\x1B[48;5;" + 3 + "m";
	case "black":
		return "\x1B[38;5;" + 0 + "m";
	case "blink":
		return "\x1B[5m";
	case "blue":
		return "\x1B[38;5;" + 4 + "m";
	case "bold":
		return "\x1B[1m";
	case "cyan":
		return "\x1B[38;5;" + 6 + "m";
	case "dim":
		return "\x1B[2m";
	case "green":
		return "\x1B[38;5;" + 2 + "m";
	case "hidden":
		return "\x1B[8m";
	case "invert":
		return "\x1B[7m";
	case "italic":
		return "\x1B[3m";
	case "light_black":
		return "\x1B[38;5;" + 8 + "m";
	case "light_blue":
		return "\x1B[38;5;" + 12 + "m";
	case "light_cyan":
		return "\x1B[38;5;" + 14 + "m";
	case "light_green":
		return "\x1B[38;5;" + 10 + "m";
	case "light_magenta":
		return "\x1B[38;5;" + 13 + "m";
	case "light_red":
		return "\x1B[38;5;" + 9 + "m";
	case "light_white":
		return "\x1B[38;5;" + 15 + "m";
	case "light_yellow":
		return "\x1B[38;5;" + 11 + "m";
	case "magenta":
		return "\x1B[38;5;" + 5 + "m";
	case "red":
		return "\x1B[38;5;" + 1 + "m";
	case "reset":
		return "\x1B[m";
	case "underline":
		return "\x1B[4m";
	case "white":
		return "\x1B[38;5;" + 7 + "m";
	case "yellow":
		return "\x1B[38;5;" + 3 + "m";
	default:
		return "";
	}
};
Console.rgbToAscii256 = function(r,g,b) {
	var nearIdx = function(c,set) {
		var delta = Infinity;
		var index = -1;
		var _g = 0;
		var _g1 = set.length;
		while(_g < _g1) {
			var i = _g++;
			var d = Math.abs(c - set[i]);
			if(d < delta) {
				delta = d;
				index = i;
			}
		}
		return index;
	};
	var colorSteps = [0,95,135,175,215,255];
	var ir = nearIdx(r,colorSteps);
	var ig = nearIdx(g,colorSteps);
	var ib = nearIdx(b,colorSteps);
	var ier = Math.abs(r - colorSteps[ir]);
	var ieg = Math.abs(g - colorSteps[ig]);
	var ieb = Math.abs(b - colorSteps[ib]);
	var averageColorError = ier + ieg + ieb;
	var jr = Math.round((r - 8) / 10);
	var jg = Math.round((g - 8) / 10);
	var jb = Math.round((b - 8) / 10);
	var jer = Math.abs(r - Math.max(Math.min(jr * 10 + 8,238),8));
	var jeg = Math.abs(g - Math.max(Math.min(jg * 10 + 8,238),8));
	var jeb = Math.abs(b - Math.max(Math.min(jb * 10 + 8,238),8));
	var averageGrayError = jer + jeg + jeb;
	if(averageGrayError < averageColorError && r == g && g == b) {
		var grayIndex = jr + 232;
		return grayIndex;
	} else {
		var colorIndex = 16 + ir * 36 + ig * 6 + ib;
		return colorIndex;
	}
};
Console.getBrowserFormat = function(flag) {
	if(flag.charAt(0) == "#") {
		return "color: " + flag;
	}
	if(HxOverrides.substr(flag,0,3) == "bg#") {
		return "background-color: " + HxOverrides.substr(flag,2,null);
	}
	if(flag.charAt(0) == "{") {
		return HxOverrides.substr(flag,1,flag.length - 2);
	}
	switch(flag) {
	case "bg_black":
		return "background-color: black";
	case "bg_blue":
		return "background-color: blue";
	case "bg_cyan":
		return "background-color: cyan";
	case "bg_green":
		return "background-color: green";
	case "bg_light_black":
		return "background-color: gray";
	case "bg_light_blue":
		return "background-color: lightBlue";
	case "bg_light_cyan":
		return "background-color: lightCyan";
	case "bg_light_green":
		return "background-color: lightGreen";
	case "bg_light_magenta":
		return "background-color: lightPink";
	case "bg_light_red":
		return "background-color: salmon";
	case "bg_light_white":
		return "background-color: white";
	case "bg_light_yellow":
		return "background-color: lightYellow";
	case "bg_magenta":
		return "background-color: magenta";
	case "bg_red":
		return "background-color: red";
	case "bg_white":
		return "background-color: whiteSmoke";
	case "bg_yellow":
		return "background-color: gold";
	case "black":
		return "color: black";
	case "blink":
		return "text-decoration: blink";
	case "blue":
		return "color: blue";
	case "bold":
		return "font-weight: bold";
	case "cyan":
		return "color: cyan";
	case "dim":
		return "color: gray";
	case "green":
		return "color: green";
	case "hidden":
		return "visibility: hidden; color: white";
	case "invert":
		return "-webkit-filter: invert(100%); filter: invert(100%)";
	case "italic":
		return "font-style: italic";
	case "light_black":
		return "color: gray";
	case "light_blue":
		return "color: lightBlue";
	case "light_cyan":
		return "color: lightCyan";
	case "light_green":
		return "color: lightGreen";
	case "light_magenta":
		return "color: lightPink";
	case "light_red":
		return "color: salmon";
	case "light_white":
		return "color: white";
	case "light_yellow":
		return "color: #ffed88";
	case "magenta":
		return "color: magenta";
	case "red":
		return "color: red";
	case "reset":
		return "";
	case "underline":
		return "text-decoration: underline";
	case "white":
		return "color: whiteSmoke";
	case "yellow":
		return "color: #f5ba00";
	default:
		return "";
	}
};
Console.determineConsoleFormatMode = function() {
	var hasWindowObject = typeof(window) != "undefined";
	if(hasWindowObject) {
		return 1;
	}
	var tputColors = Console.exec("tput colors");
	if(tputColors.exit == 0) {
		var tputResult = Std.parseInt(tputColors.stdout);
		if(tputResult != null && tputResult > 2) {
			return 0;
		}
	}
	var termEnv = Sys.environment().h["TERM"];
	if(termEnv != null && new EReg("cygwin|xterm|vt100","").match(termEnv)) {
		return 0;
	}
	return 2;
};
Console.exec = function(cmd,args) {
	var p = js_node_ChildProcess.spawnSync(cmd,args != null ? args : [],{ });
	var stdout = p.stdout == null ? "" : p.stdout.toString();
	if(stdout == null) {
		stdout = "";
	}
	return { exit : p.status, stdout : stdout};
};
var FormatFlag = {};
FormatFlag.fromString = function(str) {
	str = str.toLowerCase();
	if(str.charAt(0) == "#" || HxOverrides.substr(str,0,3) == "bg#") {
		var hIdx = str.indexOf("#");
		var hex = HxOverrides.substr(str,hIdx + 1,null);
		if(hex.length == 3) {
			var a = hex.split("");
			hex = [a[0],a[0],a[1],a[1],a[2],a[2]].join("");
		}
		if(new EReg("[^0-9a-f]","i").match(hex) || hex.length < 6) {
			return "";
		}
		var normalized = str.substring(0,hIdx) + "#" + hex;
		return normalized;
	}
	switch(str) {
	case "!":
		return "invert";
	case "/":
		return "reset";
	case "b":
		return "bold";
	case "bg_gray":
		return "bg_light_black";
	case "gray":
		return "light_black";
	case "i":
		return "italic";
	case "u":
		return "underline";
	default:
		return str;
	}
};
var _$Date_Date_$Impl_$ = function() { };
$hxClasses["_Date.Date_Impl_"] = _$Date_Date_$Impl_$;
_$Date_Date_$Impl_$.__name__ = "_Date.Date_Impl_";
_$Date_Date_$Impl_$.now = function() {
	return new Date();
};
var HxOverrides = function() { };
$hxClasses["HxOverrides"] = HxOverrides;
HxOverrides.__name__ = "HxOverrides";
HxOverrides.dateStr = function(date) {
	var m = date.getMonth() + 1;
	var d = date.getDate();
	var h = date.getHours();
	var mi = date.getMinutes();
	var s = date.getSeconds();
	return date.getFullYear() + "-" + (m < 10 ? "0" + m : "" + m) + "-" + (d < 10 ? "0" + d : "" + d) + " " + (h < 10 ? "0" + h : "" + h) + ":" + (mi < 10 ? "0" + mi : "" + mi) + ":" + (s < 10 ? "0" + s : "" + s);
};
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
HxOverrides.keyValueIter = function(a) {
	return new haxe_iterators_ArrayKeyValueIterator(a);
};
HxOverrides.now = function() {
	return Date.now();
};
var Lambda = function() { };
$hxClasses["Lambda"] = Lambda;
Lambda.__name__ = "Lambda";
Lambda.array = function(it) {
	var a = [];
	var i = $getIterator(it);
	while(i.hasNext()) {
		var i1 = i.next();
		a.push(i1);
	}
	return a;
};
Lambda.has = function(it,elt) {
	var x = $getIterator(it);
	while(x.hasNext()) {
		var x1 = x.next();
		if(x1 == elt) {
			return true;
		}
	}
	return false;
};
Lambda.fold = function(it,f,first) {
	var x = $getIterator(it);
	while(x.hasNext()) {
		var x1 = x.next();
		first = f(x1,first);
	}
	return first;
};
Math.__name__ = "Math";
var _$Printf_FormatFlag = $hxEnums["_Printf.FormatFlag"] = { __ename__:"_Printf.FormatFlag",__constructs__:null
	,Minus: {_hx_name:"Minus",_hx_index:0,__enum__:"_Printf.FormatFlag",toString:$estr}
	,Plus: {_hx_name:"Plus",_hx_index:1,__enum__:"_Printf.FormatFlag",toString:$estr}
	,Space: {_hx_name:"Space",_hx_index:2,__enum__:"_Printf.FormatFlag",toString:$estr}
	,Sharp: {_hx_name:"Sharp",_hx_index:3,__enum__:"_Printf.FormatFlag",toString:$estr}
	,Zero: {_hx_name:"Zero",_hx_index:4,__enum__:"_Printf.FormatFlag",toString:$estr}
	,LengthH: {_hx_name:"LengthH",_hx_index:5,__enum__:"_Printf.FormatFlag",toString:$estr}
	,LengthUpperCaseL: {_hx_name:"LengthUpperCaseL",_hx_index:6,__enum__:"_Printf.FormatFlag",toString:$estr}
	,LengthLowerCaseL: {_hx_name:"LengthLowerCaseL",_hx_index:7,__enum__:"_Printf.FormatFlag",toString:$estr}
	,UpperCase: {_hx_name:"UpperCase",_hx_index:8,__enum__:"_Printf.FormatFlag",toString:$estr}
};
_$Printf_FormatFlag.__constructs__ = [_$Printf_FormatFlag.Minus,_$Printf_FormatFlag.Plus,_$Printf_FormatFlag.Space,_$Printf_FormatFlag.Sharp,_$Printf_FormatFlag.Zero,_$Printf_FormatFlag.LengthH,_$Printf_FormatFlag.LengthUpperCaseL,_$Printf_FormatFlag.LengthLowerCaseL,_$Printf_FormatFlag.UpperCase];
var _$Printf_FormatArgs = function(flags,pos,width,precision) {
	this.flags = flags;
	this.pos = pos;
	this.width = width;
	this.precision = precision;
};
$hxClasses["_Printf.FormatArgs"] = _$Printf_FormatArgs;
_$Printf_FormatArgs.__name__ = "_Printf.FormatArgs";
_$Printf_FormatArgs.prototype = {
	flags: null
	,pos: null
	,width: null
	,precision: null
	,__class__: _$Printf_FormatArgs
};
var _$Printf_FormatToken = $hxEnums["_Printf.FormatToken"] = { __ename__:"_Printf.FormatToken",__constructs__:null
	,Raw: ($_=function(string) { return {_hx_index:0,string:string,__enum__:"_Printf.FormatToken",toString:$estr}; },$_._hx_name="Raw",$_.__params__ = ["string"],$_)
	,Tag: ($_=function(type,args) { return {_hx_index:1,type:type,args:args,__enum__:"_Printf.FormatToken",toString:$estr}; },$_._hx_name="Tag",$_.__params__ = ["type","args"],$_)
	,Property: ($_=function(name) { return {_hx_index:2,name:name,__enum__:"_Printf.FormatToken",toString:$estr}; },$_._hx_name="Property",$_.__params__ = ["name"],$_)
	,Unknown: ($_=function(string,pos) { return {_hx_index:3,string:string,pos:pos,__enum__:"_Printf.FormatToken",toString:$estr}; },$_._hx_name="Unknown",$_.__params__ = ["string","pos"],$_)
};
_$Printf_FormatToken.__constructs__ = [_$Printf_FormatToken.Raw,_$Printf_FormatToken.Tag,_$Printf_FormatToken.Property,_$Printf_FormatToken.Unknown];
var _$Printf_FormatDataType = $hxEnums["_Printf.FormatDataType"] = { __ename__:"_Printf.FormatDataType",__constructs__:null
	,FmtInt: ($_=function(type) { return {_hx_index:0,type:type,__enum__:"_Printf.FormatDataType",toString:$estr}; },$_._hx_name="FmtInt",$_.__params__ = ["type"],$_)
	,FmtFloat: ($_=function(floatType) { return {_hx_index:1,floatType:floatType,__enum__:"_Printf.FormatDataType",toString:$estr}; },$_._hx_name="FmtFloat",$_.__params__ = ["floatType"],$_)
	,FmtString: {_hx_name:"FmtString",_hx_index:2,__enum__:"_Printf.FormatDataType",toString:$estr}
	,FmtPointer: {_hx_name:"FmtPointer",_hx_index:3,__enum__:"_Printf.FormatDataType",toString:$estr}
	,FmtNothing: {_hx_name:"FmtNothing",_hx_index:4,__enum__:"_Printf.FormatDataType",toString:$estr}
};
_$Printf_FormatDataType.__constructs__ = [_$Printf_FormatDataType.FmtInt,_$Printf_FormatDataType.FmtFloat,_$Printf_FormatDataType.FmtString,_$Printf_FormatDataType.FmtPointer,_$Printf_FormatDataType.FmtNothing];
var _$Printf_IntType = $hxEnums["_Printf.IntType"] = { __ename__:"_Printf.IntType",__constructs__:null
	,ICharacter: {_hx_name:"ICharacter",_hx_index:0,__enum__:"_Printf.IntType",toString:$estr}
	,ISignedDecimal: {_hx_name:"ISignedDecimal",_hx_index:1,__enum__:"_Printf.IntType",toString:$estr}
	,IUnsignedDecimal: {_hx_name:"IUnsignedDecimal",_hx_index:2,__enum__:"_Printf.IntType",toString:$estr}
	,IOctal: {_hx_name:"IOctal",_hx_index:3,__enum__:"_Printf.IntType",toString:$estr}
	,IHex: {_hx_name:"IHex",_hx_index:4,__enum__:"_Printf.IntType",toString:$estr}
	,IBin: {_hx_name:"IBin",_hx_index:5,__enum__:"_Printf.IntType",toString:$estr}
};
_$Printf_IntType.__constructs__ = [_$Printf_IntType.ICharacter,_$Printf_IntType.ISignedDecimal,_$Printf_IntType.IUnsignedDecimal,_$Printf_IntType.IOctal,_$Printf_IntType.IHex,_$Printf_IntType.IBin];
var _$Printf_FloatType = $hxEnums["_Printf.FloatType"] = { __ename__:"_Printf.FloatType",__constructs__:null
	,FNormal: {_hx_name:"FNormal",_hx_index:0,__enum__:"_Printf.FloatType",toString:$estr}
	,FScientific: {_hx_name:"FScientific",_hx_index:1,__enum__:"_Printf.FloatType",toString:$estr}
	,FNatural: {_hx_name:"FNatural",_hx_index:2,__enum__:"_Printf.FloatType",toString:$estr}
};
_$Printf_FloatType.__constructs__ = [_$Printf_FloatType.FNormal,_$Printf_FloatType.FScientific,_$Printf_FloatType.FNatural];
var Printf = function() { };
$hxClasses["Printf"] = Printf;
Printf.__name__ = "Printf";
Printf._padChars = null;
Printf._tmp = null;
Printf.init = function() {
	var this1 = new Array(40);
	Printf._padChars = this1;
	Printf._padChars[0] = StringTools.rpad("","0",0);
	Printf._padChars[1] = StringTools.rpad("","0",1);
	Printf._padChars[2] = StringTools.rpad("","0",2);
	Printf._padChars[3] = StringTools.rpad("","0",3);
	Printf._padChars[4] = StringTools.rpad("","0",4);
	Printf._padChars[5] = StringTools.rpad("","0",5);
	Printf._padChars[6] = StringTools.rpad("","0",6);
	Printf._padChars[7] = StringTools.rpad("","0",7);
	Printf._padChars[8] = StringTools.rpad("","0",8);
	Printf._padChars[9] = StringTools.rpad("","0",9);
	Printf._padChars[10] = StringTools.rpad("","0",10);
	Printf._padChars[11] = StringTools.rpad("","0",11);
	Printf._padChars[12] = StringTools.rpad("","0",12);
	Printf._padChars[13] = StringTools.rpad("","0",13);
	Printf._padChars[14] = StringTools.rpad("","0",14);
	Printf._padChars[15] = StringTools.rpad("","0",15);
	Printf._padChars[16] = StringTools.rpad("","0",16);
	Printf._padChars[17] = StringTools.rpad("","0",17);
	Printf._padChars[18] = StringTools.rpad("","0",18);
	Printf._padChars[19] = StringTools.rpad("","0",19);
	var _g = 0;
	while(_g < 20) {
		var i = _g++;
		Printf._padChars[i + 20] = StringTools.rpad(""," ",i);
	}
	var this1 = new Array(64);
	Printf._tmp = this1;
};
Printf.format = function(fmt,args) {
	if(!Printf._initialized) {
		Printf._initialized = true;
		Printf.init();
	}
	var output = new StringBuf();
	var argIndex = 0;
	var tokens = [];
	var _g = 0;
	var _g1 = Printf.tokenize(fmt,tokens);
	while(_g < _g1) {
		var i = _g++;
		var _g2 = tokens[i];
		switch(_g2._hx_index) {
		case 0:
			var string = _g2.string;
			output.b += string == null ? "null" : "" + string;
			break;
		case 1:
			var type = _g2.type;
			var tagArgs = _g2.args;
			if(tagArgs.width == null) {
				if(!js_Boot.__instanceof(args[argIndex],Int)) {
					throw haxe_Exception.thrown(new PrintfError("invalid 'width' argument"));
				}
				tagArgs.width = args[argIndex++];
			}
			if(tagArgs.precision == null) {
				if(!js_Boot.__instanceof(args[argIndex],Int)) {
					throw haxe_Exception.thrown(new PrintfError("invalid 'precision' argument"));
				}
				tagArgs.precision = args[argIndex++];
			}
			var value;
			if(tagArgs.pos > -1) {
				if(tagArgs.pos > args.length - 1) {
					throw haxe_Exception.thrown(new PrintfError("argument index out of range"));
				}
				value = args[tagArgs.pos];
			} else {
				value = args[argIndex++];
			}
			if(value == null) {
				value = "null";
			}
			switch(type._hx_index) {
			case 0:
				var intType = type.type;
				switch(intType._hx_index) {
				case 0:
					Printf.formatCharacter(value,tagArgs,output);
					break;
				case 1:
					Printf.formatSignedDecimal(value,tagArgs,output);
					break;
				case 2:
					Printf.formatUnsignedDecimal(value,tagArgs,output);
					break;
				case 3:
					Printf.formatOctal(value,tagArgs,output);
					break;
				case 4:
					Printf.formatHexadecimal(value,tagArgs,output);
					break;
				case 5:
					Printf.formatBinary(value,tagArgs,output);
					break;
				}
				break;
			case 1:
				var floatType = type.floatType;
				switch(floatType._hx_index) {
				case 0:
					Printf.formatFloat(value,tagArgs,output);
					break;
				case 1:
					Printf.formatScientific(value,tagArgs,output);
					break;
				case 2:
					Printf.formatNaturalFloat(value,tagArgs,output);
					break;
				}
				break;
			case 2:
				Printf.formatString(Std.string(value),tagArgs,output);
				break;
			case 3:
				throw haxe_Exception.thrown(new PrintfError("specifier 'p' is not supported"));
			case 4:
				throw haxe_Exception.thrown(new PrintfError("specifier 'n' is not supported"));
			}
			break;
		case 2:
			var name = _g2.name;
			if(!Object.prototype.hasOwnProperty.call(args[0],name)) {
				throw haxe_Exception.thrown(new PrintfError("no field named \"" + name + "\" found"));
			}
			output.b += Std.string(Std.string(Reflect.field(args[0],name)));
			++argIndex;
			break;
		case 3:
			var _g3 = _g2.string;
			var _g4 = _g2.pos;
			throw haxe_Exception.thrown(new PrintfError("Invalid format specifier."));
		}
	}
	return output.b;
};
Printf.tokenize = function(fmt,output) {
	var i = 0;
	var c = 0;
	var n = 0;
	var buf = new StringBuf();
	var k = fmt.length;
	while(i < k) {
		c = fmt.charCodeAt(i++);
		if(c == 37) {
			c = fmt.charCodeAt(i++);
			if(c == 37) {
				buf.b += String.fromCodePoint(c);
				continue;
			}
			if(buf.b.length > 0) {
				output[n++] = _$Printf_FormatToken.Raw(buf.b);
				buf = new StringBuf();
			}
			var token;
			if(c == 40) {
				var endPos = fmt.indexOf(")",i);
				if(endPos == -1) {
					token = _$Printf_FormatToken.Unknown("named parameter",i);
				} else {
					var paramName = HxOverrides.substr(fmt,i,endPos - i);
					i = endPos + 1;
					token = _$Printf_FormatToken.Property(paramName);
				}
			} else {
				var i1 = 0;
				if(i1 == null) {
					i1 = 0;
				}
				var this1 = i1;
				var params = new _$Printf_FormatArgs(this1,-1,-1,-1);
				_hx_loop2: while(c >= 32 && c <= 48) switch(c) {
				case 32:
					c = fmt.charCodeAt(i++);
					params.flags |= 1 << _$Printf_FormatFlag.Space._hx_index;
					break;
				case 35:
					c = fmt.charCodeAt(i++);
					params.flags |= 1 << _$Printf_FormatFlag.Sharp._hx_index;
					break;
				case 43:
					c = fmt.charCodeAt(i++);
					params.flags |= 1 << _$Printf_FormatFlag.Plus._hx_index;
					break;
				case 45:
					c = fmt.charCodeAt(i++);
					params.flags |= 1 << _$Printf_FormatFlag.Minus._hx_index;
					break;
				case 48:
					c = fmt.charCodeAt(i++);
					params.flags |= 1 << _$Printf_FormatFlag.Zero._hx_index;
					break;
				default:
					break _hx_loop2;
				}
				if((params.flags & 1 << _$Printf_FormatFlag.Minus._hx_index) != 0 && (params.flags & 1 << _$Printf_FormatFlag.Zero._hx_index) != 0) {
					params.flags &= -1 - (1 << _$Printf_FormatFlag.Zero._hx_index);
				}
				if((params.flags & 1 << _$Printf_FormatFlag.Space._hx_index) != 0 && (params.flags & 1 << _$Printf_FormatFlag.Plus._hx_index) != 0) {
					params.flags &= -1 - (1 << _$Printf_FormatFlag.Space._hx_index);
				}
				if(c == 42) {
					params.width = null;
					c = fmt.charCodeAt(i++);
				} else if(c >= 48 && c <= 57) {
					var w = 0;
					while(c >= 48 && c <= 57) {
						w = c - 48 + w * 10;
						c = fmt.charCodeAt(i++);
					}
					params.width = w;
					if(c == 36) {
						params.pos = w - 1;
						params.width = -1;
						c = fmt.charCodeAt(i++);
						if(c == 42) {
							params.width = null;
							c = fmt.charCodeAt(i++);
						} else if(c >= 48 && c <= 57) {
							var w1 = 0;
							while(c >= 48 && c <= 57) {
								w1 = c - 48 + w1 * 10;
								c = fmt.charCodeAt(i++);
							}
							params.width = w1;
						}
					}
				}
				if(c == 46) {
					c = fmt.charCodeAt(i++);
					if(c == 42) {
						params.precision = null;
						c = fmt.charCodeAt(i++);
					} else {
						var p = 0;
						if(c >= 48 && c <= 57) {
							while(c >= 48 && c <= 57) {
								p = c - 48 + p * 10;
								c = fmt.charCodeAt(i++);
							}
						}
						params.precision = p;
					}
				}
				_hx_loop6: while(c >= 76 && c <= 108) switch(c) {
				case 76:
					c = fmt.charCodeAt(i++);
					params.flags |= 1 << _$Printf_FormatFlag.LengthUpperCaseL._hx_index;
					break;
				case 104:
					c = fmt.charCodeAt(i++);
					params.flags |= 1 << _$Printf_FormatFlag.LengthH._hx_index;
					break;
				case 108:
					c = fmt.charCodeAt(i++);
					params.flags |= 1 << _$Printf_FormatFlag.LengthLowerCaseL._hx_index;
					break;
				default:
					break _hx_loop6;
				}
				if(c >= 69 && c <= 120) {
					var type;
					switch(c) {
					case 69:
						params.flags |= 1 << _$Printf_FormatFlag.UpperCase._hx_index;
						type = _$Printf_FormatDataType.FmtFloat(_$Printf_FloatType.FScientific);
						break;
					case 71:
						params.flags |= 1 << _$Printf_FormatFlag.UpperCase._hx_index;
						type = _$Printf_FormatDataType.FmtFloat(_$Printf_FloatType.FNatural);
						break;
					case 88:
						params.flags |= 1 << _$Printf_FormatFlag.UpperCase._hx_index;
						type = _$Printf_FormatDataType.FmtInt(_$Printf_IntType.IHex);
						break;
					case 98:
						type = _$Printf_FormatDataType.FmtInt(_$Printf_IntType.IBin);
						break;
					case 99:
						type = _$Printf_FormatDataType.FmtInt(_$Printf_IntType.ICharacter);
						break;
					case 100:
						type = _$Printf_FormatDataType.FmtInt(_$Printf_IntType.ISignedDecimal);
						break;
					case 101:
						type = _$Printf_FormatDataType.FmtFloat(_$Printf_FloatType.FScientific);
						break;
					case 102:
						type = _$Printf_FormatDataType.FmtFloat(_$Printf_FloatType.FNormal);
						break;
					case 103:
						type = _$Printf_FormatDataType.FmtFloat(_$Printf_FloatType.FNatural);
						break;
					case 105:
						type = _$Printf_FormatDataType.FmtInt(_$Printf_IntType.ISignedDecimal);
						break;
					case 110:
						type = _$Printf_FormatDataType.FmtNothing;
						break;
					case 111:
						type = _$Printf_FormatDataType.FmtInt(_$Printf_IntType.IOctal);
						break;
					case 112:
						type = _$Printf_FormatDataType.FmtPointer;
						break;
					case 115:
						type = _$Printf_FormatDataType.FmtString;
						break;
					case 117:
						type = _$Printf_FormatDataType.FmtInt(_$Printf_IntType.IUnsignedDecimal);
						break;
					case 120:
						type = _$Printf_FormatDataType.FmtInt(_$Printf_IntType.IHex);
						break;
					default:
						type = null;
					}
					token = type == null ? _$Printf_FormatToken.Unknown(String.fromCodePoint(c),i) : _$Printf_FormatToken.Tag(type,params);
				} else {
					token = _$Printf_FormatToken.Unknown(String.fromCodePoint(c),i);
				}
			}
			output[n++] = token;
		} else {
			buf.b += String.fromCodePoint(c);
		}
	}
	if(buf.b.length > 0) {
		output[n++] = _$Printf_FormatToken.Raw(buf.b);
	}
	return n;
};
Printf.formatBinary = function(value,args,buf) {
	var f = args.flags;
	var p = args.precision;
	var w = args.width;
	if((f & 1 << _$Printf_FormatFlag.LengthH._hx_index) != 0) {
		value &= 65535;
	}
	if(value == 0) {
		if(p == 0) {
			return;
		}
		f &= -1 - (1 << _$Printf_FormatFlag.Sharp._hx_index);
	}
	if(p == -1) {
		p = 1;
	}
	var tmp = Printf._tmp;
	var l = 0;
	while(true) {
		tmp[l++] = value & 1;
		value >>>= 1;
		if(!(value > 0)) {
			break;
		}
	}
	var m = l;
	if((f & 1 << _$Printf_FormatFlag.Minus._hx_index) != 0) {
		if((f & 1 << _$Printf_FormatFlag.Sharp._hx_index) != 0) {
			buf.b += "0b";
		}
		if(p > l) {
			var _g = 0;
			var _g1 = p - l;
			while(_g < _g1) {
				var i = _g++;
				buf.b += "0";
			}
		}
		while(--m > -1) buf.b += String.fromCodePoint((48 + tmp[m]));
		if((f & 1 << _$Printf_FormatFlag.Sharp._hx_index) != 0) {
			w -= 2;
		}
		if(p > l) {
			l = p;
		}
		if(w > l) {
			var _g = 0;
			var _g1 = w - l;
			while(_g < _g1) {
				var i = _g++;
				buf.b += " ";
			}
		}
	} else {
		var k = l;
		if(p > k) {
			k = p;
		}
		if((f & 1 << _$Printf_FormatFlag.Sharp._hx_index) != 0) {
			w -= 2;
		}
		if(w > k) {
			if((f & 1 << _$Printf_FormatFlag.Zero._hx_index) != 0 && p == 1) {
				var _g = 0;
				var _g1 = w - k;
				while(_g < _g1) {
					var i = _g++;
					buf.b += "0";
				}
			} else {
				var _g = 0;
				var _g1 = w - k;
				while(_g < _g1) {
					var i = _g++;
					buf.b += " ";
				}
			}
		}
		if((f & 1 << _$Printf_FormatFlag.Sharp._hx_index) != 0) {
			buf.b += "0b";
		}
		if(p > l) {
			var _g = 0;
			var _g1 = p - l;
			while(_g < _g1) {
				var i = _g++;
				buf.b += "0";
			}
		}
		while(--m > -1) buf.b += String.fromCodePoint((48 + tmp[m]));
	}
};
Printf.formatOctal = function(value,args,buf) {
	var f = args.flags;
	var p = args.precision;
	var w = args.width;
	if((f & 1 << _$Printf_FormatFlag.LengthH._hx_index) != 0) {
		value &= 65535;
	}
	if(value == 0) {
		if(p == 0) {
			buf.b += Std.string((f & 1 << _$Printf_FormatFlag.Sharp._hx_index) != 0 ? "0" : "");
			return;
		}
		f &= -1 - (1 << _$Printf_FormatFlag.Sharp._hx_index);
	}
	var tmp = Printf._tmp;
	var l = 0;
	while(true) {
		tmp[l++] = value & 7;
		value >>>= 3;
		if(!(value > 0)) {
			break;
		}
	}
	var m = l;
	if(p != -1) {
		if((f & 1 << _$Printf_FormatFlag.Zero._hx_index) != 0) {
			f &= -1 - (1 << _$Printf_FormatFlag.Zero._hx_index);
			f |= 1 << _$Printf_FormatFlag.Space._hx_index;
		}
	} else {
		p = 1;
	}
	if((f & 1 << _$Printf_FormatFlag.Minus._hx_index) != 0) {
		if((f & 1 << _$Printf_FormatFlag.Sharp._hx_index) != 0) {
			buf.b += "0";
			++l;
		}
		if(p > l) {
			var _g = 0;
			var _g1 = p - l;
			while(_g < _g1) {
				var i = _g++;
				buf.b += "0";
			}
		}
		while(--m > -1) {
			var x = String.fromCodePoint((48 + tmp[m]));
			buf.b += Std.string(x);
		}
		if(p > l) {
			l = p;
		}
		if(w > l) {
			var _g = 0;
			var _g1 = w - l;
			while(_g < _g1) {
				var i = _g++;
				buf.b += " ";
			}
		}
	} else {
		if((f & 1 << _$Printf_FormatFlag.Sharp._hx_index) != 0) {
			++l;
		}
		var k = l;
		if(p > k) {
			k = p;
		}
		if(w > k) {
			if((f & 1 << _$Printf_FormatFlag.Zero._hx_index) != 0) {
				var _g = 0;
				var _g1 = w - k;
				while(_g < _g1) {
					var i = _g++;
					buf.b += "0";
				}
			} else {
				var _g = 0;
				var _g1 = w - k;
				while(_g < _g1) {
					var i = _g++;
					buf.b += " ";
				}
			}
		}
		if((f & 1 << _$Printf_FormatFlag.Sharp._hx_index) != 0) {
			buf.b += "0";
		}
		if(p > l) {
			var _g = 0;
			var _g1 = p - l;
			while(_g < _g1) {
				var i = _g++;
				buf.b += "0";
			}
		}
		while(--m > -1) {
			var x = String.fromCodePoint((48 + tmp[m]));
			buf.b += Std.string(x);
		}
	}
};
Printf.formatHexadecimal = function(value,args,buf) {
	var f = args.flags;
	var p = args.precision;
	var w = args.width;
	if((f & 1 << _$Printf_FormatFlag.LengthH._hx_index) != 0) {
		value &= 65535;
	}
	if(value == 0) {
		if(p == 0) {
			return;
		}
		f &= -1 - (1 << _$Printf_FormatFlag.Sharp._hx_index);
	}
	if(p == -1) {
		p = 1;
	}
	var tmp = Printf._tmp;
	var l = 0;
	while(true) {
		tmp[l++] = value & 15;
		value >>>= 4;
		if(!(value > 0)) {
			break;
		}
	}
	var m = l;
	if((f & 1 << _$Printf_FormatFlag.Minus._hx_index) != 0) {
		if((f & 1 << _$Printf_FormatFlag.Sharp._hx_index) != 0) {
			if((f & 1 << _$Printf_FormatFlag.UpperCase._hx_index) != 0) {
				buf.b += "0X";
			} else {
				buf.b += "0x";
			}
		}
		if(p > l) {
			var _g = 0;
			var _g1 = p - l;
			while(_g < _g1) {
				var i = _g++;
				buf.b += "0";
			}
		}
		var a = (f & 1 << _$Printf_FormatFlag.UpperCase._hx_index) != 0 ? 65 : 97;
		while(--m > -1) {
			var v = tmp[m];
			if(v < 10) {
				var x = String.fromCodePoint((48 + v));
				buf.b += Std.string(x);
			} else {
				var x1 = String.fromCodePoint((a + (v - 10)));
				buf.b += Std.string(x1);
			}
		}
		if((f & 1 << _$Printf_FormatFlag.Sharp._hx_index) != 0) {
			w -= 2;
		}
		if(p > l) {
			l = p;
		}
		if(w > l) {
			var _g = 0;
			var _g1 = w - l;
			while(_g < _g1) {
				var i = _g++;
				buf.b += " ";
			}
		}
	} else {
		var k = l;
		if(p > k) {
			k = p;
		}
		if((f & 1 << _$Printf_FormatFlag.Sharp._hx_index) != 0) {
			w -= 2;
		}
		if(w > k) {
			if((f & 1 << _$Printf_FormatFlag.Zero._hx_index) != 0 && p == 1) {
				var _g = 0;
				var _g1 = w - k;
				while(_g < _g1) {
					var i = _g++;
					buf.b += "0";
				}
			} else {
				var _g = 0;
				var _g1 = w - k;
				while(_g < _g1) {
					var i = _g++;
					buf.b += " ";
				}
			}
		}
		if((f & 1 << _$Printf_FormatFlag.Sharp._hx_index) != 0) {
			if((f & 1 << _$Printf_FormatFlag.UpperCase._hx_index) != 0) {
				buf.b += "0X";
			} else {
				buf.b += "0x";
			}
		}
		if(p > l) {
			var _g = 0;
			var _g1 = p - l;
			while(_g < _g1) {
				var i = _g++;
				buf.b += "0";
			}
		}
		var a = (f & 1 << _$Printf_FormatFlag.UpperCase._hx_index) != 0 ? 65 : 97;
		while(--m > -1) {
			var v = tmp[m];
			if(v < 10) {
				var x = String.fromCodePoint((48 + v));
				buf.b += Std.string(x);
			} else {
				var x1 = String.fromCodePoint((a + (v - 10)));
				buf.b += Std.string(x1);
			}
		}
	}
};
Printf.formatSignedDecimal = function(value,args,buf) {
	var f = args.flags;
	var p = args.precision;
	var w = args.width;
	if(p == 0 && value == 0) {
		return;
	}
	if((f & 1 << _$Printf_FormatFlag.LengthH._hx_index) != 0) {
		value &= 65535;
	}
	var s = Std.string(value < 0 ? -value : value);
	var l = s.length;
	var sign = value < 0 ? "-" : (f & 1 << _$Printf_FormatFlag.Plus._hx_index) != 0 ? "+" : (f & 1 << _$Printf_FormatFlag.Space._hx_index) != 0 ? " " : null;
	var hasSign = sign != null;
	if((f & 1 << _$Printf_FormatFlag.Minus._hx_index) != 0) {
		if(hasSign) {
			buf.b += sign == null ? "null" : "" + sign;
		}
		if(p > l) {
			var _g = 0;
			var _g1 = p - l;
			while(_g < _g1) {
				var i = _g++;
				buf.b += "0";
			}
		}
		buf.b += Std.string(s);
		if(p > l) {
			l = p;
		}
		l += hasSign ? 1 : 0;
		if(w > l) {
			var _g = 0;
			var _g1 = w - l;
			while(_g < _g1) {
				var i = _g++;
				buf.b += " ";
			}
		}
	} else {
		var k = l + (hasSign ? 1 : 0);
		if(p > k) {
			k = p;
		}
		if(w > k) {
			if((f & 1 << _$Printf_FormatFlag.Zero._hx_index) != 0) {
				if(hasSign) {
					buf.b += sign == null ? "null" : "" + sign;
				}
				var _g = 0;
				var _g1 = w - k;
				while(_g < _g1) {
					var i = _g++;
					buf.b += "0";
				}
			} else {
				var _g = 0;
				var _g1 = w - k;
				while(_g < _g1) {
					var i = _g++;
					buf.b += " ";
				}
			}
		}
		if(hasSign && (f & 1 << _$Printf_FormatFlag.Zero._hx_index) == 0) {
			buf.b += sign == null ? "null" : "" + sign;
		}
		if(p > l) {
			var _g = 0;
			var _g1 = p - l;
			while(_g < _g1) {
				var i = _g++;
				buf.b += "0";
			}
		}
		buf.b += Std.string(s);
	}
};
Printf.formatUnsignedDecimal = function(value,args,buf) {
	if(value >= 0) {
		Printf.formatSignedDecimal(value,args,buf);
		return;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(0,value);
	var s = haxe_Int64.toString(this1);
	var l = s.length;
	var f = args.flags;
	var p = args.precision;
	var w = args.width;
	if((f & 1 << _$Printf_FormatFlag.Minus._hx_index) != 0) {
		if(p > l) {
			var _g = 0;
			var _g1 = p - l;
			while(_g < _g1) {
				var i = _g++;
				buf.b += "0";
			}
		}
		buf.b += s == null ? "null" : "" + s;
		if(p > l) {
			l = p;
		}
		if(w > l) {
			var _g = 0;
			var _g1 = w - l;
			while(_g < _g1) {
				var i = _g++;
				buf.b += " ";
			}
		}
	} else {
		var k = l;
		if(p > k) {
			k = p;
		}
		if(w > k) {
			if((f & 1 << _$Printf_FormatFlag.Zero._hx_index) != 0) {
				var _g = 0;
				var _g1 = w - k;
				while(_g < _g1) {
					var i = _g++;
					buf.b += "0";
				}
			} else {
				var _g = 0;
				var _g1 = w - k;
				while(_g < _g1) {
					var i = _g++;
					buf.b += " ";
				}
			}
		}
		if(p > l) {
			var _g = 0;
			var _g1 = p - l;
			while(_g < _g1) {
				var i = _g++;
				buf.b += "0";
			}
		}
		buf.b += s == null ? "null" : "" + s;
	}
};
Printf.formatNaturalFloat = function(value,args,buf) {
	var tmp = new StringBuf();
	Printf.formatFloat(value,args,tmp);
	var formatedFloat = tmp.b;
	haxe_Log.trace("formatedFloat " + formatedFloat,{ fileName : "Printf.hx", lineNumber : 729, className : "Printf", methodName : "formatNaturalFloat"});
	tmp = new StringBuf();
	Printf.formatScientific(value,args,tmp);
	var formatedScientific = tmp.b;
	haxe_Log.trace("formatedScientific " + formatedScientific,{ fileName : "Printf.hx", lineNumber : 735, className : "Printf", methodName : "formatNaturalFloat"});
	var s = formatedFloat.length <= formatedScientific.length ? formatedFloat : formatedScientific;
	buf.b += s == null ? "null" : "" + s;
};
Printf.formatScientific = function(value,args,buf) {
	var f = args.flags;
	var p = args.precision;
	if(p == -1) {
		p = Printf.DEFAULT_PRECISION;
	}
	var sign;
	var exponent;
	var s = "";
	if(value == 0) {
		sign = 0;
		exponent = 0;
		s += "0";
		if(p > 0) {
			s += ".";
			var _g = 0;
			var _g1 = p;
			while(_g < _g1) {
				var i = _g++;
				s += "0";
			}
		}
	} else {
		var m = Math;
		sign = value > 0. ? 1 : value < 0. ? -1 : 0;
		value = m.abs(value);
		exponent = m.floor(Math.log(value) / 2.302585092994046);
		value /= m.pow(10,exponent);
		var y = m.pow(0.1,p);
		value = Math.round(value / y) * y;
	}
	if(value != 0) {
		s += HxOverrides.substr(value == null ? "null" : "" + value,0,p + 2);
	}
	s += (f & 1 << _$Printf_FormatFlag.UpperCase._hx_index) != 0 ? "E" : "e";
	s += exponent >= 0 ? "+" : "-";
	var s1 = Std.string(exponent < 0 ? -exponent : exponent);
	var c = Printf.DEFAULT_NUM_EXP_DIGITS - s1.length;
	var s2;
	if(c < 1) {
		s2 = s1;
	} else {
		var t;
		if(c > 30) {
			var char = "0";
			t = char;
			var _g = 0;
			var _g1 = c - 1;
			while(_g < _g1) {
				var i = _g++;
				t += char;
			}
		} else {
			t = Printf._padChars[c];
		}
		s2 = t + s1;
	}
	s += s2;
	var printSign = sign == -1 || ((f & 1 << _$Printf_FormatFlag.Plus._hx_index) != 0 || (f & 1 << _$Printf_FormatFlag.Space._hx_index) != 0);
	if(printSign && (f & 1 << _$Printf_FormatFlag.Zero._hx_index) == 0) {
		s = (sign == -1 ? "-" : (f & 1 << _$Printf_FormatFlag.Plus._hx_index) != 0 ? "+" : " ") + s;
	}
	if(args.width > 0) {
		var w = args.width;
		if(printSign && (f & 1 << _$Printf_FormatFlag.Zero._hx_index) != 0) {
			--w;
		}
		var type = (f & 1 << _$Printf_FormatFlag.Zero._hx_index) != 0 ? 0 : 20;
		var c = w - s.length;
		if(c >= 1) {
			var t;
			if(c > 30) {
				var char = type == 0 ? "0" : " ";
				t = char;
				var _g = 0;
				var _g1 = c - 1;
				while(_g < _g1) {
					var i = _g++;
					t += char;
				}
			} else {
				t = Printf._padChars[type + c];
			}
			s = t + s;
		}
	}
	if(printSign && (f & 1 << _$Printf_FormatFlag.Zero._hx_index) != 0) {
		s = (sign == -1 ? "-" : (f & 1 << _$Printf_FormatFlag.Plus._hx_index) != 0 ? "+" : " ") + s;
	}
	buf.b += s == null ? "null" : "" + s;
};
Printf.formatFloat = function(value,args,buf) {
	var f = args.flags;
	var p = args.precision;
	if(p == -1) {
		p = Printf.DEFAULT_PRECISION;
	}
	var w = args.width;
	var isNegative = value < 0;
	var s;
	if(p == 0) {
		s = Std.string(Math.round(value));
		if((f & 1 << _$Printf_FormatFlag.Sharp._hx_index) != 0) {
			s += ".";
		}
	} else if(isNaN(value)) {
		s = "NaN";
	} else {
		s = value.toFixed(p);
	}
	var l = s.length;
	if(isNegative && s.indexOf("-") > -1) {
		s = HxOverrides.substr(s,1,null);
	}
	var sign = null;
	if((f & 1 << _$Printf_FormatFlag.Plus._hx_index) != 0 && !isNegative) {
		sign = "+";
		++l;
	} else if((f & 1 << _$Printf_FormatFlag.Space._hx_index) != 0 && !isNegative) {
		sign = " ";
		++l;
	} else if(isNegative) {
		sign = "-";
	}
	var hasSign = sign != null;
	if((f & 1 << _$Printf_FormatFlag.Minus._hx_index) != 0) {
		if(hasSign) {
			buf.b += sign == null ? "null" : "" + sign;
		}
		buf.b += Std.string(s);
		if(w > l) {
			var _g = 0;
			var _g1 = w - l;
			while(_g < _g1) {
				var i = _g++;
				buf.b += " ";
			}
		}
	} else {
		if(w > l) {
			if((f & 1 << _$Printf_FormatFlag.Zero._hx_index) != 0) {
				if(hasSign) {
					buf.b += sign == null ? "null" : "" + sign;
					hasSign = false;
				}
				var _g = 0;
				var _g1 = w - l;
				while(_g < _g1) {
					var i = _g++;
					buf.b += "0";
				}
			} else {
				var _g = 0;
				var _g1 = w - l;
				while(_g < _g1) {
					var i = _g++;
					buf.b += " ";
				}
			}
		}
		if(hasSign) {
			buf.b += sign == null ? "null" : "" + sign;
		}
		buf.b += Std.string(s);
	}
};
Printf.formatCharacter = function(x,args,buf) {
	if((args.flags & 1 << _$Printf_FormatFlag.Minus._hx_index) != 0) {
		var x1 = String.fromCodePoint(x);
		buf.b += Std.string(x1);
		var _g = 0;
		var _g1 = args.width - 1;
		while(_g < _g1) {
			var i = _g++;
			buf.b += " ";
		}
	} else {
		var _g = 0;
		var _g1 = args.width - 1;
		while(_g < _g1) {
			var i = _g++;
			buf.b += " ";
		}
		var x1 = String.fromCodePoint(x);
		buf.b += Std.string(x1);
	}
};
Printf.formatString = function(value,args,buf) {
	var l = value.length;
	var p = args.precision;
	if((args.flags & 1 << _$Printf_FormatFlag.Minus._hx_index) != 0) {
		if(p != -1) {
			buf.b += p == null ? HxOverrides.substr(value,0,null) : HxOverrides.substr(value,0,p);
			l = p;
		} else {
			buf.b += value == null ? "null" : "" + value;
		}
		var _g = 0;
		var _g1 = args.width - l;
		while(_g < _g1) {
			var i = _g++;
			buf.b += " ";
		}
	} else {
		if(p != -1) {
			l = p;
		}
		var _g = 0;
		var _g1 = args.width - l;
		while(_g < _g1) {
			var i = _g++;
			buf.b += " ";
		}
		if(p != -1) {
			buf.b += p == null ? HxOverrides.substr(value,0,null) : HxOverrides.substr(value,0,p);
		} else {
			buf.b += value == null ? "null" : "" + value;
		}
	}
};
Printf.pad = function(s,l,type,dir) {
	var c = l - s.length;
	if(c < 1) {
		return s;
	} else {
		var t;
		if(c > 30) {
			var char = type == 0 ? "0" : " ";
			t = char;
			var _g = 0;
			var _g1 = c - 1;
			while(_g < _g1) {
				var i = _g++;
				t += char;
			}
		} else {
			t = Printf._padChars[type + c];
		}
		if(dir > 0) {
			return s + t;
		} else {
			return t + s;
		}
	}
};
var PrintfError = function(message) {
	this.message = message;
};
$hxClasses["PrintfError"] = PrintfError;
PrintfError.__name__ = "PrintfError";
PrintfError.prototype = {
	message: null
	,toString: function() {
		return this.message;
	}
	,__class__: PrintfError
};
var StringBuf = function() {
	this.b = "";
};
$hxClasses["StringBuf"] = StringBuf;
StringBuf.__name__ = "StringBuf";
StringBuf.prototype = {
	b: null
	,__class__: StringBuf
};
var StringTools = function() { };
$hxClasses["StringTools"] = StringTools;
StringTools.__name__ = "StringTools";
StringTools.htmlEscape = function(s,quotes) {
	var buf_b = "";
	var _g_offset = 0;
	var _g_s = s;
	while(_g_offset < _g_s.length) {
		var s = _g_s;
		var index = _g_offset++;
		var c = s.charCodeAt(index);
		if(c >= 55296 && c <= 56319) {
			c = c - 55232 << 10 | s.charCodeAt(index + 1) & 1023;
		}
		var c1 = c;
		if(c1 >= 65536) {
			++_g_offset;
		}
		var code = c1;
		switch(code) {
		case 34:
			if(quotes) {
				buf_b += "&quot;";
			} else {
				buf_b += String.fromCodePoint(code);
			}
			break;
		case 38:
			buf_b += "&amp;";
			break;
		case 39:
			if(quotes) {
				buf_b += "&#039;";
			} else {
				buf_b += String.fromCodePoint(code);
			}
			break;
		case 60:
			buf_b += "&lt;";
			break;
		case 62:
			buf_b += "&gt;";
			break;
		default:
			buf_b += String.fromCodePoint(code);
		}
	}
	return buf_b;
};
StringTools.startsWith = function(s,start) {
	if(s.length >= start.length) {
		return s.lastIndexOf(start,0) == 0;
	} else {
		return false;
	}
};
StringTools.endsWith = function(s,end) {
	var elen = end.length;
	var slen = s.length;
	if(slen >= elen) {
		return s.indexOf(end,slen - elen) == slen - elen;
	} else {
		return false;
	}
};
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	if(!(c > 8 && c < 14)) {
		return c == 32;
	} else {
		return true;
	}
};
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,r,l - r);
	} else {
		return s;
	}
};
StringTools.rtrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,0,l - r);
	} else {
		return s;
	}
};
StringTools.trim = function(s) {
	return StringTools.ltrim(StringTools.rtrim(s));
};
StringTools.lpad = function(s,c,l) {
	if(c.length <= 0) {
		return s;
	}
	var buf_b = "";
	l -= s.length;
	while(buf_b.length < l) buf_b += c == null ? "null" : "" + c;
	buf_b += s == null ? "null" : "" + s;
	return buf_b;
};
StringTools.rpad = function(s,c,l) {
	if(c.length <= 0) {
		return s;
	}
	var buf_b = "";
	buf_b += s == null ? "null" : "" + s;
	while(buf_b.length < l) buf_b += c == null ? "null" : "" + c;
	return buf_b;
};
StringTools.replace = function(s,sub,by) {
	return s.split(sub).join(by);
};
StringTools.hex = function(n,digits) {
	var s = "";
	var hexChars = "0123456789ABCDEF";
	while(true) {
		s = hexChars.charAt(n & 15) + s;
		n >>>= 4;
		if(!(n > 0)) {
			break;
		}
	}
	if(digits != null) {
		while(s.length < digits) s = "0" + s;
	}
	return s;
};
StringTools.fastCodeAt = function(s,index) {
	return s.charCodeAt(index);
};
var stx_pico_Clazz = $hx_exports["stx"]["Clazz"] = function() {
};
$hxClasses["stx.pico.Clazz"] = stx_pico_Clazz;
stx_pico_Clazz.__name__ = "stx.pico.Clazz";
stx_pico_Clazz.prototype = {
	definition: function() {
		return js_Boot.getClass(this);
	}
	,identifier: function() {
		var c = js_Boot.getClass(this);
		return stx_pico_Identifier._new(c.__name__);
	}
	,__class__: stx_pico_Clazz
};
var Stx = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["Stx"] = Stx;
Stx.__name__ = "Stx";
Stx.__super__ = stx_pico_Clazz;
Stx.prototype = $extend(stx_pico_Clazz.prototype,{
	__class__: Stx
});
var haxe_io_Output = function() { };
$hxClasses["haxe.io.Output"] = haxe_io_Output;
haxe_io_Output.__name__ = "haxe.io.Output";
haxe_io_Output.prototype = {
	bigEndian: null
	,writeByte: function(c) {
		throw new haxe_exceptions_NotImplementedException(null,null,{ fileName : "haxe/io/Output.hx", lineNumber : 47, className : "haxe.io.Output", methodName : "writeByte"});
	}
	,writeBytes: function(s,pos,len) {
		if(pos < 0 || len < 0 || pos + len > s.length) {
			throw haxe_Exception.thrown(haxe_io_Error.OutsideBounds);
		}
		var b = s.b;
		var k = len;
		while(k > 0) {
			this.writeByte(b[pos]);
			++pos;
			--k;
		}
		return len;
	}
	,close: function() {
	}
	,set_bigEndian: function(b) {
		this.bigEndian = b;
		return b;
	}
	,write: function(s) {
		var l = s.length;
		var p = 0;
		while(l > 0) {
			var k = this.writeBytes(s,p,l);
			if(k == 0) {
				throw haxe_Exception.thrown(haxe_io_Error.Blocked);
			}
			p += k;
			l -= k;
		}
	}
	,writeFullBytes: function(s,pos,len) {
		while(len > 0) {
			var k = this.writeBytes(s,pos,len);
			pos += k;
			len -= k;
		}
	}
	,writeFloat: function(x) {
		this.writeInt32(haxe_io_FPHelper.floatToI32(x));
	}
	,writeDouble: function(x) {
		var i64 = haxe_io_FPHelper.doubleToI64(x);
		if(this.bigEndian) {
			this.writeInt32(i64.high);
			this.writeInt32(i64.low);
		} else {
			this.writeInt32(i64.low);
			this.writeInt32(i64.high);
		}
	}
	,writeInt8: function(x) {
		if(x < -128 || x >= 128) {
			throw haxe_Exception.thrown(haxe_io_Error.Overflow);
		}
		this.writeByte(x & 255);
	}
	,writeInt16: function(x) {
		if(x < -32768 || x >= 32768) {
			throw haxe_Exception.thrown(haxe_io_Error.Overflow);
		}
		this.writeUInt16(x & 65535);
	}
	,writeUInt16: function(x) {
		if(x < 0 || x >= 65536) {
			throw haxe_Exception.thrown(haxe_io_Error.Overflow);
		}
		if(this.bigEndian) {
			this.writeByte(x >> 8);
			this.writeByte(x & 255);
		} else {
			this.writeByte(x & 255);
			this.writeByte(x >> 8);
		}
	}
	,writeInt24: function(x) {
		if(x < -8388608 || x >= 8388608) {
			throw haxe_Exception.thrown(haxe_io_Error.Overflow);
		}
		this.writeUInt24(x & 16777215);
	}
	,writeUInt24: function(x) {
		if(x < 0 || x >= 16777216) {
			throw haxe_Exception.thrown(haxe_io_Error.Overflow);
		}
		if(this.bigEndian) {
			this.writeByte(x >> 16);
			this.writeByte(x >> 8 & 255);
			this.writeByte(x & 255);
		} else {
			this.writeByte(x & 255);
			this.writeByte(x >> 8 & 255);
			this.writeByte(x >> 16);
		}
	}
	,writeInt32: function(x) {
		if(this.bigEndian) {
			this.writeByte(x >>> 24);
			this.writeByte(x >> 16 & 255);
			this.writeByte(x >> 8 & 255);
			this.writeByte(x & 255);
		} else {
			this.writeByte(x & 255);
			this.writeByte(x >> 8 & 255);
			this.writeByte(x >> 16 & 255);
			this.writeByte(x >>> 24);
		}
	}
	,writeString: function(s,encoding) {
		var b = haxe_io_Bytes.ofString(s,encoding);
		this.writeFullBytes(b,0,b.length);
	}
	,__class__: haxe_io_Output
};
var _$Sys_FileOutput = function(fd) {
	this.fd = fd;
};
$hxClasses["_Sys.FileOutput"] = _$Sys_FileOutput;
_$Sys_FileOutput.__name__ = "_Sys.FileOutput";
_$Sys_FileOutput.__super__ = haxe_io_Output;
_$Sys_FileOutput.prototype = $extend(haxe_io_Output.prototype,{
	fd: null
	,writeByte: function(c) {
		js_node_Fs.writeSync(this.fd,String.fromCodePoint(c));
	}
	,writeBytes: function(s,pos,len) {
		var data = s.b;
		return js_node_Fs.writeSync(this.fd,js_node_buffer_Buffer.from(data.buffer,data.byteOffset,s.length),pos,len);
	}
	,writeString: function(s,encoding) {
		js_node_Fs.writeSync(this.fd,s);
	}
	,flush: function() {
		js_node_Fs.fsyncSync(this.fd);
	}
	,close: function() {
		js_node_Fs.closeSync(this.fd);
	}
	,__class__: _$Sys_FileOutput
});
var haxe_io_Input = function() { };
$hxClasses["haxe.io.Input"] = haxe_io_Input;
haxe_io_Input.__name__ = "haxe.io.Input";
haxe_io_Input.prototype = {
	bigEndian: null
	,readByte: function() {
		throw new haxe_exceptions_NotImplementedException(null,null,{ fileName : "haxe/io/Input.hx", lineNumber : 53, className : "haxe.io.Input", methodName : "readByte"});
	}
	,readBytes: function(s,pos,len) {
		var k = len;
		var b = s.b;
		if(pos < 0 || len < 0 || pos + len > s.length) {
			throw haxe_Exception.thrown(haxe_io_Error.OutsideBounds);
		}
		try {
			while(k > 0) {
				b[pos] = this.readByte();
				++pos;
				--k;
			}
		} catch( _g ) {
			if(!((haxe_Exception.caught(_g).unwrap()) instanceof haxe_io_Eof)) {
				throw _g;
			}
		}
		return len - k;
	}
	,close: function() {
	}
	,set_bigEndian: function(b) {
		this.bigEndian = b;
		return b;
	}
	,readAll: function(bufsize) {
		if(bufsize == null) {
			bufsize = 16384;
		}
		var buf = new haxe_io_Bytes(new ArrayBuffer(bufsize));
		var total = new haxe_io_BytesBuffer();
		try {
			while(true) {
				var len = this.readBytes(buf,0,bufsize);
				if(len == 0) {
					throw haxe_Exception.thrown(haxe_io_Error.Blocked);
				}
				total.addBytes(buf,0,len);
			}
		} catch( _g ) {
			if(!((haxe_Exception.caught(_g).unwrap()) instanceof haxe_io_Eof)) {
				throw _g;
			}
		}
		return total.getBytes();
	}
	,readLine: function() {
		var buf = new haxe_io_BytesBuffer();
		var last;
		var s;
		try {
			while(true) {
				last = this.readByte();
				if(!(last != 10)) {
					break;
				}
				buf.addByte(last);
			}
			s = buf.getBytes().toString();
			if(HxOverrides.cca(s,s.length - 1) == 13) {
				s = HxOverrides.substr(s,0,-1);
			}
		} catch( _g ) {
			var _g1 = haxe_Exception.caught(_g).unwrap();
			if(((_g1) instanceof haxe_io_Eof)) {
				var e = _g1;
				s = buf.getBytes().toString();
				if(s.length == 0) {
					throw haxe_Exception.thrown(e);
				}
			} else {
				throw _g;
			}
		}
		return s;
	}
	,readFloat: function() {
		return haxe_io_FPHelper.i32ToFloat(this.readInt32());
	}
	,readDouble: function() {
		var i1 = this.readInt32();
		var i2 = this.readInt32();
		if(this.bigEndian) {
			return haxe_io_FPHelper.i64ToDouble(i2,i1);
		} else {
			return haxe_io_FPHelper.i64ToDouble(i1,i2);
		}
	}
	,readInt8: function() {
		var n = this.readByte();
		if(n >= 128) {
			return n - 256;
		}
		return n;
	}
	,readInt16: function() {
		var ch1 = this.readByte();
		var ch2 = this.readByte();
		var n = this.bigEndian ? ch2 | ch1 << 8 : ch1 | ch2 << 8;
		if((n & 32768) != 0) {
			return n - 65536;
		}
		return n;
	}
	,readUInt16: function() {
		var ch1 = this.readByte();
		var ch2 = this.readByte();
		if(this.bigEndian) {
			return ch2 | ch1 << 8;
		} else {
			return ch1 | ch2 << 8;
		}
	}
	,readInt24: function() {
		var ch1 = this.readByte();
		var ch2 = this.readByte();
		var ch3 = this.readByte();
		var n = this.bigEndian ? ch3 | ch2 << 8 | ch1 << 16 : ch1 | ch2 << 8 | ch3 << 16;
		if((n & 8388608) != 0) {
			return n - 16777216;
		}
		return n;
	}
	,readUInt24: function() {
		var ch1 = this.readByte();
		var ch2 = this.readByte();
		var ch3 = this.readByte();
		if(this.bigEndian) {
			return ch3 | ch2 << 8 | ch1 << 16;
		} else {
			return ch1 | ch2 << 8 | ch3 << 16;
		}
	}
	,readInt32: function() {
		var ch1 = this.readByte();
		var ch2 = this.readByte();
		var ch3 = this.readByte();
		var ch4 = this.readByte();
		if(this.bigEndian) {
			return ch4 | ch3 << 8 | ch2 << 16 | ch1 << 24;
		} else {
			return ch1 | ch2 << 8 | ch3 << 16 | ch4 << 24;
		}
	}
	,__class__: haxe_io_Input
};
var _$Sys_FileInput = function(fd) {
	this.fd = fd;
};
$hxClasses["_Sys.FileInput"] = _$Sys_FileInput;
_$Sys_FileInput.__name__ = "_Sys.FileInput";
_$Sys_FileInput.__super__ = haxe_io_Input;
_$Sys_FileInput.prototype = $extend(haxe_io_Input.prototype,{
	fd: null
	,readByte: function() {
		var buf = js_node_buffer_Buffer.alloc(1);
		try {
			js_node_Fs.readSync(this.fd,buf,0,1,null);
		} catch( _g ) {
			var e = haxe_Exception.caught(_g).unwrap();
			if(e.code == "EOF") {
				throw haxe_Exception.thrown(new haxe_io_Eof());
			} else {
				throw haxe_Exception.thrown(haxe_io_Error.Custom(e));
			}
		}
		return buf[0];
	}
	,readBytes: function(s,pos,len) {
		var data = s.b;
		var buf = js_node_buffer_Buffer.from(data.buffer,data.byteOffset,s.length);
		try {
			return js_node_Fs.readSync(this.fd,buf,pos,len,null);
		} catch( _g ) {
			var e = haxe_Exception.caught(_g).unwrap();
			if(e.code == "EOF") {
				throw haxe_Exception.thrown(new haxe_io_Eof());
			} else {
				throw haxe_Exception.thrown(haxe_io_Error.Custom(e));
			}
		}
	}
	,close: function() {
		js_node_Fs.closeSync(this.fd);
	}
	,__class__: _$Sys_FileInput
});
var ValueType = $hxEnums["ValueType"] = { __ename__:"ValueType",__constructs__:null
	,TNull: {_hx_name:"TNull",_hx_index:0,__enum__:"ValueType",toString:$estr}
	,TInt: {_hx_name:"TInt",_hx_index:1,__enum__:"ValueType",toString:$estr}
	,TFloat: {_hx_name:"TFloat",_hx_index:2,__enum__:"ValueType",toString:$estr}
	,TBool: {_hx_name:"TBool",_hx_index:3,__enum__:"ValueType",toString:$estr}
	,TObject: {_hx_name:"TObject",_hx_index:4,__enum__:"ValueType",toString:$estr}
	,TFunction: {_hx_name:"TFunction",_hx_index:5,__enum__:"ValueType",toString:$estr}
	,TClass: ($_=function(c) { return {_hx_index:6,c:c,__enum__:"ValueType",toString:$estr}; },$_._hx_name="TClass",$_.__params__ = ["c"],$_)
	,TEnum: ($_=function(e) { return {_hx_index:7,e:e,__enum__:"ValueType",toString:$estr}; },$_._hx_name="TEnum",$_.__params__ = ["e"],$_)
	,TUnknown: {_hx_name:"TUnknown",_hx_index:8,__enum__:"ValueType",toString:$estr}
};
ValueType.__constructs__ = [ValueType.TNull,ValueType.TInt,ValueType.TFloat,ValueType.TBool,ValueType.TObject,ValueType.TFunction,ValueType.TClass,ValueType.TEnum,ValueType.TUnknown];
var Type = function() { };
$hxClasses["Type"] = Type;
Type.__name__ = "Type";
Type.getEnum = function(o) {
	if(o == null) {
		return null;
	}
	return $hxEnums[o.__enum__];
};
Type.createEnum = function(e,constr,params) {
	var f = Reflect.field(e,constr);
	if(f == null) {
		throw haxe_Exception.thrown("No such constructor " + constr);
	}
	if(Reflect.isFunction(f)) {
		if(params == null) {
			throw haxe_Exception.thrown("Constructor " + constr + " need parameters");
		}
		return f.apply(e,params);
	}
	if(params != null && params.length != 0) {
		throw haxe_Exception.thrown("Constructor " + constr + " does not need parameters");
	}
	return f;
};
Type.createEnumIndex = function(e,index,params) {
	var c;
	var _g = e.__constructs__[index];
	if(_g == null) {
		c = null;
	} else {
		var ctor = _g;
		c = ctor._hx_name;
	}
	if(c == null) {
		throw haxe_Exception.thrown(index + " is not a valid enum constructor index");
	}
	return Type.createEnum(e,c,params);
};
Type.getInstanceFields = function(c) {
	var a = [];
	for(var i in c.prototype) a.push(i);
	HxOverrides.remove(a,"__class__");
	HxOverrides.remove(a,"__properties__");
	return a;
};
Type.getClassFields = function(c) {
	var a = Reflect.fields(c);
	HxOverrides.remove(a,"__name__");
	HxOverrides.remove(a,"__interfaces__");
	HxOverrides.remove(a,"__properties__");
	HxOverrides.remove(a,"__super__");
	HxOverrides.remove(a,"__meta__");
	HxOverrides.remove(a,"prototype");
	return a;
};
Type.typeof = function(v) {
	switch(typeof(v)) {
	case "boolean":
		return ValueType.TBool;
	case "function":
		if(v.__name__ || v.__ename__) {
			return ValueType.TObject;
		}
		return ValueType.TFunction;
	case "number":
		if(Math.ceil(v) == v % 2147483648.0) {
			return ValueType.TInt;
		}
		return ValueType.TFloat;
	case "object":
		if(v == null) {
			return ValueType.TNull;
		}
		var e = v.__enum__;
		if(e != null) {
			return ValueType.TEnum($hxEnums[e]);
		}
		var c = js_Boot.getClass(v);
		if(c != null) {
			return ValueType.TClass(c);
		}
		return ValueType.TObject;
	case "string":
		return ValueType.TClass(String);
	case "undefined":
		return ValueType.TNull;
	default:
		return ValueType.TUnknown;
	}
};
Type.enumParameters = function(e) {
	var enm = $hxEnums[e.__enum__];
	var params = enm.__constructs__[e._hx_index].__params__;
	if(params != null) {
		var _g = [];
		var _g1 = 0;
		while(_g1 < params.length) {
			var p = params[_g1];
			++_g1;
			_g.push(e[p]);
		}
		return _g;
	} else {
		return [];
	}
};
var UInt = {};
UInt.gt = function(a,b) {
	var aNeg = a < 0;
	var bNeg = b < 0;
	if(aNeg != bNeg) {
		return aNeg;
	} else {
		return a > b;
	}
};
UInt.gte = function(a,b) {
	var aNeg = a < 0;
	var bNeg = b < 0;
	if(aNeg != bNeg) {
		return aNeg;
	} else {
		return a >= b;
	}
};
var XmlType = {};
XmlType.toString = function(this1) {
	switch(this1) {
	case 0:
		return "Element";
	case 1:
		return "PCData";
	case 2:
		return "CData";
	case 3:
		return "Comment";
	case 4:
		return "DocType";
	case 5:
		return "ProcessingInstruction";
	case 6:
		return "Document";
	}
};
var Xml = function(nodeType) {
	this.nodeType = nodeType;
	this.children = [];
	this.attributeMap = new haxe_ds_StringMap();
};
$hxClasses["Xml"] = Xml;
Xml.__name__ = "Xml";
Xml.parse = function(str) {
	return haxe_xml_Parser.parse(str);
};
Xml.createElement = function(name) {
	var xml = new Xml(Xml.Element);
	if(xml.nodeType != Xml.Element) {
		throw haxe_Exception.thrown("Bad node type, expected Element but found " + (xml.nodeType == null ? "null" : XmlType.toString(xml.nodeType)));
	}
	xml.nodeName = name;
	return xml;
};
Xml.createPCData = function(data) {
	var xml = new Xml(Xml.PCData);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw haxe_Exception.thrown("Bad node type, unexpected " + (xml.nodeType == null ? "null" : XmlType.toString(xml.nodeType)));
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createCData = function(data) {
	var xml = new Xml(Xml.CData);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw haxe_Exception.thrown("Bad node type, unexpected " + (xml.nodeType == null ? "null" : XmlType.toString(xml.nodeType)));
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createComment = function(data) {
	var xml = new Xml(Xml.Comment);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw haxe_Exception.thrown("Bad node type, unexpected " + (xml.nodeType == null ? "null" : XmlType.toString(xml.nodeType)));
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createDocType = function(data) {
	var xml = new Xml(Xml.DocType);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw haxe_Exception.thrown("Bad node type, unexpected " + (xml.nodeType == null ? "null" : XmlType.toString(xml.nodeType)));
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createProcessingInstruction = function(data) {
	var xml = new Xml(Xml.ProcessingInstruction);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw haxe_Exception.thrown("Bad node type, unexpected " + (xml.nodeType == null ? "null" : XmlType.toString(xml.nodeType)));
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createDocument = function() {
	return new Xml(Xml.Document);
};
Xml.prototype = {
	nodeType: null
	,nodeName: null
	,nodeValue: null
	,parent: null
	,children: null
	,attributeMap: null
	,get: function(att) {
		if(this.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element but found " + (this.nodeType == null ? "null" : XmlType.toString(this.nodeType)));
		}
		return this.attributeMap.h[att];
	}
	,set: function(att,value) {
		if(this.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element but found " + (this.nodeType == null ? "null" : XmlType.toString(this.nodeType)));
		}
		this.attributeMap.h[att] = value;
	}
	,exists: function(att) {
		if(this.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element but found " + (this.nodeType == null ? "null" : XmlType.toString(this.nodeType)));
		}
		return Object.prototype.hasOwnProperty.call(this.attributeMap.h,att);
	}
	,attributes: function() {
		if(this.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element but found " + (this.nodeType == null ? "null" : XmlType.toString(this.nodeType)));
		}
		return new haxe_ds__$StringMap_StringMapKeyIterator(this.attributeMap.h);
	}
	,elements: function() {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (this.nodeType == null ? "null" : XmlType.toString(this.nodeType)));
		}
		var _g = [];
		var _g1 = 0;
		var _g2 = this.children;
		while(_g1 < _g2.length) {
			var child = _g2[_g1];
			++_g1;
			if(child.nodeType == Xml.Element) {
				_g.push(child);
			}
		}
		var ret = _g;
		return new haxe_iterators_ArrayIterator(ret);
	}
	,elementsNamed: function(name) {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (this.nodeType == null ? "null" : XmlType.toString(this.nodeType)));
		}
		var _g = [];
		var _g1 = 0;
		var _g2 = this.children;
		while(_g1 < _g2.length) {
			var child = _g2[_g1];
			++_g1;
			var tmp;
			if(child.nodeType == Xml.Element) {
				if(child.nodeType != Xml.Element) {
					throw haxe_Exception.thrown("Bad node type, expected Element but found " + (child.nodeType == null ? "null" : XmlType.toString(child.nodeType)));
				}
				tmp = child.nodeName == name;
			} else {
				tmp = false;
			}
			if(tmp) {
				_g.push(child);
			}
		}
		var ret = _g;
		return new haxe_iterators_ArrayIterator(ret);
	}
	,firstElement: function() {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (this.nodeType == null ? "null" : XmlType.toString(this.nodeType)));
		}
		var _g = 0;
		var _g1 = this.children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.nodeType == Xml.Element) {
				return child;
			}
		}
		return null;
	}
	,addChild: function(x) {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (this.nodeType == null ? "null" : XmlType.toString(this.nodeType)));
		}
		if(x.parent != null) {
			x.parent.removeChild(x);
		}
		this.children.push(x);
		x.parent = this;
	}
	,removeChild: function(x) {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (this.nodeType == null ? "null" : XmlType.toString(this.nodeType)));
		}
		if(HxOverrides.remove(this.children,x)) {
			x.parent = null;
			return true;
		}
		return false;
	}
	,toString: function() {
		return haxe_xml_Printer.print(this);
	}
	,__class__: Xml
};
var equals_Equal = function() { };
$hxClasses["equals.Equal"] = equals_Equal;
equals_Equal.__name__ = "equals.Equal";
equals_Equal.isNull = function(a) {
	if(Type.typeof(a)._hx_index == 0) {
		return true;
	} else {
		return false;
	}
};
equals_Equal.isFunction = function(a) {
	if(Type.typeof(a)._hx_index == 5) {
		return true;
	} else {
		return false;
	}
};
equals_Equal.equals = function(a,b) {
	if(a == b) {
		return true;
	}
	if(equals_Equal.isNull(a) || equals_Equal.isNull(b)) {
		return false;
	}
	var _g = Type.typeof(a);
	switch(_g._hx_index) {
	case 2:
		if(isNaN(a)) {
			return isNaN(b);
		} else {
			return false;
		}
		break;
	case 4:
		break;
	case 5:
		return a == b;
	case 6:
		var _g1 = _g.c;
		if(((a) instanceof Array)) {
			var a1 = js_Boot.__cast(a , Array);
			var b1 = js_Boot.__cast(b , Array);
			if(a1.length != b1.length) {
				return false;
			}
			var _g1 = 0;
			var _g2 = a1.length;
			while(_g1 < _g2) {
				var i = _g1++;
				if(!equals_Equal.equals(a1[i],b1[i])) {
					return false;
				}
			}
			return true;
		}
		if(js_Boot.__implements(a,haxe_IMap)) {
			var a1 = js_Boot.__cast(a , haxe_ds_StringMap);
			var b1 = js_Boot.__cast(b , haxe_ds_StringMap);
			var _g1 = [];
			var h = a1.h;
			var key_h = h;
			var key_keys = Object.keys(h);
			var key_length = key_keys.length;
			var key_current = 0;
			while(key_current < key_length) {
				var key = key_keys[key_current++];
				_g1.push(key);
			}
			var a_keys = _g1;
			var _g1 = [];
			var h = b1.h;
			var key_h = h;
			var key_keys = Object.keys(h);
			var key_length = key_keys.length;
			var key_current = 0;
			while(key_current < key_length) {
				var key = key_keys[key_current++];
				_g1.push(key);
			}
			var b_keys = _g1;
			if(!equals_Equal.equals(a_keys,b_keys)) {
				return false;
			}
			var _g1 = 0;
			while(_g1 < a_keys.length) {
				var key = a_keys[_g1];
				++_g1;
				if(!equals_Equal.equals(a1.h[key],b1.h[key])) {
					return false;
				}
			}
			return true;
		}
		if(((a) instanceof Date)) {
			return (js_Boot.__cast(a , Date)).getTime() == (js_Boot.__cast(b , Date)).getTime();
		}
		if(((a) instanceof haxe_io_Bytes)) {
			return equals_Equal.equals((js_Boot.__cast(a , haxe_io_Bytes)).b.bufferValue,(js_Boot.__cast(b , haxe_io_Bytes)).b.bufferValue);
		}
		break;
	case 7:
		var _g1 = _g.e;
		if(a._hx_index != b._hx_index) {
			return false;
		}
		var a_args = Type.enumParameters(a);
		var b_args = Type.enumParameters(b);
		return equals_Equal.equals(a_args,b_args);
	case 0:case 1:case 3:case 8:
		return a == b;
	}
	var _g = 0;
	var _g1 = Reflect.fields(a);
	while(_g < _g1.length) {
		var field = _g1[_g];
		++_g;
		var pa = Reflect.field(a,field);
		var pb = Reflect.field(b,field);
		if(equals_Equal.isFunction(pa)) {
			if(equals_Equal.isNull(pa) != equals_Equal.isNull(pb)) {
				return false;
			}
			continue;
		}
		if(!equals_Equal.equals(pa,pb)) {
			return false;
		}
	}
	return true;
};
var stx_StxMemberApi = function() { };
$hxClasses["stx.StxMemberApi"] = stx_StxMemberApi;
stx_StxMemberApi.__name__ = "stx.StxMemberApi";
stx_StxMemberApi.__isInterface__ = true;
stx_StxMemberApi.prototype = {
	stx_tag: null
	,get_stx_tag: null
	,__class__: stx_StxMemberApi
};
var eu_ohmrun_FletcherApi = function() { };
$hxClasses["eu.ohmrun.FletcherApi"] = eu_ohmrun_FletcherApi;
eu_ohmrun_FletcherApi.__name__ = "eu.ohmrun.FletcherApi";
eu_ohmrun_FletcherApi.__isInterface__ = true;
eu_ohmrun_FletcherApi.__interfaces__ = [stx_StxMemberApi];
eu_ohmrun_FletcherApi.prototype = {
	defer: null
	,__class__: eu_ohmrun_FletcherApi
};
var stx_StxMemberCls = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["stx.StxMemberCls"] = stx_StxMemberCls;
stx_StxMemberCls.__name__ = "stx.StxMemberCls";
stx_StxMemberCls.__super__ = stx_pico_Clazz;
stx_StxMemberCls.prototype = $extend(stx_pico_Clazz.prototype,{
	stx_tag: null
	,get_stx_tag: null
	,__class__: stx_StxMemberCls
});
var eu_ohmrun_FletcherCls = function() {
	stx_StxMemberCls.call(this);
};
$hxClasses["eu.ohmrun.FletcherCls"] = eu_ohmrun_FletcherCls;
eu_ohmrun_FletcherCls.__name__ = "eu.ohmrun.FletcherCls";
eu_ohmrun_FletcherCls.__interfaces__ = [eu_ohmrun_FletcherApi];
eu_ohmrun_FletcherCls.__super__ = stx_StxMemberCls;
eu_ohmrun_FletcherCls.prototype = $extend(stx_StxMemberCls.prototype,{
	get_stx_tag: function() {
		return 1;
	}
	,defer: null
	,__class__: eu_ohmrun_FletcherCls
});
var eu_ohmrun_FletcherLift = function() { };
$hxClasses["eu.ohmrun.FletcherLift"] = eu_ohmrun_FletcherLift;
eu_ohmrun_FletcherLift.__name__ = "eu.ohmrun.FletcherLift";
eu_ohmrun_FletcherLift.lift = function(self) {
	return eu_ohmrun_Fletcher.lift(self);
};
eu_ohmrun_FletcherLift.environment = function(self,p,success,failure) {
	return eu_ohmrun_Fletcher.Anon(function(_,cont) {
		return cont.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(trg) {
			var self1 = self;
			var p1 = p;
			var this1 = eu_ohmrun_fletcher_core_Cont.lift(new eu_ohmrun_fletcher_core_cont_term_AnonAnon(function(fn) {
				var ft = new tink_core_FutureTrigger();
				ft.handle(function(x) {
					switch(x._hx_index) {
					case 0:
						var t = x.t;
						success(t);
						break;
					case 1:
						var e = x.e;
						failure(e);
						break;
					}
				});
				return fn(ft);
			}));
			return self1.defer(p1,this1);
		})));
	});
};
eu_ohmrun_FletcherLift.fudge = function(self,p) {
	var val = null;
	var this1 = eu_ohmrun_FletcherLift.environment(self,p,function(ok) {
		var this1 = eu_ohmrun_fletcher_Logging.log(stx_nano_Wildcard.__);
		var fn = function(pos) {
			return pos.with_stamp(function(stamp) {
				return stamp.relevel(2);
			});
		};
		(function(value,pos) {
			this1(value,fn(pos));
		})(stx_log_Stringify.fromString("fudged")(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "eu/ohmrun/Fletcher.hx", lineNumber : 153, className : "eu.ohmrun.FletcherLift", methodName : "fudge"}));
		val = ok;
	},function(no) {
		var this1 = eu_ohmrun_fletcher_Logging.log(stx_nano_Wildcard.__);
		var fn = function(pos) {
			return pos.with_stamp(function(stamp) {
				return stamp.relevel(2);
			});
		};
		(function(value,pos) {
			this1(value,fn(pos));
		})(stx_log_Stringify.fromString("fudged:fail")(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "eu/ohmrun/Fletcher.hx", lineNumber : 157, className : "eu.ohmrun.FletcherLift", methodName : "fudge"}));
		throw haxe_Exception.thrown(no);
	});
	var this2 = eu_ohmrun_fletcher_core_Cont.lift(new eu_ohmrun_fletcher_core_cont_term_AnonAnon(function(fn) {
		return fn(new tink_core_FutureTrigger());
	}));
	stx_stream_CycleLift.crunch(stx_stream_Work.toCycle(this1.defer(null,this2)));
	var self = stx_LiftAssert.assert(stx_nano_Wildcard.__,{ fileName : "eu/ohmrun/Fletcher.hx", lineNumber : 161, className : "eu.ohmrun.FletcherLift", methodName : "fudge"}).module.exists().apply(val);
	if(self != null) {
		switch(self._hx_index) {
		case 0:
			var v = self.v;
			throw haxe_Exception.thrown(v);
		case 1:
			break;
		}
	}
	return val;
};
eu_ohmrun_FletcherLift.force = function(self,p) {
	var val = null;
	var this1 = eu_ohmrun_FletcherLift.environment(self,p,function(ok) {
		var this1 = eu_ohmrun_fletcher_Logging.log(stx_nano_Wildcard.__);
		var fn = function(pos) {
			return pos.with_stamp(function(stamp) {
				return stamp.relevel(2);
			});
		};
		(function(value,pos) {
			this1(value,fn(pos));
		})(stx_log_Stringify.fromString("fudged")(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "eu/ohmrun/Fletcher.hx", lineNumber : 171, className : "eu.ohmrun.FletcherLift", methodName : "force"}));
		val = stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,ok);
	},function(no) {
		var this1 = eu_ohmrun_fletcher_Logging.log(stx_nano_Wildcard.__);
		var fn = function(pos) {
			return pos.with_stamp(function(stamp) {
				return stamp.relevel(2);
			});
		};
		(function(value,pos) {
			this1(value,fn(pos));
		})(stx_log_Stringify.fromString("fudged:fail")(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "eu/ohmrun/Fletcher.hx", lineNumber : 175, className : "eu.ohmrun.FletcherLift", methodName : "force"}));
		val = stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_nano_Defect.toRefuse(no)),{ fileName : "eu/ohmrun/Fletcher.hx", lineNumber : 176, className : "eu.ohmrun.FletcherLift", methodName : "force"});
	});
	var this2 = eu_ohmrun_fletcher_core_Cont.lift(new eu_ohmrun_fletcher_core_cont_term_AnonAnon(function(fn) {
		return fn(new tink_core_FutureTrigger());
	}));
	stx_stream_CycleLift.crunch(stx_stream_Work.toCycle(this1.defer(null,this2)));
	var self = stx_LiftAssert.assert(stx_nano_Wildcard.__,{ fileName : "eu/ohmrun/Fletcher.hx", lineNumber : 179, className : "eu.ohmrun.FletcherLift", methodName : "force"}).module.exists().apply(val);
	if(self != null) {
		switch(self._hx_index) {
		case 0:
			var v = self.v;
			throw haxe_Exception.thrown(v);
		case 1:
			break;
		}
	}
	return val;
};
eu_ohmrun_FletcherLift.then = function(self,that) {
	return eu_ohmrun_Fletcher.Anon(function(pI,cont) {
		var a = eu_ohmrun_Fletcher.forward(self,pI);
		var self1 = cont;
		return eu_ohmrun_fletcher_ReceiverLift.flat_fold(a,function(ok) {
			return eu_ohmrun_Fletcher.forward(that,ok);
		},function(no) {
			return eu_ohmrun_fletcher_Receiver.issue(stx_nano_lift_LiftNano.failure(stx_nano_Wildcard.__,no),{ fileName : "eu/ohmrun/fletcher/Receiver.hx", lineNumber : 34, className : "eu.ohmrun.fletcher._Receiver.Receiver_Impl_", methodName : "error"});
		}).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self1;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	});
};
eu_ohmrun_FletcherLift.pair = function(self,that) {
	return eu_ohmrun_Fletcher.Anon(function(p,cont) {
		var lhs = eu_ohmrun_Fletcher.forward(self,stx_nano_CoupleLift.fst(p));
		var rhs = eu_ohmrun_Fletcher.forward(that,stx_nano_CoupleLift.snd(p));
		var self1 = cont;
		return eu_ohmrun_fletcher_ReceiverLift.zip(lhs,rhs).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self1;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	});
};
eu_ohmrun_FletcherLift.split = function(self,that) {
	return eu_ohmrun_Fletcher.Anon(function(pi,cont) {
		return eu_ohmrun_FletcherLift.pair(self,that).defer(stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,pi,pi),cont);
	});
};
eu_ohmrun_FletcherLift.first = function(self) {
	return eu_ohmrun_FletcherLift.pair(self,eu_ohmrun_Fletcher.unit());
};
eu_ohmrun_FletcherLift.pinch = function(self,that) {
	return eu_ohmrun_Fletcher.Anon(function(p,cont) {
		var self1 = cont;
		return eu_ohmrun_fletcher_ReceiverLift.zip(eu_ohmrun_Fletcher.forward(self,p),eu_ohmrun_Fletcher.forward(that,p)).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self1;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	});
};
eu_ohmrun_FletcherLift.map = function(self,that) {
	return eu_ohmrun_Fletcher.Anon(function(p,cont) {
		var self1 = cont;
		return eu_ohmrun_fletcher_ReceiverLift.map(eu_ohmrun_Fletcher.forward(self,p),that).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self1;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	});
};
eu_ohmrun_FletcherLift.mapi = function(self,that) {
	return eu_ohmrun_Fletcher.Anon(function(p,cont) {
		return self.defer(that(p),cont);
	});
};
eu_ohmrun_FletcherLift.joint = function(lhs,rhs) {
	return eu_ohmrun_FletcherLift.then(lhs,eu_ohmrun_FletcherLift.split(eu_ohmrun_Fletcher.unit(),rhs));
};
eu_ohmrun_FletcherLift.bound = function(self,that) {
	return eu_ohmrun_FletcherLift.then(eu_ohmrun_FletcherLift.joint(eu_ohmrun_Fletcher.unit(),self),that);
};
eu_ohmrun_FletcherLift.broach = function(self) {
	var fn = stx_nano_lift_LiftNano.decouple(stx_nano_Wildcard.__,function(tI,tII) {
		return stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,tI,tII);
	});
	return eu_ohmrun_FletcherLift.bound(self,eu_ohmrun_Fletcher.Anon(function(p,cont) {
		var res = fn(p);
		var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,res);
		var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
			trg.trigger(value);
			return trg;
		}));
		var resI = this1;
		var self = cont;
		return resI.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	}));
};
eu_ohmrun_FletcherLift.future = function(self,p) {
	return tink_core_Future.irreversible(function(cb) {
		var this1 = eu_ohmrun_FletcherLift.environment(self,p,function(ok) {
			cb(stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,ok));
		},function(no) {
			cb(stx_nano_lift_LiftNano.failure(stx_nano_Wildcard.__,no));
		});
		var this2 = eu_ohmrun_fletcher_core_Cont.lift(new eu_ohmrun_fletcher_core_cont_term_AnonAnon(function(fn) {
			return fn(new tink_core_FutureTrigger());
		}));
		stx_stream_CycleLift.submit(stx_stream_Work.toCycle(this1.defer(null,this2)),{ fileName : "eu/ohmrun/fletcher/Fiber.hx", lineNumber : 21, className : "eu.ohmrun.fletcher._Fiber.Fiber_Impl_", methodName : "submit"});
	});
};
eu_ohmrun_FletcherLift.produce = function(self,i) {
	var this1 = eu_ohmrun_Fletcher.Anon(function(_,cont) {
		var self1 = cont;
		return eu_ohmrun_fletcher_ReceiverLift.fold_mapp(eu_ohmrun_Fletcher.forward(self,i),function(ok) {
			return stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,ok));
		},function(no) {
			return stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_nano_Defect.toRefuse(no)),{ fileName : "eu/ohmrun/Fletcher.hx", lineNumber : 254, className : "eu.ohmrun.FletcherLift", methodName : "produce"}));
		}).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self1;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	});
	return this1;
};
var eu_ohmrun_Fletcher = {};
eu_ohmrun_Fletcher.ctx = function(wildcard,environment,ok,no) {
	return eu_ohmrun_fletcher_core_Context.make(environment,ok,no);
};
eu_ohmrun_Fletcher._new = function(self) {
	var this1 = self;
	return this1;
};
eu_ohmrun_Fletcher.lift = function(self) {
	return eu_ohmrun_Fletcher._new(self);
};
eu_ohmrun_Fletcher.prj = function(this1) {
	return this1;
};
eu_ohmrun_Fletcher.get_self = function(this1) {
	return eu_ohmrun_Fletcher.lift(this1);
};
eu_ohmrun_Fletcher.fromApi = function(self) {
	return eu_ohmrun_Fletcher.lift(self);
};
eu_ohmrun_Fletcher.unit = function() {
	var fn = function(x) {
		return x;
	};
	return eu_ohmrun_Fletcher.Anon(function(p,cont) {
		var res = fn(p);
		var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,res);
		var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
			trg.trigger(value);
			return trg;
		}));
		var resI = this1;
		var self = cont;
		return resI.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	});
};
eu_ohmrun_Fletcher.constant = function(self) {
	return eu_ohmrun_Fletcher.Anon(function(_,cont) {
		var self1 = cont;
		var value = self;
		var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
			trg.trigger(value);
			return trg;
		}));
		return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self1;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	});
};
eu_ohmrun_Fletcher.pure = function(self) {
	return eu_ohmrun_Fletcher.constant(stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,self));
};
eu_ohmrun_Fletcher.fromFun1R = function(self) {
	var fn = self;
	return eu_ohmrun_Fletcher.Anon(function(p,cont) {
		var res = fn(p);
		var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,res);
		var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
			trg.trigger(value);
			return trg;
		}));
		var resI = this1;
		var self = cont;
		return resI.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	});
};
eu_ohmrun_Fletcher.fromFunXR = function(self) {
	var fn = function(_) {
		return self();
	};
	return eu_ohmrun_Fletcher.Anon(function(p,cont) {
		var res = fn(p);
		var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,res);
		var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
			trg.trigger(value);
			return trg;
		}));
		var resI = this1;
		var self = cont;
		return resI.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	});
};
eu_ohmrun_Fletcher.forward = function(f,p) {
	var self = stx_LiftAssert.assert(stx_nano_Wildcard.__,{ fileName : "eu/ohmrun/Fletcher.hx", lineNumber : 57, className : "eu.ohmrun._Fletcher.Fletcher_Impl_", methodName : "forward"}).module.exists().apply(f);
	if(self != null) {
		switch(self._hx_index) {
		case 0:
			var v = self.v;
			throw haxe_Exception.thrown(v);
		case 1:
			break;
		}
	}
	var this1 = eu_ohmrun_fletcher_core_Cont.lift(new eu_ohmrun_fletcher_core_cont_term_Anon(function(k) {
		var ft = new tink_core_FutureTrigger();
		var f1 = f;
		var p1 = p;
		var this1 = eu_ohmrun_fletcher_core_Cont.lift(new eu_ohmrun_fletcher_core_cont_term_AnonAnon(function(t_sink) {
			var self = stx_LiftAssert.assert(stx_nano_Wildcard.__,{ fileName : "eu/ohmrun/Fletcher.hx", lineNumber : 70, className : "eu.ohmrun._Fletcher.Fletcher_Impl_", methodName : "forward"}).module.exists().apply(t_sink);
			if(self != null) {
				switch(self._hx_index) {
				case 0:
					var v = self.v;
					throw haxe_Exception.thrown(v);
				case 1:
					break;
				}
			}
			return t_sink(ft);
		}));
		var fst = f1.defer(p1,this1);
		var snd = k.apply(ft);
		return stx_stream_WorkLift.seq(fst,snd);
	}));
	return this1;
};
eu_ohmrun_Fletcher.Sync = function(fn) {
	return eu_ohmrun_Fletcher.Anon(function(p,cont) {
		var res = fn(p);
		var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,res);
		var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
			trg.trigger(value);
			return trg;
		}));
		var resI = this1;
		var self = cont;
		return resI.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	});
};
eu_ohmrun_Fletcher.FlatMap = function(self,fn) {
	return eu_ohmrun_Fletcher.Anon(function(p,cont) {
		var self1 = cont;
		return eu_ohmrun_fletcher_ReceiverLift.flat_fold(eu_ohmrun_Fletcher.forward(self,p),function(ok) {
			return eu_ohmrun_Fletcher.forward(fn(ok),p);
		},function(no) {
			return eu_ohmrun_fletcher_Receiver.issue(stx_nano_lift_LiftNano.failure(stx_nano_Wildcard.__,no),{ fileName : "eu/ohmrun/fletcher/Receiver.hx", lineNumber : 34, className : "eu.ohmrun.fletcher._Receiver.Receiver_Impl_", methodName : "error"});
		}).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self1;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	});
};
eu_ohmrun_Fletcher.Anon = function(self) {
	return new eu_ohmrun_fletcher_term_Anon(self);
};
eu_ohmrun_Fletcher.Then = function(self,that) {
	return eu_ohmrun_Fletcher._.then(self,that);
};
eu_ohmrun_Fletcher.Delay = function(ms) {
	return eu_ohmrun_Fletcher.Anon(function(ipt,cont) {
		var bang = tink_core_Future.map(stx_stream_Timeout.prj(stx_stream_Timeout._new(ms)),function(_) {
			return stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,ipt);
		});
		var self = cont;
		var self1 = cont;
		var ft = bang;
		var this1 = eu_ohmrun_fletcher_core_Cont.lift(new eu_ohmrun_fletcher_core_cont_term_Anon(function(r_ipt) {
			var next = new tink_core_FutureTrigger();
			var fst = self1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(t_ipt) {
				ft.handle(function(res) {
					t_ipt.trigger(res);
					next.trigger(res);
				});
				var this1 = null;
				return this1;
			})));
			var snd = r_ipt.apply(next);
			return stx_stream_WorkLift.seq(fst,snd);
		}));
		return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	});
};
var eu_ohmrun_FletcherWildcards = function() { };
$hxClasses["eu.ohmrun.FletcherWildcards"] = eu_ohmrun_FletcherWildcards;
eu_ohmrun_FletcherWildcards.__name__ = "eu.ohmrun.FletcherWildcards";
eu_ohmrun_FletcherWildcards.attempt = function(wildcard,self,pos) {
	var self1 = stx_LiftAssert.assert(stx_nano_Wildcard.__,{ fileName : "eu/ohmrun/fletcher/Attempt.hx", lineNumber : 48, className : "eu.ohmrun.fletcher._Attempt.Attempt_Impl_", methodName : "bump"}).module.exists().apply(self);
	if(self1 != null) {
		switch(self1._hx_index) {
		case 0:
			var v = self1.v;
			throw haxe_Exception.thrown(v);
		case 1:
			break;
		}
	}
	switch(self._hx_index) {
	case 0:
		var r = self.r;
		return eu_ohmrun_fletcher_Attempt.pure(r);
	case 1:
		var res = self.res;
		return eu_ohmrun_fletcher_Attempt.fromRes(res);
	case 2:
		var fn = self.fn;
		return eu_ohmrun_fletcher_Attempt.fromFun1Res(fn);
	case 3:
		var fn = self.fn;
		return eu_ohmrun_fletcher_Attempt.fromFun1Produce(fn);
	case 4:
		var fn = self.fn;
		return eu_ohmrun_fletcher_Attempt.fromUnary1Produce(fn);
	case 5:
		var fn = self.fn;
		return eu_ohmrun_fletcher_Attempt.fromFun1Provide(fn);
	}
};
eu_ohmrun_FletcherWildcards.produce = function(wildcard,self) {
	switch(self._hx_index) {
	case 0:
		var o = self.o;
		return eu_ohmrun_fletcher_Produce.pure(o);
	case 1:
		var res = self.res;
		return eu_ohmrun_fletcher_Produce.Sync(res);
	case 2:
		var fn = self.fn;
		return eu_ohmrun_fletcher_Produce.Thunk(fn);
	case 3:
		var refuse = self.Refuse;
		return eu_ohmrun_fletcher_Produce.fromRefuse(refuse);
	case 4:
		var pledge = self.pledge;
		return eu_ohmrun_fletcher_Produce.fromPledge(pledge);
	case 5:
		var fn = self.fn;
		return eu_ohmrun_fletcher_Produce.fromFunXProduce(fn);
	case 6:
		var fletcher = self.fletcher;
		return eu_ohmrun_fletcher_Produce.fromFletcher(fletcher);
	}
};
eu_ohmrun_FletcherWildcards.arrange = function(wildcard,self) {
	switch(self._hx_index) {
	case 0:
		var o = self.o;
		return eu_ohmrun_fletcher_Arrange.pure(o);
	case 1:
		var res = self.res;
		return eu_ohmrun_fletcher_Arrange.fromRes(res);
	case 2:
		var f = self.f;
		return eu_ohmrun_fletcher_Arrange.fromFun1Attempt(f);
	case 3:
		var f = self.f;
		return eu_ohmrun_fletcher_Arrange.fromFun1Modulate(f);
	}
};
eu_ohmrun_FletcherWildcards.modulate = function(wildcard,self) {
	return eu_ohmrun_fletcher_ModulateArg.toModulate(self);
};
eu_ohmrun_FletcherWildcards.command = function(wildcard,self) {
	return eu_ohmrun_fletcher_CommandArg.toCommand(self);
};
var eu_ohmrun_Pml = function() { };
$hxClasses["eu.ohmrun.Pml"] = eu_ohmrun_Pml;
eu_ohmrun_Pml.__name__ = "eu.ohmrun.Pml";
eu_ohmrun_Pml.pml = function(wildcard) {
	return new eu_ohmrun_pml_Module();
};
var eu_ohmrun_AtomLift = function() { };
$hxClasses["eu.ohmrun.AtomLift"] = eu_ohmrun_AtomLift;
eu_ohmrun_AtomLift.__name__ = "eu.ohmrun.AtomLift";
eu_ohmrun_AtomLift.toString = function(atom) {
	switch(atom._hx_index) {
	case 0:
		var s = atom.s;
		return "" + s;
	case 1:
		var b = atom.b;
		return "" + (b == null ? "null" : "" + b);
	case 2:
		var fl = atom.fl;
		return "" + Std.string(fl);
	case 3:
		var str = atom.str;
		return str;
	case 4:
		return "<null>";
	}
};
var eu_ohmrun_fletcher_ArrangeArgSum = $hxEnums["eu.ohmrun.fletcher.ArrangeArgSum"] = { __ename__:"eu.ohmrun.fletcher.ArrangeArgSum",__constructs__:null
	,ArrangeArgPure: ($_=function(o) { return {_hx_index:0,o:o,__enum__:"eu.ohmrun.fletcher.ArrangeArgSum",toString:$estr}; },$_._hx_name="ArrangeArgPure",$_.__params__ = ["o"],$_)
	,ArrangeArgRes: ($_=function(res) { return {_hx_index:1,res:res,__enum__:"eu.ohmrun.fletcher.ArrangeArgSum",toString:$estr}; },$_._hx_name="ArrangeArgRes",$_.__params__ = ["res"],$_)
	,ArrangeArgFun1Attempt: ($_=function(f) { return {_hx_index:2,f:f,__enum__:"eu.ohmrun.fletcher.ArrangeArgSum",toString:$estr}; },$_._hx_name="ArrangeArgFun1Attempt",$_.__params__ = ["f"],$_)
	,ArrangeArgFun1Modulate: ($_=function(f) { return {_hx_index:3,f:f,__enum__:"eu.ohmrun.fletcher.ArrangeArgSum",toString:$estr}; },$_._hx_name="ArrangeArgFun1Modulate",$_.__params__ = ["f"],$_)
};
eu_ohmrun_fletcher_ArrangeArgSum.__constructs__ = [eu_ohmrun_fletcher_ArrangeArgSum.ArrangeArgPure,eu_ohmrun_fletcher_ArrangeArgSum.ArrangeArgRes,eu_ohmrun_fletcher_ArrangeArgSum.ArrangeArgFun1Attempt,eu_ohmrun_fletcher_ArrangeArgSum.ArrangeArgFun1Modulate];
var eu_ohmrun_fletcher_ArrangeArg = {};
eu_ohmrun_fletcher_ArrangeArg._new = function(self) {
	var this1 = self;
	return this1;
};
eu_ohmrun_fletcher_ArrangeArg.lift = function(self) {
	return eu_ohmrun_fletcher_ArrangeArg._new(self);
};
eu_ohmrun_fletcher_ArrangeArg.fromArgFun1Modulate = function(f) {
	return eu_ohmrun_fletcher_ArrangeArgSum.ArrangeArgFun1Modulate(f);
};
eu_ohmrun_fletcher_ArrangeArg.fromArgFun1Attempt = function(f) {
	return eu_ohmrun_fletcher_ArrangeArgSum.ArrangeArgFun1Attempt(f);
};
eu_ohmrun_fletcher_ArrangeArg.fromArgRes = function(res) {
	return eu_ohmrun_fletcher_ArrangeArgSum.ArrangeArgRes(res);
};
eu_ohmrun_fletcher_ArrangeArg.fromArgPure = function(o) {
	return eu_ohmrun_fletcher_ArrangeArgSum.ArrangeArgPure(o);
};
eu_ohmrun_fletcher_ArrangeArg.prj = function(this1) {
	return this1;
};
eu_ohmrun_fletcher_ArrangeArg.get_self = function(this1) {
	return eu_ohmrun_fletcher_ArrangeArg.lift(this1);
};
var eu_ohmrun_fletcher_ArrangeLift = function() { };
$hxClasses["eu.ohmrun.fletcher.ArrangeLift"] = eu_ohmrun_fletcher_ArrangeLift;
eu_ohmrun_fletcher_ArrangeLift.__name__ = "eu.ohmrun.fletcher.ArrangeLift";
eu_ohmrun_fletcher_ArrangeLift.state = function(self) {
	var this1 = eu_ohmrun_FletcherLift.map(eu_ohmrun_FletcherLift.broach(self),stx_nano_lift_LiftNano.decouple(stx_nano_Wildcard.__,function(tp,chk) {
		var fn = function(_) {
			return stx_nano_CoupleLift.snd(_);
		};
		var self;
		switch(tp._hx_index) {
		case 0:
			var t = tp.t;
			self = stx_nano_ResSum.Accept(fn(t));
			break;
		case 1:
			var e = tp.e;
			self = stx_nano_ResSum.Reject(e);
			break;
		}
		var this1 = self;
		var self = this1;
		var self1;
		switch(self._hx_index) {
		case 0:
			var _g = self.t;
			switch(chk._hx_index) {
			case 0:
				var tt = chk.t;
				var t = _g;
				self1 = stx_nano_ResSum.Accept(stx_nano_Couple.make(t,tt));
				break;
			case 1:
				var e = chk.e;
				self1 = stx_nano_ResSum.Reject(e);
				break;
			}
			break;
		case 1:
			var _g = self.e;
			if(chk._hx_index == 1) {
				var ee = chk.e;
				var e = _g;
				self1 = stx_nano_ResSum.Reject(stx_fail_Refuse.concat(e,ee));
			} else {
				var e = _g;
				self1 = stx_nano_ResSum.Reject(e);
			}
			break;
		}
		var fn = function(tp) {
			return stx_nano_CoupleLift.swap(tp);
		};
		var self;
		switch(self1._hx_index) {
		case 0:
			var t = self1.t;
			self = stx_nano_ResSum.Accept(fn(t));
			break;
		case 1:
			var e = self1.e;
			self = stx_nano_ResSum.Reject(e);
			break;
		}
		var this1 = self;
		return this1;
	}));
	return this1;
};
eu_ohmrun_fletcher_ArrangeLift.attempt = function(self,attempt) {
	var this1 = eu_ohmrun_FletcherLift.then(self,eu_ohmrun_fletcher_Modulate.toFletcher(eu_ohmrun_fletcher_Attempt.toModulate(attempt)));
	return this1;
};
eu_ohmrun_fletcher_ArrangeLift.errata = function(self,fn) {
	var this1 = eu_ohmrun_Fletcher.Anon(function(res,cont) {
		switch(res._hx_index) {
		case 0:
			var t = res.t;
			var self1 = cont;
			return eu_ohmrun_Fletcher.forward(eu_ohmrun_FletcherLift.map(self,function(res) {
				var self;
				switch(res._hx_index) {
				case 0:
					var t = res.t;
					self = stx_nano_Res.accept(t);
					break;
				case 1:
					var e = res.e;
					self = stx_nano_Res.reject(fn(e));
					break;
				}
				var this1 = self;
				return this1;
			}),stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,t)).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
				var this1 = self1;
				return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
					oc.handle(function(out) {
						ip.trigger(out);
					});
					var this1 = null;
					return this1;
				})));
			})));
		case 1:
			var e = res.e;
			var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(e),{ fileName : "eu/ohmrun/fletcher/Arrange.hx", lineNumber : 164, className : "eu.ohmrun.fletcher.ArrangeLift", methodName : "errata"}));
			var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
				trg.trigger(value);
				return trg;
			}));
			return eu_ohmrun_fletcher_Receiver.reply(this1);
		}
	});
	return this1;
};
eu_ohmrun_fletcher_ArrangeLift.errate = function(self,fn) {
	var this1 = eu_ohmrun_fletcher_ArrangeLift.errata(self,function(oc) {
		return stx_fail_Refuse.errate(oc,fn);
	});
	return this1;
};
eu_ohmrun_fletcher_ArrangeLift.convert = function(self,that) {
	var this1 = eu_ohmrun_fletcher_Modulate._.convert(self,that);
	return this1;
};
eu_ohmrun_fletcher_ArrangeLift.cover = function(self,i) {
	var this1 = eu_ohmrun_Fletcher.Anon(function(res,cont) {
		var self1 = cont;
		var self2 = self;
		var _g = function(tI,tII) {
			return stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,tI,tII);
		};
		var tI = i;
		var fn = function(tII) {
			return _g(tI,tII);
		};
		var self3;
		switch(res._hx_index) {
		case 0:
			var t = res.t;
			self3 = stx_nano_ResSum.Accept(fn(t));
			break;
		case 1:
			var e = res.e;
			self3 = stx_nano_ResSum.Reject(e);
			break;
		}
		var this1 = self3;
		return eu_ohmrun_Fletcher.forward(self2,this1).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self1;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	});
	return this1;
};
eu_ohmrun_fletcher_ArrangeLift.split = function(self,that) {
	var a = eu_ohmrun_FletcherLift.map(eu_ohmrun_Fletcher._.broach(self),function(tp) {
		return stx_nano_CoupleLift.decouple(tp,function(resInput,resOutput) {
			var self;
			switch(resOutput._hx_index) {
			case 0:
				var t = resOutput.t;
				var o = t;
				var fn = function(couple) {
					return stx_nano_lift_LiftNano.triple(stx_nano_Wildcard.__,stx_nano_CoupleLift.fst(couple),o,stx_nano_CoupleLift.snd(couple));
				};
				var self1;
				switch(resInput._hx_index) {
				case 0:
					var t = resInput.t;
					self1 = stx_nano_ResSum.Accept(fn(t));
					break;
				case 1:
					var e = resInput.e;
					self1 = stx_nano_ResSum.Reject(e);
					break;
				}
				var this1 = self1;
				self = this1;
				break;
			case 1:
				var e = resOutput.e;
				self = stx_nano_ResSum.Reject(e);
				break;
			}
			var this1 = self;
			return this1;
		});
	});
	var this1 = eu_ohmrun_FletcherLift.map(a,function(res) {
		var fn = function(tr) {
			return stx_nano_TripleLift.detriple(tr,function(a,b,c) {
				return stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,a,c);
			});
		};
		var self;
		switch(res._hx_index) {
		case 0:
			var t = res.t;
			self = stx_nano_ResSum.Accept(fn(t));
			break;
		case 1:
			var e = res.e;
			self = stx_nano_ResSum.Reject(e);
			break;
		}
		var this1 = self;
		return this1;
	});
	var b = eu_ohmrun_fletcher_ModulateLift.modulate(this1,eu_ohmrun_fletcher_Arrange.toModulate(that));
	var this1 = eu_ohmrun_FletcherLift.map(a,function(res) {
		var fn = function(tr) {
			return stx_nano_TripleLift.detriple(tr,function(a,b,c) {
				return b;
			});
		};
		var self;
		switch(res._hx_index) {
		case 0:
			var t = res.t;
			self = stx_nano_ResSum.Accept(fn(t));
			break;
		case 1:
			var e = res.e;
			self = stx_nano_ResSum.Reject(e);
			break;
		}
		var this1 = self;
		return this1;
	});
	var c = this1;
	var this1 = eu_ohmrun_fletcher_ModulateLift.map(eu_ohmrun_fletcher_Modulate._.split(b,c),function(tp) {
		return stx_nano_CoupleLift.swap(tp);
	});
	var d = this1;
	return d;
};
var eu_ohmrun_fletcher_Arrange = {};
eu_ohmrun_fletcher_Arrange._new = function(self) {
	var this1 = self;
	return this1;
};
eu_ohmrun_fletcher_Arrange.lift = function(self) {
	var this1 = self;
	return this1;
};
eu_ohmrun_fletcher_Arrange.bump = function(self) {
	switch(self._hx_index) {
	case 0:
		var o = self.o;
		return eu_ohmrun_fletcher_Arrange.pure(o);
	case 1:
		var res = self.res;
		return eu_ohmrun_fletcher_Arrange.fromRes(res);
	case 2:
		var f = self.f;
		return eu_ohmrun_fletcher_Arrange.fromFun1Attempt(f);
	case 3:
		var f = self.f;
		return eu_ohmrun_fletcher_Arrange.fromFun1Modulate(f);
	}
};
eu_ohmrun_fletcher_Arrange.pure = function(o) {
	var this1 = eu_ohmrun_Fletcher.Anon(function(i,cont) {
		var self = cont;
		var receiver;
		switch(i._hx_index) {
		case 0:
			var t = i.t;
			var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,o));
			var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
				trg.trigger(value);
				return trg;
			}));
			receiver = this1;
			break;
		case 1:
			var e = i.e;
			var value1 = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(e),{ fileName : "eu/ohmrun/fletcher/Arrange.hx", lineNumber : 53, className : "eu.ohmrun.fletcher._Arrange.Arrange_Impl_", methodName : "pure"}));
			var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
				trg.trigger(value1);
				return trg;
			}));
			receiver = this1;
			break;
		}
		return receiver.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	});
	return this1;
};
eu_ohmrun_fletcher_Arrange.fromRes = function(res) {
	var this1 = eu_ohmrun_Fletcher.Anon(function(i,cont) {
		var self = cont;
		var receiver;
		switch(i._hx_index) {
		case 0:
			var t = i.t;
			var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,res);
			var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
				trg.trigger(value);
				return trg;
			}));
			receiver = this1;
			break;
		case 1:
			var e = i.e;
			var value1 = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(e),{ fileName : "eu/ohmrun/fletcher/Arrange.hx", lineNumber : 64, className : "eu.ohmrun.fletcher._Arrange.Arrange_Impl_", methodName : "fromRes"}));
			var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
				trg.trigger(value1);
				return trg;
			}));
			receiver = this1;
			break;
		}
		return receiver.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	});
	return this1;
};
eu_ohmrun_fletcher_Arrange.fromFun1Attempt = function(f) {
	var this1 = eu_ohmrun_Fletcher.Anon(function(i,cont) {
		switch(i._hx_index) {
		case 0:
			var t = i.t;
			var self = cont;
			return eu_ohmrun_Fletcher.forward(f(stx_nano_CoupleLift.fst(t)),stx_nano_CoupleLift.snd(t)).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
				var this1 = self;
				return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
					oc.handle(function(out) {
						ip.trigger(out);
					});
					var this1 = null;
					return this1;
				})));
			})));
		case 1:
			var e = i.e;
			var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(e),{ fileName : "eu/ohmrun/fletcher/Arrange.hx", lineNumber : 74, className : "eu.ohmrun.fletcher._Arrange.Arrange_Impl_", methodName : "fromFun1Attempt"}));
			var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
				trg.trigger(value);
				return trg;
			}));
			return eu_ohmrun_fletcher_Receiver.reply(this1);
		}
	});
	return this1;
};
eu_ohmrun_fletcher_Arrange.fromFunResAttempt = function(f) {
	var this1 = eu_ohmrun_Fletcher.Anon(function(i,cont) {
		switch(i._hx_index) {
		case 0:
			var t = i.t;
			var self = cont;
			return eu_ohmrun_Fletcher.forward(f(stx_nano_CoupleLift.fst(t)),stx_nano_CoupleLift.snd(t)).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
				var this1 = self;
				return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
					oc.handle(function(out) {
						ip.trigger(out);
					});
					var this1 = null;
					return this1;
				})));
			})));
		case 1:
			var e = i.e;
			var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(e),{ fileName : "eu/ohmrun/fletcher/Arrange.hx", lineNumber : 83, className : "eu.ohmrun.fletcher._Arrange.Arrange_Impl_", methodName : "fromFunResAttempt"}));
			var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
				trg.trigger(value);
				return trg;
			}));
			return eu_ohmrun_fletcher_Receiver.reply(this1);
		}
	});
	return this1;
};
eu_ohmrun_fletcher_Arrange.fromFun1Modulate = function(f) {
	var this1 = eu_ohmrun_Fletcher.Anon(function(i,cont) {
		switch(i._hx_index) {
		case 0:
			var t = i.t;
			var self = cont;
			return eu_ohmrun_Fletcher.forward(f(stx_nano_CoupleLift.fst(t)),stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,stx_nano_CoupleLift.snd(t))).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
				var this1 = self;
				return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
					oc.handle(function(out) {
						ip.trigger(out);
					});
					var this1 = null;
					return this1;
				})));
			})));
		case 1:
			var e = i.e;
			var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(e),{ fileName : "eu/ohmrun/fletcher/Arrange.hx", lineNumber : 92, className : "eu.ohmrun.fletcher._Arrange.Arrange_Impl_", methodName : "fromFun1Modulate"}));
			var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
				trg.trigger(value);
				return trg;
			}));
			return eu_ohmrun_fletcher_Receiver.reply(this1);
		}
	});
	return this1;
};
eu_ohmrun_fletcher_Arrange.fromFunResModulate = function(f) {
	var this1 = eu_ohmrun_Fletcher.Anon(function(i,cont) {
		switch(i._hx_index) {
		case 0:
			var t = i.t;
			var self = cont;
			return eu_ohmrun_Fletcher.forward(f(stx_nano_CoupleLift.fst(t)),stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,stx_nano_CoupleLift.snd(t))).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
				var this1 = self;
				return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
					oc.handle(function(out) {
						ip.trigger(out);
					});
					var this1 = null;
					return this1;
				})));
			})));
		case 1:
			var e = i.e;
			var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(e),{ fileName : "eu/ohmrun/fletcher/Arrange.hx", lineNumber : 101, className : "eu.ohmrun.fletcher._Arrange.Arrange_Impl_", methodName : "fromFunResModulate"}));
			var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
				trg.trigger(value);
				return trg;
			}));
			return eu_ohmrun_fletcher_Receiver.reply(this1);
		}
	});
	return this1;
};
eu_ohmrun_fletcher_Arrange.bind_fold = function(fn,iterable) {
	return stx_nano_IterLift.lfold1(stx_nano_IterLift.map(stx_nano_IterLift.map(stx_nano_lift_LiftIterableToIter.toIter(iterable),function(t) {
		var _g = fn;
		var a1 = t;
		return function(a2) {
			return _g(a1,a2);
		};
	}),eu_ohmrun_fletcher_Arrange.fromFun1Modulate),function(next,memo) {
		var this1 = eu_ohmrun_FletcherLift.then(eu_ohmrun_fletcher_Arrange._.state(memo),next);
		return this1;
	});
};
eu_ohmrun_fletcher_Arrange.fromFun2R = function(fn) {
	return eu_ohmrun_fletcher_Arrange.modifier(fn);
};
eu_ohmrun_fletcher_Arrange.modifier = function(fn) {
	var this1 = eu_ohmrun_Fletcher.Anon(function(res,cont) {
		var fn1 = stx_nano_lift_LiftNano.decouple(stx_nano_Wildcard.__,function(i,s) {
			var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,fn(i,s)));
			var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
				trg.trigger(value);
				return trg;
			}));
			return eu_ohmrun_fletcher_Receiver.reply(this1);
		});
		switch(res._hx_index) {
		case 0:
			var t = res.t;
			return fn1(t);
		case 1:
			var e = res.e;
			var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(e),{ fileName : "eu/ohmrun/fletcher/Arrange.hx", lineNumber : 125, className : "eu.ohmrun.fletcher._Arrange.Arrange_Impl_", methodName : "modifier"}));
			var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
				trg.trigger(value);
				return trg;
			}));
			return eu_ohmrun_fletcher_Receiver.reply(this1);
		}
	});
	return this1;
};
eu_ohmrun_fletcher_Arrange.split = function(this1,that) {
	return eu_ohmrun_fletcher_Arrange._.split(this1,that);
};
eu_ohmrun_fletcher_Arrange.toFletcher = function(this1) {
	return this1;
};
eu_ohmrun_fletcher_Arrange.toModulate = function(this1) {
	return this1;
};
var eu_ohmrun_fletcher_AttemptArgSum = $hxEnums["eu.ohmrun.fletcher.AttemptArgSum"] = { __ename__:"eu.ohmrun.fletcher.AttemptArgSum",__constructs__:null
	,AttemptArgPure: ($_=function(r) { return {_hx_index:0,r:r,__enum__:"eu.ohmrun.fletcher.AttemptArgSum",toString:$estr}; },$_._hx_name="AttemptArgPure",$_.__params__ = ["r"],$_)
	,AttemptArgRes: ($_=function(res) { return {_hx_index:1,res:res,__enum__:"eu.ohmrun.fletcher.AttemptArgSum",toString:$estr}; },$_._hx_name="AttemptArgRes",$_.__params__ = ["res"],$_)
	,AttemptArgFun1Res: ($_=function(fn) { return {_hx_index:2,fn:fn,__enum__:"eu.ohmrun.fletcher.AttemptArgSum",toString:$estr}; },$_._hx_name="AttemptArgFun1Res",$_.__params__ = ["fn"],$_)
	,AttemptArgFun1Produce: ($_=function(fn) { return {_hx_index:3,fn:fn,__enum__:"eu.ohmrun.fletcher.AttemptArgSum",toString:$estr}; },$_._hx_name="AttemptArgFun1Produce",$_.__params__ = ["fn"],$_)
	,AttemptArgUnary1Produce: ($_=function(fn) { return {_hx_index:4,fn:fn,__enum__:"eu.ohmrun.fletcher.AttemptArgSum",toString:$estr}; },$_._hx_name="AttemptArgUnary1Produce",$_.__params__ = ["fn"],$_)
	,AttemptArgFun1Provide: ($_=function(fn) { return {_hx_index:5,fn:fn,__enum__:"eu.ohmrun.fletcher.AttemptArgSum",toString:$estr}; },$_._hx_name="AttemptArgFun1Provide",$_.__params__ = ["fn"],$_)
};
eu_ohmrun_fletcher_AttemptArgSum.__constructs__ = [eu_ohmrun_fletcher_AttemptArgSum.AttemptArgPure,eu_ohmrun_fletcher_AttemptArgSum.AttemptArgRes,eu_ohmrun_fletcher_AttemptArgSum.AttemptArgFun1Res,eu_ohmrun_fletcher_AttemptArgSum.AttemptArgFun1Produce,eu_ohmrun_fletcher_AttemptArgSum.AttemptArgUnary1Produce,eu_ohmrun_fletcher_AttemptArgSum.AttemptArgFun1Provide];
var eu_ohmrun_fletcher_AttemptArg = {};
eu_ohmrun_fletcher_AttemptArg._new = function(self) {
	var this1 = self;
	return this1;
};
eu_ohmrun_fletcher_AttemptArg.lift = function(self) {
	return eu_ohmrun_fletcher_AttemptArg._new(self);
};
eu_ohmrun_fletcher_AttemptArg.prj = function(this1) {
	return this1;
};
eu_ohmrun_fletcher_AttemptArg.get_self = function(this1) {
	return eu_ohmrun_fletcher_AttemptArg.lift(this1);
};
eu_ohmrun_fletcher_AttemptArg.fromArgFun1Provide = function(fn) {
	return eu_ohmrun_fletcher_AttemptArgSum.AttemptArgFun1Provide(fn);
};
eu_ohmrun_fletcher_AttemptArg.fromArgUnary1Produce = function(fn) {
	return eu_ohmrun_fletcher_AttemptArgSum.AttemptArgUnary1Produce(fn);
};
eu_ohmrun_fletcher_AttemptArg.fromArgFun1Produce = function(fn) {
	return eu_ohmrun_fletcher_AttemptArgSum.AttemptArgFun1Produce(fn);
};
eu_ohmrun_fletcher_AttemptArg.fromArgFun1Res = function(fn) {
	return eu_ohmrun_fletcher_AttemptArgSum.AttemptArgFun1Res(fn);
};
eu_ohmrun_fletcher_AttemptArg.fromArgRes = function(fn) {
	return eu_ohmrun_fletcher_AttemptArgSum.AttemptArgRes(fn);
};
eu_ohmrun_fletcher_AttemptArg.fromArgPure = function(r) {
	return eu_ohmrun_fletcher_AttemptArgSum.AttemptArgPure(r);
};
var eu_ohmrun_fletcher_AttemptLift = function() { };
$hxClasses["eu.ohmrun.fletcher.AttemptLift"] = eu_ohmrun_fletcher_AttemptLift;
eu_ohmrun_fletcher_AttemptLift.__name__ = "eu.ohmrun.fletcher.AttemptLift";
eu_ohmrun_fletcher_AttemptLift.lift = function(self) {
	var this1 = self;
	return this1;
};
eu_ohmrun_fletcher_AttemptLift.then = function(self,that) {
	return eu_ohmrun_fletcher_AttemptLift.lift(eu_ohmrun_Fletcher._.then(self,eu_ohmrun_fletcher_Modulate.toFletcher(that)));
};
eu_ohmrun_fletcher_AttemptLift.rectify = function(self,next) {
	return eu_ohmrun_Fletcher.lift(eu_ohmrun_Fletcher._.then(eu_ohmrun_fletcher_AttemptLift.lift(self),next));
};
eu_ohmrun_fletcher_AttemptLift.resolve = function(self,next) {
	return eu_ohmrun_fletcher_AttemptLift.lift(eu_ohmrun_FletcherLift.then(self,eu_ohmrun_fletcher_Modulate.toFletcher(eu_ohmrun_fletcher_ResolveLift.toModulate(next))));
};
eu_ohmrun_fletcher_AttemptLift.reclaim = function(self,next) {
	return eu_ohmrun_fletcher_AttemptLift.lift(eu_ohmrun_fletcher_AttemptLift.attempt(eu_ohmrun_fletcher_AttemptLift.then(self,eu_ohmrun_fletcher_ConvertLift.toModulate(next)),eu_ohmrun_fletcher_AttemptLift.lift(eu_ohmrun_Fletcher.Anon(function(prd,cont) {
		var self = cont;
		return eu_ohmrun_Fletcher.forward(prd,null).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	}))));
};
eu_ohmrun_fletcher_AttemptLift.recover = function(self,next) {
	return eu_ohmrun_fletcher_AttemptLift.lift(eu_ohmrun_FletcherLift.then(self,eu_ohmrun_fletcher_Modulate.toFletcher(eu_ohmrun_fletcher_Recover.toModulate(next))));
};
eu_ohmrun_fletcher_AttemptLift.convert = function(self,next) {
	return eu_ohmrun_fletcher_AttemptLift.then(self,eu_ohmrun_fletcher_ConvertLift.toModulate(next));
};
eu_ohmrun_fletcher_AttemptLift.errata = function(self,fn) {
	return eu_ohmrun_fletcher_AttemptLift.lift(eu_ohmrun_Fletcher._.map(self,function(oc) {
		var self;
		switch(oc._hx_index) {
		case 0:
			var t = oc.t;
			self = stx_nano_Res.accept(t);
			break;
		case 1:
			var e = oc.e;
			self = stx_nano_Res.reject(fn(e));
			break;
		}
		var this1 = self;
		return this1;
	}));
};
eu_ohmrun_fletcher_AttemptLift.errate = function(self,fn) {
	return eu_ohmrun_fletcher_AttemptLift.lift(eu_ohmrun_Fletcher._.map(self,function(oc) {
		var fn1 = fn;
		var self;
		switch(oc._hx_index) {
		case 0:
			var t = oc.t;
			self = stx_nano_Res.accept(t);
			break;
		case 1:
			var e = oc.e;
			self = stx_nano_Res.reject(stx_fail_Refuse.errate(e,fn1));
			break;
		}
		var this1 = self;
		return this1;
	}));
};
eu_ohmrun_fletcher_AttemptLift.attempt = function(self,next) {
	return eu_ohmrun_fletcher_AttemptLift.then(self,eu_ohmrun_fletcher_Attempt.toModulate(next));
};
eu_ohmrun_fletcher_AttemptLift.reframe = function(self) {
	return eu_ohmrun_fletcher_ModulateLift.reframe(eu_ohmrun_fletcher_Attempt.toModulate(eu_ohmrun_fletcher_AttemptLift.lift(self)));
};
eu_ohmrun_fletcher_AttemptLift.broach = function(self) {
	var this1 = eu_ohmrun_Fletcher.Anon(function(ipt,cont) {
		var self1 = cont;
		return eu_ohmrun_Fletcher.forward(eu_ohmrun_fletcher_AttemptLift.map(eu_ohmrun_fletcher_AttemptLift.lift(self),function(o) {
			return stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,ipt,o);
		}),ipt).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self1;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	});
	return this1;
};
eu_ohmrun_fletcher_AttemptLift.provide = function(self,i) {
	var this1 = eu_ohmrun_Fletcher.Anon(function(_,cont) {
		var self1 = cont;
		return eu_ohmrun_Fletcher.forward(self,i).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self1;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	});
	return this1;
};
eu_ohmrun_fletcher_AttemptLift.arrange = function(self,then) {
	return eu_ohmrun_fletcher_AttemptLift.lift(eu_ohmrun_Fletcher.Anon(function(p,cont) {
		var self1 = cont;
		return eu_ohmrun_fletcher_ReceiverLift.flat_fold(eu_ohmrun_Fletcher.forward(self,p),function(ok) {
			var then1 = then;
			var _g = function(tI,tII) {
				return stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,tI,tII);
			};
			var tII = p;
			var fn = function(tI) {
				return _g(tI,tII);
			};
			var self;
			switch(ok._hx_index) {
			case 0:
				var t = ok.t;
				self = stx_nano_ResSum.Accept(fn(t));
				break;
			case 1:
				var e = ok.e;
				self = stx_nano_ResSum.Reject(e);
				break;
			}
			var this1 = self;
			return eu_ohmrun_Fletcher.forward(then1,this1);
		},function(no) {
			var value = stx_nano_lift_LiftNano.failure(stx_nano_Wildcard.__,no);
			var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
				trg.trigger(value);
				return trg;
			}));
			return this1;
		}).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self1;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	}));
};
eu_ohmrun_fletcher_AttemptLift.mapi = function(self,that) {
	return eu_ohmrun_fletcher_AttemptLift.lift(eu_ohmrun_Fletcher._.mapi(eu_ohmrun_fletcher_AttemptLift.lift(self),that));
};
eu_ohmrun_fletcher_AttemptLift.modulate = function(self,that) {
	return eu_ohmrun_fletcher_AttemptLift.lift(eu_ohmrun_FletcherLift.then(self,eu_ohmrun_fletcher_Modulate.toFletcher(that)));
};
eu_ohmrun_fletcher_AttemptLift.execute = function(self,that) {
	var this1 = eu_ohmrun_Fletcher._.then(self,eu_ohmrun_Fletcher.Anon(function(ipt,cont) {
		switch(ipt._hx_index) {
		case 0:
			var t = ipt.t;
			var self = cont;
			return eu_ohmrun_Fletcher.forward(eu_ohmrun_fletcher_ExecuteLift.produce(that,eu_ohmrun_fletcher_Produce.pure(t)),null).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
				var this1 = self;
				return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
					oc.handle(function(out) {
						ip.trigger(out);
					});
					var this1 = null;
					return this1;
				})));
			})));
		case 1:
			var e = ipt.e;
			var self1 = cont;
			var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(e),{ fileName : "eu/ohmrun/fletcher/Attempt.hx", lineNumber : 228, className : "eu.ohmrun.fletcher.AttemptLift", methodName : "execute"}));
			var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
				trg.trigger(value);
				return trg;
			}));
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
				var this1 = self1;
				return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
					oc.handle(function(out) {
						ip.trigger(out);
					});
					var this1 = null;
					return this1;
				})));
			})));
		}
	}));
	return this1;
};
eu_ohmrun_fletcher_AttemptLift.command = function(self,that) {
	var this1 = eu_ohmrun_Fletcher._.then(eu_ohmrun_fletcher_AttemptLift.lift(self),eu_ohmrun_Fletcher.Anon(function(ipt,cont) {
		var this1 = eu_ohmrun_fletcher_Logging.log(stx_nano_Wildcard.__);
		var fn = function(pos) {
			return pos.with_stamp(function(stamp) {
				return stamp.relevel(2);
			});
		};
		(function(value,pos) {
			this1(value,fn(pos));
		})(new stx_log_EntryCtr().pure(ipt),stx_log_LogPosition.fromPos({ fileName : "eu/ohmrun/fletcher/Attempt.hx", lineNumber : 240, className : "eu.ohmrun.fletcher.AttemptLift", methodName : "command"}));
		switch(ipt._hx_index) {
		case 0:
			var t = ipt.t;
			var self = cont;
			return eu_ohmrun_Fletcher.forward(eu_ohmrun_fletcher_CommandLift.produce(that,eu_ohmrun_fletcher_Produce.pure(t)),t).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
				var this1 = self;
				return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
					oc.handle(function(out) {
						ip.trigger(out);
					});
					var this1 = null;
					return this1;
				})));
			})));
		case 1:
			var e = ipt.e;
			var self1 = cont;
			var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(e),{ fileName : "eu/ohmrun/fletcher/Attempt.hx", lineNumber : 243, className : "eu.ohmrun.fletcher.AttemptLift", methodName : "command"}));
			var this2 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
				trg.trigger(value);
				return trg;
			}));
			return this2.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
				var this1 = self1;
				return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
					oc.handle(function(out) {
						ip.trigger(out);
					});
					var this1 = null;
					return this1;
				})));
			})));
		}
	}));
	return this1;
};
eu_ohmrun_fletcher_AttemptLift.map = function(self,fn) {
	var this1 = eu_ohmrun_Fletcher._.map(self,function(res) {
		var fn1 = fn;
		var self;
		switch(res._hx_index) {
		case 0:
			var t = res.t;
			self = stx_nano_ResSum.Accept(fn1(t));
			break;
		case 1:
			var e = res.e;
			self = stx_nano_ResSum.Reject(e);
			break;
		}
		var this1 = self;
		return this1;
	});
	return this1;
};
eu_ohmrun_fletcher_AttemptLift.flat_map = function(self,fn) {
	var this1 = eu_ohmrun_Fletcher.Anon(function(ipt,cont) {
		var self1 = cont;
		return eu_ohmrun_fletcher_ReceiverLift.flat_map(eu_ohmrun_Fletcher.forward(self,ipt),function(res) {
			var receiver;
			switch(res._hx_index) {
			case 0:
				var t = res.t;
				receiver = eu_ohmrun_Fletcher.forward(fn(t),ipt);
				break;
			case 1:
				var e = res.e;
				receiver = eu_ohmrun_fletcher_Receiver.issue(stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(e),{ fileName : "eu/ohmrun/fletcher/Attempt.hx", lineNumber : 264, className : "eu.ohmrun.fletcher.AttemptLift", methodName : "flat_map"})),{ fileName : "eu/ohmrun/fletcher/Attempt.hx", lineNumber : 264, className : "eu.ohmrun.fletcher.AttemptLift", methodName : "flat_map"});
				break;
			}
			return receiver;
		}).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self1;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	});
	return this1;
};
eu_ohmrun_fletcher_AttemptLift.produce = function(self,i) {
	var this1 = eu_ohmrun_Fletcher.Anon(function(_,cont) {
		var self1 = cont;
		return eu_ohmrun_Fletcher.forward(self,i).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self1;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	});
	return this1;
};
eu_ohmrun_fletcher_AttemptLift.adjust = function(self,fn) {
	var fn1 = function(res) {
		var self;
		switch(res._hx_index) {
		case 0:
			var t = res.t;
			self = fn(t);
			break;
		case 1:
			var e = res.e;
			self = stx_nano_ResSum.Reject(e);
			break;
		}
		var this1 = self;
		return this1;
	};
	return eu_ohmrun_fletcher_AttemptLift.lift(eu_ohmrun_Fletcher._.then(self,eu_ohmrun_Fletcher.Anon(function(p,cont) {
		var res = fn1(p);
		var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,res);
		var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
			trg.trigger(value);
			return trg;
		}));
		var resI = this1;
		var self = cont;
		return resI.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	})));
};
var eu_ohmrun_fletcher_Attempt = {};
eu_ohmrun_fletcher_Attempt._new = function(self) {
	var this1 = self;
	return this1;
};
eu_ohmrun_fletcher_Attempt.bump = function(self) {
	var self1 = stx_LiftAssert.assert(stx_nano_Wildcard.__,{ fileName : "eu/ohmrun/fletcher/Attempt.hx", lineNumber : 48, className : "eu.ohmrun.fletcher._Attempt.Attempt_Impl_", methodName : "bump"}).module.exists().apply(self);
	if(self1 != null) {
		switch(self1._hx_index) {
		case 0:
			var v = self1.v;
			throw haxe_Exception.thrown(v);
		case 1:
			break;
		}
	}
	switch(self._hx_index) {
	case 0:
		var r = self.r;
		return eu_ohmrun_fletcher_Attempt.pure(r);
	case 1:
		var res = self.res;
		return eu_ohmrun_fletcher_Attempt.fromRes(res);
	case 2:
		var fn = self.fn;
		return eu_ohmrun_fletcher_Attempt.fromFun1Res(fn);
	case 3:
		var fn = self.fn;
		return eu_ohmrun_fletcher_Attempt.fromFun1Produce(fn);
	case 4:
		var fn = self.fn;
		return eu_ohmrun_fletcher_Attempt.fromUnary1Produce(fn);
	case 5:
		var fn = self.fn;
		return eu_ohmrun_fletcher_Attempt.fromFun1Provide(fn);
	}
};
eu_ohmrun_fletcher_Attempt.lift = function(self) {
	var this1 = self;
	return this1;
};
eu_ohmrun_fletcher_Attempt.unit = function() {
	var this1 = eu_ohmrun_Fletcher.Anon(function(i,cont) {
		var self = cont;
		var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,i));
		var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
			trg.trigger(value);
			return trg;
		}));
		return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	});
	return this1;
};
eu_ohmrun_fletcher_Attempt.pure = function(o) {
	return eu_ohmrun_fletcher_Attempt.fromRes(stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,o));
};
eu_ohmrun_fletcher_Attempt.fromRes = function(res) {
	var this1 = eu_ohmrun_Fletcher.Anon(function(_,cont) {
		var self = cont;
		var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,res);
		var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
			trg.trigger(value);
			return trg;
		}));
		return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	});
	return this1;
};
eu_ohmrun_fletcher_Attempt.fromFun1Res = function(fn) {
	var this1 = eu_ohmrun_Fletcher.Anon(function(pI,cont) {
		var self = cont;
		var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,fn(pI));
		var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
			trg.trigger(value);
			return trg;
		}));
		return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	});
	return this1;
};
eu_ohmrun_fletcher_Attempt.fromFun1Produce = function(fn) {
	var this1 = eu_ohmrun_Fletcher.Anon(function(pI,cont) {
		var self = cont;
		return eu_ohmrun_Fletcher.forward(fn(pI),null).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	});
	return this1;
};
eu_ohmrun_fletcher_Attempt.fromUnary1Produce = function(fn) {
	return eu_ohmrun_fletcher_Attempt.fromFun1Produce(fn);
};
eu_ohmrun_fletcher_Attempt.fromFun1Provide = function(fn) {
	var this1 = eu_ohmrun_Fletcher.Anon(function(pI,cont) {
		var rest = fn(pI);
		var self = stx_LiftAssert.assert(stx_nano_Wildcard.__,{ fileName : "eu/ohmrun/fletcher/Attempt.hx", lineNumber : 103, className : "eu.ohmrun.fletcher._Attempt.Attempt_Impl_", methodName : "fromFun1Provide"}).module.exists().apply(rest);
		if(self != null) {
			switch(self._hx_index) {
			case 0:
				var v = self.v;
				throw haxe_Exception.thrown(v);
			case 1:
				break;
			}
		}
		var self = cont;
		var fn1 = function(t) {
			return stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,t);
		};
		var this1 = eu_ohmrun_fletcher_ProvideLift.convert(rest,eu_ohmrun_fletcher_Convert.fromFletcher(eu_ohmrun_Fletcher.Anon(function(p,cont) {
			var res = fn1(p);
			var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,res);
			var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
				trg.trigger(value);
				return trg;
			}));
			var resI = this1;
			var self = cont;
			return resI.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
				var this1 = self;
				return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
					oc.handle(function(out) {
						ip.trigger(out);
					});
					var this1 = null;
					return this1;
				})));
			})));
		})));
		return eu_ohmrun_Fletcher.forward(this1,null).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	});
	return this1;
};
eu_ohmrun_fletcher_Attempt.fromFun1R = function(fn) {
	var this1 = eu_ohmrun_Fletcher.Anon(function(i,cont) {
		var self = cont;
		var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,fn(i)));
		var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
			trg.trigger(value);
			return trg;
		}));
		return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	});
	return this1;
};
eu_ohmrun_fletcher_Attempt.toFletcher = function(this1) {
	return this1;
};
eu_ohmrun_fletcher_Attempt.toModulate = function(this1) {
	var this2 = eu_ohmrun_Fletcher.Anon(function(i,cont) {
		switch(i._hx_index) {
		case 0:
			var t = i.t;
			var self = cont;
			return eu_ohmrun_Fletcher.forward(this1,t).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
				var this1 = self;
				return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
					oc.handle(function(out) {
						ip.trigger(out);
					});
					var this1 = null;
					return this1;
				})));
			})));
		case 1:
			var e = i.e;
			var self1 = cont;
			var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(e),{ fileName : "eu/ohmrun/fletcher/Attempt.hx", lineNumber : 127, className : "eu.ohmrun.fletcher._Attempt.Attempt_Impl_", methodName : "toModulate"}));
			var this2 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
				trg.trigger(value);
				return trg;
			}));
			return this2.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
				var this1 = self1;
				return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
					oc.handle(function(out) {
						ip.trigger(out);
					});
					var this1 = null;
					return this1;
				})));
			})));
		}
	});
	return this2;
};
eu_ohmrun_fletcher_Attempt.environment = function(this1,i,success,failure) {
	var success1 = success;
	var failure1 = failure;
	return eu_ohmrun_Fletcher._.environment(eu_ohmrun_fletcher_Attempt.toModulate(this1),stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,i),function(res) {
		switch(res._hx_index) {
		case 0:
			var t = res.t;
			success1(t);
			break;
		case 1:
			var e = res.e;
			failure1(e);
			break;
		}
	},function(err) {
		throw haxe_Exception.thrown(err);
	});
};
eu_ohmrun_fletcher_Attempt.mapi = function(this1,that) {
	return eu_ohmrun_fletcher_Attempt._.mapi(this1,that);
};
var eu_ohmrun_fletcher_CommandArgSum = $hxEnums["eu.ohmrun.fletcher.CommandArgSum"] = { __ename__:"eu.ohmrun.fletcher.CommandArgSum",__constructs__:null
	,CommandArgFun1Void: ($_=function(fn) { return {_hx_index:0,fn:fn,__enum__:"eu.ohmrun.fletcher.CommandArgSum",toString:$estr}; },$_._hx_name="CommandArgFun1Void",$_.__params__ = ["fn"],$_)
	,CommandArgFun1Report: ($_=function(fn) { return {_hx_index:1,fn:fn,__enum__:"eu.ohmrun.fletcher.CommandArgSum",toString:$estr}; },$_._hx_name="CommandArgFun1Report",$_.__params__ = ["fn"],$_)
	,CommandArgFun1OptionRefuse: ($_=function(fn) { return {_hx_index:2,fn:fn,__enum__:"eu.ohmrun.fletcher.CommandArgSum",toString:$estr}; },$_._hx_name="CommandArgFun1OptionRefuse",$_.__params__ = ["fn"],$_)
	,CommandFun1Execute: ($_=function(fn) { return {_hx_index:3,fn:fn,__enum__:"eu.ohmrun.fletcher.CommandArgSum",toString:$estr}; },$_._hx_name="CommandFun1Execute",$_.__params__ = ["fn"],$_)
};
eu_ohmrun_fletcher_CommandArgSum.__constructs__ = [eu_ohmrun_fletcher_CommandArgSum.CommandArgFun1Void,eu_ohmrun_fletcher_CommandArgSum.CommandArgFun1Report,eu_ohmrun_fletcher_CommandArgSum.CommandArgFun1OptionRefuse,eu_ohmrun_fletcher_CommandArgSum.CommandFun1Execute];
var eu_ohmrun_fletcher_CommandArg = {};
eu_ohmrun_fletcher_CommandArg._new = function(self) {
	var this1 = self;
	return this1;
};
eu_ohmrun_fletcher_CommandArg.lift = function(self) {
	return eu_ohmrun_fletcher_CommandArg._new(self);
};
eu_ohmrun_fletcher_CommandArg.prj = function(this1) {
	return this1;
};
eu_ohmrun_fletcher_CommandArg.get_self = function(this1) {
	return eu_ohmrun_fletcher_CommandArg.lift(this1);
};
eu_ohmrun_fletcher_CommandArg.fromCommandFun1Execute = function(fn) {
	return eu_ohmrun_fletcher_CommandArg.lift(eu_ohmrun_fletcher_CommandArgSum.CommandFun1Execute(fn));
};
eu_ohmrun_fletcher_CommandArg.fromCommandArgFun1Report = function(fn) {
	return eu_ohmrun_fletcher_CommandArgSum.CommandArgFun1Report(fn);
};
eu_ohmrun_fletcher_CommandArg.fromCommandArgFun1OptionRefuse = function(fn) {
	return eu_ohmrun_fletcher_CommandArgSum.CommandArgFun1OptionRefuse(fn);
};
eu_ohmrun_fletcher_CommandArg.fromCommandArgFun1Void = function(fn) {
	return eu_ohmrun_fletcher_CommandArgSum.CommandArgFun1Void(fn);
};
eu_ohmrun_fletcher_CommandArg.toCommand = function(this1) {
	switch(this1._hx_index) {
	case 0:
		var x = this1.fn;
		return eu_ohmrun_fletcher_Command.fromFun1Void(x);
	case 1:
		var x = this1.fn;
		return eu_ohmrun_fletcher_Command.fromFun1Report(x);
	case 2:
		var x = this1.fn;
		return eu_ohmrun_fletcher_Command.fromFun1OptionRefuse(x);
	case 3:
		var x = this1.fn;
		return eu_ohmrun_fletcher_Command.fromFun1Execute(x);
	}
};
var eu_ohmrun_fletcher_CommandLift = function() { };
$hxClasses["eu.ohmrun.fletcher.CommandLift"] = eu_ohmrun_fletcher_CommandLift;
eu_ohmrun_fletcher_CommandLift.__name__ = "eu.ohmrun.fletcher.CommandLift";
eu_ohmrun_fletcher_CommandLift.toModulate = function(command) {
	var this1 = eu_ohmrun_Fletcher.Anon(function(p,cont) {
		switch(p._hx_index) {
		case 0:
			var t = p.t;
			var okI = t;
			var self = cont;
			return eu_ohmrun_fletcher_ReceiverLift.fold_mapp(eu_ohmrun_Fletcher.forward(command,okI),function(okII) {
				if(okII == null) {
					return stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,okI));
				} else {
					switch(okII._hx_index) {
					case 0:
						var v = okII.v;
						return stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(v),{ fileName : "eu/ohmrun/fletcher/Command.hx", lineNumber : 134, className : "eu.ohmrun.fletcher.CommandLift", methodName : "toModulate"}));
					case 1:
						return stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,okI));
					}
				}
			},function(er) {
				return stx_nano_lift_LiftNano.failure(stx_nano_Wildcard.__,er);
			}).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
				var this1 = self;
				return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
					oc.handle(function(out) {
						ip.trigger(out);
					});
					var this1 = null;
					return this1;
				})));
			})));
		case 1:
			var e = p.e;
			var self1 = cont;
			var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(e),{ fileName : "eu/ohmrun/fletcher/Command.hx", lineNumber : 139, className : "eu.ohmrun.fletcher.CommandLift", methodName : "toModulate"}));
			var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
				trg.trigger(value);
				return trg;
			}));
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
				var this1 = self1;
				return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
					oc.handle(function(out) {
						ip.trigger(out);
					});
					var this1 = null;
					return this1;
				})));
			})));
		}
	});
	return this1;
};
eu_ohmrun_fletcher_CommandLift.produce = function(command,prod) {
	var this1 = eu_ohmrun_Fletcher._.then(command,eu_ohmrun_Fletcher.Anon(function(ipt,cont) {
		var this1 = eu_ohmrun_fletcher_Logging.log(stx_nano_Wildcard.__);
		var fn = function(pos) {
			return pos.with_stamp(function(stamp) {
				return stamp.relevel(2);
			});
		};
		(function(value,pos) {
			this1(value,fn(pos));
		})(new stx_log_EntryCtr().pure(ipt),stx_log_LogPosition.fromPos({ fileName : "eu/ohmrun/fletcher/Command.hx", lineNumber : 149, className : "eu.ohmrun.fletcher.CommandLift", methodName : "produce"}));
		if(ipt == null) {
			var self = cont;
			return eu_ohmrun_Fletcher.forward(prod,null).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
				var this1 = self;
				return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
					oc.handle(function(out) {
						ip.trigger(out);
					});
					var this1 = null;
					return this1;
				})));
			})));
		} else {
			switch(ipt._hx_index) {
			case 0:
				var v = ipt.v;
				var self1 = cont;
				var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(v),{ fileName : "eu/ohmrun/fletcher/Command.hx", lineNumber : 151, className : "eu.ohmrun.fletcher.CommandLift", methodName : "produce"}));
				var this2 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
					trg.trigger(value);
					return trg;
				}));
				return this2.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
					var this1 = self1;
					return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
						oc.handle(function(out) {
							ip.trigger(out);
						});
						var this1 = null;
						return this1;
					})));
				})));
			case 1:
				var self2 = cont;
				return eu_ohmrun_Fletcher.forward(prod,null).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
					var this1 = self2;
					return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
						oc.handle(function(out) {
							ip.trigger(out);
						});
						var this1 = null;
						return this1;
					})));
				})));
			}
		}
	}));
	return this1;
};
var eu_ohmrun_fletcher_Command = {};
eu_ohmrun_fletcher_Command._new = function(self) {
	var this1 = self;
	return this1;
};
eu_ohmrun_fletcher_Command.unit = function() {
	return eu_ohmrun_fletcher_Command._new(eu_ohmrun_Fletcher.Anon(function(p,cont) {
		var res = stx_nano_Report.unit();
		var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,res);
		var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
			trg.trigger(value);
			return trg;
		}));
		var resI = this1;
		var self = cont;
		return resI.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	}));
};
eu_ohmrun_fletcher_Command.lift = function(self) {
	return eu_ohmrun_fletcher_Command._new(self);
};
eu_ohmrun_fletcher_Command.bump = function(self) {
	return eu_ohmrun_fletcher_CommandArg.toCommand(self);
};
eu_ohmrun_fletcher_Command.fromFun1Void = function(fn) {
	var self = fn;
	var fn = stx_fn_UnaryLift.then(function(p) {
		self(p);
		return p;
	},function(_) {
		return stx_nano_Report.unit();
	});
	return eu_ohmrun_fletcher_Command._new(eu_ohmrun_Fletcher.Anon(function(p,cont) {
		var res = fn(p);
		var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,res);
		var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
			trg.trigger(value);
			return trg;
		}));
		var resI = this1;
		var self = cont;
		return resI.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	}));
};
eu_ohmrun_fletcher_Command.fromFun1Report = function(fn) {
	var fn1 = function(i) {
		return fn(i);
	};
	return eu_ohmrun_fletcher_Command._new(eu_ohmrun_Fletcher.Anon(function(p,cont) {
		var res = fn1(p);
		var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,res);
		var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
			trg.trigger(value);
			return trg;
		}));
		var resI = this1;
		var self = cont;
		return resI.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	}));
};
eu_ohmrun_fletcher_Command.fromFun1OptionRefuse = function(fn) {
	var fn1 = function(i) {
		return stx_nano_Report.fromOption(fn(i));
	};
	return eu_ohmrun_fletcher_Command._new(eu_ohmrun_Fletcher.Anon(function(p,cont) {
		var res = fn1(p);
		var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,res);
		var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
			trg.trigger(value);
			return trg;
		}));
		var resI = this1;
		var self = cont;
		return resI.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	}));
};
eu_ohmrun_fletcher_Command.fromFletcher = function(self) {
	return eu_ohmrun_fletcher_Command._new(eu_ohmrun_Fletcher.Anon(function(p,cont) {
		var self1 = cont;
		return eu_ohmrun_fletcher_ReceiverLift.fold_mapp(eu_ohmrun_Fletcher.forward(self,p),function(_) {
			var f = null;
			return stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,f == null ? stx_nano_Report.unit() : stx_nano_Report.pure(f(stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "eu/ohmrun/fletcher/Command.hx", lineNumber : 71, className : "eu.ohmrun.fletcher._Command.Command_Impl_", methodName : "fromFletcher"}))));
		},function(e) {
			return stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_fail_RefuseLift.report(stx_nano_Defect.toRefuse(e)));
		}).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self1;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	}));
};
eu_ohmrun_fletcher_Command.fromFun1Execute = function(fn) {
	return eu_ohmrun_fletcher_Command._new(eu_ohmrun_Fletcher.Anon(function(i,cont) {
		var this1 = eu_ohmrun_fletcher_Logging.log(stx_nano_Wildcard.__);
		var fn1 = function(pos) {
			return pos.with_stamp(function(stamp) {
				return stamp.relevel(2);
			});
		};
		(function(value,pos) {
			this1(value,fn1(pos));
		})(new stx_log_EntryCtr().pure(i),stx_log_LogPosition.fromPos({ fileName : "eu/ohmrun/fletcher/Command.hx", lineNumber : 81, className : "eu.ohmrun.fletcher._Command.Command_Impl_", methodName : "fromFun1Execute"}));
		var self = cont;
		return eu_ohmrun_Fletcher.forward(fn(i),null).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	}));
};
eu_ohmrun_fletcher_Command.toModulate = function(this1) {
	var this2 = eu_ohmrun_Fletcher.Anon(function(p,cont) {
		switch(p._hx_index) {
		case 0:
			var t = p.t;
			var ok = t;
			var self = cont;
			return eu_ohmrun_fletcher_ReceiverLift.fold_mapp(eu_ohmrun_Fletcher.forward(this1,ok),function(report) {
				if(report == null) {
					return stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,ok));
				} else {
					switch(report._hx_index) {
					case 0:
						var v = report.v;
						return stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(v),{ fileName : "eu/ohmrun/fletcher/Command.hx", lineNumber : 93, className : "eu.ohmrun.fletcher._Command.Command_Impl_", methodName : "toModulate"}));
					case 1:
						return stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,ok));
					}
				}
			},function(e) {
				return stx_nano_lift_LiftNano.failure(stx_nano_Wildcard.__,e);
			}).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
				var this1 = self;
				return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
					oc.handle(function(out) {
						ip.trigger(out);
					});
					var this1 = null;
					return this1;
				})));
			})));
		case 1:
			var e = p.e;
			var self1 = cont;
			var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(e),{ fileName : "eu/ohmrun/fletcher/Command.hx", lineNumber : 99, className : "eu.ohmrun.fletcher._Command.Command_Impl_", methodName : "toModulate"}));
			var this2 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
				trg.trigger(value);
				return trg;
			}));
			return this2.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
				var this1 = self1;
				return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
					oc.handle(function(out) {
						ip.trigger(out);
					});
					var this1 = null;
					return this1;
				})));
			})));
		}
	});
	return this2;
};
eu_ohmrun_fletcher_Command.prj = function(this1) {
	return this1;
};
eu_ohmrun_fletcher_Command.toFletcher = function(this1) {
	return this1;
};
eu_ohmrun_fletcher_Command.and = function(this1,that) {
	return eu_ohmrun_fletcher_Command._new(eu_ohmrun_FletcherLift.map(eu_ohmrun_Fletcher._.split(eu_ohmrun_fletcher_Command.get_self(this1),that),function(tp) {
		return stx_nano_ReportLift.concat(stx_nano_CoupleLift.fst(tp),stx_nano_CoupleLift.snd(tp));
	}));
};
eu_ohmrun_fletcher_Command.errata = function(this1,fn) {
	return eu_ohmrun_FletcherLift.map(eu_ohmrun_fletcher_Command.get_self(this1),function(report) {
		return stx_nano_Report.errata(report,fn);
	});
};
eu_ohmrun_fletcher_Command.provide = function(this1,i) {
	var this2 = eu_ohmrun_Fletcher.Anon(function(_,cont) {
		var self = cont;
		return eu_ohmrun_Fletcher.forward(this1,i).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	});
	return this2;
};
eu_ohmrun_fletcher_Command.get_self = function(this1) {
	return this1;
};
var eu_ohmrun_fletcher_Completion = function(context,$process) {
	eu_ohmrun_FletcherCls.call(this);
	this.context = context;
	this.process = $process;
};
$hxClasses["eu.ohmrun.fletcher.Completion"] = eu_ohmrun_fletcher_Completion;
eu_ohmrun_fletcher_Completion.__name__ = "eu.ohmrun.fletcher.Completion";
eu_ohmrun_fletcher_Completion.__super__ = eu_ohmrun_FletcherCls;
eu_ohmrun_fletcher_Completion.prototype = $extend(eu_ohmrun_FletcherCls.prototype,{
	context: null
	,process: null
	,defer: function(p,cont) {
		var _gthis = this;
		var self = cont;
		return eu_ohmrun_fletcher_ReceiverLift.fold_mapp(eu_ohmrun_Fletcher.forward(this.process,this.context.environment),function(ok) {
			_gthis.context.on_value(ok);
			return stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,null);
		},function(no) {
			_gthis.context.on_error(no);
			return stx_nano_lift_LiftNano.failure(stx_nano_Wildcard.__,stx_nano_Defect.unit());
		}).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	}
	,__class__: eu_ohmrun_fletcher_Completion
});
var eu_ohmrun_fletcher_ConvertLift = function() { };
$hxClasses["eu.ohmrun.fletcher.ConvertLift"] = eu_ohmrun_fletcher_ConvertLift;
eu_ohmrun_fletcher_ConvertLift.__name__ = "eu.ohmrun.fletcher.ConvertLift";
eu_ohmrun_fletcher_ConvertLift.toModulate = function(self) {
	var this1 = eu_ohmrun_Fletcher.Anon(function(p,cont) {
		switch(p._hx_index) {
		case 0:
			var t = p.t;
			var self1 = cont;
			return eu_ohmrun_fletcher_ReceiverLift.map(eu_ohmrun_Fletcher.forward(self,t),function(t) {
				return stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,t);
			}).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
				var this1 = self1;
				return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
					oc.handle(function(out) {
						ip.trigger(out);
					});
					var this1 = null;
					return this1;
				})));
			})));
		case 1:
			var e = p.e;
			var self2 = cont;
			var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(e),{ fileName : "eu/ohmrun/fletcher/Convert.hx", lineNumber : 62, className : "eu.ohmrun.fletcher.ConvertLift", methodName : "toModulate"}));
			var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
				trg.trigger(value);
				return trg;
			}));
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
				var this1 = self2;
				return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
					oc.handle(function(out) {
						ip.trigger(out);
					});
					var this1 = null;
					return this1;
				})));
			})));
		}
	});
	return this1;
};
eu_ohmrun_fletcher_ConvertLift.then = function(self,that) {
	var this1 = eu_ohmrun_Fletcher._.then(self,that);
	return this1;
};
eu_ohmrun_fletcher_ConvertLift.provide = function(self,i) {
	var this1 = eu_ohmrun_Fletcher.Anon(function(_,cont) {
		return self.defer(i,cont);
	});
	return this1;
};
eu_ohmrun_fletcher_ConvertLift.convert = function(self,that) {
	var this1 = eu_ohmrun_Fletcher._.then(self,that);
	return this1;
};
eu_ohmrun_fletcher_ConvertLift.first = function(self) {
	var this1 = eu_ohmrun_Fletcher._.first(self);
	return this1;
};
eu_ohmrun_fletcher_ConvertLift.flat_map = function(self,fn) {
	return eu_ohmrun_fletcher_Convert.fromFletcher(eu_ohmrun_Fletcher._.then(self,eu_ohmrun_Fletcher.Anon(function(rI,cont) {
		return fn(rI).defer(tink_core_Noise.ofAny(rI),cont);
	})));
};
var eu_ohmrun_fletcher_Convert = {};
eu_ohmrun_fletcher_Convert._new = function(self) {
	var this1 = self;
	return this1;
};
eu_ohmrun_fletcher_Convert.lift = function(self) {
	var this1 = self;
	return this1;
};
eu_ohmrun_fletcher_Convert.unit = function() {
	var fn = function(i) {
		return i;
	};
	var this1 = eu_ohmrun_Fletcher.Anon(function(p,cont) {
		var res = fn(p);
		var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,res);
		var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
			trg.trigger(value);
			return trg;
		}));
		var resI = this1;
		var self = cont;
		return resI.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	});
	return this1;
};
eu_ohmrun_fletcher_Convert.fromFun1Provide = function(self) {
	var this1 = eu_ohmrun_Fletcher.Anon(function(i,cont) {
		var self1 = cont;
		return eu_ohmrun_Fletcher.forward(self(i),null).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self1;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	});
	return this1;
};
eu_ohmrun_fletcher_Convert.fromConvertProvide = function(self) {
	var this1 = eu_ohmrun_Fletcher.Anon(function(p,cont) {
		var self1 = cont;
		return eu_ohmrun_fletcher_ReceiverLift.flat_fold(eu_ohmrun_Fletcher.forward(self,p),function(ok) {
			return eu_ohmrun_Fletcher.forward(ok,null);
		},function(er) {
			return eu_ohmrun_fletcher_Receiver.issue(stx_nano_lift_LiftNano.failure(stx_nano_Wildcard.__,er),{ fileName : "eu/ohmrun/fletcher/Receiver.hx", lineNumber : 34, className : "eu.ohmrun.fletcher._Receiver.Receiver_Impl_", methodName : "error"});
		}).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self1;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	});
	return this1;
};
eu_ohmrun_fletcher_Convert.toFletcher = function(this1) {
	return this1;
};
eu_ohmrun_fletcher_Convert.get_self = function(this1) {
	var this2 = this1;
	return this2;
};
eu_ohmrun_fletcher_Convert.Fun = function(fn) {
	var fn1 = fn;
	var this1 = eu_ohmrun_Fletcher.Anon(function(p,cont) {
		var res = fn1(p);
		var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,res);
		var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
			trg.trigger(value);
			return trg;
		}));
		var resI = this1;
		var self = cont;
		return resI.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	});
	return this1;
};
eu_ohmrun_fletcher_Convert.fromFun1R = function(fn) {
	var fn1 = fn;
	var this1 = eu_ohmrun_Fletcher.Anon(function(p,cont) {
		var res = fn1(p);
		var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,res);
		var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
			trg.trigger(value);
			return trg;
		}));
		var resI = this1;
		var self = cont;
		return resI.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	});
	return this1;
};
eu_ohmrun_fletcher_Convert.fromUnary = function(fn) {
	var fn1 = fn;
	var this1 = eu_ohmrun_Fletcher.Anon(function(p,cont) {
		var res = fn1(p);
		var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,res);
		var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
			trg.trigger(value);
			return trg;
		}));
		var resI = this1;
		var self = cont;
		return resI.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	});
	return this1;
};
eu_ohmrun_fletcher_Convert.fromFletcher = function(arw) {
	var this1 = arw;
	return this1;
};
eu_ohmrun_fletcher_Convert.environment = function(this1,i,success) {
	return eu_ohmrun_Fletcher._.environment(this1,i,success,function(e) {
		throw haxe_Exception.thrown(e);
	});
};
var eu_ohmrun_fletcher_DiffuseLift = function() { };
$hxClasses["eu.ohmrun.fletcher.DiffuseLift"] = eu_ohmrun_fletcher_DiffuseLift;
eu_ohmrun_fletcher_DiffuseLift.__name__ = "eu.ohmrun.fletcher.DiffuseLift";
eu_ohmrun_fletcher_DiffuseLift.lift = function(self) {
	var this1 = self;
	return this1;
};
eu_ohmrun_fletcher_DiffuseLift.attempt = function(self,that) {
	var this1 = eu_ohmrun_FletcherLift.then(self,eu_ohmrun_Fletcher.Anon(function(chk,cont) {
		var self = cont;
		var receiver;
		switch(chk._hx_index) {
		case 0:
			var v = chk.v;
			receiver = eu_ohmrun_Fletcher.forward(eu_ohmrun_FletcherLift.map(that,stx_nano_Res._.toChunk),v);
			break;
		case 1:
			var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_ChunkSum.Tap);
			var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
				trg.trigger(value);
				return trg;
			}));
			receiver = this1;
			break;
		case 2:
			var e = chk.err;
			var value1 = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_ChunkSum.End(e));
			var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
				trg.trigger(value1);
				return trg;
			}));
			receiver = this1;
			break;
		}
		return receiver.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	}));
	return this1;
};
eu_ohmrun_fletcher_DiffuseLift.adjust = function(self,that) {
	var this1 = eu_ohmrun_FletcherLift.then(self,eu_ohmrun_Fletcher.Anon(function(chk,cont) {
		var self = cont;
		var receiver;
		switch(chk._hx_index) {
		case 0:
			var v = chk.v;
			var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_ResLift.toChunk(that(v)));
			var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
				trg.trigger(value);
				return trg;
			}));
			receiver = this1;
			break;
		case 1:
			var value1 = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_ChunkSum.Tap);
			var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
				trg.trigger(value1);
				return trg;
			}));
			receiver = this1;
			break;
		case 2:
			var e = chk.err;
			var value2 = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_ChunkSum.End(e));
			var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
				trg.trigger(value2);
				return trg;
			}));
			receiver = this1;
			break;
		}
		return receiver.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	}));
	return this1;
};
var eu_ohmrun_fletcher_Diffuse = {};
eu_ohmrun_fletcher_Diffuse._new = function(self) {
	var this1 = self;
	return this1;
};
eu_ohmrun_fletcher_Diffuse.lift = function(self) {
	var this1 = self;
	return this1;
};
eu_ohmrun_fletcher_Diffuse.unit = function() {
	var fn = function(chk) {
		return chk;
	};
	var this1 = eu_ohmrun_Fletcher.Anon(function(p,cont) {
		var res = fn(p);
		var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,res);
		var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
			trg.trigger(value);
			return trg;
		}));
		var resI = this1;
		var self = cont;
		return resI.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	});
	return this1;
};
eu_ohmrun_fletcher_Diffuse.fromFunIOptionR = function(fn) {
	var this1 = eu_ohmrun_Fletcher.Anon(function(ipt,cont) {
		switch(ipt._hx_index) {
		case 0:
			var v = ipt.v;
			var self = fn(v);
			var r;
			switch(self._hx_index) {
			case 0:
				var t = self.v;
				r = stx_nano_ChunkSum.Val(t);
				break;
			case 1:
				r = stx_nano_ChunkSum.Tap;
				break;
			}
			var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,r);
			var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
				trg.trigger(value);
				return trg;
			}));
			return eu_ohmrun_fletcher_Receiver.reply(this1);
		case 1:
			var value1 = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_ChunkSum.Tap);
			var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
				trg.trigger(value1);
				return trg;
			}));
			return eu_ohmrun_fletcher_Receiver.reply(this1);
		case 2:
			var e = ipt.err;
			var value2 = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_ChunkSum.End(e));
			var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
				trg.trigger(value2);
				return trg;
			}));
			return eu_ohmrun_fletcher_Receiver.reply(this1);
		}
	});
	return this1;
};
eu_ohmrun_fletcher_Diffuse.fromOptionIR = function(fn) {
	var this1 = eu_ohmrun_Fletcher.Anon(function(ipt,cont) {
		switch(ipt._hx_index) {
		case 0:
			var v = ipt.v;
			var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_ChunkSum.Val(fn(haxe_ds_Option.Some(v))));
			var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
				trg.trigger(value);
				return trg;
			}));
			return eu_ohmrun_fletcher_Receiver.reply(this1);
		case 1:
			var value1 = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_ChunkSum.Val(fn(haxe_ds_Option.None)));
			var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
				trg.trigger(value1);
				return trg;
			}));
			return eu_ohmrun_fletcher_Receiver.reply(this1);
		case 2:
			var e = ipt.err;
			var value2 = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_ChunkSum.End(e));
			var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
				trg.trigger(value2);
				return trg;
			}));
			return eu_ohmrun_fletcher_Receiver.reply(this1);
		}
	});
	return this1;
};
eu_ohmrun_fletcher_Diffuse.prj = function(this1) {
	return this1;
};
eu_ohmrun_fletcher_Diffuse.get_self = function(this1) {
	var this2 = this1;
	return this2;
};
eu_ohmrun_fletcher_Diffuse.toFletcher = function(this1) {
	return eu_ohmrun_Fletcher.lift(this1);
};
var eu_ohmrun_fletcher_Execute = {};
eu_ohmrun_fletcher_Execute._new = function(self) {
	var this1 = self;
	return this1;
};
eu_ohmrun_fletcher_Execute.lift = function(self) {
	var this1 = self;
	return this1;
};
eu_ohmrun_fletcher_Execute.pure = function(e) {
	var this1 = eu_ohmrun_Fletcher.pure(stx_nano_Report.pure(e));
	return this1;
};
eu_ohmrun_fletcher_Execute.unit = function() {
	var this1 = eu_ohmrun_Fletcher.pure(stx_nano_Report.unit());
	return this1;
};
eu_ohmrun_fletcher_Execute.bind_fold = function(fn,arr) {
	var pos = { fileName : "eu/ohmrun/fletcher/Execute.hx", lineNumber : 13, className : "eu.ohmrun.fletcher._Execute.Execute_Impl_", methodName : "bind_fold"};
	var tmp = (function(t) {
		haxe_Log.trace(t,pos);
		return t;
	})(arr);
	var this1 = eu_ohmrun_Fletcher.pure(stx_nano_Report.unit());
	return stx_lift_ArrayLift.lfold(tmp,function(next,memo) {
		var this1 = eu_ohmrun_fletcher_Provide._.flat_map(eu_ohmrun_fletcher_Execute.toProvide(memo),function(report) {
			var this1 = fn(next,report);
			return this1;
		});
		return this1;
	},this1);
};
eu_ohmrun_fletcher_Execute.sequence = function(fn,arr) {
	var this1 = eu_ohmrun_Fletcher.pure(stx_nano_Report.unit());
	return stx_lift_ArrayLift.lfold(arr,function(next,memo) {
		var this1 = eu_ohmrun_fletcher_ExecuteLift.fold_mod(memo,function(report) {
			var self;
			if(report == null) {
				self = fn(next);
			} else {
				switch(report._hx_index) {
				case 0:
					var v = report.v;
					var this1 = eu_ohmrun_Fletcher.pure(stx_nano_Report.pure(v));
					self = this1;
					break;
				case 1:
					self = fn(next);
					break;
				}
			}
			return self;
		});
		return this1;
	},this1);
};
eu_ohmrun_fletcher_Execute.toProvide = function(this1) {
	return this1;
};
eu_ohmrun_fletcher_Execute.toFletcher = function(this1) {
	return this1;
};
eu_ohmrun_fletcher_Execute.fromFunXR = function(fn) {
	var self = fn;
	var fn = function(_) {
		return self();
	};
	var this1 = eu_ohmrun_Fletcher.Anon(function(p,cont) {
		var res = fn(p);
		var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,res);
		var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
			trg.trigger(value);
			return trg;
		}));
		var resI = this1;
		var self = cont;
		return resI.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	});
	return this1;
};
eu_ohmrun_fletcher_Execute.fromThunk = function(fn) {
	return eu_ohmrun_fletcher_Execute.fromFunXR(function() {
		fn();
		var f = null;
		if(f == null) {
			return stx_nano_Report.unit();
		} else {
			return stx_nano_Report.pure(f(stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "eu/ohmrun/fletcher/Execute.hx", lineNumber : 46, className : "eu.ohmrun.fletcher._Execute.Execute_Impl_", methodName : "fromThunk"})));
		}
	});
};
eu_ohmrun_fletcher_Execute.fromFunXExecute = function(fn) {
	return fn();
};
eu_ohmrun_fletcher_Execute.prj = function(this1) {
	return this1;
};
eu_ohmrun_fletcher_Execute.get_self = function(this1) {
	var this2 = this1;
	return this2;
};
eu_ohmrun_fletcher_Execute.fromOption = function(err) {
	return eu_ohmrun_fletcher_Execute.fromFunXR(function() {
		return stx_nano_Report.fromOption(err);
	});
};
eu_ohmrun_fletcher_Execute.fromRefuse = function(err) {
	return eu_ohmrun_fletcher_Execute.fromFunXR(function() {
		return stx_nano_Report.pure(err);
	});
};
eu_ohmrun_fletcher_Execute.environment = function(this1,success,failure) {
	return eu_ohmrun_Fletcher._.environment(this1,null,function(report) {
		if(report == null) {
			success();
		} else {
			switch(report._hx_index) {
			case 0:
				var v = report.v;
				failure(v);
				break;
			case 1:
				success();
				break;
			}
		}
	},function(e) {
		throw haxe_Exception.thrown(e);
	});
};
var eu_ohmrun_fletcher_ExecuteLift = function() { };
$hxClasses["eu.ohmrun.fletcher.ExecuteLift"] = eu_ohmrun_fletcher_ExecuteLift;
eu_ohmrun_fletcher_ExecuteLift.__name__ = "eu.ohmrun.fletcher.ExecuteLift";
eu_ohmrun_fletcher_ExecuteLift.errata = function(self,fn) {
	var fn1 = function(report) {
		return stx_nano_Report.errata(report,fn);
	};
	var this1 = eu_ohmrun_FletcherLift.then(self,eu_ohmrun_Fletcher.Anon(function(p,cont) {
		var res = fn1(p);
		var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,res);
		var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
			trg.trigger(value);
			return trg;
		}));
		var resI = this1;
		var self = cont;
		return resI.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	}));
	return this1;
};
eu_ohmrun_fletcher_ExecuteLift.errate = function(self,fn) {
	var fn1 = function(report) {
		return stx_nano_Report.errata(report,function(e) {
			return stx_fail_Refuse.errate(e,fn);
		});
	};
	var this1 = eu_ohmrun_FletcherLift.then(self,eu_ohmrun_Fletcher.Anon(function(p,cont) {
		var res = fn1(p);
		var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,res);
		var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
			trg.trigger(value);
			return trg;
		}));
		var resI = this1;
		var self = cont;
		return resI.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	}));
	return this1;
};
eu_ohmrun_fletcher_ExecuteLift.deliver = function(self,fn) {
	var fn1 = function(report) {
		fn(report);
		return null;
	};
	return eu_ohmrun_Fletcher._.then(eu_ohmrun_Fletcher.lift(self),eu_ohmrun_Fletcher.Anon(function(p,cont) {
		var res = fn1(p);
		var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,res);
		var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
			trg.trigger(value);
			return trg;
		}));
		var resI = this1;
		var self = cont;
		return resI.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	}));
};
eu_ohmrun_fletcher_ExecuteLift.crack = function(self) {
	return eu_ohmrun_fletcher_ExecuteLift.deliver(self,function(report) {
		if(report != null) {
			switch(report._hx_index) {
			case 0:
				var v = report.v;
				throw haxe_Exception.thrown(v);
			case 1:
				break;
			}
		}
	});
};
eu_ohmrun_fletcher_ExecuteLift.then = function(self,that) {
	var this1 = eu_ohmrun_Fletcher._.then(self,that);
	return this1;
};
eu_ohmrun_fletcher_ExecuteLift.execute = function(self,next) {
	var this1 = eu_ohmrun_Fletcher._.then(self,eu_ohmrun_Fletcher.Anon(function(ipt,cont) {
		if(ipt == null) {
			var self = cont;
			return eu_ohmrun_Fletcher.forward(next,null).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
				var this1 = self;
				return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
					oc.handle(function(out) {
						ip.trigger(out);
					});
					var this1 = null;
					return this1;
				})));
			})));
		} else {
			switch(ipt._hx_index) {
			case 0:
				var v = ipt.v;
				var self1 = cont;
				var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_Report.pure(v));
				var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
					trg.trigger(value);
					return trg;
				}));
				return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
					var this1 = self1;
					return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
						oc.handle(function(out) {
							ip.trigger(out);
						});
						var this1 = null;
						return this1;
					})));
				})));
			case 1:
				var self2 = cont;
				return eu_ohmrun_Fletcher.forward(next,null).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
					var this1 = self2;
					return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
						oc.handle(function(out) {
							ip.trigger(out);
						});
						var this1 = null;
						return this1;
					})));
				})));
			}
		}
	}));
	return this1;
};
eu_ohmrun_fletcher_ExecuteLift.produce = function(self,next) {
	var this1 = eu_ohmrun_Fletcher._.then(self,eu_ohmrun_Fletcher.Anon(function(ipt,cont) {
		if(ipt == null) {
			var self = cont;
			return eu_ohmrun_Fletcher.forward(next,null).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
				var this1 = self;
				return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
					oc.handle(function(out) {
						ip.trigger(out);
					});
					var this1 = null;
					return this1;
				})));
			})));
		} else {
			switch(ipt._hx_index) {
			case 0:
				var v = ipt.v;
				var self1 = cont;
				var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(v),{ fileName : "eu/ohmrun/fletcher/Execute.hx", lineNumber : 130, className : "eu.ohmrun.fletcher.ExecuteLift", methodName : "produce"}));
				var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
					trg.trigger(value);
					return trg;
				}));
				return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
					var this1 = self1;
					return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
						oc.handle(function(out) {
							ip.trigger(out);
						});
						var this1 = null;
						return this1;
					})));
				})));
			case 1:
				var self2 = cont;
				return eu_ohmrun_Fletcher.forward(next,null).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
					var this1 = self2;
					return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
						oc.handle(function(out) {
							ip.trigger(out);
						});
						var this1 = null;
						return this1;
					})));
				})));
			}
		}
	}));
	return this1;
};
eu_ohmrun_fletcher_ExecuteLift.propose = function(self,next) {
	var this1 = eu_ohmrun_Fletcher._.then(self,eu_ohmrun_Fletcher.Anon(function(ipt,cont) {
		if(ipt == null) {
			var self = cont;
			return eu_ohmrun_Fletcher.forward(next,null).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
				var this1 = self;
				return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
					oc.handle(function(out) {
						ip.trigger(out);
					});
					var this1 = null;
					return this1;
				})));
			})));
		} else {
			switch(ipt._hx_index) {
			case 0:
				var v = ipt.v;
				var self1 = cont;
				var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_ChunkSum.End(v));
				var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
					trg.trigger(value);
					return trg;
				}));
				return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
					var this1 = self1;
					return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
						oc.handle(function(out) {
							ip.trigger(out);
						});
						var this1 = null;
						return this1;
					})));
				})));
			case 1:
				var self2 = cont;
				return eu_ohmrun_Fletcher.forward(next,null).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
					var this1 = self2;
					return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
						oc.handle(function(out) {
							ip.trigger(out);
						});
						var this1 = null;
						return this1;
					})));
				})));
			}
		}
	}));
	return this1;
};
eu_ohmrun_fletcher_ExecuteLift.fold_mod = function(self,fn) {
	var this1 = eu_ohmrun_Fletcher.FlatMap(eu_ohmrun_Fletcher.lift(self),function(report) {
		return fn(report);
	});
	return this1;
};
eu_ohmrun_fletcher_ExecuteLift.and = function(self,that) {
	return eu_ohmrun_fletcher_ExecuteLift.execute(self,that);
};
var eu_ohmrun_fletcher_FiberLift = function() { };
$hxClasses["eu.ohmrun.fletcher.FiberLift"] = eu_ohmrun_fletcher_FiberLift;
eu_ohmrun_fletcher_FiberLift.__name__ = "eu.ohmrun.fletcher.FiberLift";
eu_ohmrun_fletcher_FiberLift.then = function(self,that) {
	var this1 = eu_ohmrun_Fletcher._.then(eu_ohmrun_fletcher_Fiber.prj(self),that);
	return this1;
};
var eu_ohmrun_fletcher_Fiber = {};
eu_ohmrun_fletcher_Fiber.lift = function(self) {
	return self;
};
eu_ohmrun_fletcher_Fiber.work = function(this1) {
	var this2 = eu_ohmrun_fletcher_core_Cont.lift(new eu_ohmrun_fletcher_core_cont_term_AnonAnon(function(fn) {
		return fn(new tink_core_FutureTrigger());
	}));
	return this1.defer(null,this2);
};
eu_ohmrun_fletcher_Fiber.cycle = function(this1) {
	var this2 = eu_ohmrun_fletcher_core_Cont.lift(new eu_ohmrun_fletcher_core_cont_term_AnonAnon(function(fn) {
		return fn(new tink_core_FutureTrigger());
	}));
	return stx_stream_Work.toCycle(this1.defer(null,this2));
};
eu_ohmrun_fletcher_Fiber.submit = function(this1) {
	var this2 = eu_ohmrun_fletcher_core_Cont.lift(new eu_ohmrun_fletcher_core_cont_term_AnonAnon(function(fn) {
		return fn(new tink_core_FutureTrigger());
	}));
	stx_stream_CycleLift.submit(stx_stream_Work.toCycle(this1.defer(null,this2)),{ fileName : "eu/ohmrun/fletcher/Fiber.hx", lineNumber : 21, className : "eu.ohmrun.fletcher._Fiber.Fiber_Impl_", methodName : "submit"});
};
eu_ohmrun_fletcher_Fiber.crunch = function(this1) {
	var this2 = eu_ohmrun_fletcher_core_Cont.lift(new eu_ohmrun_fletcher_core_cont_term_AnonAnon(function(fn) {
		return fn(new tink_core_FutureTrigger());
	}));
	stx_stream_CycleLift.crunch(stx_stream_Work.toCycle(this1.defer(null,this2)));
};
eu_ohmrun_fletcher_Fiber.fromCompletion = function(self) {
	return eu_ohmrun_Fletcher.lift(self);
};
eu_ohmrun_fletcher_Fiber.prj = function(this1) {
	return this1;
};
var eu_ohmrun_fletcher_Logging = function() { };
$hxClasses["eu.ohmrun.fletcher.Logging"] = eu_ohmrun_fletcher_Logging;
eu_ohmrun_fletcher_Logging.__name__ = "eu.ohmrun.fletcher.Logging";
eu_ohmrun_fletcher_Logging.log = function(wildcard) {
	var self = stx_pico_OptionLift.map(stx_pkg_Pkg.source(stx_PkgLift.pkg(stx_nano_Wildcard.__,{ fileName : "eu/ohmrun/fletcher/Logging.hx", lineNumber : 5, className : "eu.ohmrun.fletcher.Logging", methodName : "log"})),function(scope) {
		var this1 = stx_Log.unit();
		var tag = scope.pack.join("/");
		var this2 = this1;
		var fn = function(pos) {
			return pos.with_stamp(function(stamp) {
				return stamp.tag(tag);
			});
		};
		return function(value,pos) {
			this2(value,fn(pos));
		};
	});
	if(self._hx_index == 0) {
		var v = self.v;
		return v;
	} else {
		return stx_Log.unit();
	}
};
var eu_ohmrun_fletcher_ModulateArgSum = $hxEnums["eu.ohmrun.fletcher.ModulateArgSum"] = { __ename__:"eu.ohmrun.fletcher.ModulateArgSum",__constructs__:null
	,ModulateArgFun1Produce: ($_=function(arw) { return {_hx_index:0,arw:arw,__enum__:"eu.ohmrun.fletcher.ModulateArgSum",toString:$estr}; },$_._hx_name="ModulateArgFun1Produce",$_.__params__ = ["arw"],$_)
	,ModulateArgAttempt: ($_=function(self) { return {_hx_index:1,self:self,__enum__:"eu.ohmrun.fletcher.ModulateArgSum",toString:$estr}; },$_._hx_name="ModulateArgAttempt",$_.__params__ = ["self"],$_)
	,ModulateArgFletcher: ($_=function(arw) { return {_hx_index:2,arw:arw,__enum__:"eu.ohmrun.fletcher.ModulateArgSum",toString:$estr}; },$_._hx_name="ModulateArgFletcher",$_.__params__ = ["arw"],$_)
	,ModulateArgFunResRes0: ($_=function(fn) { return {_hx_index:3,fn:fn,__enum__:"eu.ohmrun.fletcher.ModulateArgSum",toString:$estr}; },$_._hx_name="ModulateArgFunResRes0",$_.__params__ = ["fn"],$_)
	,ModulateArgFun1Res: ($_=function(fn) { return {_hx_index:4,fn:fn,__enum__:"eu.ohmrun.fletcher.ModulateArgSum",toString:$estr}; },$_._hx_name="ModulateArgFun1Res",$_.__params__ = ["fn"],$_)
	,ModulateArgFun1R: ($_=function(fn) { return {_hx_index:5,fn:fn,__enum__:"eu.ohmrun.fletcher.ModulateArgSum",toString:$estr}; },$_._hx_name="ModulateArgFun1R",$_.__params__ = ["fn"],$_)
	,ModulateArgRes: ($_=function(ocR) { return {_hx_index:6,ocR:ocR,__enum__:"eu.ohmrun.fletcher.ModulateArgSum",toString:$estr}; },$_._hx_name="ModulateArgRes",$_.__params__ = ["ocR"],$_)
	,ModulateArgPure: ($_=function(o) { return {_hx_index:7,o:o,__enum__:"eu.ohmrun.fletcher.ModulateArgSum",toString:$estr}; },$_._hx_name="ModulateArgPure",$_.__params__ = ["o"],$_)
};
eu_ohmrun_fletcher_ModulateArgSum.__constructs__ = [eu_ohmrun_fletcher_ModulateArgSum.ModulateArgFun1Produce,eu_ohmrun_fletcher_ModulateArgSum.ModulateArgAttempt,eu_ohmrun_fletcher_ModulateArgSum.ModulateArgFletcher,eu_ohmrun_fletcher_ModulateArgSum.ModulateArgFunResRes0,eu_ohmrun_fletcher_ModulateArgSum.ModulateArgFun1Res,eu_ohmrun_fletcher_ModulateArgSum.ModulateArgFun1R,eu_ohmrun_fletcher_ModulateArgSum.ModulateArgRes,eu_ohmrun_fletcher_ModulateArgSum.ModulateArgPure];
var eu_ohmrun_fletcher_ModulateArg = {};
eu_ohmrun_fletcher_ModulateArg._new = function(self) {
	var this1 = self;
	return this1;
};
eu_ohmrun_fletcher_ModulateArg.lift = function(self) {
	return eu_ohmrun_fletcher_ModulateArg._new(self);
};
eu_ohmrun_fletcher_ModulateArg.prj = function(this1) {
	return this1;
};
eu_ohmrun_fletcher_ModulateArg.get_self = function(this1) {
	return eu_ohmrun_fletcher_ModulateArg.lift(this1);
};
eu_ohmrun_fletcher_ModulateArg.fromModulateArgFun1Produce = function(self) {
	return eu_ohmrun_fletcher_ModulateArg.lift(eu_ohmrun_fletcher_ModulateArgSum.ModulateArgFun1Produce(self));
};
eu_ohmrun_fletcher_ModulateArg.fromModulateArgAttempt = function(self) {
	return eu_ohmrun_fletcher_ModulateArg.lift(eu_ohmrun_fletcher_ModulateArgSum.ModulateArgAttempt(self));
};
eu_ohmrun_fletcher_ModulateArg.fromModulateArgFletcher = function(self) {
	return eu_ohmrun_fletcher_ModulateArg.lift(eu_ohmrun_fletcher_ModulateArgSum.ModulateArgFletcher(self));
};
eu_ohmrun_fletcher_ModulateArg.fromModulateArgFunResRes0 = function(self) {
	return eu_ohmrun_fletcher_ModulateArg.lift(eu_ohmrun_fletcher_ModulateArgSum.ModulateArgFunResRes0(self));
};
eu_ohmrun_fletcher_ModulateArg.fromModulateArgFun1Res = function(self) {
	return eu_ohmrun_fletcher_ModulateArg.lift(eu_ohmrun_fletcher_ModulateArgSum.ModulateArgFun1Res(self));
};
eu_ohmrun_fletcher_ModulateArg.fromModulateArgFun1R = function(self) {
	return eu_ohmrun_fletcher_ModulateArg.lift(eu_ohmrun_fletcher_ModulateArgSum.ModulateArgFun1R(self));
};
eu_ohmrun_fletcher_ModulateArg.fromModulateArgRes = function(self) {
	return eu_ohmrun_fletcher_ModulateArg.lift(eu_ohmrun_fletcher_ModulateArgSum.ModulateArgRes(self));
};
eu_ohmrun_fletcher_ModulateArg.fromModulateArgPure = function(o) {
	return eu_ohmrun_fletcher_ModulateArg.lift(eu_ohmrun_fletcher_ModulateArgSum.ModulateArgPure(o));
};
eu_ohmrun_fletcher_ModulateArg.toModulate = function(this1) {
	switch(this1._hx_index) {
	case 0:
		var arw = this1.arw;
		return eu_ohmrun_fletcher_Modulate.fromFun1Produce(arw);
	case 1:
		var self = this1.self;
		return eu_ohmrun_fletcher_Modulate.fromAttempt(self);
	case 2:
		var arw = this1.arw;
		return eu_ohmrun_fletcher_Modulate.fromFletcher(arw);
	case 3:
		var fn = this1.fn;
		return eu_ohmrun_fletcher_Modulate.fromFunResRes0(fn);
	case 4:
		var fn = this1.fn;
		var fn1 = fn;
		var fn = function(ocI) {
			switch(ocI._hx_index) {
			case 0:
				var t = ocI.t;
				return fn1(t);
			case 1:
				var e = ocI.e;
				return stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(e),{ fileName : "eu/ohmrun/fletcher/Modulate.hx", lineNumber : 93, className : "eu.ohmrun.fletcher._Modulate.Modulate_Impl_", methodName : "fromFun1Res"});
			}
		};
		var this2 = eu_ohmrun_Fletcher.Anon(function(p,cont) {
			var res = fn(p);
			var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,res);
			var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
				trg.trigger(value);
				return trg;
			}));
			var resI = this1;
			var self = cont;
			return resI.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
				var this1 = self;
				return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
					oc.handle(function(out) {
						ip.trigger(out);
					});
					var this1 = null;
					return this1;
				})));
			})));
		});
		return this2;
	case 5:
		var fn2 = this1.fn;
		return eu_ohmrun_fletcher_Modulate.fromFun1R(fn2);
	case 6:
		var ocR = this1.ocR;
		return eu_ohmrun_fletcher_Modulate.fromRes(ocR);
	case 7:
		var o = this1.o;
		return eu_ohmrun_fletcher_Modulate.pure(o);
	}
};
var eu_ohmrun_fletcher_ModulateApi = function() { };
$hxClasses["eu.ohmrun.fletcher.ModulateApi"] = eu_ohmrun_fletcher_ModulateApi;
eu_ohmrun_fletcher_ModulateApi.__name__ = "eu.ohmrun.fletcher.ModulateApi";
eu_ohmrun_fletcher_ModulateApi.__isInterface__ = true;
eu_ohmrun_fletcher_ModulateApi.__interfaces__ = [eu_ohmrun_FletcherApi];
var eu_ohmrun_fletcher_ModulateLift = function() { };
$hxClasses["eu.ohmrun.fletcher.ModulateLift"] = eu_ohmrun_fletcher_ModulateLift;
eu_ohmrun_fletcher_ModulateLift.__name__ = "eu.ohmrun.fletcher.ModulateLift";
eu_ohmrun_fletcher_ModulateLift.lift = function(self) {
	var this1 = self;
	return this1;
};
eu_ohmrun_fletcher_ModulateLift.or = function(self,that) {
	return eu_ohmrun_fletcher_ModulateLift.lift(eu_ohmrun_Fletcher.Anon(function(ipt,cont) {
		switch(ipt._hx_index) {
		case 0:
			var t = ipt.t;
			var self1 = cont;
			return stx_pico_EitherLift.fold(t,function(lhs) {
				return eu_ohmrun_Fletcher.forward(self,stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,lhs));
			},function(rhs) {
				return eu_ohmrun_Fletcher.forward(that,stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,rhs));
			}).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
				var this1 = self1;
				return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
					oc.handle(function(out) {
						ip.trigger(out);
					});
					var this1 = null;
					return this1;
				})));
			})));
		case 1:
			var e = ipt.e;
			var self2 = cont;
			var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(e),{ fileName : "eu/ohmrun/fletcher/Modulate.hx", lineNumber : 191, className : "eu.ohmrun.fletcher.ModulateLift", methodName : "or"}));
			var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
				trg.trigger(value);
				return trg;
			}));
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
				var this1 = self2;
				return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
					oc.handle(function(out) {
						ip.trigger(out);
					});
					var this1 = null;
					return this1;
				})));
			})));
		}
	}));
};
eu_ohmrun_fletcher_ModulateLift.errata = function(self,fn) {
	return eu_ohmrun_fletcher_ModulateLift.lift(eu_ohmrun_Fletcher.Anon(function(i,cont) {
		switch(i._hx_index) {
		case 0:
			var t = i.t;
			var self1 = cont;
			return eu_ohmrun_Fletcher.forward(eu_ohmrun_Fletcher._.map(self,function(o) {
				var self;
				switch(o._hx_index) {
				case 0:
					var t = o.t;
					self = stx_nano_Res.accept(t);
					break;
				case 1:
					var e = o.e;
					self = stx_nano_Res.reject(fn(e));
					break;
				}
				var this1 = self;
				return this1;
			}),stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,t)).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
				var this1 = self1;
				return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
					oc.handle(function(out) {
						ip.trigger(out);
					});
					var this1 = null;
					return this1;
				})));
			})));
		case 1:
			var e = i.e;
			var self2 = cont;
			var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(e),{ fileName : "eu/ohmrun/fletcher/Modulate.hx", lineNumber : 207, className : "eu.ohmrun.fletcher.ModulateLift", methodName : "errata"}));
			var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
				trg.trigger(value);
				return trg;
			}));
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
				var this1 = self2;
				return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
					oc.handle(function(out) {
						ip.trigger(out);
					});
					var this1 = null;
					return this1;
				})));
			})));
		}
	}));
};
eu_ohmrun_fletcher_ModulateLift.errate = function(self,fn) {
	return eu_ohmrun_fletcher_ModulateLift.errata(self,function(e) {
		return stx_fail_Refuse.errate(e,fn);
	});
};
eu_ohmrun_fletcher_ModulateLift.reframe = function(self) {
	return eu_ohmrun_fletcher_Reframe.fromModulate(eu_ohmrun_fletcher_ModulateLift.lift(eu_ohmrun_Fletcher.Anon(function(p,cont) {
		var self1 = cont;
		return eu_ohmrun_fletcher_ReceiverLift.fold_mapp(eu_ohmrun_Fletcher.forward(self,p),function(ok) {
			var receiver;
			switch(ok._hx_index) {
			case 0:
				var _g = ok.t;
				switch(p._hx_index) {
				case 0:
					var tt = p.t;
					var t = _g;
					receiver = stx_nano_ResSum.Accept(stx_nano_Couple.make(t,tt));
					break;
				case 1:
					var e = p.e;
					receiver = stx_nano_ResSum.Reject(e);
					break;
				}
				break;
			case 1:
				var _g = ok.e;
				if(p._hx_index == 1) {
					var ee = p.e;
					var e = _g;
					receiver = stx_nano_ResSum.Reject(stx_fail_Refuse.concat(e,ee));
				} else {
					var e = _g;
					receiver = stx_nano_ResSum.Reject(e);
				}
				break;
			}
			return stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,receiver);
		},function(e) {
			return stx_nano_lift_LiftNano.failure(stx_nano_Wildcard.__,e);
		}).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self1;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	})));
};
eu_ohmrun_fletcher_ModulateLift.modulate = function(self,that) {
	return eu_ohmrun_fletcher_ModulateLift.lift(eu_ohmrun_Fletcher._.then(self,eu_ohmrun_fletcher_Modulate.toFletcher(that)));
};
eu_ohmrun_fletcher_ModulateLift.attempt = function(self,that) {
	return eu_ohmrun_fletcher_ModulateLift.modulate(self,eu_ohmrun_fletcher_Attempt.toModulate(that));
};
eu_ohmrun_fletcher_ModulateLift.convert = function(self,that) {
	return eu_ohmrun_fletcher_ModulateLift.modulate(self,eu_ohmrun_fletcher_ConvertLift.toModulate(that));
};
eu_ohmrun_fletcher_ModulateLift.map = function(self,fn) {
	var fn1 = fn;
	var this1 = eu_ohmrun_Fletcher.Anon(function(p,cont) {
		var res = fn1(p);
		var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,res);
		var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
			trg.trigger(value);
			return trg;
		}));
		var resI = this1;
		var self = cont;
		return resI.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	});
	return eu_ohmrun_fletcher_ModulateLift.convert(self,this1);
};
eu_ohmrun_fletcher_ModulateLift.mapi = function(self,fn) {
	var fn1 = fn;
	return eu_ohmrun_fletcher_ModulateLift.lift(eu_ohmrun_FletcherLift.then(eu_ohmrun_fletcher_Modulate.fromFletcher(eu_ohmrun_Fletcher.Anon(function(p,cont) {
		var res = fn1(p);
		var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,res);
		var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
			trg.trigger(value);
			return trg;
		}));
		var resI = this1;
		var self = cont;
		return resI.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	})),self));
};
eu_ohmrun_fletcher_ModulateLift.environment = function(self,i,success,failure) {
	return eu_ohmrun_Fletcher._.environment(self,stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,i),function(res) {
		switch(res._hx_index) {
		case 0:
			var t = res.t;
			success(t);
			break;
		case 1:
			var e = res.e;
			failure(e);
			break;
		}
	},function(err) {
		throw haxe_Exception.thrown(err);
	});
};
eu_ohmrun_fletcher_ModulateLift.produce = function(self,i) {
	var this1 = eu_ohmrun_Fletcher.Anon(function(_,cont) {
		var self1 = cont;
		return eu_ohmrun_Fletcher.forward(self,i).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self1;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	});
	return this1;
};
eu_ohmrun_fletcher_ModulateLift.reclaim = function(self,that) {
	var tmp = eu_ohmrun_fletcher_ModulateLift.modulate(self,eu_ohmrun_fletcher_ConvertLift.toModulate(that));
	var this1 = eu_ohmrun_Fletcher.Anon(function(prd,cont) {
		var self = cont;
		return eu_ohmrun_Fletcher.forward(prd,null).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	});
	return eu_ohmrun_fletcher_ModulateLift.lift(eu_ohmrun_fletcher_ModulateLift.attempt(tmp,this1));
};
eu_ohmrun_fletcher_ModulateLift.arrange = function(self,then) {
	return eu_ohmrun_fletcher_ModulateLift.lift(eu_ohmrun_Fletcher.Anon(function(i,cont) {
		var self1 = cont;
		return eu_ohmrun_fletcher_ReceiverLift.flat_fold(eu_ohmrun_Fletcher.forward(self,i),function(res) {
			var then1 = then;
			var receiver;
			switch(res._hx_index) {
			case 0:
				var _g = res.t;
				switch(i._hx_index) {
				case 0:
					var tt = i.t;
					var t = _g;
					receiver = stx_nano_ResSum.Accept(stx_nano_Couple.make(t,tt));
					break;
				case 1:
					var e = i.e;
					receiver = stx_nano_ResSum.Reject(e);
					break;
				}
				break;
			case 1:
				var _g = res.e;
				if(i._hx_index == 1) {
					var ee = i.e;
					var e = _g;
					receiver = stx_nano_ResSum.Reject(stx_fail_Refuse.concat(e,ee));
				} else {
					var e = _g;
					receiver = stx_nano_ResSum.Reject(e);
				}
				break;
			}
			return eu_ohmrun_Fletcher.forward(then1,receiver);
		},function(e) {
			var value = stx_nano_lift_LiftNano.failure(stx_nano_Wildcard.__,e);
			var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
				trg.trigger(value);
				return trg;
			}));
			return this1;
		}).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self1;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	}));
};
eu_ohmrun_fletcher_ModulateLift.split = function(self,that) {
	return eu_ohmrun_fletcher_ModulateLift.lift(eu_ohmrun_FletcherLift.map(eu_ohmrun_Fletcher._.split(self,that),stx_nano_lift_LiftNano.decouple(stx_nano_Wildcard.__,stx_nano_Res._.zip)));
};
eu_ohmrun_fletcher_ModulateLift.broach = function(self) {
	var fn = function(tp) {
		return stx_nano_CoupleLift.decouple(tp,function(lhs,rhs) {
			switch(lhs._hx_index) {
			case 0:
				var _g = lhs.t;
				switch(rhs._hx_index) {
				case 0:
					var tt = rhs.t;
					var t = _g;
					return stx_nano_ResSum.Accept(stx_nano_Couple.make(t,tt));
				case 1:
					var e = rhs.e;
					return stx_nano_ResSum.Reject(e);
				}
				break;
			case 1:
				var _g = lhs.e;
				if(rhs._hx_index == 1) {
					var ee = rhs.e;
					var e = _g;
					return stx_nano_ResSum.Reject(stx_fail_Refuse.concat(e,ee));
				} else {
					var e = _g;
					return stx_nano_ResSum.Reject(e);
				}
				break;
			}
		});
	};
	return eu_ohmrun_fletcher_ModulateLift.lift(eu_ohmrun_FletcherLift.then(eu_ohmrun_Fletcher._.broach(self),eu_ohmrun_Fletcher.Anon(function(p,cont) {
		var res = fn(p);
		var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,res);
		var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
			trg.trigger(value);
			return trg;
		}));
		var resI = this1;
		var self = cont;
		return resI.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	})));
};
eu_ohmrun_fletcher_ModulateLift.flat_map = function(self,fn) {
	return eu_ohmrun_fletcher_ModulateLift.lift(eu_ohmrun_Fletcher.FlatMap(self,function(res) {
		var tmp;
		switch(res._hx_index) {
		case 0:
			var t = res.t;
			tmp = fn(t);
			break;
		case 1:
			var e = res.e;
			tmp = eu_ohmrun_fletcher_Modulate.fromRes(stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(e),{ fileName : "eu/ohmrun/fletcher/Modulate.hx", lineNumber : 296, className : "eu.ohmrun.fletcher.ModulateLift", methodName : "flat_map"}));
			break;
		}
		return eu_ohmrun_fletcher_Modulate.toFletcher(tmp);
	}));
};
eu_ohmrun_fletcher_ModulateLift.command = function(self,that) {
	var this1 = eu_ohmrun_Fletcher._.then(self,eu_ohmrun_Fletcher.Anon(function(ipt,cont) {
		switch(ipt._hx_index) {
		case 0:
			var t = ipt.t;
			var self = cont;
			return eu_ohmrun_Fletcher.forward(eu_ohmrun_fletcher_CommandLift.produce(that,eu_ohmrun_fletcher_Produce.pure(t)),t).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
				var this1 = self;
				return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
					oc.handle(function(out) {
						ip.trigger(out);
					});
					var this1 = null;
					return this1;
				})));
			})));
		case 1:
			var e = ipt.e;
			var self1 = cont;
			var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(e),{ fileName : "eu/ohmrun/fletcher/Modulate.hx", lineNumber : 307, className : "eu.ohmrun.fletcher.ModulateLift", methodName : "command"}));
			var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
				trg.trigger(value);
				return trg;
			}));
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
				var this1 = self1;
				return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
					oc.handle(function(out) {
						ip.trigger(out);
					});
					var this1 = null;
					return this1;
				})));
			})));
		}
	}));
	return this1;
};
eu_ohmrun_fletcher_ModulateLift.adjust = function(self,fn) {
	return eu_ohmrun_fletcher_ModulateLift.lift(eu_ohmrun_Fletcher._.map(self,function(res) {
		var self;
		switch(res._hx_index) {
		case 0:
			var t = res.t;
			self = fn(t);
			break;
		case 1:
			var e = res.e;
			self = stx_nano_ResSum.Reject(e);
			break;
		}
		var this1 = self;
		return this1;
	}));
};
var eu_ohmrun_fletcher_Modulate = {};
eu_ohmrun_fletcher_Modulate._new = function(self) {
	var this1 = self;
	return this1;
};
eu_ohmrun_fletcher_Modulate.fromApi = function(self) {
	var this1 = self;
	return this1;
};
eu_ohmrun_fletcher_Modulate.lift = function(self) {
	var this1 = self;
	return this1;
};
eu_ohmrun_fletcher_Modulate.bump = function(self) {
	return eu_ohmrun_fletcher_ModulateArg.toModulate(self);
};
eu_ohmrun_fletcher_Modulate.unit = function() {
	var fn = function(oc) {
		return oc;
	};
	var this1 = eu_ohmrun_Fletcher.Anon(function(p,cont) {
		var res = fn(p);
		var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,res);
		var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
			trg.trigger(value);
			return trg;
		}));
		var resI = this1;
		var self = cont;
		return resI.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	});
	return this1;
};
eu_ohmrun_fletcher_Modulate.pure = function(o) {
	return eu_ohmrun_fletcher_Modulate.fromRes(stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,o));
};
eu_ohmrun_fletcher_Modulate.Fun = function(fn) {
	return eu_ohmrun_fletcher_Modulate.fromFun1R(fn);
};
eu_ohmrun_fletcher_Modulate.fromFun1Res = function(fn) {
	var fn1 = function(ocI) {
		switch(ocI._hx_index) {
		case 0:
			var t = ocI.t;
			return fn(t);
		case 1:
			var e = ocI.e;
			return stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(e),{ fileName : "eu/ohmrun/fletcher/Modulate.hx", lineNumber : 93, className : "eu.ohmrun.fletcher._Modulate.Modulate_Impl_", methodName : "fromFun1Res"});
		}
	};
	var this1 = eu_ohmrun_Fletcher.Anon(function(p,cont) {
		var res = fn1(p);
		var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,res);
		var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
			trg.trigger(value);
			return trg;
		}));
		var resI = this1;
		var self = cont;
		return resI.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	});
	return this1;
};
eu_ohmrun_fletcher_Modulate.fromFun1R = function(fn) {
	var fn1 = function(ocI) {
		switch(ocI._hx_index) {
		case 0:
			var t = ocI.t;
			return stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,fn(t));
		case 1:
			var e = ocI.e;
			return stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(e),{ fileName : "eu/ohmrun/fletcher/Modulate.hx", lineNumber : 96, className : "eu.ohmrun.fletcher._Modulate.Modulate_Impl_", methodName : "fromFun1R"});
		}
	};
	var this1 = eu_ohmrun_Fletcher.Anon(function(p,cont) {
		var res = fn1(p);
		var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,res);
		var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
			trg.trigger(value);
			return trg;
		}));
		var resI = this1;
		var self = cont;
		return resI.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	});
	return this1;
};
eu_ohmrun_fletcher_Modulate.fromRes = function(ocO) {
	var fn = function(ocI) {
		switch(ocI._hx_index) {
		case 0:
			var t = ocI.t;
			return ocO;
		case 1:
			var e = ocI.e;
			return stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(e),{ fileName : "eu/ohmrun/fletcher/Modulate.hx", lineNumber : 99, className : "eu.ohmrun.fletcher._Modulate.Modulate_Impl_", methodName : "fromRes"});
		}
	};
	var this1 = eu_ohmrun_Fletcher.Anon(function(p,cont) {
		var res = fn(p);
		var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,res);
		var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
			trg.trigger(value);
			return trg;
		}));
		var resI = this1;
		var self = cont;
		return resI.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	});
	return this1;
};
eu_ohmrun_fletcher_Modulate.fromFunResRes0 = function(fn) {
	var fn1 = function(res) {
		switch(res._hx_index) {
		case 0:
			var t = res.t;
			return fn(stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,t));
		case 1:
			var e = res.e;
			return stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(e),{ fileName : "eu/ohmrun/fletcher/Modulate.hx", lineNumber : 105, className : "eu.ohmrun.fletcher._Modulate.Modulate_Impl_", methodName : "fromFunResRes0"});
		}
	};
	var this1 = eu_ohmrun_Fletcher.Anon(function(p,cont) {
		var res = fn1(p);
		var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,res);
		var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
			trg.trigger(value);
			return trg;
		}));
		var resI = this1;
		var self = cont;
		return resI.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	});
	return this1;
};
eu_ohmrun_fletcher_Modulate.fromFunResRes = function(fn) {
	var fn1 = function(res) {
		switch(res._hx_index) {
		case 0:
			var t = res.t;
			return fn(stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,t));
		case 1:
			var e = res.e;
			return stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(e),{ fileName : "eu/ohmrun/fletcher/Modulate.hx", lineNumber : 113, className : "eu.ohmrun.fletcher._Modulate.Modulate_Impl_", methodName : "fromFunResRes"});
		}
	};
	var this1 = eu_ohmrun_Fletcher.Anon(function(p,cont) {
		var res = fn1(p);
		var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,res);
		var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
			trg.trigger(value);
			return trg;
		}));
		var resI = this1;
		var self = cont;
		return resI.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	});
	return this1;
};
eu_ohmrun_fletcher_Modulate.fromFletcher = function(self) {
	var this1 = eu_ohmrun_Fletcher.Anon(function(p,cont) {
		var self1 = cont;
		var receiver;
		switch(p._hx_index) {
		case 0:
			var t = p.t;
			receiver = eu_ohmrun_fletcher_ReceiverLift.fold_mapp(eu_ohmrun_Fletcher.forward(self,t),function(ok) {
				return stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,ok));
			},function(no) {
				return stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_nano_Defect.toRefuse(no)),{ fileName : "eu/ohmrun/fletcher/Modulate.hx", lineNumber : 123, className : "eu.ohmrun.fletcher._Modulate.Modulate_Impl_", methodName : "fromFletcher"}));
			});
			break;
		case 1:
			var e = p.e;
			receiver = eu_ohmrun_fletcher_Receiver.issue(stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(e),{ fileName : "eu/ohmrun/fletcher/Modulate.hx", lineNumber : 125, className : "eu.ohmrun.fletcher._Modulate.Modulate_Impl_", methodName : "fromFletcher"})),{ fileName : "eu/ohmrun/fletcher/Receiver.hx", lineNumber : 31, className : "eu.ohmrun.fletcher._Receiver.Receiver_Impl_", methodName : "value"});
			break;
		}
		return receiver.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self1;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	});
	return this1;
};
eu_ohmrun_fletcher_Modulate.fromAttempt = function(self) {
	var this1 = eu_ohmrun_Fletcher.Anon(function(p,cont) {
		switch(p._hx_index) {
		case 0:
			var t = p.t;
			var self1 = cont;
			return eu_ohmrun_Fletcher.forward(self,t).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
				var this1 = self1;
				return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
					oc.handle(function(out) {
						ip.trigger(out);
					});
					var this1 = null;
					return this1;
				})));
			})));
		case 1:
			var e = p.e;
			var self2 = cont;
			var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(e),{ fileName : "eu/ohmrun/fletcher/Modulate.hx", lineNumber : 135, className : "eu.ohmrun.fletcher._Modulate.Modulate_Impl_", methodName : "fromAttempt"}));
			var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
				trg.trigger(value);
				return trg;
			}));
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
				var this1 = self2;
				return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
					oc.handle(function(out) {
						ip.trigger(out);
					});
					var this1 = null;
					return this1;
				})));
			})));
		}
	});
	return this1;
};
eu_ohmrun_fletcher_Modulate.fromFun1Produce = function(arw) {
	var this1 = eu_ohmrun_Fletcher.Anon(function(i,cont) {
		switch(i._hx_index) {
		case 0:
			var t = i.t;
			var self = cont;
			return eu_ohmrun_Fletcher.forward(arw(t),null).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
				var this1 = self;
				return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
					oc.handle(function(out) {
						ip.trigger(out);
					});
					var this1 = null;
					return this1;
				})));
			})));
		case 1:
			var e = i.e;
			var self1 = cont;
			var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(e),{ fileName : "eu/ohmrun/fletcher/Modulate.hx", lineNumber : 146, className : "eu.ohmrun.fletcher._Modulate.Modulate_Impl_", methodName : "fromFun1Produce"}));
			var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
				trg.trigger(value);
				return trg;
			}));
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
				var this1 = self1;
				return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
					oc.handle(function(out) {
						ip.trigger(out);
					});
					var this1 = null;
					return this1;
				})));
			})));
		}
	});
	return this1;
};
eu_ohmrun_fletcher_Modulate.toFletcher = function(this1) {
	return this1;
};
eu_ohmrun_fletcher_Modulate.environment = function(this1,i,success,failure) {
	var success1 = success;
	var failure1 = failure;
	return eu_ohmrun_Fletcher._.environment(this1,stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,i),function(res) {
		switch(res._hx_index) {
		case 0:
			var t = res.t;
			success1(t);
			break;
		case 1:
			var e = res.e;
			failure1(e);
			break;
		}
	},function(err) {
		throw haxe_Exception.thrown(err);
	});
};
eu_ohmrun_fletcher_Modulate.split = function(this1,that) {
	return eu_ohmrun_fletcher_Modulate._.split(this1,that);
};
eu_ohmrun_fletcher_Modulate.mapi = function(this1,fn) {
	return eu_ohmrun_fletcher_Modulate._.mapi(this1,fn);
};
eu_ohmrun_fletcher_Modulate.convert = function(this1,that) {
	return eu_ohmrun_fletcher_Modulate._.convert(this1,that);
};
eu_ohmrun_fletcher_Modulate.broach = function(this1) {
	return eu_ohmrun_fletcher_Modulate._.broach(this1);
};
eu_ohmrun_fletcher_Modulate.flat_map = function(this1,fn) {
	return eu_ohmrun_fletcher_Modulate._.flat_map(this1,fn);
};
eu_ohmrun_fletcher_Modulate.prj = function(this1) {
	return this1;
};
var eu_ohmrun_fletcher_Perform = {};
eu_ohmrun_fletcher_Perform._new = function(self) {
	var this1 = self;
	return this1;
};
eu_ohmrun_fletcher_Perform.lift = function(self) {
	var this1 = self;
	return this1;
};
eu_ohmrun_fletcher_Perform.toFletcher = function(this1) {
	return this1;
};
eu_ohmrun_fletcher_Perform.toModulate = function(this1) {
	var this2 = eu_ohmrun_Fletcher.Anon(function(_,cont) {
		var self = cont;
		return eu_ohmrun_Fletcher.forward(eu_ohmrun_Fletcher._.map(this1,function(_) {
			return stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,_);
		}),null).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	});
	return this2;
};
eu_ohmrun_fletcher_Perform.prj = function(this1) {
	return this1;
};
eu_ohmrun_fletcher_Perform.get_self = function(this1) {
	var this2 = this1;
	return this2;
};
var eu_ohmrun_fletcher_ProduceArgSum = $hxEnums["eu.ohmrun.fletcher.ProduceArgSum"] = { __ename__:"eu.ohmrun.fletcher.ProduceArgSum",__constructs__:null
	,ProduceArgPure: ($_=function(o) { return {_hx_index:0,o:o,__enum__:"eu.ohmrun.fletcher.ProduceArgSum",toString:$estr}; },$_._hx_name="ProduceArgPure",$_.__params__ = ["o"],$_)
	,ProduceArgSync: ($_=function(res) { return {_hx_index:1,res:res,__enum__:"eu.ohmrun.fletcher.ProduceArgSum",toString:$estr}; },$_._hx_name="ProduceArgSync",$_.__params__ = ["res"],$_)
	,ProduceArgThunk: ($_=function(fn) { return {_hx_index:2,fn:fn,__enum__:"eu.ohmrun.fletcher.ProduceArgSum",toString:$estr}; },$_._hx_name="ProduceArgThunk",$_.__params__ = ["fn"],$_)
	,ProduceArgRefuse: ($_=function(Refuse) { return {_hx_index:3,Refuse:Refuse,__enum__:"eu.ohmrun.fletcher.ProduceArgSum",toString:$estr}; },$_._hx_name="ProduceArgRefuse",$_.__params__ = ["Refuse"],$_)
	,ProduceArgPledge: ($_=function(pledge) { return {_hx_index:4,pledge:pledge,__enum__:"eu.ohmrun.fletcher.ProduceArgSum",toString:$estr}; },$_._hx_name="ProduceArgPledge",$_.__params__ = ["pledge"],$_)
	,ProduceArgFunXProduce: ($_=function(fn) { return {_hx_index:5,fn:fn,__enum__:"eu.ohmrun.fletcher.ProduceArgSum",toString:$estr}; },$_._hx_name="ProduceArgFunXProduce",$_.__params__ = ["fn"],$_)
	,ProduceArgFletcher: ($_=function(fletcher) { return {_hx_index:6,fletcher:fletcher,__enum__:"eu.ohmrun.fletcher.ProduceArgSum",toString:$estr}; },$_._hx_name="ProduceArgFletcher",$_.__params__ = ["fletcher"],$_)
};
eu_ohmrun_fletcher_ProduceArgSum.__constructs__ = [eu_ohmrun_fletcher_ProduceArgSum.ProduceArgPure,eu_ohmrun_fletcher_ProduceArgSum.ProduceArgSync,eu_ohmrun_fletcher_ProduceArgSum.ProduceArgThunk,eu_ohmrun_fletcher_ProduceArgSum.ProduceArgRefuse,eu_ohmrun_fletcher_ProduceArgSum.ProduceArgPledge,eu_ohmrun_fletcher_ProduceArgSum.ProduceArgFunXProduce,eu_ohmrun_fletcher_ProduceArgSum.ProduceArgFletcher];
var eu_ohmrun_fletcher_ProduceArg = {};
eu_ohmrun_fletcher_ProduceArg._new = function(self) {
	var this1 = self;
	return this1;
};
eu_ohmrun_fletcher_ProduceArg.lift = function(self) {
	return eu_ohmrun_fletcher_ProduceArg._new(self);
};
eu_ohmrun_fletcher_ProduceArg.prj = function(this1) {
	return this1;
};
eu_ohmrun_fletcher_ProduceArg.get_self = function(this1) {
	return eu_ohmrun_fletcher_ProduceArg.lift(this1);
};
eu_ohmrun_fletcher_ProduceArg.fromFunXProduce = function(fn) {
	return eu_ohmrun_fletcher_ProduceArgSum.ProduceArgFunXProduce(fn);
};
eu_ohmrun_fletcher_ProduceArg.fromFletcher = function(fletcher) {
	return eu_ohmrun_fletcher_ProduceArgSum.ProduceArgFletcher(fletcher);
};
eu_ohmrun_fletcher_ProduceArg.fromPledge = function(pledge) {
	return eu_ohmrun_fletcher_ProduceArgSum.ProduceArgPledge(pledge);
};
eu_ohmrun_fletcher_ProduceArg.fromFuture = function(self) {
	return eu_ohmrun_fletcher_ProduceArgSum.ProduceArgPledge(stx_nano_Pledge.lift(tink_core_Future.map(self,function(t) {
		return stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,t);
	})));
};
eu_ohmrun_fletcher_ProduceArg.fromRefuse = function(Refuse) {
	return eu_ohmrun_fletcher_ProduceArgSum.ProduceArgRefuse(Refuse);
};
eu_ohmrun_fletcher_ProduceArg.fromThunk = function(fn) {
	return eu_ohmrun_fletcher_ProduceArgSum.ProduceArgThunk(fn);
};
eu_ohmrun_fletcher_ProduceArg.fromSync = function(res) {
	return eu_ohmrun_fletcher_ProduceArgSum.ProduceArgSync(res);
};
eu_ohmrun_fletcher_ProduceArg.fromPure = function(o) {
	return eu_ohmrun_fletcher_ProduceArgSum.ProduceArgPure(o);
};
var eu_ohmrun_fletcher_ProduceLift = function() { };
$hxClasses["eu.ohmrun.fletcher.ProduceLift"] = eu_ohmrun_fletcher_ProduceLift;
eu_ohmrun_fletcher_ProduceLift.__name__ = "eu.ohmrun.fletcher.ProduceLift";
eu_ohmrun_fletcher_ProduceLift.environment = function(self,success,failure) {
	return eu_ohmrun_Fletcher._.environment(self,null,function(res) {
		switch(res._hx_index) {
		case 0:
			var t = res.t;
			success(t);
			break;
		case 1:
			var e = res.e;
			failure(e);
			break;
		}
	},function(e) {
		throw haxe_Exception.thrown(e);
	});
};
eu_ohmrun_fletcher_ProduceLift.lift = function(self) {
	var this1 = self;
	return this1;
};
eu_ohmrun_fletcher_ProduceLift.map = function(self,fn) {
	var fn1 = function(oc) {
		var fn1 = fn;
		var self;
		switch(oc._hx_index) {
		case 0:
			var t = oc.t;
			self = stx_nano_ResSum.Accept(fn1(t));
			break;
		case 1:
			var e = oc.e;
			self = stx_nano_ResSum.Reject(e);
			break;
		}
		var this1 = self;
		return this1;
	};
	return eu_ohmrun_fletcher_ProduceLift.lift(eu_ohmrun_fletcher_ProduceLift.then(self,eu_ohmrun_Fletcher.Anon(function(p,cont) {
		var res = fn1(p);
		var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,res);
		var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
			trg.trigger(value);
			return trg;
		}));
		var resI = this1;
		var self = cont;
		return resI.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	})));
};
eu_ohmrun_fletcher_ProduceLift.errata = function(self,fn) {
	var fn1 = function(oc) {
		var self;
		switch(oc._hx_index) {
		case 0:
			var t = oc.t;
			self = stx_nano_Res.accept(t);
			break;
		case 1:
			var e = oc.e;
			self = stx_nano_Res.reject(fn(e));
			break;
		}
		var this1 = self;
		return this1;
	};
	return eu_ohmrun_fletcher_ProduceLift.lift(eu_ohmrun_FletcherLift.then(self,eu_ohmrun_Fletcher.Anon(function(p,cont) {
		var res = fn1(p);
		var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,res);
		var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
			trg.trigger(value);
			return trg;
		}));
		var resI = this1;
		var self = cont;
		return resI.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	})));
};
eu_ohmrun_fletcher_ProduceLift.errate = function(self,fn) {
	return eu_ohmrun_fletcher_ProduceLift.errata(self,function(er) {
		return stx_fail_Refuse.errate(er,fn);
	});
};
eu_ohmrun_fletcher_ProduceLift.point = function(self,success) {
	var this1 = eu_ohmrun_Fletcher.Anon(function(_,cont) {
		var self1 = cont;
		return eu_ohmrun_fletcher_ReceiverLift.flat_fold(eu_ohmrun_Fletcher.forward(self,null),function(res) {
			var receiver;
			switch(res._hx_index) {
			case 0:
				var t = res.t;
				receiver = eu_ohmrun_Fletcher.forward(success(t),null);
				break;
			case 1:
				var e = res.e;
				var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_Report.pure(e));
				var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
					trg.trigger(value);
					return trg;
				}));
				receiver = this1;
				break;
			}
			return receiver;
		},function(err) {
			var value = stx_nano_lift_LiftNano.failure(stx_nano_Wildcard.__,err);
			var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
				trg.trigger(value);
				return trg;
			}));
			return this1;
		}).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self1;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	});
	return this1;
};
eu_ohmrun_fletcher_ProduceLift.provide = function(self) {
	var this1 = eu_ohmrun_Fletcher._.map(self,function(res) {
		switch(res._hx_index) {
		case 0:
			var t = res.t;
			return t;
		case 1:
			var e = res.e;
			throw haxe_Exception.thrown(e);
		}
	});
	return this1;
};
eu_ohmrun_fletcher_ProduceLift.convert = function(self,then) {
	return eu_ohmrun_fletcher_ProduceLift.lift(eu_ohmrun_Fletcher._.then(self,eu_ohmrun_fletcher_Modulate.toFletcher(eu_ohmrun_fletcher_Convert._.toModulate(then))));
};
eu_ohmrun_fletcher_ProduceLift.recover = function(self,rec) {
	var this1 = eu_ohmrun_FletcherLift.then(self,eu_ohmrun_fletcher_Recover.toReform(rec));
	return this1;
};
eu_ohmrun_fletcher_ProduceLift.attempt = function(self,that) {
	return eu_ohmrun_fletcher_ProduceLift.lift(eu_ohmrun_FletcherLift.then(self,eu_ohmrun_fletcher_Modulate.toFletcher(eu_ohmrun_fletcher_Attempt.toModulate(that))));
};
eu_ohmrun_fletcher_ProduceLift.deliver = function(self,fn) {
	var fn1 = function(res) {
		var fn1;
		switch(res._hx_index) {
		case 0:
			var t = res.t;
			fn(t);
			fn1 = stx_nano_Report.unit();
			break;
		case 1:
			var e = res.e;
			fn1 = stx_nano_Report.pure(e);
			break;
		}
		return fn1;
	};
	var this1 = eu_ohmrun_FletcherLift.then(self,eu_ohmrun_Fletcher.Anon(function(p,cont) {
		var res = fn1(p);
		var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,res);
		var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
			trg.trigger(value);
			return trg;
		}));
		var resI = this1;
		var self = cont;
		return resI.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	}));
	return this1;
};
eu_ohmrun_fletcher_ProduceLift.reclaim = function(self,next) {
	var tmp = eu_ohmrun_fletcher_ProduceLift.lift(eu_ohmrun_FletcherLift.then(self,eu_ohmrun_fletcher_Modulate.toFletcher(eu_ohmrun_fletcher_ConvertLift.toModulate(next))));
	var this1 = eu_ohmrun_Fletcher.Anon(function(prd,cont) {
		var self = cont;
		return eu_ohmrun_Fletcher.forward(prd,null).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	});
	return eu_ohmrun_fletcher_ProduceLift.attempt(tmp,this1);
};
eu_ohmrun_fletcher_ProduceLift.arrange = function(self,next) {
	var this1 = eu_ohmrun_Fletcher.Anon(function(i,cont) {
		var self1 = cont;
		return eu_ohmrun_fletcher_ReceiverLift.flat_fold(eu_ohmrun_Fletcher.forward(self,null),function(res) {
			var next1 = next;
			var _g = function(tI,tII) {
				return stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,tI,tII);
			};
			var tII = i;
			var fn = function(tI) {
				return _g(tI,tII);
			};
			var self;
			switch(res._hx_index) {
			case 0:
				var t = res.t;
				self = stx_nano_ResSum.Accept(fn(t));
				break;
			case 1:
				var e = res.e;
				self = stx_nano_ResSum.Reject(e);
				break;
			}
			var this1 = self;
			return eu_ohmrun_Fletcher.forward(next1,this1);
		},function(err) {
			var value = stx_nano_lift_LiftNano.failure(stx_nano_Wildcard.__,err);
			var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
				trg.trigger(value);
				return trg;
			}));
			return this1;
		}).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self1;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	});
	return this1;
};
eu_ohmrun_fletcher_ProduceLift.rearrange = function(self,next) {
	var this1 = eu_ohmrun_Fletcher.Anon(function(i,cont) {
		var self1 = cont;
		return eu_ohmrun_fletcher_ReceiverLift.flat_fold(eu_ohmrun_Fletcher.forward(self,null),function(res) {
			return eu_ohmrun_Fletcher.forward(next,stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,res,i)));
		},function(no) {
			var value = stx_nano_lift_LiftNano.failure(stx_nano_Wildcard.__,no);
			var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
				trg.trigger(value);
				return trg;
			}));
			return this1;
		}).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self1;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	});
	return this1;
};
eu_ohmrun_fletcher_ProduceLift.modulate = function(self,that) {
	return eu_ohmrun_fletcher_ProduceLift.lift(eu_ohmrun_FletcherLift.then(self,eu_ohmrun_fletcher_Modulate.toFletcher(that)));
};
eu_ohmrun_fletcher_ProduceLift.fudge = function(self) {
	var self1 = eu_ohmrun_Fletcher._.fudge(self,null);
	switch(self1._hx_index) {
	case 0:
		var t = self1.t;
		return t;
	case 1:
		var e = self1.e;
		throw haxe_Exception.thrown(e);
	}
};
eu_ohmrun_fletcher_ProduceLift.force = function(self) {
	var self1 = eu_ohmrun_Fletcher._.force(self,null);
	switch(self1._hx_index) {
	case 0:
		var t = self1.t;
		return t;
	case 1:
		var e = self1.e;
		throw haxe_Exception.thrown(e);
	}
};
eu_ohmrun_fletcher_ProduceLift.flat_map = function(self,that) {
	return eu_ohmrun_fletcher_ProduceLift.lift(eu_ohmrun_Fletcher.FlatMap(self,function(res) {
		var this1;
		switch(res._hx_index) {
		case 0:
			var t = res.t;
			this1 = that(t);
			break;
		case 1:
			var e = res.e;
			this1 = eu_ohmrun_fletcher_Produce.fromRes(stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(e),{ fileName : "eu/ohmrun/fletcher/Produce.hx", lineNumber : 333, className : "eu.ohmrun.fletcher.ProduceLift", methodName : "flat_map"}));
			break;
		}
		return this1;
	}));
};
eu_ohmrun_fletcher_ProduceLift.fold_flat_map = function(self,that) {
	return eu_ohmrun_fletcher_ProduceLift.lift(eu_ohmrun_Fletcher.FlatMap(self,function(res) {
		return eu_ohmrun_fletcher_Produce.prj(that(res));
	}));
};
eu_ohmrun_fletcher_ProduceLift.then = function(self,that) {
	var this1 = eu_ohmrun_Fletcher._.then(self,that);
	return this1;
};
eu_ohmrun_fletcher_ProduceLift.split = function(self,that) {
	var tmp = eu_ohmrun_Fletcher._.split(self,that);
	var fn = stx_nano_lift_LiftNano.decouple(stx_nano_Wildcard.__,function(l,r) {
		switch(l._hx_index) {
		case 0:
			var _g = l.t;
			switch(r._hx_index) {
			case 0:
				var tt = r.t;
				var t = _g;
				return stx_nano_ResSum.Accept(stx_nano_Couple.make(t,tt));
			case 1:
				var e = r.e;
				return stx_nano_ResSum.Reject(e);
			}
			break;
		case 1:
			var _g = l.e;
			if(r._hx_index == 1) {
				var ee = r.e;
				var e = _g;
				return stx_nano_ResSum.Reject(stx_fail_Refuse.concat(e,ee));
			} else {
				var e = _g;
				return stx_nano_ResSum.Reject(e);
			}
			break;
		}
	});
	return eu_ohmrun_fletcher_ProduceLift.lift(eu_ohmrun_FletcherLift.then(tmp,eu_ohmrun_Fletcher.Anon(function(p,cont) {
		var res = fn(p);
		var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,res);
		var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
			trg.trigger(value);
			return trg;
		}));
		var resI = this1;
		var self = cont;
		return resI.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	})));
};
eu_ohmrun_fletcher_ProduceLift.adjust = function(self,fn) {
	var fn1 = function(res) {
		var self;
		switch(res._hx_index) {
		case 0:
			var t = res.t;
			self = fn(t);
			break;
		case 1:
			var e = res.e;
			self = stx_nano_ResSum.Reject(e);
			break;
		}
		var this1 = self;
		return this1;
	};
	return eu_ohmrun_fletcher_ProduceLift.lift(eu_ohmrun_Fletcher._.then(self,eu_ohmrun_Fletcher.Anon(function(p,cont) {
		var res = fn1(p);
		var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,res);
		var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
			trg.trigger(value);
			return trg;
		}));
		var resI = this1;
		var self = cont;
		return resI.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	})));
};
eu_ohmrun_fletcher_ProduceLift.pledge = function(self) {
	return stx_nano_Pledge.lift(tink_core_Future.map(eu_ohmrun_Fletcher._.future(self,null),function(outcome) {
		switch(outcome._hx_index) {
		case 0:
			var t = outcome.t;
			return t;
		case 1:
			var e = outcome.e;
			return stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_nano_Defect.toRefuse(stx_nano_Defect.elide(e))),{ fileName : "eu/ohmrun/fletcher/Produce.hx", lineNumber : 367, className : "eu.ohmrun.fletcher.ProduceLift", methodName : "pledge"});
		}
	}));
};
eu_ohmrun_fletcher_ProduceLift.toModulate = function(self) {
	var this1 = eu_ohmrun_Fletcher.Anon(function(p,cont) {
		var self1 = cont;
		return eu_ohmrun_Fletcher.forward(self,null).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self1;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	});
	return this1;
};
eu_ohmrun_fletcher_ProduceLift.zip = function(self,that) {
	return eu_ohmrun_fletcher_ProduceLift.lift(eu_ohmrun_FletcherLift.map(eu_ohmrun_Fletcher._.pinch(self,that),stx_nano_lift_LiftNano.decouple(stx_nano_Wildcard.__,function(lhs,rhs) {
		switch(lhs._hx_index) {
		case 0:
			var _g = lhs.t;
			switch(rhs._hx_index) {
			case 0:
				var tt = rhs.t;
				var t = _g;
				return stx_nano_ResSum.Accept(stx_nano_Couple.make(t,tt));
			case 1:
				var e = rhs.e;
				return stx_nano_ResSum.Reject(e);
			}
			break;
		case 1:
			var _g = lhs.e;
			if(rhs._hx_index == 1) {
				var ee = rhs.e;
				var e = _g;
				return stx_nano_ResSum.Reject(stx_fail_Refuse.concat(e,ee));
			} else {
				var e = _g;
				return stx_nano_ResSum.Reject(e);
			}
			break;
		}
	})));
};
eu_ohmrun_fletcher_ProduceLift.command = function(self,cmd) {
	var this1 = eu_ohmrun_Fletcher._.then(self,eu_ohmrun_Fletcher.Anon(function(res,cont) {
		switch(res._hx_index) {
		case 0:
			var t = res.t;
			return cmd.defer(t,cont);
		case 1:
			var e = res.e;
			var self = cont;
			var _ = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "eu/ohmrun/fletcher/Produce.hx", lineNumber : 395, className : "eu.ohmrun.fletcher.ProduceLift", methodName : "command"});
			var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_Report.pure(e));
			var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
				trg.trigger(value);
				return trg;
			}));
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
				var this1 = self;
				return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
					oc.handle(function(out) {
						ip.trigger(out);
					});
					var this1 = null;
					return this1;
				})));
			})));
		}
	}));
	return this1;
};
var eu_ohmrun_fletcher_Produce = {};
eu_ohmrun_fletcher_Produce._new = function(self) {
	var this1 = self;
	return this1;
};
eu_ohmrun_fletcher_Produce.lift = function(self) {
	var this1 = self;
	return this1;
};
eu_ohmrun_fletcher_Produce.bump = function(self) {
	switch(self._hx_index) {
	case 0:
		var o = self.o;
		return eu_ohmrun_fletcher_Produce.pure(o);
	case 1:
		var res = self.res;
		return eu_ohmrun_fletcher_Produce.Sync(res);
	case 2:
		var fn = self.fn;
		return eu_ohmrun_fletcher_Produce.Thunk(fn);
	case 3:
		var refuse = self.Refuse;
		return eu_ohmrun_fletcher_Produce.fromRefuse(refuse);
	case 4:
		var pledge = self.pledge;
		return eu_ohmrun_fletcher_Produce.fromPledge(pledge);
	case 5:
		var fn = self.fn;
		return eu_ohmrun_fletcher_Produce.fromFunXProduce(fn);
	case 6:
		var fletcher = self.fletcher;
		return eu_ohmrun_fletcher_Produce.fromFletcher(fletcher);
	}
};
eu_ohmrun_fletcher_Produce.Sync = function(result) {
	var this1 = eu_ohmrun_Fletcher.Anon(function(_,cont) {
		var self = cont;
		var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,result);
		var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
			trg.trigger(value);
			return trg;
		}));
		return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	});
	return this1;
};
eu_ohmrun_fletcher_Produce.Thunk = function(result) {
	var this1 = eu_ohmrun_Fletcher.Anon(function(_,cont) {
		var self = cont;
		var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,result());
		var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
			trg.trigger(value);
			return trg;
		}));
		return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	});
	return this1;
};
eu_ohmrun_fletcher_Produce.fromFunXProduce = function(self) {
	var this1 = eu_ohmrun_Fletcher.Anon(function(_,cont) {
		var self1 = cont;
		return eu_ohmrun_Fletcher.forward(self(),null).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self1;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	});
	return this1;
};
eu_ohmrun_fletcher_Produce.fromRefuse = function(e) {
	return eu_ohmrun_fletcher_Produce.Sync(stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(e),{ fileName : "eu/ohmrun/fletcher/Produce.hx", lineNumber : 82, className : "eu.ohmrun.fletcher._Produce.Produce_Impl_", methodName : "fromRefuse"}));
};
eu_ohmrun_fletcher_Produce.pure = function(v) {
	return eu_ohmrun_fletcher_Produce.Sync(stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,v));
};
eu_ohmrun_fletcher_Produce.accept = function(v) {
	return eu_ohmrun_fletcher_Produce.Sync(stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,v));
};
eu_ohmrun_fletcher_Produce.reject = function(e) {
	return eu_ohmrun_fletcher_Produce.Sync(stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(e),{ fileName : "eu/ohmrun/fletcher/Produce.hx", lineNumber : 91, className : "eu.ohmrun.fletcher._Produce.Produce_Impl_", methodName : "reject"}));
};
eu_ohmrun_fletcher_Produce.fromRes = function(res) {
	return eu_ohmrun_fletcher_Produce.Sync(res);
};
eu_ohmrun_fletcher_Produce.fromFunXRes = function(fn) {
	return eu_ohmrun_fletcher_Produce.Thunk(fn);
};
eu_ohmrun_fletcher_Produce.fromPledge = function(pl) {
	var this1 = eu_ohmrun_Fletcher.Anon(function(_,cont) {
		var self = cont;
		var self1 = cont;
		var ft = stx_nano_PledgeLift.fold(pl,function(x) {
			return stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,x));
		},function(e) {
			return stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(e),{ fileName : "eu/ohmrun/fletcher/Produce.hx", lineNumber : 107, className : "eu.ohmrun.fletcher._Produce.Produce_Impl_", methodName : "fromPledge"}));
		});
		var this1 = eu_ohmrun_fletcher_core_Cont.lift(new eu_ohmrun_fletcher_core_cont_term_Anon(function(r_ipt) {
			var next = new tink_core_FutureTrigger();
			var fst = self1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(t_ipt) {
				ft.handle(function(res) {
					t_ipt.trigger(res);
					next.trigger(res);
				});
				var this1 = null;
				return this1;
			})));
			var snd = r_ipt.apply(next);
			return stx_stream_WorkLift.seq(fst,snd);
		}));
		return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	});
	return this1;
};
eu_ohmrun_fletcher_Produce.fromFunXR = function(fn) {
	var fn1 = function(_) {
		return stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,fn());
	};
	var this1 = eu_ohmrun_Fletcher.Anon(function(p,cont) {
		var res = fn1(p);
		var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,res);
		var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
			trg.trigger(value);
			return trg;
		}));
		var resI = this1;
		var self = cont;
		return resI.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	});
	return this1;
};
eu_ohmrun_fletcher_Produce.fromFletcher = function(arw) {
	var this1 = eu_ohmrun_Fletcher.Anon(function(_,cont) {
		var self = cont;
		return eu_ohmrun_fletcher_ReceiverLift.fold_mapp(eu_ohmrun_Fletcher.forward(arw,null),function(ok) {
			return stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,ok));
		},function(no) {
			return stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_nano_Defect.toRefuse(no)),{ fileName : "eu/ohmrun/fletcher/Produce.hx", lineNumber : 127, className : "eu.ohmrun.fletcher._Produce.Produce_Impl_", methodName : "fromFletcher"}));
		}).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	});
	return this1;
};
eu_ohmrun_fletcher_Produce.bind_fold = function(data,fn,r) {
	return stx_nano_IterLift.lfold(data,function(next,memo) {
		return eu_ohmrun_fletcher_Produce.flat_map(memo,function(r) {
			return fn(next,r);
		});
	},eu_ohmrun_fletcher_Produce.pure(r));
};
eu_ohmrun_fletcher_Produce.parallel = function(data,fn,r) {
	var this1 = eu_ohmrun_Fletcher.Anon(function(_,cont) {
		var memo = r;
		var fail = null;
		var cell = stx_nano_Cell.make(function() {
			if(fail == null) {
				return stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,memo);
			} else {
				return stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(fail),{ fileName : "eu/ohmrun/fletcher/Produce.hx", lineNumber : 148, className : "eu.ohmrun.fletcher._Produce.Produce_Impl_", methodName : "parallel"});
			}
		});
		var this1 = null;
		var work = this1;
		var count = 0;
		var done = false;
		var trigger = new tink_core_FutureTrigger();
		var p = $getIterator(data);
		while(p.hasNext()) {
			var p1 = p.next();
			count += 1;
			var this1 = fn(p1,cell);
			var success = [(function() {
				return function(ok) {
					if(!done) {
						memo = ok;
						count -= 1;
						if(count == 0) {
							done = true;
							trigger.trigger(stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,memo)));
						}
					}
				};
			})()];
			var this2 = eu_ohmrun_Fletcher._.environment(this1,null,(function(failure,success) {
				return function(res) {
					switch(res._hx_index) {
					case 0:
						var t = res.t;
						success[0](t);
						break;
					case 1:
						var e = res.e;
						failure[0](e);
						break;
					}
				};
			})([(function() {
				return function(no) {
					fail = no;
					done = true;
					trigger.trigger(stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(no),{ fileName : "eu/ohmrun/fletcher/Produce.hx", lineNumber : 172, className : "eu.ohmrun.fletcher._Produce.Produce_Impl_", methodName : "parallel"})));
				};
			})()],success),(function() {
				return function(e) {
					throw haxe_Exception.thrown(e);
				};
			})());
			var this3 = eu_ohmrun_fletcher_core_Cont.lift(new eu_ohmrun_fletcher_core_cont_term_AnonAnon((function() {
				return function(fn) {
					return fn(new tink_core_FutureTrigger());
				};
			})()));
			work = stx_stream_WorkLift.par(work,this2.defer(null,this3));
		}
		var self = cont;
		var self1 = cont;
		var ft = trigger;
		var this1 = eu_ohmrun_fletcher_core_Cont.lift(new eu_ohmrun_fletcher_core_cont_term_Anon(function(r_ipt) {
			var next = new tink_core_FutureTrigger();
			var fst = self1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(t_ipt) {
				ft.handle(function(res) {
					t_ipt.trigger(res);
					next.trigger(res);
				});
				var this1 = null;
				return this1;
			})));
			var snd = r_ipt.apply(next);
			return stx_stream_WorkLift.seq(fst,snd);
		}));
		return stx_stream_WorkLift.par(work,this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		}))));
	});
	return this1;
};
eu_ohmrun_fletcher_Produce.fromProvide = function(self) {
	var this1 = eu_ohmrun_Fletcher.Anon(function(_,cont) {
		var self1 = cont;
		return eu_ohmrun_Fletcher.forward(self,null).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self1;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	});
	return this1;
};
eu_ohmrun_fletcher_Produce.environment = function(this1,success,failure) {
	var success1 = success;
	var failure1 = failure;
	return eu_ohmrun_Fletcher._.environment(this1,null,function(res) {
		switch(res._hx_index) {
		case 0:
			var t = res.t;
			success1(t);
			break;
		case 1:
			var e = res.e;
			failure1(e);
			break;
		}
	},function(e) {
		throw haxe_Exception.thrown(e);
	});
};
eu_ohmrun_fletcher_Produce.toFletcher = function(this1) {
	return this1;
};
eu_ohmrun_fletcher_Produce.toPropose = function(this1) {
	var this2 = eu_ohmrun_Fletcher._.map(this1,function(res) {
		var self;
		switch(res._hx_index) {
		case 0:
			var t = res.t;
			self = stx_nano_ChunkSum.Val(t);
			break;
		case 1:
			var e = res.e;
			self = stx_nano_ChunkSum.End(e);
			break;
		}
		return self;
	});
	return this2;
};
eu_ohmrun_fletcher_Produce.get_self = function(this1) {
	return this1;
};
eu_ohmrun_fletcher_Produce.prj = function(this1) {
	return this1;
};
eu_ohmrun_fletcher_Produce.fudge = function(this1) {
	var self = eu_ohmrun_Fletcher._.fudge(this1,null);
	switch(self._hx_index) {
	case 0:
		var t = self.t;
		return t;
	case 1:
		var e = self.e;
		throw haxe_Exception.thrown(e);
	}
};
eu_ohmrun_fletcher_Produce.flat_map = function(this1,fn) {
	return eu_ohmrun_fletcher_Produce._.flat_map(this1,fn);
};
var eu_ohmrun_fletcher_Progress = function(explain,closure,product,failure) {
	this.explain = explain;
	this.closure = closure;
	this.product = product;
	this.failure = failure;
};
$hxClasses["eu.ohmrun.fletcher.Progress"] = eu_ohmrun_fletcher_Progress;
eu_ohmrun_fletcher_Progress.__name__ = "eu.ohmrun.fletcher.Progress";
eu_ohmrun_fletcher_Progress.prototype = {
	explain: null
	,closure: null
	,product: null
	,failure: null
	,__class__: eu_ohmrun_fletcher_Progress
};
var eu_ohmrun_fletcher_ProposeLift = function() { };
$hxClasses["eu.ohmrun.fletcher.ProposeLift"] = eu_ohmrun_fletcher_ProposeLift;
eu_ohmrun_fletcher_ProposeLift.__name__ = "eu.ohmrun.fletcher.ProposeLift";
eu_ohmrun_fletcher_ProposeLift.flat_map = function(self,fn) {
	var this1 = self;
	var this2 = eu_ohmrun_Fletcher.FlatMap(this1,function(chunk) {
		switch(chunk._hx_index) {
		case 0:
			var v = chunk.v;
			return fn(v);
		case 1:
			return eu_ohmrun_fletcher_Propose.fromChunk(stx_nano_ChunkSum.Tap);
		case 2:
			var e = chunk.err;
			return eu_ohmrun_fletcher_Propose.fromChunk(stx_nano_ChunkSum.End(e));
		}
	});
	return this2;
};
eu_ohmrun_fletcher_ProposeLift.convert = function(self,next) {
	var this1 = eu_ohmrun_Fletcher._.then(self,eu_ohmrun_Fletcher.Anon(function(ipt,cont) {
		switch(ipt._hx_index) {
		case 0:
			var v = ipt.v;
			var self = cont;
			return eu_ohmrun_Fletcher.forward(eu_ohmrun_FletcherLift.map(next,stx_nano_ChunkSum.Val),v).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
				var this1 = self;
				return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
					oc.handle(function(out) {
						ip.trigger(out);
					});
					var this1 = null;
					return this1;
				})));
			})));
		case 1:
			var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_ChunkSum.Tap);
			var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
				trg.trigger(value);
				return trg;
			}));
			return eu_ohmrun_fletcher_Receiver.reply(this1);
		case 2:
			var e = ipt.err;
			var value1 = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_ChunkSum.End(e));
			var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
				trg.trigger(value1);
				return trg;
			}));
			return eu_ohmrun_fletcher_Receiver.reply(this1);
		}
	}));
	return this1;
};
eu_ohmrun_fletcher_ProposeLift.attempt = function(self,next) {
	var this1 = eu_ohmrun_Fletcher._.then(self,eu_ohmrun_Fletcher.Anon(function(ipt,cont) {
		switch(ipt._hx_index) {
		case 0:
			var v = ipt.v;
			var self = cont;
			return eu_ohmrun_Fletcher.forward(eu_ohmrun_FletcherLift.map(next,function(res) {
				return stx_nano_ResLift.toChunk(res);
			}),v).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
				var this1 = self;
				return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
					oc.handle(function(out) {
						ip.trigger(out);
					});
					var this1 = null;
					return this1;
				})));
			})));
		case 1:
			var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_ChunkSum.Tap);
			var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
				trg.trigger(value);
				return trg;
			}));
			return eu_ohmrun_fletcher_Receiver.reply(this1);
		case 2:
			var e = ipt.err;
			var value1 = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_ChunkSum.End(e));
			var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
				trg.trigger(value1);
				return trg;
			}));
			return eu_ohmrun_fletcher_Receiver.reply(this1);
		}
	}));
	return this1;
};
eu_ohmrun_fletcher_ProposeLift.diffuse = function(self,next) {
	var this1 = eu_ohmrun_Fletcher._.then(self,eu_ohmrun_Fletcher.lift(next));
	return this1;
};
eu_ohmrun_fletcher_ProposeLift.or = function(self,or) {
	var this1 = eu_ohmrun_Fletcher._.then(self,eu_ohmrun_Fletcher.Anon(function(ipt,cont) {
		switch(ipt._hx_index) {
		case 0:
			var v = ipt.v;
			var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_ChunkSum.Val(v));
			var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
				trg.trigger(value);
				return trg;
			}));
			return eu_ohmrun_fletcher_Receiver.reply(this1);
		case 1:
			var self = cont;
			return eu_ohmrun_Fletcher.forward(or(),null).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
				var this1 = self;
				return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
					oc.handle(function(out) {
						ip.trigger(out);
					});
					var this1 = null;
					return this1;
				})));
			})));
		case 2:
			var e = ipt.err;
			var value1 = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_ChunkSum.End(e));
			var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
				trg.trigger(value1);
				return trg;
			}));
			return eu_ohmrun_fletcher_Receiver.reply(this1);
		}
	}));
	return this1;
};
eu_ohmrun_fletcher_ProposeLift.toProduce = function(self) {
	var val = function(o) {
		return stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,haxe_ds_Option.Some(o));
	};
	var ers = function(e) {
		return stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(e),{ fileName : "eu/ohmrun/fletcher/Propose.hx", lineNumber : 127, className : "eu.ohmrun.fletcher.ProposeLift", methodName : "toProduce"});
	};
	var tap = function() {
		return stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,haxe_ds_Option.None);
	};
	var self1 = function(chk) {
		var self;
		switch(chk._hx_index) {
		case 0:
			var v = chk.v;
			self = val(v);
			break;
		case 1:
			self = tap();
			break;
		case 2:
			var e = chk.err;
			self = ers(e);
			break;
		}
		return self;
	};
	var this1 = eu_ohmrun_FletcherLift.map(eu_ohmrun_Fletcher.lift(self),self1);
	return this1;
};
eu_ohmrun_fletcher_ProposeLift.materialise = function(self) {
	var this1 = eu_ohmrun_Fletcher._.map(eu_ohmrun_Fletcher.lift(self),function(ipt) {
		var self;
		switch(ipt._hx_index) {
		case 0:
			var v = ipt.v;
			self = stx_nano_ChunkSum.Val(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,v));
			break;
		case 1:
			self = stx_nano_ChunkSum.Val(haxe_ds_Option.None);
			break;
		case 2:
			var e = ipt.err;
			self = stx_nano_ChunkSum.End(e);
			break;
		}
		return self;
	});
	return this1;
};
eu_ohmrun_fletcher_ProposeLift.and = function(self,that) {
	var this1 = eu_ohmrun_Fletcher._.then(eu_ohmrun_Fletcher.lift(self),eu_ohmrun_Fletcher.Anon(function(ipt,cont) {
		switch(ipt._hx_index) {
		case 0:
			var v = ipt.v;
			var self = cont;
			var _g = function(tI,tII) {
				return stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,tI,tII);
			};
			var tI = v;
			var receiver = function(tII) {
				return _g(tI,tII);
			};
			return eu_ohmrun_Fletcher.forward(eu_ohmrun_fletcher_ProposeLift.map(that,receiver),null).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
				var this1 = self;
				return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
					oc.handle(function(out) {
						ip.trigger(out);
					});
					var this1 = null;
					return this1;
				})));
			})));
		case 1:
			var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_ChunkSum.Tap);
			var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
				trg.trigger(value);
				return trg;
			}));
			return eu_ohmrun_fletcher_Receiver.reply(this1);
		case 2:
			var e = ipt.err;
			var value1 = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_ChunkSum.End(e));
			var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
				trg.trigger(value1);
				return trg;
			}));
			return eu_ohmrun_fletcher_Receiver.reply(this1);
		}
	}));
	return this1;
};
eu_ohmrun_fletcher_ProposeLift.command = function(self,that) {
	var this1 = eu_ohmrun_Fletcher._.then(self,eu_ohmrun_Fletcher.Anon(function(ipt,cont) {
		switch(ipt._hx_index) {
		case 0:
			var v = ipt.v;
			var self = cont;
			return eu_ohmrun_Fletcher.forward(that,v).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
				var this1 = self;
				return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
					oc.handle(function(out) {
						ip.trigger(out);
					});
					var this1 = null;
					return this1;
				})));
			})));
		case 1:
			var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_Report.unit());
			var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
				trg.trigger(value);
				return trg;
			}));
			return eu_ohmrun_fletcher_Receiver.reply(this1);
		case 2:
			var e = ipt.err;
			var value1 = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_Report.pure(e));
			var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
				trg.trigger(value1);
				return trg;
			}));
			return eu_ohmrun_fletcher_Receiver.reply(this1);
		}
	}));
	return this1;
};
eu_ohmrun_fletcher_ProposeLift.before = function(self,fn) {
	var self1 = function(_) {
		fn();
	};
	var fn1 = function(p) {
		self1(p);
		return p;
	};
	var this1 = eu_ohmrun_Fletcher._.then(eu_ohmrun_Fletcher.Anon(function(p,cont) {
		var res = fn1(p);
		var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,res);
		var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
			trg.trigger(value);
			return trg;
		}));
		var resI = this1;
		var self = cont;
		return resI.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	}),self);
	return this1;
};
eu_ohmrun_fletcher_ProposeLift.after = function(self,fn) {
	var self1 = fn;
	var fn = function(p) {
		self1(p);
		return p;
	};
	var this1 = eu_ohmrun_Fletcher._.then(self,eu_ohmrun_Fletcher.Anon(function(p,cont) {
		var res = fn(p);
		var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,res);
		var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
			trg.trigger(value);
			return trg;
		}));
		var resI = this1;
		var self = cont;
		return resI.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	}));
	return this1;
};
eu_ohmrun_fletcher_ProposeLift.environment = function(self,success,failure) {
	return eu_ohmrun_Fletcher._.environment(eu_ohmrun_Fletcher.lift(self),null,function(chunk) {
		switch(chunk._hx_index) {
		case 0:
			var v = chunk.v;
			success(haxe_ds_Option.Some(v));
			break;
		case 1:
			success(haxe_ds_Option.None);
			break;
		case 2:
			var e = chunk.err;
			failure(e);
			break;
		}
	},function(e) {
		throw haxe_Exception.thrown(e);
	});
};
eu_ohmrun_fletcher_ProposeLift.map = function(self,then) {
	var val = stx_fn_UnaryLift.then(then,stx_nano_ChunkSum.Val);
	var ers = stx_nano_ChunkSum.End;
	var tap = function() {
		return stx_nano_ChunkSum.Tap;
	};
	var fn = function(chk) {
		var fn;
		switch(chk._hx_index) {
		case 0:
			var v = chk.v;
			fn = val(v);
			break;
		case 1:
			fn = tap();
			break;
		case 2:
			var e = chk.err;
			fn = ers(e);
			break;
		}
		return fn;
	};
	var this1 = eu_ohmrun_Fletcher._.then(self,eu_ohmrun_Fletcher.Anon(function(p,cont) {
		var res = fn(p);
		var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,res);
		var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
			trg.trigger(value);
			return trg;
		}));
		var resI = this1;
		var self = cont;
		return resI.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	}));
	return this1;
};
var eu_ohmrun_fletcher_Propose = {};
eu_ohmrun_fletcher_Propose._new = function(self) {
	var this1 = self;
	return this1;
};
eu_ohmrun_fletcher_Propose.lift = function(self) {
	var this1 = self;
	return this1;
};
eu_ohmrun_fletcher_Propose.fromChunk = function(chunk) {
	var this1 = eu_ohmrun_Fletcher.pure(chunk);
	return this1;
};
eu_ohmrun_fletcher_Propose.fromOption = function(self) {
	var self1;
	switch(self._hx_index) {
	case 0:
		var t = self.v;
		self1 = stx_nano_ChunkSum.Val(t);
		break;
	case 1:
		self1 = stx_nano_ChunkSum.Tap;
		break;
	}
	var this1 = eu_ohmrun_Fletcher.pure(self1);
	return this1;
};
eu_ohmrun_fletcher_Propose.make = function(o) {
	return eu_ohmrun_fletcher_Propose.fromChunk(stx_nano_lift_LiftNano.chunk(stx_nano_Wildcard.__,o));
};
eu_ohmrun_fletcher_Propose.pure = function(o) {
	return eu_ohmrun_fletcher_Propose.fromChunk(stx_nano_ChunkSum.Val(o));
};
eu_ohmrun_fletcher_Propose.fromRefuse = function(e) {
	return eu_ohmrun_fletcher_Propose.fromChunk(stx_nano_ChunkSum.End(e));
};
eu_ohmrun_fletcher_Propose.unit = function() {
	var this1 = eu_ohmrun_Fletcher.pure(stx_nano_ChunkSum.Tap);
	return this1;
};
eu_ohmrun_fletcher_Propose.fromChunkThunk = function(thunk) {
	var fn = function(_) {
		return thunk();
	};
	var this1 = eu_ohmrun_Fletcher.Anon(function(p,cont) {
		var res = fn(p);
		var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,res);
		var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
			trg.trigger(value);
			return trg;
		}));
		var resI = this1;
		var self = cont;
		return resI.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	});
	return this1;
};
eu_ohmrun_fletcher_Propose.toFletcher = function(this1) {
	return this1;
};
eu_ohmrun_fletcher_Propose.elide = function(this1) {
	return this1;
};
eu_ohmrun_fletcher_Propose.get_self = function(this1) {
	var this2 = this1;
	return this2;
};
eu_ohmrun_fletcher_Propose.bind_fold = function(fn,iterable,seed) {
	return stx_pico_Option.fromNullT(stx_nano_IterLift.lfold(stx_nano_lift_LiftIterableToIter.toIter(iterable),function(next,memo) {
		var this1 = eu_ohmrun_FletcherLift.then(memo,eu_ohmrun_Fletcher.Anon(function(res,cont) {
			switch(res._hx_index) {
			case 0:
				var v = res.v;
				var self = cont;
				return eu_ohmrun_Fletcher.forward(fn(next,v),null).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
					var this1 = self;
					return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
						oc.handle(function(out) {
							ip.trigger(out);
						});
						var this1 = null;
						return this1;
					})));
				})));
			case 1:
				var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_ChunkSum.Tap);
				var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
					trg.trigger(value);
					return trg;
				}));
				return eu_ohmrun_fletcher_Receiver.reply(this1);
			case 2:
				var e = res.err;
				var value1 = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_ChunkSum.End(e));
				var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
					trg.trigger(value1);
					return trg;
				}));
				return eu_ohmrun_fletcher_Receiver.reply(this1);
			}
		}));
		return this1;
	},eu_ohmrun_fletcher_Propose.pure(seed)));
};
eu_ohmrun_fletcher_Propose.flat_map = function(this1,fn) {
	return eu_ohmrun_fletcher_Propose._.flat_map(eu_ohmrun_fletcher_Propose.get_self(this1),fn);
};
var eu_ohmrun_fletcher_ProvideLift = function() { };
$hxClasses["eu.ohmrun.fletcher.ProvideLift"] = eu_ohmrun_fletcher_ProvideLift;
eu_ohmrun_fletcher_ProvideLift.__name__ = "eu.ohmrun.fletcher.ProvideLift";
eu_ohmrun_fletcher_ProvideLift.environment = function(self,handler) {
	return eu_ohmrun_Fletcher._.environment(self,null,function(o) {
		handler(o);
	},function(e) {
		var this1 = eu_ohmrun_fletcher_Logging.log(stx_nano_Wildcard.__);
		var fn = function(pos) {
			return pos.with_stamp(function(stamp) {
				return stamp.relevel(6);
			});
		};
		(function(value,pos) {
			this1(value,fn(pos));
		})(new stx_log_EntryCtr().pure(e),stx_log_LogPosition.fromPos({ fileName : "eu/ohmrun/fletcher/Provide.hx", lineNumber : 75, className : "eu.ohmrun.fletcher.ProvideLift", methodName : "environment"}));
		throw haxe_Exception.thrown(e);
	});
};
eu_ohmrun_fletcher_ProvideLift.flat_map = function(self,fn) {
	var this1 = eu_ohmrun_Fletcher.FlatMap(self,fn);
	return this1;
};
eu_ohmrun_fletcher_ProvideLift.and = function(lhs,rhs) {
	var this1 = eu_ohmrun_Fletcher._.pinch(lhs,rhs);
	return this1;
};
eu_ohmrun_fletcher_ProvideLift.convert = function(self,that) {
	var this1 = eu_ohmrun_fletcher_Convert._.then(self,that);
	return this1;
};
eu_ohmrun_fletcher_ProvideLift.toProduce = function(self) {
	var fn = function(t) {
		return stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,t);
	};
	var this1 = eu_ohmrun_Fletcher._.then(self,eu_ohmrun_Fletcher.Anon(function(p,cont) {
		var res = fn(p);
		var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,res);
		var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
			trg.trigger(value);
			return trg;
		}));
		var resI = this1;
		var self = cont;
		return resI.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	}));
	return this1;
};
eu_ohmrun_fletcher_ProvideLift.attempt = function(self,that) {
	return eu_ohmrun_fletcher_ProduceLift.attempt(eu_ohmrun_fletcher_ProvideLift.toProduce(self),that);
};
eu_ohmrun_fletcher_ProvideLift.map = function(self,fn) {
	var fn1 = fn;
	var this1 = eu_ohmrun_Fletcher._.then(self,eu_ohmrun_Fletcher.Anon(function(p,cont) {
		var res = fn1(p);
		var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,res);
		var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
			trg.trigger(value);
			return trg;
		}));
		var resI = this1;
		var self = cont;
		return resI.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	}));
	return this1;
};
eu_ohmrun_fletcher_ProvideLift.fudge = function(self) {
	return eu_ohmrun_Fletcher._.fudge(self,null);
};
eu_ohmrun_fletcher_ProvideLift.then = function(self,that) {
	var this1 = eu_ohmrun_Fletcher._.then(self,that);
	return this1;
};
eu_ohmrun_fletcher_ProvideLift.zip = function(self,that) {
	var this1 = eu_ohmrun_Fletcher._.pinch(self,that);
	return this1;
};
eu_ohmrun_fletcher_ProvideLift.adjust = function(self,fn) {
	var this1 = eu_ohmrun_FletcherLift.map(self,fn);
	return this1;
};
var eu_ohmrun_fletcher_Provide = {};
eu_ohmrun_fletcher_Provide._new = function(self) {
	var this1 = self;
	return this1;
};
eu_ohmrun_fletcher_Provide.lift = function(self) {
	var this1 = self;
	return this1;
};
eu_ohmrun_fletcher_Provide.pure = function(v) {
	var this1 = eu_ohmrun_Fletcher.Anon(function(_,cont) {
		var self = cont;
		var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,v);
		var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
			trg.trigger(value);
			return trg;
		}));
		return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	});
	return this1;
};
eu_ohmrun_fletcher_Provide.fromFuture = function(future) {
	var this1 = eu_ohmrun_Fletcher.Anon(function(_,cont) {
		var self = cont;
		var self1 = cont;
		var ft = tink_core_Future.map(future,function(t) {
			return stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,t);
		});
		var this1 = eu_ohmrun_fletcher_core_Cont.lift(new eu_ohmrun_fletcher_core_cont_term_Anon(function(r_ipt) {
			var next = new tink_core_FutureTrigger();
			var fst = self1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(t_ipt) {
				ft.handle(function(res) {
					t_ipt.trigger(res);
					next.trigger(res);
				});
				var this1 = null;
				return this1;
			})));
			var snd = r_ipt.apply(next);
			return stx_stream_WorkLift.seq(fst,snd);
		}));
		return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	});
	return this1;
};
eu_ohmrun_fletcher_Provide.fromFunXR = function(fn) {
	var this1 = eu_ohmrun_Fletcher.Anon(function(_,cont) {
		var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,fn());
		var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
			trg.trigger(value);
			return trg;
		}));
		return eu_ohmrun_fletcher_Receiver.reply(this1);
	});
	return this1;
};
eu_ohmrun_fletcher_Provide.fromFunXFuture = function(fn) {
	var this1 = eu_ohmrun_Fletcher.Anon(function(_,cont) {
		var self = cont;
		var ft = tink_core_Future.map(fn(),function(t) {
			return stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,t);
		});
		var this1 = eu_ohmrun_fletcher_core_Cont.lift(new eu_ohmrun_fletcher_core_cont_term_Anon(function(r_ipt) {
			var next = new tink_core_FutureTrigger();
			var fst = self.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(t_ipt) {
				ft.handle(function(res) {
					t_ipt.trigger(res);
					next.trigger(res);
				});
				var this1 = null;
				return this1;
			})));
			var snd = r_ipt.apply(next);
			return stx_stream_WorkLift.seq(fst,snd);
		}));
		return eu_ohmrun_fletcher_Receiver.reply(this1);
	});
	return this1;
};
eu_ohmrun_fletcher_Provide.fromFunTerminalWork = function(fn) {
	var this1 = eu_ohmrun_Fletcher.Anon(function(_,cont) {
		return fn(cont);
	});
	return this1;
};
eu_ohmrun_fletcher_Provide.bind_fold = function(fn,arr,seed) {
	var v = seed;
	var this1 = eu_ohmrun_Fletcher.Anon(function(_,cont) {
		var self = cont;
		var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,v);
		var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
			trg.trigger(value);
			return trg;
		}));
		return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	});
	return stx_nano_ClusterLift.lfold(arr,function(next,memo) {
		return eu_ohmrun_fletcher_ProvideLift.convert(memo,eu_ohmrun_fletcher_Convert.fromFun1Provide(function(o) {
			return eu_ohmrun_fletcher_ConvertLift.provide(fn,stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,next,o));
		}));
	},this1);
};
eu_ohmrun_fletcher_Provide.toFletcher = function(this1) {
	return this1;
};
eu_ohmrun_fletcher_Provide.prj = function(this1) {
	return this1;
};
eu_ohmrun_fletcher_Provide.get_self = function(this1) {
	var this2 = this1;
	return this2;
};
eu_ohmrun_fletcher_Provide.fudge = function(this1) {
	return eu_ohmrun_Fletcher._.fudge(this1,null);
};
var eu_ohmrun_fletcher_ReceiverLift = function() { };
$hxClasses["eu.ohmrun.fletcher.ReceiverLift"] = eu_ohmrun_fletcher_ReceiverLift;
eu_ohmrun_fletcher_ReceiverLift.__name__ = "eu.ohmrun.fletcher.ReceiverLift";
eu_ohmrun_fletcher_ReceiverLift.defer = function(self) {
	var this1 = eu_ohmrun_fletcher_core_Cont.lift(new eu_ohmrun_fletcher_core_cont_term_AnonAnon(function(fn) {
		return self().apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(fn)));
	}));
	return this1;
};
eu_ohmrun_fletcher_ReceiverLift.lift = function(self) {
	var this1 = self;
	return this1;
};
eu_ohmrun_fletcher_ReceiverLift.flat_fold = function(self,ok,no) {
	var uuid = stx_nano_lift_LiftNano.uuid(stx_nano_Wildcard.__,"xxxx");
	var this1 = eu_ohmrun_fletcher_Logging.log(stx_nano_Wildcard.__);
	var fn = function(pos) {
		return pos.with_stamp(function(stamp) {
			return stamp.relevel(0);
		});
	};
	(function(value,pos) {
		this1(value,fn(pos));
	})(stx_log_Stringify.fromString("set up flat_fold: " + uuid)(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "eu/ohmrun/fletcher/Receiver.hx", lineNumber : 73, className : "eu.ohmrun.fletcher.ReceiverLift", methodName : "flat_fold"}));
	var this2 = eu_ohmrun_fletcher_core_Cont.lift(new eu_ohmrun_fletcher_core_cont_term_Anon(function(cont) {
		var this1 = eu_ohmrun_fletcher_Logging.log(stx_nano_Wildcard.__);
		var fn = function(pos) {
			return pos.with_stamp(function(stamp) {
				return stamp.relevel(0);
			});
		};
		(function(value,pos) {
			this1(value,fn(pos));
		})(stx_log_Stringify.fromString("call flat_fold " + uuid)(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "eu/ohmrun/fletcher/Receiver.hx", lineNumber : 76, className : "eu.ohmrun.fletcher.ReceiverLift", methodName : "flat_fold"}));
		var this2 = self;
		return this2.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(p) {
			var this1 = eu_ohmrun_fletcher_Logging.log(stx_nano_Wildcard.__);
			var fn = function(pos) {
				return pos.with_stamp(function(stamp) {
					return stamp.relevel(0);
				});
			};
			(function(value,pos) {
				this1(value,fn(pos));
			})(stx_log_Stringify.fromString("inside flat_fold " + uuid)(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "eu/ohmrun/fletcher/Receiver.hx", lineNumber : 80, className : "eu.ohmrun.fletcher.ReceiverLift", methodName : "flat_fold"}));
			var this2 = stx_stream_Cycle._new(stx_stream_Cycler._new(new stx_stream_PureCyclerCls(tink_core_Future.flatMap(tink_core_Future.flatMap(tink_core_Future.flatMap(p,function(out) {
				var this1 = eu_ohmrun_fletcher_Logging.log(stx_nano_Wildcard.__);
				var fn = function(pos) {
					return pos.with_stamp(function(stamp) {
						return stamp.relevel(0);
					});
				};
				(function(value,pos) {
					this1(value,fn(pos));
				})(stx_log_Stringify.fromString("flat_fold:end " + uuid)(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "eu/ohmrun/fletcher/Receiver.hx", lineNumber : 83, className : "eu.ohmrun.fletcher.ReceiverLift", methodName : "flat_fold"}));
				var v;
				switch(out._hx_index) {
				case 0:
					var t = out.t;
					v = ok(t);
					break;
				case 1:
					var e = out.e;
					v = no(e);
					break;
				}
				return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(v));
			}),function(rec) {
				return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(rec.apply(cont)));
			}),function(bang) {
				if(bang == null) {
					return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(stx_stream_Cycle.ZERO == null ? stx_stream_Cycle.ZERO = stx_stream_Cycle._new(stx_stream_Cycler._new(new stx_stream_UnitCyclerCls())) : stx_stream_Cycle.ZERO));
				} else {
					return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(bang));
				}
			}))));
			return this2;
		})));
	}));
	return this2;
};
eu_ohmrun_fletcher_ReceiverLift.map = function(self,fn) {
	var this1 = eu_ohmrun_fletcher_core_Cont._.map(self,function(out) {
		return tink_core_Future.map(out,function(x) {
			var fn1 = fn;
			return stx_pico_OutcomeLift.flat_map(x,function(x) {
				return stx_pico_OutcomeSum.Success(fn1(x));
			});
		});
	});
	return this1;
};
eu_ohmrun_fletcher_ReceiverLift.flat_map = function(self,fn) {
	return eu_ohmrun_fletcher_ReceiverLift.flat_fold(self,fn,function(e) {
		return eu_ohmrun_fletcher_Receiver.issue(stx_pico_OutcomeSum.Failure(e),{ fileName : "eu/ohmrun/fletcher/Receiver.hx", lineNumber : 106, className : "eu.ohmrun.fletcher.ReceiverLift", methodName : "flat_map"});
	});
};
eu_ohmrun_fletcher_ReceiverLift.tap = function(self,fn) {
	return eu_ohmrun_fletcher_ReceiverLift.map(self,stx_nano_lift_LiftNano.nano(stx_nano_Wildcard.__).command(fn));
};
eu_ohmrun_fletcher_ReceiverLift.fold_bind = function(self,ok,no) {
	var this1 = eu_ohmrun_fletcher_core_Cont.lift(new eu_ohmrun_fletcher_core_cont_term_Anon(function(cont) {
		var this1 = self;
		return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(p) {
			return cont.apply(eu_ohmrun_fletcher_ReceiverInputLift.fold_bind(p,ok,no));
		})));
	}));
	return this1;
};
eu_ohmrun_fletcher_ReceiverLift.fold_mapp = function(self,ok,no) {
	var this1 = eu_ohmrun_fletcher_core_Cont.lift(new eu_ohmrun_fletcher_core_cont_term_Anon(function(cont) {
		var this1 = self;
		return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(p) {
			return cont.apply(eu_ohmrun_fletcher_ReceiverInputLift.fold_mapp(p,ok,no));
		})));
	}));
	return this1;
};
eu_ohmrun_fletcher_ReceiverLift.mod = function(self,g) {
	return eu_ohmrun_fletcher_ReceiverLift.lift(eu_ohmrun_fletcher_core_Cont.lift(new eu_ohmrun_fletcher_core_cont_term_AnonMod(self,g)));
};
eu_ohmrun_fletcher_ReceiverLift.zip = function(self,that) {
	var this1 = eu_ohmrun_fletcher_core_Cont.lift(new eu_ohmrun_fletcher_core_cont_term_Anon(function(f) {
		var lhs = null;
		var rhs = null;
		var this1 = self;
		var work_left = this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ocI) {
			lhs = ocI;
			var this1 = null;
			return this1;
		})));
		var work_right = that.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ocII) {
			rhs = ocII;
			var this1 = null;
			return this1;
		})));
		var self1 = stx_stream_WorkLift.par(work_left,work_right);
		var this1 = stx_stream_Cycle._new(stx_stream_Cycler._new(new stx_stream_PureCyclerCls(tink_core_Future.flatMap(tink_core_Future.irreversible(function(cb) {
			var ipt = eu_ohmrun_fletcher_ReceiverInput.zip(lhs,rhs);
			var res = f.apply(ipt);
			cb(res);
		}),function(bang) {
			if(bang == null) {
				return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(stx_stream_Cycle.ZERO == null ? stx_stream_Cycle.ZERO = stx_stream_Cycle._new(stx_stream_Cycler._new(new stx_stream_UnitCyclerCls())) : stx_stream_Cycle.ZERO));
			} else {
				return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(bang));
			}
		}))));
		return stx_stream_WorkLift.seq(self1,this1);
	}));
	return this1;
};
var eu_ohmrun_fletcher_Receiver = {};
eu_ohmrun_fletcher_Receiver.reply = function(this1) {
	return this1.apply(eu_ohmrun_fletcher_ReceiverSink.toApply(eu_ohmrun_fletcher_ReceiverSink.lift(new eu_ohmrun_fletcher_receiver_$sink_term_Unit())));
};
eu_ohmrun_fletcher_Receiver.lift = function(self) {
	var this1 = self;
	return this1;
};
eu_ohmrun_fletcher_Receiver._new = function(self) {
	var this1 = self;
	return this1;
};
eu_ohmrun_fletcher_Receiver.issue = function(outcome,pos) {
	var this1 = eu_ohmrun_fletcher_core_Cont.lift(new eu_ohmrun_fletcher_core_cont_term_Anon(function(fn) {
		var t = new tink_core_FutureTrigger();
		t.trigger(outcome);
		return fn.apply(t);
	}));
	return this1;
};
eu_ohmrun_fletcher_Receiver.thunk = function(self,pos) {
	var this1 = new eu_ohmrun_fletcher_receiver_term_Thunk(self);
	return this1;
};
eu_ohmrun_fletcher_Receiver.value = function(r,pos) {
	return eu_ohmrun_fletcher_Receiver.issue(stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,r),{ fileName : "eu/ohmrun/fletcher/Receiver.hx", lineNumber : 31, className : "eu.ohmrun.fletcher._Receiver.Receiver_Impl_", methodName : "value"});
};
eu_ohmrun_fletcher_Receiver.error = function(err,pos) {
	return eu_ohmrun_fletcher_Receiver.issue(stx_nano_lift_LiftNano.failure(stx_nano_Wildcard.__,err),{ fileName : "eu/ohmrun/fletcher/Receiver.hx", lineNumber : 34, className : "eu.ohmrun.fletcher._Receiver.Receiver_Impl_", methodName : "error"});
};
eu_ohmrun_fletcher_Receiver.later = function(ft,pos) {
	var this1 = eu_ohmrun_fletcher_core_Cont.lift(new eu_ohmrun_fletcher_core_cont_term_Anon(function(fn) {
		return fn.apply(ft);
	}));
	return this1;
};
eu_ohmrun_fletcher_Receiver.serve = function(this1) {
	return eu_ohmrun_fletcher_Receiver.reply(this1);
};
eu_ohmrun_fletcher_Receiver.toString = function(this1) {
	return "Receiver(" + Std.string(this1) + ")";
};
eu_ohmrun_fletcher_Receiver.prj = function(this1) {
	return this1;
};
var eu_ohmrun_fletcher_ReceiverInputLift = function() { };
$hxClasses["eu.ohmrun.fletcher.ReceiverInputLift"] = eu_ohmrun_fletcher_ReceiverInputLift;
eu_ohmrun_fletcher_ReceiverInputLift.__name__ = "eu.ohmrun.fletcher.ReceiverInputLift";
eu_ohmrun_fletcher_ReceiverInputLift.fold_bind = function(self,ok,no) {
	return tink_core_Future.flatMap(self,function(oc) {
		switch(oc._hx_index) {
		case 0:
			var t = oc.t;
			return ok(t);
		case 1:
			var e = oc.e;
			return no(e);
		}
	});
};
eu_ohmrun_fletcher_ReceiverInputLift.fold_mapp = function(self,ok,no) {
	return tink_core_Future.map(self,function(oc) {
		switch(oc._hx_index) {
		case 0:
			var t = oc.t;
			return ok(t);
		case 1:
			var e = oc.e;
			return no(e);
		}
	});
};
eu_ohmrun_fletcher_ReceiverInputLift.map = function(self,fn) {
	return tink_core_Future.map(self,function(oc) {
		var fn1 = fn;
		return stx_pico_OutcomeLift.flat_map(oc,function(x) {
			return stx_pico_OutcomeSum.Success(fn1(x));
		});
	});
};
var eu_ohmrun_fletcher_ReceiverInput = {};
eu_ohmrun_fletcher_ReceiverInput._new = function(self) {
	var this1 = self;
	return this1;
};
eu_ohmrun_fletcher_ReceiverInput.lift = function(self) {
	return eu_ohmrun_fletcher_ReceiverInput._new(self);
};
eu_ohmrun_fletcher_ReceiverInput.zip = function(this1,that) {
	return tink_core_Future.merge(this1,eu_ohmrun_fletcher_ReceiverInput.prj(that),function(l,r) {
		return stx_nano_lift_LiftOutcomeTDefect.zip(l,r);
	});
};
eu_ohmrun_fletcher_ReceiverInput.prj = function(this1) {
	return this1;
};
eu_ohmrun_fletcher_ReceiverInput.get_self = function(this1) {
	return eu_ohmrun_fletcher_ReceiverInput.lift(this1);
};
var eu_ohmrun_fletcher_ReceiverSink = {};
eu_ohmrun_fletcher_ReceiverSink._new = function(self) {
	var this1 = self;
	return this1;
};
eu_ohmrun_fletcher_ReceiverSink.lift = function(self) {
	return eu_ohmrun_fletcher_ReceiverSink._new(self);
};
eu_ohmrun_fletcher_ReceiverSink.fromApply = function(self) {
	return eu_ohmrun_fletcher_ReceiverSink.lift(self);
};
eu_ohmrun_fletcher_ReceiverSink.seq = function(this1,that) {
	return eu_ohmrun_fletcher_ReceiverSink.lift(new eu_ohmrun_fletcher_receiver_$sink_term_Seq(this1,that));
};
eu_ohmrun_fletcher_ReceiverSink.unit = function() {
	return eu_ohmrun_fletcher_ReceiverSink.lift(new eu_ohmrun_fletcher_receiver_$sink_term_Unit());
};
eu_ohmrun_fletcher_ReceiverSink.prj = function(this1) {
	return this1;
};
eu_ohmrun_fletcher_ReceiverSink.get_self = function(this1) {
	return eu_ohmrun_fletcher_ReceiverSink.lift(this1);
};
eu_ohmrun_fletcher_ReceiverSink.toApply = function(this1) {
	return stx_pico_Apply._new(this1);
};
var eu_ohmrun_fletcher_Recover = {};
eu_ohmrun_fletcher_Recover._new = function(self) {
	var this1 = self;
	return this1;
};
eu_ohmrun_fletcher_Recover.lift = function(self) {
	var this1 = self;
	return this1;
};
eu_ohmrun_fletcher_Recover.fromFunErrR = function(fn) {
	var fn1 = fn;
	var this1 = eu_ohmrun_Fletcher.Anon(function(p,cont) {
		var res = fn1(p);
		var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,res);
		var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
			trg.trigger(value);
			return trg;
		}));
		var resI = this1;
		var self = cont;
		return resI.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	});
	return this1;
};
eu_ohmrun_fletcher_Recover.toModulate = function(this1) {
	var this2 = eu_ohmrun_Fletcher.Anon(function(p,cont) {
		switch(p._hx_index) {
		case 0:
			var t = p.t;
			var self = cont;
			var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,t));
			var this2 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
				trg.trigger(value);
				return trg;
			}));
			return this2.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
				var this1 = self;
				return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
					oc.handle(function(out) {
						ip.trigger(out);
					});
					var this1 = null;
					return this1;
				})));
			})));
		case 1:
			var e = p.e;
			var self1 = cont;
			return eu_ohmrun_fletcher_ReceiverLift.map(eu_ohmrun_Fletcher.forward(this1,e),function(t) {
				return stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,t);
			}).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
				var this1 = self1;
				return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
					oc.handle(function(out) {
						ip.trigger(out);
					});
					var this1 = null;
					return this1;
				})));
			})));
		}
	});
	return this2;
};
eu_ohmrun_fletcher_Recover.toReform = function(this1) {
	var this2 = eu_ohmrun_Fletcher.Anon(function(p,cont) {
		switch(p._hx_index) {
		case 0:
			var t = p.t;
			var self = cont;
			var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,t);
			var this2 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
				trg.trigger(value);
				return trg;
			}));
			return this2.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
				var this1 = self;
				return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
					oc.handle(function(out) {
						ip.trigger(out);
					});
					var this1 = null;
					return this1;
				})));
			})));
		case 1:
			var e = p.e;
			var self1 = cont;
			return eu_ohmrun_Fletcher.forward(this1,e).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
				var this1 = self1;
				return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
					oc.handle(function(out) {
						ip.trigger(out);
					});
					var this1 = null;
					return this1;
				})));
			})));
		}
	});
	return this2;
};
eu_ohmrun_fletcher_Recover.prj = function(this1) {
	return this1;
};
eu_ohmrun_fletcher_Recover.toFletcher = function(this1) {
	return eu_ohmrun_Fletcher.lift(this1);
};
var eu_ohmrun_fletcher_RecoverLift = function() { };
$hxClasses["eu.ohmrun.fletcher.RecoverLift"] = eu_ohmrun_fletcher_RecoverLift;
eu_ohmrun_fletcher_RecoverLift.__name__ = "eu.ohmrun.fletcher.RecoverLift";
eu_ohmrun_fletcher_RecoverLift.toReform = function(self) {
	var this1 = eu_ohmrun_Fletcher.Anon(function(p,cont) {
		switch(p._hx_index) {
		case 0:
			var t = p.t;
			var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,t);
			var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
				trg.trigger(value);
				return trg;
			}));
			return eu_ohmrun_fletcher_Receiver.reply(this1);
		case 1:
			var e = p.e;
			var self1 = cont;
			return eu_ohmrun_fletcher_ReceiverLift.fold_mapp(eu_ohmrun_Fletcher.forward(self,e),function(ok) {
				return stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,ok);
			},function(_) {
				return stx_nano_lift_LiftNano.failure(stx_nano_Wildcard.__,_);
			}).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
				var this1 = self1;
				return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
					oc.handle(function(out) {
						ip.trigger(out);
					});
					var this1 = null;
					return this1;
				})));
			})));
		}
	});
	return this1;
};
eu_ohmrun_fletcher_RecoverLift.toModulate = function(self) {
	var this1 = eu_ohmrun_Fletcher.Anon(function(p,cont) {
		switch(p._hx_index) {
		case 0:
			var t = p.t;
			var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,t));
			var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
				trg.trigger(value);
				return trg;
			}));
			return eu_ohmrun_fletcher_Receiver.reply(this1);
		case 1:
			var e = p.e;
			var self1 = cont;
			return eu_ohmrun_fletcher_ReceiverLift.map(eu_ohmrun_Fletcher.forward(self,e),function(t) {
				return stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,t);
			}).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
				var this1 = self1;
				return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
					oc.handle(function(out) {
						ip.trigger(out);
					});
					var this1 = null;
					return this1;
				})));
			})));
		}
	});
	return this1;
};
var eu_ohmrun_fletcher_Reform = {};
eu_ohmrun_fletcher_Reform._new = function(self) {
	var this1 = self;
	return this1;
};
eu_ohmrun_fletcher_Reform.lift = function(self) {
	var this1 = self;
	return this1;
};
eu_ohmrun_fletcher_Reform.toModulate = function(this1) {
	var this2 = eu_ohmrun_FletcherLift.map(eu_ohmrun_Fletcher.lift(this1),function(t) {
		return stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,t);
	});
	return this2;
};
eu_ohmrun_fletcher_Reform.prj = function(this1) {
	return this1;
};
eu_ohmrun_fletcher_Reform.toFletcher = function(this1) {
	return this1;
};
var eu_ohmrun_fletcher_ReframeLift = function() { };
$hxClasses["eu.ohmrun.fletcher.ReframeLift"] = eu_ohmrun_fletcher_ReframeLift;
eu_ohmrun_fletcher_ReframeLift.__name__ = "eu.ohmrun.fletcher.ReframeLift";
eu_ohmrun_fletcher_ReframeLift.lift = function(wml) {
	var this1 = wml;
	return this1;
};
eu_ohmrun_fletcher_ReframeLift.modulate = function(self,that) {
	var this1 = eu_ohmrun_Fletcher._.then(eu_ohmrun_Fletcher.lift(self),eu_ohmrun_fletcher_Modulate.toFletcher(that));
	return this1;
};
eu_ohmrun_fletcher_ReframeLift.attempt = function(self,that) {
	var fn = function(chk) {
		var self;
		switch(chk._hx_index) {
		case 0:
			var t = chk.t;
			var tp = t;
			var self1 = stx_nano_CoupleLift.fst(tp);
			var fn = function(r) {
				return stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,r,stx_nano_CoupleLift.snd(tp));
			};
			var self2;
			switch(self1._hx_index) {
			case 0:
				var t = self1.t;
				self2 = stx_nano_ResSum.Accept(fn(t));
				break;
			case 1:
				var e = self1.e;
				self2 = stx_nano_ResSum.Reject(e);
				break;
			}
			var this1 = self2;
			self = this1;
			break;
		case 1:
			var e = chk.e;
			self = stx_nano_ResSum.Reject(e);
			break;
		}
		var this1 = self;
		return this1;
	};
	var this1 = eu_ohmrun_fletcher_Reframe.toModulate(self);
	var this2 = eu_ohmrun_FletcherLift.first(that);
	var arw = eu_ohmrun_fletcher_ReframeLift.lift(eu_ohmrun_Fletcher._.map(eu_ohmrun_fletcher_Modulate._.convert(this1,this2),fn));
	return arw;
};
eu_ohmrun_fletcher_ReframeLift.rearrange = function(self,that) {
	var this1 = eu_ohmrun_Fletcher.Anon(function(ipt,cont) {
		var self1 = cont;
		return eu_ohmrun_fletcher_ReceiverLift.flat_fold(eu_ohmrun_Fletcher.forward(self,ipt),function(res) {
			var that1 = that;
			var receiver;
			switch(res._hx_index) {
			case 0:
				var t = res.t;
				receiver = stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,stx_nano_CoupleLift.fst(t)),stx_nano_CoupleLift.snd(t)));
				break;
			case 1:
				var e = res.e;
				switch(ipt._hx_index) {
				case 0:
					var t = ipt.t;
					receiver = stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(e),{ fileName : "eu/ohmrun/fletcher/Reframe.hx", lineNumber : 60, className : "eu.ohmrun.fletcher.ReframeLift", methodName : "rearrange"}),t));
					break;
				case 1:
					var e = ipt.e;
					receiver = stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(e),{ fileName : "eu/ohmrun/fletcher/Reframe.hx", lineNumber : 60, className : "eu.ohmrun.fletcher.ReframeLift", methodName : "rearrange"});
					break;
				}
				break;
			}
			return eu_ohmrun_fletcher_ReceiverLift.map(eu_ohmrun_Fletcher.forward(that1,receiver),function(res) {
				switch(res._hx_index) {
				case 0:
					var _g = res.t;
					switch(ipt._hx_index) {
					case 0:
						var tt = ipt.t;
						var t = _g;
						return stx_nano_ResSum.Accept(stx_nano_Couple.make(t,tt));
					case 1:
						var e = ipt.e;
						return stx_nano_ResSum.Reject(e);
					}
					break;
				case 1:
					var _g = res.e;
					if(ipt._hx_index == 1) {
						var ee = ipt.e;
						var e = _g;
						return stx_nano_ResSum.Reject(stx_fail_Refuse.concat(e,ee));
					} else {
						var e = _g;
						return stx_nano_ResSum.Reject(e);
					}
					break;
				}
			});
		},function(err) {
			var value = stx_nano_lift_LiftNano.failure(stx_nano_Wildcard.__,err);
			var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
				trg.trigger(value);
				return trg;
			}));
			return this1;
		}).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self1;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	});
	return this1;
};
eu_ohmrun_fletcher_ReframeLift.arrange = function(self,that) {
	var arw = eu_ohmrun_Fletcher._.map(eu_ohmrun_fletcher_Modulate._.broach(eu_ohmrun_fletcher_ReframeLift.modulate(self,eu_ohmrun_fletcher_Arrange.toModulate(that))),function(res) {
		var fn = function(tp) {
			return stx_nano_CoupleLift.swap(tp);
		};
		var self;
		switch(res._hx_index) {
		case 0:
			var t = res.t;
			self = stx_nano_ResSum.Accept(fn(t));
			break;
		case 1:
			var e = res.e;
			self = stx_nano_ResSum.Reject(e);
			break;
		}
		var this1 = self;
		return this1;
	});
	var this1 = arw;
	return this1;
};
eu_ohmrun_fletcher_ReframeLift.arrangement = function(self,that) {
	var this1 = eu_ohmrun_Fletcher.Anon(function(ipt,cont) {
		var self1 = cont;
		return eu_ohmrun_fletcher_ReceiverLift.flat_fold(eu_ohmrun_Fletcher.forward(self,stx_nano_Res.fromOutcome(stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_CoupleLift.snd(ipt)))),function(tp) {
			var receiver;
			switch(tp._hx_index) {
			case 0:
				var t = tp.t;
				receiver = eu_ohmrun_Fletcher.forward(that(stx_nano_CoupleLift.fst(t)),stx_nano_Res.fromOutcome(stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,ipt)));
				break;
			case 1:
				var e = tp.e;
				var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(e),{ fileName : "eu/ohmrun/fletcher/Reframe.hx", lineNumber : 83, className : "eu.ohmrun.fletcher.ReframeLift", methodName : "arrangement"}));
				var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
					trg.trigger(value);
					return trg;
				}));
				receiver = this1;
				break;
			}
			return receiver;
		},function(e) {
			var value = stx_nano_lift_LiftNano.failure(stx_nano_Wildcard.__,e);
			var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
				trg.trigger(value);
				return trg;
			}));
			return this1;
		}).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self1;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	});
	return this1;
};
eu_ohmrun_fletcher_ReframeLift.commandeer = function(self,fn) {
	return eu_ohmrun_fletcher_Command._new(eu_ohmrun_Fletcher.Anon(function(ipt,cont) {
		var self1 = cont;
		var fn1 = function(res) {
			var fn;
			switch(res._hx_index) {
			case 0:
				var t = res.t;
				fn = stx_nano_Report.unit();
				break;
			case 1:
				var e = res.e;
				fn = stx_nano_Report.pure(e);
				break;
			}
			return fn;
		};
		return eu_ohmrun_Fletcher.forward(eu_ohmrun_FletcherLift.then(eu_ohmrun_fletcher_ReframeLift.commandment(self,fn),eu_ohmrun_Fletcher.Anon(function(p,cont) {
			var res = fn1(p);
			var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,res);
			var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
				trg.trigger(value);
				return trg;
			}));
			var resI = this1;
			var self = cont;
			return resI.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
				var this1 = self;
				return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
					oc.handle(function(out) {
						ip.trigger(out);
					});
					var this1 = null;
					return this1;
				})));
			})));
		})),stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,ipt)).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self1;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	}));
};
eu_ohmrun_fletcher_ReframeLift.commandment = function(self,fn) {
	return eu_ohmrun_fletcher_ReframeLift.lift(eu_ohmrun_Fletcher.Anon(function(ipt,cont) {
		var self1 = cont;
		return eu_ohmrun_fletcher_ReceiverLift.flat_fold(eu_ohmrun_Fletcher.forward(self,ipt),function(res) {
			switch(res._hx_index) {
			case 0:
				var t = res.t;
				var ok = t;
				var cmd = fn(stx_nano_CoupleLift.fst(ok));
				switch(ipt._hx_index) {
				case 0:
					var t = ipt.t;
					var i = t;
					return eu_ohmrun_fletcher_ReceiverLift.map(eu_ohmrun_Fletcher.forward(cmd,i),function(report) {
						if(report == null) {
							return stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,stx_nano_CoupleLift.fst(ok),i));
						} else {
							switch(report._hx_index) {
							case 0:
								var v = report.v;
								return stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(v),{ fileName : "eu/ohmrun/fletcher/Reframe.hx", lineNumber : 112, className : "eu.ohmrun.fletcher.ReframeLift", methodName : "commandment"});
							case 1:
								return stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,stx_nano_CoupleLift.fst(ok),i));
							}
						}
					});
				case 1:
					var e = ipt.e;
					var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(e),{ fileName : "eu/ohmrun/fletcher/Reframe.hx", lineNumber : 116, className : "eu.ohmrun.fletcher.ReframeLift", methodName : "commandment"}));
					var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
						trg.trigger(value);
						return trg;
					}));
					return this1;
				}
				break;
			case 1:
				var e = res.e;
				var value1 = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(e),{ fileName : "eu/ohmrun/fletcher/Reframe.hx", lineNumber : 119, className : "eu.ohmrun.fletcher.ReframeLift", methodName : "commandment"}));
				var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
					trg.trigger(value1);
					return trg;
				}));
				return this1;
			}
		},function(no) {
			var value = stx_nano_lift_LiftNano.failure(stx_nano_Wildcard.__,no);
			var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
				trg.trigger(value);
				return trg;
			}));
			return this1;
		}).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self1;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	}));
};
eu_ohmrun_fletcher_ReframeLift.evaluation = function(self) {
	var this1 = eu_ohmrun_FletcherLift.map(self,function(o) {
		var fn = function(tp) {
			return stx_nano_CoupleLift.fst(tp);
		};
		var self;
		switch(o._hx_index) {
		case 0:
			var t = o.t;
			self = stx_nano_ResSum.Accept(fn(t));
			break;
		case 1:
			var e = o.e;
			self = stx_nano_ResSum.Reject(e);
			break;
		}
		var this1 = self;
		return this1;
	});
	return this1;
};
eu_ohmrun_fletcher_ReframeLift.execution = function(self) {
	var this1 = eu_ohmrun_FletcherLift.map(self,function(o) {
		var fn = function(tp) {
			return stx_nano_CoupleLift.snd(tp);
		};
		var self;
		switch(o._hx_index) {
		case 0:
			var t = o.t;
			self = stx_nano_ResSum.Accept(fn(t));
			break;
		case 1:
			var e = o.e;
			self = stx_nano_ResSum.Reject(e);
			break;
		}
		var this1 = self;
		return this1;
	});
	return this1;
};
eu_ohmrun_fletcher_ReframeLift.errate = function(self,fn) {
	return eu_ohmrun_fletcher_ReframeLift.lift(eu_ohmrun_Fletcher.Anon(function(i,cont) {
		switch(i._hx_index) {
		case 0:
			var t = i.t;
			var self1 = cont;
			return eu_ohmrun_Fletcher.forward(eu_ohmrun_FletcherLift.map(self,function(o) {
				var self;
				switch(o._hx_index) {
				case 0:
					var t = o.t;
					self = stx_nano_Res.accept(t);
					break;
				case 1:
					var e = o.e;
					self = stx_nano_Res.reject(stx_fail_Refuse.errate(e,fn));
					break;
				}
				var this1 = self;
				return this1;
			}),stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,t)).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
				var this1 = self1;
				return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
					oc.handle(function(out) {
						ip.trigger(out);
					});
					var this1 = null;
					return this1;
				})));
			})));
		case 1:
			var e = i.e;
			var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(e),{ fileName : "eu/ohmrun/fletcher/Reframe.hx", lineNumber : 137, className : "eu.ohmrun.fletcher.ReframeLift", methodName : "errate"}));
			var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
				trg.trigger(value);
				return trg;
			}));
			return eu_ohmrun_fletcher_Receiver.reply(this1);
		}
	}));
};
eu_ohmrun_fletcher_ReframeLift.environment = function(self,i,success,failure) {
	var success1 = success;
	var failure1 = failure;
	return eu_ohmrun_Fletcher._.environment(self,stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,i),function(res) {
		switch(res._hx_index) {
		case 0:
			var t = res.t;
			success1(t);
			break;
		case 1:
			var e = res.e;
			failure1(e);
			break;
		}
	},function(err) {
		throw haxe_Exception.thrown(err);
	});
};
eu_ohmrun_fletcher_ReframeLift.convert = function(self,fn) {
	return eu_ohmrun_fletcher_ReframeLift.lift(eu_ohmrun_fletcher_ReframeLift.modulate(self,eu_ohmrun_fletcher_ConvertLift.toModulate(eu_ohmrun_fletcher_ConvertLift.first(fn))));
};
var eu_ohmrun_fletcher_Reframe = {};
eu_ohmrun_fletcher_Reframe._new = function(self) {
	var this1 = self;
	return this1;
};
eu_ohmrun_fletcher_Reframe.lift = function(wml) {
	var this1 = wml;
	return this1;
};
eu_ohmrun_fletcher_Reframe.pure = function(o) {
	var this1 = eu_ohmrun_Fletcher._.map(eu_ohmrun_fletcher_Modulate.unit(),function(oc) {
		var _g = function(tI,tII) {
			return stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,tI,tII);
		};
		var tI = o;
		var fn = function(tII) {
			return _g(tI,tII);
		};
		var self;
		switch(oc._hx_index) {
		case 0:
			var t = oc.t;
			self = stx_nano_ResSum.Accept(fn(t));
			break;
		case 1:
			var e = oc.e;
			self = stx_nano_ResSum.Reject(e);
			break;
		}
		var this1 = self;
		return this1;
	});
	return this1;
};
eu_ohmrun_fletcher_Reframe.get_self = function(this1) {
	return this1;
};
eu_ohmrun_fletcher_Reframe.toModulate = function(this1) {
	var this2 = this1;
	return this2;
};
eu_ohmrun_fletcher_Reframe.toFletcher = function(this1) {
	return eu_ohmrun_Fletcher.lift(this1);
};
eu_ohmrun_fletcher_Reframe.fromModulate = function(self) {
	var this1 = self;
	return this1;
};
var eu_ohmrun_fletcher_RegulateLift = function() { };
$hxClasses["eu.ohmrun.fletcher.RegulateLift"] = eu_ohmrun_fletcher_RegulateLift;
eu_ohmrun_fletcher_RegulateLift.__name__ = "eu.ohmrun.fletcher.RegulateLift";
var eu_ohmrun_fletcher_Regulate = {};
eu_ohmrun_fletcher_Regulate._new = function(self) {
	var this1 = self;
	return this1;
};
eu_ohmrun_fletcher_Regulate.lift = function(self) {
	return eu_ohmrun_fletcher_Regulate._new(self);
};
eu_ohmrun_fletcher_Regulate.prj = function(this1) {
	return this1;
};
eu_ohmrun_fletcher_Regulate.get_self = function(this1) {
	return eu_ohmrun_fletcher_Regulate.lift(this1);
};
var eu_ohmrun_fletcher_Resolve = {};
eu_ohmrun_fletcher_Resolve._new = function(self) {
	var this1 = self;
	return this1;
};
eu_ohmrun_fletcher_Resolve.lift = function(self) {
	var this1 = self;
	return this1;
};
eu_ohmrun_fletcher_Resolve.fromResolvePropose = function(self) {
	var this1 = eu_ohmrun_FletcherLift.then(self,eu_ohmrun_Fletcher.Anon(function(i,cont) {
		var self = cont;
		return eu_ohmrun_Fletcher.forward(i,null).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	}));
	return this1;
};
eu_ohmrun_fletcher_Resolve.fromFunErrPropose = function(arw) {
	var fn = arw;
	var this1 = eu_ohmrun_Fletcher._.then(eu_ohmrun_Fletcher.Anon(function(p,cont) {
		var res = fn(p);
		var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,res);
		var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
			trg.trigger(value);
			return trg;
		}));
		var resI = this1;
		var self = cont;
		return resI.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	}),eu_ohmrun_Fletcher.Anon(function(i,cont) {
		var self = cont;
		return eu_ohmrun_Fletcher.forward(i,null).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	}));
	return this1;
};
eu_ohmrun_fletcher_Resolve.fromErrChunk = function(fn) {
	var fn1 = fn;
	var this1 = eu_ohmrun_Fletcher.Anon(function(p,cont) {
		var res = fn1(p);
		var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,res);
		var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
			trg.trigger(value);
			return trg;
		}));
		var resI = this1;
		var self = cont;
		return resI.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	});
	return this1;
};
eu_ohmrun_fletcher_Resolve.unit = function() {
	var this1 = eu_ohmrun_Fletcher.Anon(function(p,cont) {
		var res = stx_nano_ChunkSum.Tap;
		var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,res);
		var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
			trg.trigger(value);
			return trg;
		}));
		var resI = this1;
		var self = cont;
		return resI.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	});
	return this1;
};
eu_ohmrun_fletcher_Resolve.prj = function(this1) {
	return this1;
};
eu_ohmrun_fletcher_Resolve.get_self = function(this1) {
	var this2 = this1;
	return this2;
};
eu_ohmrun_fletcher_Resolve.toFletcher = function(this1) {
	return this1;
};
var eu_ohmrun_fletcher_ResolveLift = function() { };
$hxClasses["eu.ohmrun.fletcher.ResolveLift"] = eu_ohmrun_fletcher_ResolveLift;
eu_ohmrun_fletcher_ResolveLift.__name__ = "eu.ohmrun.fletcher.ResolveLift";
eu_ohmrun_fletcher_ResolveLift.toModulate = function(self) {
	var this1 = eu_ohmrun_Fletcher.Anon(function(i,cont) {
		switch(i._hx_index) {
		case 0:
			var t = i.t;
			var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,t));
			var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
				trg.trigger(value);
				return trg;
			}));
			return eu_ohmrun_fletcher_Receiver.reply(this1);
		case 1:
			var e = i.e;
			var e1 = e;
			var next = eu_ohmrun_Fletcher._.map(self,function(chk) {
				switch(chk._hx_index) {
				case 0:
					var v = chk.v;
					return stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,v);
				case 1:
					return stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(e1),{ fileName : "eu/ohmrun/fletcher/Resolve.hx", lineNumber : 57, className : "eu.ohmrun.fletcher.ResolveLift", methodName : "toModulate"});
				case 2:
					var e = chk.err;
					return stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(e),{ fileName : "eu/ohmrun/fletcher/Resolve.hx", lineNumber : 56, className : "eu.ohmrun.fletcher.ResolveLift", methodName : "toModulate"});
				}
			});
			var self1 = cont;
			return eu_ohmrun_Fletcher.forward(next,e1).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
				var this1 = self1;
				return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
					oc.handle(function(out) {
						ip.trigger(out);
					});
					var this1 = null;
					return this1;
				})));
			})));
		}
	});
	return this1;
};
var eu_ohmrun_fletcher_ScenarioArgSum = $hxEnums["eu.ohmrun.fletcher.ScenarioArgSum"] = { __ename__:"eu.ohmrun.fletcher.ScenarioArgSum",__constructs__:null
};
eu_ohmrun_fletcher_ScenarioArgSum.__constructs__ = [];
var eu_ohmrun_fletcher_ScenarioArg = {};
eu_ohmrun_fletcher_ScenarioArg._new = function(self) {
	var this1 = self;
	return this1;
};
eu_ohmrun_fletcher_ScenarioArg.lift = function(self) {
	return eu_ohmrun_fletcher_ScenarioArg._new(self);
};
eu_ohmrun_fletcher_ScenarioArg.prj = function(this1) {
	return this1;
};
eu_ohmrun_fletcher_ScenarioArg.get_self = function(this1) {
	return eu_ohmrun_fletcher_ScenarioArg.lift(this1);
};
var eu_ohmrun_fletcher_ScenarioLift = function() { };
$hxClasses["eu.ohmrun.fletcher.ScenarioLift"] = eu_ohmrun_fletcher_ScenarioLift;
eu_ohmrun_fletcher_ScenarioLift.__name__ = "eu.ohmrun.fletcher.ScenarioLift";
eu_ohmrun_fletcher_ScenarioLift.lift = function(self) {
	return eu_ohmrun_fletcher_Scenario.lift(self);
};
eu_ohmrun_fletcher_ScenarioLift.attempt = function(self,that) {
	return eu_ohmrun_fletcher_Scenario.lift(eu_ohmrun_Fletcher._.then(self,eu_ohmrun_Fletcher.Anon(function(r,cont) {
		var self = cont;
		var fn = function(chk) {
			return chk;
		};
		var this1 = eu_ohmrun_Fletcher.Anon(function(p,cont) {
			var res = fn(p);
			var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,res);
			var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
				trg.trigger(value);
				return trg;
			}));
			var resI = this1;
			var self = cont;
			return resI.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
				var this1 = self;
				return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
					oc.handle(function(out) {
						ip.trigger(out);
					});
					var this1 = null;
					return this1;
				})));
			})));
		});
		return eu_ohmrun_Fletcher.forward(eu_ohmrun_FletcherLift.map(eu_ohmrun_fletcher_Diffuse._.attempt(this1,that),function(chk) {
			return stx_nano_EquityLift.rebase(r,chk);
		}),stx_nano_EquityLift.has_value(r) ? stx_nano_ChunkSum.Val(r.value) : stx_nano_EquityLift.has_error(r) ? stx_nano_ChunkSum.End(r.get_error().toError()) : stx_nano_ChunkSum.Tap).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	})));
};
eu_ohmrun_fletcher_ScenarioLift.venture = function(self,that) {
	return eu_ohmrun_fletcher_Scenario.lift(eu_ohmrun_Fletcher._.then(self,eu_ohmrun_Fletcher.Anon(function(r,cont) {
		var self = cont;
		return stx_LiftIf.if_else(stx_nano_EquityLift.has_value(r),function() {
			return eu_ohmrun_Fletcher.forward(eu_ohmrun_FletcherLift.map(that,function(n) {
				return stx_nano_Equity.make(r.asset,n.value,stx_fail_Refuse.concat(r.get_error(),n.get_error()));
			}),r.value);
		},function() {
			var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_EquityLift.clear(r));
			var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
				trg.trigger(value);
				return trg;
			}));
			return this1;
		}).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	})));
};
eu_ohmrun_fletcher_ScenarioLift.initiate = function(self,that) {
	return eu_ohmrun_fletcher_Scenario.lift(eu_ohmrun_Fletcher._.then(self,eu_ohmrun_Fletcher.Anon(function(r,cont) {
		var self = cont;
		return eu_ohmrun_Fletcher.forward(eu_ohmrun_FletcherLift.map(that,function(res) {
			var receiver;
			switch(res._hx_index) {
			case 0:
				var t = res.t;
				receiver = stx_nano_EquityLift.rebase(r,stx_nano_ChunkSum.Val(t));
				break;
			case 1:
				var e = res.e;
				receiver = stx_nano_EquityLift.rebase(r,stx_nano_ChunkSum.End(e));
				break;
			}
			return receiver;
		}),r.asset).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	})));
};
eu_ohmrun_fletcher_ScenarioLift.errate = function(self,fn) {
	return eu_ohmrun_fletcher_Scenario.lift(eu_ohmrun_Fletcher.Anon(function(equity,cont) {
		var this1 = eu_ohmrun_fletcher_Logging.log(stx_nano_Wildcard.__);
		var fn1 = function(pos) {
			return pos.with_stamp(function(stamp) {
				return stamp.relevel(2);
			});
		};
		(function(value,pos) {
			this1(value,fn1(pos));
		})(stx_log_Stringify.fromString("" + Std.string(equity))(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "eu/ohmrun/fletcher/Scenario.hx", lineNumber : 92, className : "eu.ohmrun.fletcher.ScenarioLift", methodName : "errate"}));
		var self1 = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,equity.get_error());
		var v = stx_fail_Refuse.unit();
		var error;
		if(self1._hx_index == 0) {
			var v1 = self1.v;
			error = v1;
		} else {
			error = v;
		}
		var self1 = cont;
		return stx_LiftIf.if_else(stx_nano_EquityLift.has_error(equity),function() {
			var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_EquityLift.clear(equity));
			var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
				trg.trigger(value);
				return trg;
			}));
			return this1;
		},function() {
			return eu_ohmrun_fletcher_ReceiverLift.map(eu_ohmrun_Fletcher.forward(self,stx_nano_EquityLift.defuse(equity)),function(equity) {
				return stx_nano_EquityLift.errata(equity,function(x) {
					return stx_fail_Refuse.concat(error,stx_fail_Refuse.errate(x,fn));
				});
			});
		}).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self1;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	}));
};
eu_ohmrun_fletcher_ScenarioLift.provide = function(self,p) {
	var this1 = eu_ohmrun_Fletcher.Anon(function(_,cont) {
		var self1 = cont;
		return eu_ohmrun_Fletcher.forward(self,p).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self1;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	});
	return this1;
};
var eu_ohmrun_fletcher_Scenario = {};
eu_ohmrun_fletcher_Scenario._new = function(self) {
	var this1 = self;
	return this1;
};
eu_ohmrun_fletcher_Scenario.lift = function(self) {
	return eu_ohmrun_fletcher_Scenario._new(self);
};
eu_ohmrun_fletcher_Scenario.prj = function(this1) {
	return this1;
};
eu_ohmrun_fletcher_Scenario.get_self = function(this1) {
	return eu_ohmrun_fletcher_Scenario.lift(this1);
};
eu_ohmrun_fletcher_Scenario.toFletcher = function(this1) {
	return eu_ohmrun_Fletcher.lift(this1);
};
var eu_ohmrun_fletcher_Terminal = {};
eu_ohmrun_fletcher_Terminal.unit = function() {
	var this1 = eu_ohmrun_fletcher_core_Cont.lift(new eu_ohmrun_fletcher_core_cont_term_AnonAnon(function(fn) {
		return fn(new tink_core_FutureTrigger());
	}));
	return this1;
};
eu_ohmrun_fletcher_Terminal.lift = function(self) {
	var this1 = self;
	return this1;
};
eu_ohmrun_fletcher_Terminal._new = function(self) {
	var this1 = self;
	return this1;
};
eu_ohmrun_fletcher_Terminal.toSettle = function(this1) {
	return eu_ohmrun_fletcher_core_Settle._new(this1.toCont());
};
eu_ohmrun_fletcher_Terminal.toTerminal = function(this1) {
	return this1;
};
eu_ohmrun_fletcher_Terminal.prj = function(this1) {
	return this1;
};
var eu_ohmrun_fletcher_TerminalLift = function() { };
$hxClasses["eu.ohmrun.fletcher.TerminalLift"] = eu_ohmrun_fletcher_TerminalLift;
eu_ohmrun_fletcher_TerminalLift.__name__ = "eu.ohmrun.fletcher.TerminalLift";
eu_ohmrun_fletcher_TerminalLift.lift = function(self) {
	var this1 = self;
	return this1;
};
eu_ohmrun_fletcher_TerminalLift.error = function(self,e) {
	var value = stx_nano_lift_LiftNano.failure(stx_nano_Wildcard.__,e);
	var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(self),function(trg) {
		trg.trigger(value);
		return trg;
	}));
	return this1;
};
eu_ohmrun_fletcher_TerminalLift.value = function(self,r) {
	var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,r);
	var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(self),function(trg) {
		trg.trigger(value);
		return trg;
	}));
	return this1;
};
eu_ohmrun_fletcher_TerminalLift.issue = function(self,value) {
	var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(self),function(trg) {
		trg.trigger(value);
		return trg;
	}));
	return this1;
};
eu_ohmrun_fletcher_TerminalLift.later = function(self,ft,pos) {
	var this1 = eu_ohmrun_fletcher_core_Cont.lift(new eu_ohmrun_fletcher_core_cont_term_Anon(function(r_ipt) {
		var next = new tink_core_FutureTrigger();
		var fst = self.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(t_ipt) {
			ft.handle(function(res) {
				t_ipt.trigger(res);
				next.trigger(res);
			});
			var this1 = null;
			return this1;
		})));
		var snd = r_ipt.apply(next);
		return stx_stream_WorkLift.seq(fst,snd);
	}));
	return this1;
};
eu_ohmrun_fletcher_TerminalLift.tap = function(self,fn) {
	return eu_ohmrun_fletcher_TerminalLift.lift(eu_ohmrun_fletcher_core_Cont.lift(new eu_ohmrun_fletcher_core_cont_term_AnonAnon(function(cont) {
		var this1 = self;
		return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(p) {
			p.handle(fn);
			return cont(p);
		})));
	})));
};
eu_ohmrun_fletcher_TerminalLift.mod = function(self,g) {
	return eu_ohmrun_fletcher_TerminalLift.lift(eu_ohmrun_fletcher_core_Cont.lift(new eu_ohmrun_fletcher_core_cont_term_AnonMod(self,g)));
};
eu_ohmrun_fletcher_TerminalLift.receive = function(self,receiver) {
	return receiver.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
		var this1 = self;
		return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
			oc.handle(function(out) {
				ip.trigger(out);
			});
			var this1 = null;
			return this1;
		})));
	})));
};
var eu_ohmrun_fletcher_TerminalInput = {};
eu_ohmrun_fletcher_TerminalInput._new = function(self) {
	var this1 = self;
	return this1;
};
eu_ohmrun_fletcher_TerminalInput.lift = function(self) {
	return eu_ohmrun_fletcher_TerminalInput._new(self);
};
eu_ohmrun_fletcher_TerminalInput.prj = function(this1) {
	return this1;
};
eu_ohmrun_fletcher_TerminalInput.get_self = function(this1) {
	return eu_ohmrun_fletcher_TerminalInput._new(this1);
};
eu_ohmrun_fletcher_TerminalInput.toReceiverInput = function(this1) {
	return eu_ohmrun_fletcher_ReceiverInput.lift(this1);
};
eu_ohmrun_fletcher_TerminalInput.unit = function() {
	return new tink_core_FutureTrigger();
};
var eu_ohmrun_fletcher_TerminalSink = {};
eu_ohmrun_fletcher_TerminalSink._new = function(self) {
	var this1 = self;
	return this1;
};
eu_ohmrun_fletcher_TerminalSink.lift = function(self) {
	return eu_ohmrun_fletcher_TerminalSink._new(self);
};
eu_ohmrun_fletcher_TerminalSink.seq = function(this1,that) {
	return eu_ohmrun_fletcher_TerminalSink._new(function(oc) {
		return stx_stream_WorkLift.seq(this1(oc),that(oc));
	});
};
eu_ohmrun_fletcher_TerminalSink.unit = function() {
	return eu_ohmrun_fletcher_TerminalSink._new(function(x) {
		var this1 = null;
		return this1;
	});
};
eu_ohmrun_fletcher_TerminalSink.prj = function(this1) {
	return this1;
};
eu_ohmrun_fletcher_TerminalSink.get_self = function(this1) {
	return eu_ohmrun_fletcher_TerminalSink._new(this1);
};
eu_ohmrun_fletcher_TerminalSink.reply = function(this1) {
	return this1(new tink_core_FutureTrigger());
};
var eu_ohmrun_fletcher_VentureLift = function() { };
$hxClasses["eu.ohmrun.fletcher.VentureLift"] = eu_ohmrun_fletcher_VentureLift;
eu_ohmrun_fletcher_VentureLift.__name__ = "eu.ohmrun.fletcher.VentureLift";
eu_ohmrun_fletcher_VentureLift.lift = function(self) {
	var this1 = self;
	return this1;
};
var eu_ohmrun_fletcher_Venture = {};
eu_ohmrun_fletcher_Venture._new = function(self) {
	var this1 = self;
	return this1;
};
eu_ohmrun_fletcher_Venture.lift = function(self) {
	var this1 = self;
	return this1;
};
eu_ohmrun_fletcher_Venture.prj = function(this1) {
	return this1;
};
eu_ohmrun_fletcher_Venture.get_self = function(this1) {
	var this2 = this1;
	return this2;
};
eu_ohmrun_fletcher_Venture.fromFun = function(fn) {
	var fn1 = fn;
	var this1 = eu_ohmrun_Fletcher.Anon(function(p,cont) {
		var res = fn1(p);
		var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,res);
		var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
			trg.trigger(value);
			return trg;
		}));
		var resI = this1;
		var self = cont;
		return resI.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	});
	return this1;
};
var eu_ohmrun_fletcher_core_ContApi = function() { };
$hxClasses["eu.ohmrun.fletcher.core.ContApi"] = eu_ohmrun_fletcher_core_ContApi;
eu_ohmrun_fletcher_core_ContApi.__name__ = "eu.ohmrun.fletcher.core.ContApi";
eu_ohmrun_fletcher_core_ContApi.__isInterface__ = true;
eu_ohmrun_fletcher_core_ContApi.prototype = {
	apply: null
	,toCont: null
	,__class__: eu_ohmrun_fletcher_core_ContApi
};
var eu_ohmrun_fletcher_core_ContCls = function() { };
$hxClasses["eu.ohmrun.fletcher.core.ContCls"] = eu_ohmrun_fletcher_core_ContCls;
eu_ohmrun_fletcher_core_ContCls.__name__ = "eu.ohmrun.fletcher.core.ContCls";
eu_ohmrun_fletcher_core_ContCls.__interfaces__ = [eu_ohmrun_fletcher_core_ContApi];
eu_ohmrun_fletcher_core_ContCls.prototype = {
	apply: null
	,toCont: function() {
		var this1 = this;
		return this1;
	}
	,__class__: eu_ohmrun_fletcher_core_ContCls
};
var eu_ohmrun_fletcher_core_ContLift = function() { };
$hxClasses["eu.ohmrun.fletcher.core.ContLift"] = eu_ohmrun_fletcher_core_ContLift;
eu_ohmrun_fletcher_core_ContLift.__name__ = "eu.ohmrun.fletcher.core.ContLift";
eu_ohmrun_fletcher_core_ContLift.map = function(self,fn) {
	var this1 = new eu_ohmrun_fletcher_core_cont_term_AnonMap(self,fn);
	return this1;
};
eu_ohmrun_fletcher_core_ContLift.flat_map = function(self,fn) {
	return new eu_ohmrun_fletcher_core_cont_term_AnonFlatMap(self,fn);
};
eu_ohmrun_fletcher_core_ContLift.zip_with = function(self,that,fn) {
	return new eu_ohmrun_fletcher_core_cont_term_AnonZipWith(self,that,fn);
};
eu_ohmrun_fletcher_core_ContLift.mod = function(self,fn) {
	return new eu_ohmrun_fletcher_core_cont_term_AnonMod(self,fn);
};
var eu_ohmrun_fletcher_core_Cont = {};
eu_ohmrun_fletcher_core_Cont._new = function(self) {
	var this1 = self;
	return this1;
};
eu_ohmrun_fletcher_core_Cont.lift = function(self) {
	var this1 = self;
	return this1;
};
eu_ohmrun_fletcher_core_Cont.prj = function(this1) {
	return this1;
};
eu_ohmrun_fletcher_core_Cont.get_self = function(this1) {
	return eu_ohmrun_fletcher_core_Cont.lift(this1);
};
eu_ohmrun_fletcher_core_Cont.Each = function(self,fn) {
	return eu_ohmrun_fletcher_core_Cont.lift(new eu_ohmrun_fletcher_core_cont_term_AnonEach(self,fn));
};
eu_ohmrun_fletcher_core_Cont.Mod = function(self,fn) {
	return eu_ohmrun_fletcher_core_Cont.lift(new eu_ohmrun_fletcher_core_cont_term_AnonMod(self,fn));
};
eu_ohmrun_fletcher_core_Cont.Anon = function(self) {
	return eu_ohmrun_fletcher_core_Cont.lift(new eu_ohmrun_fletcher_core_cont_term_Anon(self));
};
eu_ohmrun_fletcher_core_Cont.AnonAnon = function(self) {
	return eu_ohmrun_fletcher_core_Cont.lift(new eu_ohmrun_fletcher_core_cont_term_AnonAnon(self));
};
var eu_ohmrun_fletcher_core_Context = {};
eu_ohmrun_fletcher_core_Context.pure = function(environment) {
	return eu_ohmrun_fletcher_core_Context.make(environment);
};
eu_ohmrun_fletcher_core_Context.make = function(environment,on_value,on_error) {
	var result = new eu_ohmrun_fletcher_core_ContextCls(environment);
	if(stx_pico_OptionLift.is_defined(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,on_value))) {
		result.on_value = on_value;
	}
	if(stx_pico_OptionLift.is_defined(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,on_error))) {
		result.on_error = on_error;
	}
	return result;
};
eu_ohmrun_fletcher_core_Context.fromInput = function(environment) {
	return eu_ohmrun_fletcher_core_Context.make(environment);
};
eu_ohmrun_fletcher_core_Context.load = function(this1,arrowlet) {
	return new eu_ohmrun_fletcher_Completion(this1,arrowlet);
};
var eu_ohmrun_fletcher_core_ContextCls = function(environment) {
	this.environment = environment;
};
$hxClasses["eu.ohmrun.fletcher.core.ContextCls"] = eu_ohmrun_fletcher_core_ContextCls;
eu_ohmrun_fletcher_core_ContextCls.__name__ = "eu.ohmrun.fletcher.core.ContextCls";
eu_ohmrun_fletcher_core_ContextCls.prototype = {
	environment: null
	,on_error: function(e) {
		throw haxe_Exception.thrown(e);
	}
	,on_value: function(r) {
		var this1 = eu_ohmrun_fletcher_Logging.log(stx_nano_Wildcard.__);
		var fn = function(pos) {
			return pos.with_stamp(function(stamp) {
				return stamp.relevel(2);
			});
		};
		(function(value,pos) {
			this1(value,fn(pos));
		})(new stx_log_EntryCtr().pure(r),stx_log_LogPosition.fromPos({ fileName : "eu/ohmrun/fletcher/core/ContextCls.hx", lineNumber : 12, className : "eu.ohmrun.fletcher.core.ContextCls", methodName : "on_value"}));
	}
	,__class__: eu_ohmrun_fletcher_core_ContextCls
};
var eu_ohmrun_fletcher_core_SettleLift = function() { };
$hxClasses["eu.ohmrun.fletcher.core.SettleLift"] = eu_ohmrun_fletcher_core_SettleLift;
eu_ohmrun_fletcher_core_SettleLift.__name__ = "eu.ohmrun.fletcher.core.SettleLift";
eu_ohmrun_fletcher_core_SettleLift.lift = function(self) {
	return eu_ohmrun_fletcher_core_Settle._new(self);
};
eu_ohmrun_fletcher_core_SettleLift.map = function(self,fn) {
	return eu_ohmrun_fletcher_core_SettleLift.lift(new eu_ohmrun_fletcher_core_cont_term_AnonMap(eu_ohmrun_fletcher_core_Settle.toCont(self),fn));
};
var eu_ohmrun_fletcher_core_Settle = {};
eu_ohmrun_fletcher_core_Settle._new = function(self) {
	var this1 = self;
	return this1;
};
eu_ohmrun_fletcher_core_Settle.lift = function(self) {
	return eu_ohmrun_fletcher_core_Settle._new(self);
};
eu_ohmrun_fletcher_core_Settle.prj = function(this1) {
	return this1;
};
eu_ohmrun_fletcher_core_Settle.get_self = function(this1) {
	return eu_ohmrun_fletcher_core_Settle._new(this1);
};
eu_ohmrun_fletcher_core_Settle.unit = function() {
	return eu_ohmrun_fletcher_core_Settle._new(new eu_ohmrun_fletcher_core_settle_term_Unit());
};
eu_ohmrun_fletcher_core_Settle.pure = function(v) {
	return eu_ohmrun_fletcher_core_Settle._new(new eu_ohmrun_fletcher_core_settle_term_Pure(v));
};
eu_ohmrun_fletcher_core_Settle.toCont = function(this1) {
	return this1.toCont();
};
var eu_ohmrun_fletcher_core_cont_term_Anon = function(_apply) {
	this._apply = _apply;
};
$hxClasses["eu.ohmrun.fletcher.core.cont.term.Anon"] = eu_ohmrun_fletcher_core_cont_term_Anon;
eu_ohmrun_fletcher_core_cont_term_Anon.__name__ = "eu.ohmrun.fletcher.core.cont.term.Anon";
eu_ohmrun_fletcher_core_cont_term_Anon.__super__ = eu_ohmrun_fletcher_core_ContCls;
eu_ohmrun_fletcher_core_cont_term_Anon.prototype = $extend(eu_ohmrun_fletcher_core_ContCls.prototype,{
	_apply: null
	,apply: function(p) {
		return this._apply(p);
	}
	,__class__: eu_ohmrun_fletcher_core_cont_term_Anon
});
var eu_ohmrun_fletcher_core_cont_term_AnonAnon = function(_apply) {
	this._apply = _apply;
};
$hxClasses["eu.ohmrun.fletcher.core.cont.term.AnonAnon"] = eu_ohmrun_fletcher_core_cont_term_AnonAnon;
eu_ohmrun_fletcher_core_cont_term_AnonAnon.__name__ = "eu.ohmrun.fletcher.core.cont.term.AnonAnon";
eu_ohmrun_fletcher_core_cont_term_AnonAnon.__super__ = eu_ohmrun_fletcher_core_ContCls;
eu_ohmrun_fletcher_core_cont_term_AnonAnon.prototype = $extend(eu_ohmrun_fletcher_core_ContCls.prototype,{
	_apply: null
	,apply: function(p) {
		return this._apply($bind(p,p.apply));
	}
	,__class__: eu_ohmrun_fletcher_core_cont_term_AnonAnon
});
var eu_ohmrun_fletcher_core_cont_term_Delegate = function(delegate) {
	this.delegate = delegate;
};
$hxClasses["eu.ohmrun.fletcher.core.cont.term.Delegate"] = eu_ohmrun_fletcher_core_cont_term_Delegate;
eu_ohmrun_fletcher_core_cont_term_Delegate.__name__ = "eu.ohmrun.fletcher.core.cont.term.Delegate";
eu_ohmrun_fletcher_core_cont_term_Delegate.__super__ = eu_ohmrun_fletcher_core_ContCls;
eu_ohmrun_fletcher_core_cont_term_Delegate.prototype = $extend(eu_ohmrun_fletcher_core_ContCls.prototype,{
	delegate: null
	,__class__: eu_ohmrun_fletcher_core_cont_term_Delegate
});
var eu_ohmrun_fletcher_core_cont_term_Each = function(delegate) {
	eu_ohmrun_fletcher_core_cont_term_Delegate.call(this,delegate);
};
$hxClasses["eu.ohmrun.fletcher.core.cont.term.Each"] = eu_ohmrun_fletcher_core_cont_term_Each;
eu_ohmrun_fletcher_core_cont_term_Each.__name__ = "eu.ohmrun.fletcher.core.cont.term.Each";
eu_ohmrun_fletcher_core_cont_term_Each.__super__ = eu_ohmrun_fletcher_core_cont_term_Delegate;
eu_ohmrun_fletcher_core_cont_term_Each.prototype = $extend(eu_ohmrun_fletcher_core_cont_term_Delegate.prototype,{
	each: null
	,apply: function(fn) {
		var _gthis = this;
		return this.delegate.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(p) {
			_gthis.each(p);
			return fn.apply(p);
		})));
	}
	,__class__: eu_ohmrun_fletcher_core_cont_term_Each
});
var eu_ohmrun_fletcher_core_cont_term_AnonEach = function(delegate,_each) {
	eu_ohmrun_fletcher_core_cont_term_Each.call(this,delegate);
	this._each = _each;
};
$hxClasses["eu.ohmrun.fletcher.core.cont.term.AnonEach"] = eu_ohmrun_fletcher_core_cont_term_AnonEach;
eu_ohmrun_fletcher_core_cont_term_AnonEach.__name__ = "eu.ohmrun.fletcher.core.cont.term.AnonEach";
eu_ohmrun_fletcher_core_cont_term_AnonEach.__super__ = eu_ohmrun_fletcher_core_cont_term_Each;
eu_ohmrun_fletcher_core_cont_term_AnonEach.prototype = $extend(eu_ohmrun_fletcher_core_cont_term_Each.prototype,{
	_each: null
	,each: function(p) {
		this._each(p);
	}
	,__class__: eu_ohmrun_fletcher_core_cont_term_AnonEach
});
var eu_ohmrun_fletcher_core_cont_term_FlatMap = function(delegate) {
	eu_ohmrun_fletcher_core_cont_term_Delegate.call(this,delegate);
};
$hxClasses["eu.ohmrun.fletcher.core.cont.term.FlatMap"] = eu_ohmrun_fletcher_core_cont_term_FlatMap;
eu_ohmrun_fletcher_core_cont_term_FlatMap.__name__ = "eu.ohmrun.fletcher.core.cont.term.FlatMap";
eu_ohmrun_fletcher_core_cont_term_FlatMap.__super__ = eu_ohmrun_fletcher_core_cont_term_Delegate;
eu_ohmrun_fletcher_core_cont_term_FlatMap.prototype = $extend(eu_ohmrun_fletcher_core_cont_term_Delegate.prototype,{
	flat_map: null
	,apply: function(fn) {
		var _gthis = this;
		return this.delegate.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(p) {
			return _gthis.flat_map(p).apply(fn);
		})));
	}
	,__class__: eu_ohmrun_fletcher_core_cont_term_FlatMap
});
var eu_ohmrun_fletcher_core_cont_term_AnonFlatMap = function(delegate,_flat_map) {
	eu_ohmrun_fletcher_core_cont_term_FlatMap.call(this,delegate);
	this._flat_map = _flat_map;
};
$hxClasses["eu.ohmrun.fletcher.core.cont.term.AnonFlatMap"] = eu_ohmrun_fletcher_core_cont_term_AnonFlatMap;
eu_ohmrun_fletcher_core_cont_term_AnonFlatMap.__name__ = "eu.ohmrun.fletcher.core.cont.term.AnonFlatMap";
eu_ohmrun_fletcher_core_cont_term_AnonFlatMap.__super__ = eu_ohmrun_fletcher_core_cont_term_FlatMap;
eu_ohmrun_fletcher_core_cont_term_AnonFlatMap.prototype = $extend(eu_ohmrun_fletcher_core_cont_term_FlatMap.prototype,{
	_flat_map: null
	,flat_map: function(p) {
		return this._flat_map(p);
	}
	,__class__: eu_ohmrun_fletcher_core_cont_term_AnonFlatMap
});
var eu_ohmrun_fletcher_core_cont_term_Map = function(delegate) {
	eu_ohmrun_fletcher_core_cont_term_Delegate.call(this,delegate);
};
$hxClasses["eu.ohmrun.fletcher.core.cont.term.Map"] = eu_ohmrun_fletcher_core_cont_term_Map;
eu_ohmrun_fletcher_core_cont_term_Map.__name__ = "eu.ohmrun.fletcher.core.cont.term.Map";
eu_ohmrun_fletcher_core_cont_term_Map.__super__ = eu_ohmrun_fletcher_core_cont_term_Delegate;
eu_ohmrun_fletcher_core_cont_term_Map.prototype = $extend(eu_ohmrun_fletcher_core_cont_term_Delegate.prototype,{
	map: null
	,apply: function(fn) {
		var _gthis = this;
		return this.delegate.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(p) {
			return fn.apply(_gthis.map(p));
		})));
	}
	,__class__: eu_ohmrun_fletcher_core_cont_term_Map
});
var eu_ohmrun_fletcher_core_cont_term_AnonMap = function(delegate,_map) {
	eu_ohmrun_fletcher_core_cont_term_Map.call(this,delegate);
	this._map = _map;
};
$hxClasses["eu.ohmrun.fletcher.core.cont.term.AnonMap"] = eu_ohmrun_fletcher_core_cont_term_AnonMap;
eu_ohmrun_fletcher_core_cont_term_AnonMap.__name__ = "eu.ohmrun.fletcher.core.cont.term.AnonMap";
eu_ohmrun_fletcher_core_cont_term_AnonMap.__super__ = eu_ohmrun_fletcher_core_cont_term_Map;
eu_ohmrun_fletcher_core_cont_term_AnonMap.prototype = $extend(eu_ohmrun_fletcher_core_cont_term_Map.prototype,{
	_map: null
	,map: function(p) {
		return this._map(p);
	}
	,__class__: eu_ohmrun_fletcher_core_cont_term_AnonMap
});
var eu_ohmrun_fletcher_core_cont_term_Mod = function(delegate) {
	eu_ohmrun_fletcher_core_cont_term_Delegate.call(this,delegate);
};
$hxClasses["eu.ohmrun.fletcher.core.cont.term.Mod"] = eu_ohmrun_fletcher_core_cont_term_Mod;
eu_ohmrun_fletcher_core_cont_term_Mod.__name__ = "eu.ohmrun.fletcher.core.cont.term.Mod";
eu_ohmrun_fletcher_core_cont_term_Mod.__super__ = eu_ohmrun_fletcher_core_cont_term_Delegate;
eu_ohmrun_fletcher_core_cont_term_Mod.prototype = $extend(eu_ohmrun_fletcher_core_cont_term_Delegate.prototype,{
	mod: null
	,apply: function(fn) {
		return this.mod(this.delegate.apply(fn));
	}
	,__class__: eu_ohmrun_fletcher_core_cont_term_Mod
});
var eu_ohmrun_fletcher_core_cont_term_AnonMod = function(delegate,_mod) {
	eu_ohmrun_fletcher_core_cont_term_Mod.call(this,delegate);
	this._mod = _mod;
};
$hxClasses["eu.ohmrun.fletcher.core.cont.term.AnonMod"] = eu_ohmrun_fletcher_core_cont_term_AnonMod;
eu_ohmrun_fletcher_core_cont_term_AnonMod.__name__ = "eu.ohmrun.fletcher.core.cont.term.AnonMod";
eu_ohmrun_fletcher_core_cont_term_AnonMod.__super__ = eu_ohmrun_fletcher_core_cont_term_Mod;
eu_ohmrun_fletcher_core_cont_term_AnonMod.prototype = $extend(eu_ohmrun_fletcher_core_cont_term_Mod.prototype,{
	_mod: null
	,mod: function(r) {
		return this._mod(r);
	}
	,__class__: eu_ohmrun_fletcher_core_cont_term_AnonMod
});
var eu_ohmrun_fletcher_core_cont_term_ZipWith = function(lhs,rhs) {
	this.lhs = lhs;
	this.rhs = rhs;
};
$hxClasses["eu.ohmrun.fletcher.core.cont.term.ZipWith"] = eu_ohmrun_fletcher_core_cont_term_ZipWith;
eu_ohmrun_fletcher_core_cont_term_ZipWith.__name__ = "eu.ohmrun.fletcher.core.cont.term.ZipWith";
eu_ohmrun_fletcher_core_cont_term_ZipWith.__super__ = eu_ohmrun_fletcher_core_ContCls;
eu_ohmrun_fletcher_core_cont_term_ZipWith.prototype = $extend(eu_ohmrun_fletcher_core_ContCls.prototype,{
	lhs: null
	,rhs: null
	,zip: null
	,apply: function(fn) {
		var _gthis = this;
		return this.lhs.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(p) {
			return _gthis.rhs.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(pI) {
				return fn.apply(_gthis.zip(p,pI));
			})));
		})));
	}
	,__class__: eu_ohmrun_fletcher_core_cont_term_ZipWith
});
var eu_ohmrun_fletcher_core_cont_term_AnonZipWith = function(lhs,rhs,_zip) {
	eu_ohmrun_fletcher_core_cont_term_ZipWith.call(this,lhs,rhs);
	this._zip = _zip;
};
$hxClasses["eu.ohmrun.fletcher.core.cont.term.AnonZipWith"] = eu_ohmrun_fletcher_core_cont_term_AnonZipWith;
eu_ohmrun_fletcher_core_cont_term_AnonZipWith.__name__ = "eu.ohmrun.fletcher.core.cont.term.AnonZipWith";
eu_ohmrun_fletcher_core_cont_term_AnonZipWith.__super__ = eu_ohmrun_fletcher_core_cont_term_ZipWith;
eu_ohmrun_fletcher_core_cont_term_AnonZipWith.prototype = $extend(eu_ohmrun_fletcher_core_cont_term_ZipWith.prototype,{
	_zip: null
	,zip: function(l,r) {
		return this._zip(l,r);
	}
	,__class__: eu_ohmrun_fletcher_core_cont_term_AnonZipWith
});
var eu_ohmrun_fletcher_core_settle_term_Pure = function(value) {
	this.value = value;
};
$hxClasses["eu.ohmrun.fletcher.core.settle.term.Pure"] = eu_ohmrun_fletcher_core_settle_term_Pure;
eu_ohmrun_fletcher_core_settle_term_Pure.__name__ = "eu.ohmrun.fletcher.core.settle.term.Pure";
eu_ohmrun_fletcher_core_settle_term_Pure.__super__ = eu_ohmrun_fletcher_core_ContCls;
eu_ohmrun_fletcher_core_settle_term_Pure.prototype = $extend(eu_ohmrun_fletcher_core_ContCls.prototype,{
	value: null
	,apply: function(fn) {
		return fn.apply(this.value);
	}
	,__class__: eu_ohmrun_fletcher_core_settle_term_Pure
});
var eu_ohmrun_fletcher_core_settle_term_Unit = function() {
};
$hxClasses["eu.ohmrun.fletcher.core.settle.term.Unit"] = eu_ohmrun_fletcher_core_settle_term_Unit;
eu_ohmrun_fletcher_core_settle_term_Unit.__name__ = "eu.ohmrun.fletcher.core.settle.term.Unit";
eu_ohmrun_fletcher_core_settle_term_Unit.__super__ = eu_ohmrun_fletcher_core_ContCls;
eu_ohmrun_fletcher_core_settle_term_Unit.prototype = $extend(eu_ohmrun_fletcher_core_ContCls.prototype,{
	apply: function(fn) {
		var this1 = null;
		return this1;
	}
	,__class__: eu_ohmrun_fletcher_core_settle_term_Unit
});
var eu_ohmrun_fletcher_receiver_term_Delegate = function(delegate) {
	this.delegate = delegate;
};
$hxClasses["eu.ohmrun.fletcher.receiver.term.Delegate"] = eu_ohmrun_fletcher_receiver_term_Delegate;
eu_ohmrun_fletcher_receiver_term_Delegate.__name__ = "eu.ohmrun.fletcher.receiver.term.Delegate";
eu_ohmrun_fletcher_receiver_term_Delegate.__super__ = eu_ohmrun_fletcher_core_ContCls;
eu_ohmrun_fletcher_receiver_term_Delegate.prototype = $extend(eu_ohmrun_fletcher_core_ContCls.prototype,{
	delegate: null
	,__class__: eu_ohmrun_fletcher_receiver_term_Delegate
});
var eu_ohmrun_fletcher_receiver_term_Thunk = function(delegate) {
	eu_ohmrun_fletcher_receiver_term_Delegate.call(this,delegate);
};
$hxClasses["eu.ohmrun.fletcher.receiver.term.Thunk"] = eu_ohmrun_fletcher_receiver_term_Thunk;
eu_ohmrun_fletcher_receiver_term_Thunk.__name__ = "eu.ohmrun.fletcher.receiver.term.Thunk";
eu_ohmrun_fletcher_receiver_term_Thunk.__super__ = eu_ohmrun_fletcher_receiver_term_Delegate;
eu_ohmrun_fletcher_receiver_term_Thunk.prototype = $extend(eu_ohmrun_fletcher_receiver_term_Delegate.prototype,{
	apply: function(fn) {
		return this.delegate().apply(fn);
	}
	,__class__: eu_ohmrun_fletcher_receiver_term_Thunk
});
var stx_pico_ApplyApi = function() { };
$hxClasses["stx.pico.ApplyApi"] = stx_pico_ApplyApi;
stx_pico_ApplyApi.__name__ = "stx.pico.ApplyApi";
stx_pico_ApplyApi.__isInterface__ = true;
stx_pico_ApplyApi.prototype = {
	apply: null
	,toApply: null
	,__class__: stx_pico_ApplyApi
};
var stx_pico_ApplyCls = function() { };
$hxClasses["stx.pico.ApplyCls"] = stx_pico_ApplyCls;
stx_pico_ApplyCls.__name__ = "stx.pico.ApplyCls";
stx_pico_ApplyCls.__interfaces__ = [stx_pico_ApplyApi];
stx_pico_ApplyCls.prototype = {
	apply: null
	,toApply: function() {
		return this;
	}
	,__class__: stx_pico_ApplyCls
};
var eu_ohmrun_fletcher_receiver_$sink_term_Seq = function(lhs,rhs) {
	this.lhs = lhs;
	this.rhs = rhs;
};
$hxClasses["eu.ohmrun.fletcher.receiver_sink.term.Seq"] = eu_ohmrun_fletcher_receiver_$sink_term_Seq;
eu_ohmrun_fletcher_receiver_$sink_term_Seq.__name__ = "eu.ohmrun.fletcher.receiver_sink.term.Seq";
eu_ohmrun_fletcher_receiver_$sink_term_Seq.__super__ = stx_pico_ApplyCls;
eu_ohmrun_fletcher_receiver_$sink_term_Seq.prototype = $extend(stx_pico_ApplyCls.prototype,{
	lhs: null
	,rhs: null
	,apply: function(p) {
		return stx_stream_WorkLift.seq(this.lhs.apply(p),this.rhs.apply(p));
	}
	,__class__: eu_ohmrun_fletcher_receiver_$sink_term_Seq
});
var eu_ohmrun_fletcher_receiver_$sink_term_Unit = function() {
};
$hxClasses["eu.ohmrun.fletcher.receiver_sink.term.Unit"] = eu_ohmrun_fletcher_receiver_$sink_term_Unit;
eu_ohmrun_fletcher_receiver_$sink_term_Unit.__name__ = "eu.ohmrun.fletcher.receiver_sink.term.Unit";
eu_ohmrun_fletcher_receiver_$sink_term_Unit.__super__ = stx_pico_ApplyCls;
eu_ohmrun_fletcher_receiver_$sink_term_Unit.prototype = $extend(stx_pico_ApplyCls.prototype,{
	apply: function(p) {
		var this1 = null;
		return this1;
	}
	,__class__: eu_ohmrun_fletcher_receiver_$sink_term_Unit
});
var eu_ohmrun_fletcher_term_Anon = function(_defer) {
	eu_ohmrun_FletcherCls.call(this);
	this._defer = _defer;
};
$hxClasses["eu.ohmrun.fletcher.term.Anon"] = eu_ohmrun_fletcher_term_Anon;
eu_ohmrun_fletcher_term_Anon.__name__ = "eu.ohmrun.fletcher.term.Anon";
eu_ohmrun_fletcher_term_Anon.__interfaces__ = [eu_ohmrun_FletcherApi];
eu_ohmrun_fletcher_term_Anon.__super__ = eu_ohmrun_FletcherCls;
eu_ohmrun_fletcher_term_Anon.prototype = $extend(eu_ohmrun_FletcherCls.prototype,{
	_defer: null
	,defer: function(p,cont) {
		return this._defer(p,cont);
	}
	,__class__: eu_ohmrun_fletcher_term_Anon
});
var eu_ohmrun_pml_AtomSum = $hxEnums["eu.ohmrun.pml.AtomSum"] = { __ename__:"eu.ohmrun.pml.AtomSum",__constructs__:null
	,AnSym: ($_=function(s) { return {_hx_index:0,s:s,__enum__:"eu.ohmrun.pml.AtomSum",toString:$estr}; },$_._hx_name="AnSym",$_.__params__ = ["s"],$_)
	,B: ($_=function(b) { return {_hx_index:1,b:b,__enum__:"eu.ohmrun.pml.AtomSum",toString:$estr}; },$_._hx_name="B",$_.__params__ = ["b"],$_)
	,N: ($_=function(fl) { return {_hx_index:2,fl:fl,__enum__:"eu.ohmrun.pml.AtomSum",toString:$estr}; },$_._hx_name="N",$_.__params__ = ["fl"],$_)
	,Str: ($_=function(str) { return {_hx_index:3,str:str,__enum__:"eu.ohmrun.pml.AtomSum",toString:$estr}; },$_._hx_name="Str",$_.__params__ = ["str"],$_)
	,Nul: {_hx_name:"Nul",_hx_index:4,__enum__:"eu.ohmrun.pml.AtomSum",toString:$estr}
};
eu_ohmrun_pml_AtomSum.__constructs__ = [eu_ohmrun_pml_AtomSum.AnSym,eu_ohmrun_pml_AtomSum.B,eu_ohmrun_pml_AtomSum.N,eu_ohmrun_pml_AtomSum.Str,eu_ohmrun_pml_AtomSum.Nul];
var eu_ohmrun_pml_AtomLift = function() { };
$hxClasses["eu.ohmrun.pml.AtomLift"] = eu_ohmrun_pml_AtomLift;
eu_ohmrun_pml_AtomLift.__name__ = "eu.ohmrun.pml.AtomLift";
eu_ohmrun_pml_AtomLift.toString = function(self) {
	switch(self._hx_index) {
	case 0:
		var s = self.s;
		return "" + s;
	case 1:
		var b = self.b;
		if(b == null) {
			return "null";
		} else {
			return "" + b;
		}
		break;
	case 2:
		var fl = self.fl;
		return Std.string(fl);
	case 3:
		var str = self.str;
		return "" + str;
	case 4:
		return "";
	}
};
var eu_ohmrun_pml_Atom = {};
eu_ohmrun_pml_Atom._new = function(self) {
	var this1 = self;
	return this1;
};
eu_ohmrun_pml_Atom.lift = function(self) {
	return eu_ohmrun_pml_Atom._new(self);
};
eu_ohmrun_pml_Atom.prj = function(this1) {
	return this1;
};
eu_ohmrun_pml_Atom.get_self = function(this1) {
	return eu_ohmrun_pml_Atom.lift(this1);
};
var eu_ohmrun_pml_Extract = function() { };
$hxClasses["eu.ohmrun.pml.Extract"] = eu_ohmrun_pml_Extract;
eu_ohmrun_pml_Extract.__name__ = "eu.ohmrun.pml.Extract";
eu_ohmrun_pml_Extract.handle_head = function(f) {
	return function(input) {
		var chk = input.content.head();
		switch(chk._hx_index) {
		case 0:
			var v = chk.v;
			return f(v);
		case 1:
			return stx_LiftParse.no(input,stx_fail_ParseFailureCode.fromString("empty input"));
		case 2:
			var e = chk.err;
			return stx_parse_lift_LiftParseFailureCodeResult.toParseResult_with(e,input);
		}
	};
};
eu_ohmrun_pml_Extract.unpack = function() {
	var this1 = new stx_parse_parser_term_Anon(function(input) {
		return (eu_ohmrun_pml_Extract.handle_head(function(x) {
			if(x._hx_index == 1) {
				var xs = x.list;
				var n = stx_ds_LinkedList.rfold(xs,function(next,memo) {
					return stx_parse_ParseInput.prepend(memo,next);
				},stx_parse_ParseInput.prepend(input.copy(input.content.drop(1)),eu_ohmrun_pml_PExprSum.PValue(eu_ohmrun_pml_AtomSum.Nul)));
				return stx_LiftParse.nil(n);
			} else {
				return stx_LiftParse.no(input,stx_fail_ParseFailureCode.fromString(eu_ohmrun_pml_Extract.e_not_a_group));
			}
		}))(input);
	},haxe_ds_Option.Some("unpack"),{ fileName : "eu/ohmrun/pml/Extract.hx", lineNumber : 19, className : "eu.ohmrun.pml.Extract", methodName : "unpack"});
	return this1;
};
eu_ohmrun_pml_Extract.wordish = function() {
	var this1 = new stx_parse_parser_term_Anon(function(input) {
		return (eu_ohmrun_pml_Extract.handle_head(function(x) {
			switch(x._hx_index) {
			case 0:
				var x1 = x.name;
				return stx_LiftParse.ok(input.copy(input.content.drop(1)),x1);
			case 2:
				var _g = x.value;
				switch(_g._hx_index) {
				case 0:
					var s = _g.s;
					return stx_LiftParse.ok(input.copy(input.content.drop(1)),s);
				case 3:
					var s = _g.str;
					return stx_LiftParse.ok(input.copy(input.content.drop(1)),s);
				default:
					return stx_LiftParse.no(input,stx_fail_ParseFailureCode.fromString("not wordish but " + (x == null ? "null" : eu_ohmrun_pml_PExpr.toString(x))));
				}
				break;
			default:
				return stx_LiftParse.no(input,stx_fail_ParseFailureCode.fromString("not wordish but " + (x == null ? "null" : eu_ohmrun_pml_PExpr.toString(x))));
			}
		}))(input);
	},haxe_ds_Option.Some("wordish"),{ fileName : "eu/ohmrun/pml/Extract.hx", lineNumber : 36, className : "eu.ohmrun.pml.Extract", methodName : "wordish"});
	return this1;
};
eu_ohmrun_pml_Extract.nul = function(name) {
	var this1 = new stx_parse_parser_term_Anon(function(input) {
		return (eu_ohmrun_pml_Extract.handle_head(function(x) {
			if(x._hx_index == 2) {
				if(x.value._hx_index == 4) {
					return stx_LiftParse.nil(input.copy(input.content.drop(1)));
				} else {
					return stx_LiftParse.no(input,stx_fail_ParseFailureCode.fromString("not Nul " + name));
				}
			} else {
				return stx_LiftParse.no(input,stx_fail_ParseFailureCode.fromString("not Nul " + name));
			}
		}))(input);
	},haxe_ds_Option.Some("nul " + name),{ fileName : "eu/ohmrun/pml/Extract.hx", lineNumber : 49, className : "eu.ohmrun.pml.Extract", methodName : "nul"});
	return this1;
};
eu_ohmrun_pml_Extract.symbol = function(name) {
	var this1 = new stx_parse_parser_term_Anon(function(input) {
		return (eu_ohmrun_pml_Extract.handle_head(function(x) {
			if(x._hx_index == 2) {
				var _g = x.value;
				if(_g._hx_index == 0) {
					var _g1 = _g.s;
					var s = _g1;
					if(s == name) {
						return stx_LiftParse.ok(input.copy(input.content.drop(1)),s);
					} else {
						var s = _g1;
						return stx_LiftParse.no(input,stx_fail_ParseFailureCode.fromString("symbol should be " + name + ", but is " + s));
					}
				} else {
					return stx_LiftParse.no(input,stx_fail_ParseFailureCode.fromString("not a symbol"));
				}
			} else {
				return stx_LiftParse.no(input,stx_fail_ParseFailureCode.fromString("not a symbol"));
			}
		}))(input);
	},haxe_ds_Option.Some("symbol"),{ fileName : "eu/ohmrun/pml/Extract.hx", lineNumber : 62, className : "eu.ohmrun.pml.Extract", methodName : "symbol"});
	return this1;
};
eu_ohmrun_pml_Extract.imbibe = function(p,name) {
	var this1 = new stx_parse_parser_term_AndR(eu_ohmrun_pml_Extract.unpack(),p,{ fileName : "stx/parse/Parsers.hx", lineNumber : 110, className : "stx.parse.Parsers", methodName : "AndR"});
	var this2 = new stx_parse_parser_term_AndL(stx_parse_Parser.get_self(this1),eu_ohmrun_pml_Extract.nul(name),{ fileName : "stx/parse/Parsers.hx", lineNumber : 113, className : "stx.parse.Parsers", methodName : "AndL"});
	return stx_parse_Parser.get_self(this2);
};
eu_ohmrun_pml_Extract.fmap = function(f,name) {
	var this1 = new stx_parse_parser_term_Anon(function(input) {
		return (eu_ohmrun_pml_Extract.handle_head(function(x) {
			var _g = f(x);
			switch(_g._hx_index) {
			case 0:
				var x = _g.v;
				return stx_LiftParse.ok(input.copy(input.content.drop(1)),x);
			case 1:
				return stx_LiftParse.no(input,stx_fail_ParseFailureCode.fromString("failed " + name));
			}
		}))(input);
	},stx_pico_Option.fromNullT(name),{ fileName : "eu/ohmrun/pml/Extract.hx", lineNumber : 82, className : "eu.ohmrun.pml.Extract", methodName : "fmap"});
	return this1;
};
var eu_ohmrun_pml_Logging = function() { };
$hxClasses["eu.ohmrun.pml.Logging"] = eu_ohmrun_pml_Logging;
eu_ohmrun_pml_Logging.__name__ = "eu.ohmrun.pml.Logging";
eu_ohmrun_pml_Logging.log = function(wildcard) {
	var self = stx_pico_OptionLift.map(stx_pkg_Pkg.source(stx_PkgLift.pkg(stx_nano_Wildcard.__,{ fileName : "eu/ohmrun/pml/Logging.hx", lineNumber : 9, className : "eu.ohmrun.pml.Logging", methodName : "log"})),function(scope) {
		var this1 = stx_Log.unit();
		var tag = scope.pack.join("/");
		var this2 = this1;
		var fn = function(pos) {
			return pos.with_stamp(function(stamp) {
				return stamp.tag(tag);
			});
		};
		return function(value,pos) {
			this2(value,fn(pos));
		};
	});
	if(self._hx_index == 0) {
		var v = self.v;
		return v;
	} else {
		return stx_Log.unit();
	}
};
var eu_ohmrun_pml_Module = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["eu.ohmrun.pml.Module"] = eu_ohmrun_pml_Module;
eu_ohmrun_pml_Module.__name__ = "eu.ohmrun.pml.Module";
eu_ohmrun_pml_Module.__super__ = stx_pico_Clazz;
eu_ohmrun_pml_Module.prototype = $extend(stx_pico_Clazz.prototype,{
	parse: function(string) {
		return eu_ohmrun_pml_PExpr.parse(string);
	}
	,parseI: function() {
		var p = new stx_parse_pml_Parser();
		var l = stx_parse_pml_Lexer;
		return function(input) {
			var a = l.main.apply(input);
			if(a.get_error().is_defined() == false) {
				var self = a.value;
				switch(self._hx_index) {
				case 0:
					var t = self.v;
					return p.main().apply(stx_parse_ParseInput.pure(stx_parse_core_Enumerable.array(stx_nano_Cluster.prj(t))));
				case 1:
					return stx_LiftParse.no(stx_parse_ParseInput.pure(stx_parse_core_Enumerable.array([])),stx_fail_ParseFailureCode.fromString("no lexed tokens"));
				}
			} else {
				return stx_parse_ParseResult.make(stx_parse_ParseInput.pure(stx_parse_core_Enumerable.array(stx_nano_Cluster.prj([]))),haxe_ds_Option.None,a.get_error());
			}
		};
	}
	,__class__: eu_ohmrun_pml_Module
});
var eu_ohmrun_pml_Num = $hxEnums["eu.ohmrun.pml.Num"] = { __ename__:"eu.ohmrun.pml.Num",__constructs__:null
	,KLFloat: ($_=function(fl) { return {_hx_index:0,fl:fl,__enum__:"eu.ohmrun.pml.Num",toString:$estr}; },$_._hx_name="KLFloat",$_.__params__ = ["fl"],$_)
	,KLInt: ($_=function(int) { return {_hx_index:1,int:int,__enum__:"eu.ohmrun.pml.Num",toString:$estr}; },$_._hx_name="KLInt",$_.__params__ = ["int"],$_)
};
eu_ohmrun_pml_Num.__constructs__ = [eu_ohmrun_pml_Num.KLFloat,eu_ohmrun_pml_Num.KLInt];
var eu_ohmrun_pml_PExprSum = $hxEnums["eu.ohmrun.pml.PExprSum"] = { __ename__:"eu.ohmrun.pml.PExprSum",__constructs__:null
	,PLabel: ($_=function(name) { return {_hx_index:0,name:name,__enum__:"eu.ohmrun.pml.PExprSum",toString:$estr}; },$_._hx_name="PLabel",$_.__params__ = ["name"],$_)
	,PGroup: ($_=function(list) { return {_hx_index:1,list:list,__enum__:"eu.ohmrun.pml.PExprSum",toString:$estr}; },$_._hx_name="PGroup",$_.__params__ = ["list"],$_)
	,PValue: ($_=function(value) { return {_hx_index:2,value:value,__enum__:"eu.ohmrun.pml.PExprSum",toString:$estr}; },$_._hx_name="PValue",$_.__params__ = ["value"],$_)
	,PEmpty: {_hx_name:"PEmpty",_hx_index:3,__enum__:"eu.ohmrun.pml.PExprSum",toString:$estr}
};
eu_ohmrun_pml_PExprSum.__constructs__ = [eu_ohmrun_pml_PExprSum.PLabel,eu_ohmrun_pml_PExprSum.PGroup,eu_ohmrun_pml_PExprSum.PValue,eu_ohmrun_pml_PExprSum.PEmpty];
var eu_ohmrun_pml_PExprLift = function() { };
$hxClasses["eu.ohmrun.pml.PExprLift"] = eu_ohmrun_pml_PExprLift;
eu_ohmrun_pml_PExprLift.__name__ = "eu.ohmrun.pml.PExprLift";
eu_ohmrun_pml_PExprLift.map = function(expr,fn) {
	switch(expr._hx_index) {
	case 0:
		var name = expr.name;
		return eu_ohmrun_pml_PExprSum.PLabel(name);
	case 1:
		var list = expr.list;
		return eu_ohmrun_pml_PExprSum.PGroup(stx_ds_LinkedList.map(list,function(e) {
			return eu_ohmrun_pml_PExprLift.map(e,fn);
		}));
	case 2:
		var value = expr.value;
		return eu_ohmrun_pml_PExprSum.PValue(fn(value));
	case 3:
		return eu_ohmrun_pml_PExprSum.PEmpty;
	}
};
eu_ohmrun_pml_PExprLift.eq = function(inner) {
	return new stx_assert_pml_eq_PExpr(inner);
};
eu_ohmrun_pml_PExprLift.lt = function(inner) {
	return new stx_assert_pml_ord_PExpr(inner);
};
eu_ohmrun_pml_PExprLift.comparable = function(inner) {
	return new stx_assert_pml_comparable_PExpr(inner);
};
eu_ohmrun_pml_PExprLift.denote = function(self,fn) {
	return new stx_g_denote_PExpr(fn).apply(self);
};
var eu_ohmrun_pml_PExpr = {};
eu_ohmrun_pml_PExpr._new = function(self) {
	var this1 = self;
	return this1;
};
eu_ohmrun_pml_PExpr.parse = function(str) {
	var timer = stx_nano_Timer.unit();
	var this1 = eu_ohmrun_pml_Logging.log(stx_nano_Wildcard.__);
	var fn = function(pos) {
		return pos.with_stamp(function(stamp) {
			return stamp.relevel(2);
		});
	};
	(function(value,pos) {
		this1(value,fn(pos));
	})(stx_log_Stringify.fromString("lex")(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "eu/ohmrun/pml/PExpr.hx", lineNumber : 16, className : "eu.ohmrun.pml._PExpr.PExpr_Impl_", methodName : "parse"}));
	var p = new stx_parse_pml_Parser();
	var l = stx_parse_pml_Lexer;
	var reader = stx_parse_ParseInput.pure(stx_parse_core_Enumerable.string(str));
	return eu_ohmrun_fletcher_ModulateLift.produce(eu_ohmrun_fletcher_ModulateLift.reclaim(eu_ohmrun_fletcher_Modulate.pure(l.main.apply(reader)),eu_ohmrun_fletcher_Convert.Fun(function(tkns) {
		var this1 = eu_ohmrun_pml_Logging.log(stx_nano_Wildcard.__);
		var fn = function(pos) {
			return pos.with_stamp(function(stamp) {
				return stamp.relevel(2);
			});
		};
		(function(value,pos) {
			this1(value,fn(pos));
		})(stx_log_Stringify.fromString("lex expr: " + stx_nano_Timer.since(timer))(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "eu/ohmrun/pml/PExpr.hx", lineNumber : 23, className : "eu.ohmrun.pml._PExpr.PExpr_Impl_", methodName : "parse"}));
		timer = stx_nano_Timer.start(timer);
		var this2 = eu_ohmrun_pml_Logging.log(stx_nano_Wildcard.__);
		var fn1 = function(pos) {
			return pos.with_stamp(function(stamp) {
				return stamp.relevel(1);
			});
		};
		(function(value,pos) {
			this2(value,fn1(pos));
		})(stx_log_Stringify.fromString("" + Std.string(tkns))(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "eu/ohmrun/pml/PExpr.hx", lineNumber : 25, className : "eu.ohmrun.pml._PExpr.PExpr_Impl_", methodName : "parse"}));
		return stx_LiftIf.if_else(tkns.get_error().is_defined() == false,function() {
			var self = tkns.value;
			var arr;
			if(self._hx_index == 0) {
				var v = self.v;
				arr = v;
			} else {
				arr = [];
			}
			var reader = stx_parse_ParseInput.pure(stx_parse_core_Enumerable.array(stx_nano_Cluster.prj(arr)));
			var tmp = eu_ohmrun_fletcher_Produce.pure(p.main().apply(reader));
			var self = function(_) {
				var this1 = eu_ohmrun_pml_Logging.log(stx_nano_Wildcard.__);
				var fn = function(pos) {
					return pos.with_stamp(function(stamp) {
						return stamp.relevel(2);
					});
				};
				(function(value,pos) {
					this1(value,fn(pos));
				})(stx_log_Stringify.fromString("parse expr: " + stx_nano_Timer.since(timer))(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "eu/ohmrun/pml/PExpr.hx", lineNumber : 32, className : "eu.ohmrun.pml._PExpr.PExpr_Impl_", methodName : "parse"}));
			};
			var fn = function(p) {
				self(p);
				return p;
			};
			var this1 = eu_ohmrun_Fletcher.Anon(function(p,cont) {
				var res = fn(p);
				var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,res);
				var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
					trg.trigger(value);
					return trg;
				}));
				var resI = this1;
				var self = cont;
				return resI.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
					var this1 = self;
					return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
						oc.handle(function(out) {
							ip.trigger(out);
						});
						var this1 = null;
						return this1;
					})));
				})));
			});
			return eu_ohmrun_fletcher_ProduceLift.convert(tmp,this1);
		},function() {
			return eu_ohmrun_fletcher_Produce.pure(stx_parse_ParseResult.make(stx_parse_ParseInput.pure(stx_parse_core_Enumerable.array(stx_nano_Cluster.prj([]))),null,tkns.get_error()));
		});
	})),stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,reader));
};
eu_ohmrun_pml_PExpr.lift = function(self) {
	return eu_ohmrun_pml_PExpr._new(self);
};
eu_ohmrun_pml_PExpr.prj = function(this1) {
	return this1;
};
eu_ohmrun_pml_PExpr.get_self = function(this1) {
	return eu_ohmrun_pml_PExpr.lift(this1);
};
eu_ohmrun_pml_PExpr.conflate = function(this1,that) {
	switch(this1._hx_index) {
	case 0:
		var _g = this1.name;
		return eu_ohmrun_pml_PExprSum.PGroup(stx_ds_LinkedListSum.Cons(this1,stx_ds_LinkedListSum.Cons(that,stx_ds_LinkedListSum.Nil)));
	case 1:
		var array = this1.list;
		if(that._hx_index == 1) {
			var list = that.list;
			return eu_ohmrun_pml_PExprSum.PGroup(stx_ds_LinkedList.concat(array,list));
		} else {
			return eu_ohmrun_pml_PExprSum.PGroup(stx_ds_LinkedList.snoc(array,that));
		}
		break;
	case 2:
		var _g = this1.value;
		return eu_ohmrun_pml_PExprSum.PGroup(stx_ds_LinkedListSum.Cons(this1,stx_ds_LinkedListSum.Cons(that,stx_ds_LinkedListSum.Nil)));
	case 3:
		return that;
	}
};
eu_ohmrun_pml_PExpr.toString = function(this1) {
	return eu_ohmrun_pml_PExpr.toString_with(this1,Std.string);
};
eu_ohmrun_pml_PExpr.toString_with = function(this1,fn,width) {
	if(width == null) {
		width = 130;
	}
	var rec = null;
	rec = function(self,ind) {
		if(ind == null) {
			ind = "";
		}
		if(self == null) {
			return "";
		} else {
			switch(self._hx_index) {
			case 0:
				var name = self.name;
				return "" + name;
			case 1:
				var array = self.list;
				var ind1 = "" + ind + " ";
				var items = stx_ds_LinkedList.map(array,function(self) {
					return rec(self,ind1);
				});
				var length = stx_ds_LinkedList.lfold(items,function(n,m) {
					return m + n.length;
				},0);
				var horizontal = length < width;
				return stx_LiftIf.if_else(horizontal,function() {
					return "(" + stx_ds_LinkedList.join(items,",") + ")";
				},function() {
					return "(\n " + ind + stx_ds_LinkedList.join(items,",\n " + ind) + ("\n" + ind + ")");
				});
			case 2:
				var value = self.value;
				return fn(value);
			case 3:
				return "()";
			}
		}
	};
	return rec(this1);
};
eu_ohmrun_pml_PExpr.data_only = function(this1) {
	if(this1._hx_index == 1) {
		var xs = this1.list;
		return stx_ds_LinkedList.lfold(xs,function(n,m) {
			if(m._hx_index == 0) {
				var arr = m.v;
				if(n._hx_index == 2) {
					var value = n.value;
					return haxe_ds_Option.Some(stx_nano_ClusterLift.snoc(arr,value));
				} else {
					return haxe_ds_Option.None;
				}
			} else {
				return haxe_ds_Option.None;
			}
		},haxe_ds_Option.Some([]));
	} else {
		return haxe_ds_Option.None;
	}
};
var eu_ohmrun_pml_Token = $hxEnums["eu.ohmrun.pml.Token"] = { __ename__:"eu.ohmrun.pml.Token",__constructs__:null
	,TLParen: {_hx_name:"TLParen",_hx_index:0,__enum__:"eu.ohmrun.pml.Token",toString:$estr}
	,TRParen: {_hx_name:"TRParen",_hx_index:1,__enum__:"eu.ohmrun.pml.Token",toString:$estr}
	,TAtom: ($_=function(v) { return {_hx_index:2,v:v,__enum__:"eu.ohmrun.pml.Token",toString:$estr}; },$_._hx_name="TAtom",$_.__params__ = ["v"],$_)
	,TEof: {_hx_name:"TEof",_hx_index:3,__enum__:"eu.ohmrun.pml.Token",toString:$estr}
};
eu_ohmrun_pml_Token.__constructs__ = [eu_ohmrun_pml_Token.TLParen,eu_ohmrun_pml_Token.TRParen,eu_ohmrun_pml_Token.TAtom,eu_ohmrun_pml_Token.TEof];
var haxe_StackItem = $hxEnums["haxe.StackItem"] = { __ename__:"haxe.StackItem",__constructs__:null
	,CFunction: {_hx_name:"CFunction",_hx_index:0,__enum__:"haxe.StackItem",toString:$estr}
	,Module: ($_=function(m) { return {_hx_index:1,m:m,__enum__:"haxe.StackItem",toString:$estr}; },$_._hx_name="Module",$_.__params__ = ["m"],$_)
	,FilePos: ($_=function(s,file,line,column) { return {_hx_index:2,s:s,file:file,line:line,column:column,__enum__:"haxe.StackItem",toString:$estr}; },$_._hx_name="FilePos",$_.__params__ = ["s","file","line","column"],$_)
	,Method: ($_=function(classname,method) { return {_hx_index:3,classname:classname,method:method,__enum__:"haxe.StackItem",toString:$estr}; },$_._hx_name="Method",$_.__params__ = ["classname","method"],$_)
	,LocalFunction: ($_=function(v) { return {_hx_index:4,v:v,__enum__:"haxe.StackItem",toString:$estr}; },$_._hx_name="LocalFunction",$_.__params__ = ["v"],$_)
};
haxe_StackItem.__constructs__ = [haxe_StackItem.CFunction,haxe_StackItem.Module,haxe_StackItem.FilePos,haxe_StackItem.Method,haxe_StackItem.LocalFunction];
var haxe_CallStack = {};
haxe_CallStack.toString = function(stack) {
	var b = new StringBuf();
	var _g = 0;
	var _g1 = stack;
	while(_g < _g1.length) {
		var s = _g1[_g];
		++_g;
		b.b += "\nCalled from ";
		haxe_CallStack.itemToString(b,s);
	}
	return b.b;
};
haxe_CallStack.subtract = function(this1,stack) {
	var startIndex = -1;
	var i = -1;
	while(++i < this1.length) {
		var _g = 0;
		var _g1 = stack.length;
		while(_g < _g1) {
			var j = _g++;
			if(haxe_CallStack.equalItems(this1[i],stack[j])) {
				if(startIndex < 0) {
					startIndex = i;
				}
				++i;
				if(i >= this1.length) {
					break;
				}
			} else {
				startIndex = -1;
			}
		}
		if(startIndex >= 0) {
			break;
		}
	}
	if(startIndex >= 0) {
		return this1.slice(0,startIndex);
	} else {
		return this1;
	}
};
haxe_CallStack.equalItems = function(item1,item2) {
	if(item1 == null) {
		if(item2 == null) {
			return true;
		} else {
			return false;
		}
	} else {
		switch(item1._hx_index) {
		case 0:
			if(item2 == null) {
				return false;
			} else if(item2._hx_index == 0) {
				return true;
			} else {
				return false;
			}
			break;
		case 1:
			if(item2 == null) {
				return false;
			} else if(item2._hx_index == 1) {
				var m2 = item2.m;
				var m1 = item1.m;
				return m1 == m2;
			} else {
				return false;
			}
			break;
		case 2:
			if(item2 == null) {
				return false;
			} else if(item2._hx_index == 2) {
				var item21 = item2.s;
				var file2 = item2.file;
				var line2 = item2.line;
				var col2 = item2.column;
				var col1 = item1.column;
				var line1 = item1.line;
				var file1 = item1.file;
				var item11 = item1.s;
				if(file1 == file2 && line1 == line2 && col1 == col2) {
					return haxe_CallStack.equalItems(item11,item21);
				} else {
					return false;
				}
			} else {
				return false;
			}
			break;
		case 3:
			if(item2 == null) {
				return false;
			} else if(item2._hx_index == 3) {
				var class2 = item2.classname;
				var method2 = item2.method;
				var method1 = item1.method;
				var class1 = item1.classname;
				if(class1 == class2) {
					return method1 == method2;
				} else {
					return false;
				}
			} else {
				return false;
			}
			break;
		case 4:
			if(item2 == null) {
				return false;
			} else if(item2._hx_index == 4) {
				var v2 = item2.v;
				var v1 = item1.v;
				return v1 == v2;
			} else {
				return false;
			}
			break;
		}
	}
};
haxe_CallStack.itemToString = function(b,s) {
	switch(s._hx_index) {
	case 0:
		b.b += "a C function";
		break;
	case 1:
		var m = s.m;
		b.b += "module ";
		b.b += m == null ? "null" : "" + m;
		break;
	case 2:
		var s1 = s.s;
		var file = s.file;
		var line = s.line;
		var col = s.column;
		if(s1 != null) {
			haxe_CallStack.itemToString(b,s1);
			b.b += " (";
		}
		b.b += file == null ? "null" : "" + file;
		b.b += " line ";
		b.b += line == null ? "null" : "" + line;
		if(col != null) {
			b.b += " column ";
			b.b += col == null ? "null" : "" + col;
		}
		if(s1 != null) {
			b.b += ")";
		}
		break;
	case 3:
		var cname = s.classname;
		var meth = s.method;
		b.b += Std.string(cname == null ? "<unknown>" : cname);
		b.b += ".";
		b.b += meth == null ? "null" : "" + meth;
		break;
	case 4:
		var n = s.v;
		b.b += "local function #";
		b.b += n == null ? "null" : "" + n;
		break;
	}
};
var haxe_IMap = function() { };
$hxClasses["haxe.IMap"] = haxe_IMap;
haxe_IMap.__name__ = "haxe.IMap";
haxe_IMap.__isInterface__ = true;
haxe_IMap.prototype = {
	get: null
	,set: null
	,exists: null
	,keys: null
	,keyValueIterator: null
	,__class__: haxe_IMap
};
var haxe_EntryPoint = function() { };
$hxClasses["haxe.EntryPoint"] = haxe_EntryPoint;
haxe_EntryPoint.__name__ = "haxe.EntryPoint";
haxe_EntryPoint.runInMainThread = function(f) {
	haxe_EntryPoint.pending.push(f);
};
haxe_EntryPoint.processEvents = function() {
	while(true) {
		var f = haxe_EntryPoint.pending.shift();
		if(f == null) {
			break;
		}
		f();
	}
	var time = haxe_MainLoop.tick();
	if(!haxe_MainLoop.hasEvents() && haxe_EntryPoint.threadCount == 0) {
		return -1;
	}
	return time;
};
haxe_EntryPoint.run = function() {
	var nextTick = haxe_EntryPoint.processEvents();
	if(nextTick >= 0) {
		setTimeout(haxe_EntryPoint.run,nextTick * 1000);
	}
};
var haxe_Exception = function(message,previous,native) {
	Error.call(this,message);
	this.message = message;
	this.__previousException = previous;
	this.__nativeException = native != null ? native : this;
	this.__skipStack = 0;
	var old = Error.prepareStackTrace;
	Error.prepareStackTrace = function(e) { return e.stack; }
	if(((native) instanceof Error)) {
		this.stack = native.stack;
	} else {
		var e = null;
		if(Error.captureStackTrace) {
			Error.captureStackTrace(this,haxe_Exception);
			e = this;
		} else {
			e = new Error();
			if(typeof(e.stack) == "undefined") {
				try { throw e; } catch(_) {}
				this.__skipStack++;
			}
		}
		this.stack = e.stack;
	}
	Error.prepareStackTrace = old;
};
$hxClasses["haxe.Exception"] = haxe_Exception;
haxe_Exception.__name__ = "haxe.Exception";
haxe_Exception.caught = function(value) {
	if(((value) instanceof haxe_Exception)) {
		return value;
	} else if(((value) instanceof Error)) {
		return new haxe_Exception(value.message,null,value);
	} else {
		return new haxe_ValueException(value,null,value);
	}
};
haxe_Exception.thrown = function(value) {
	if(((value) instanceof haxe_Exception)) {
		return value.get_native();
	} else if(((value) instanceof Error)) {
		return value;
	} else {
		var e = new haxe_ValueException(value);
		e.__skipStack++;
		return e;
	}
};
haxe_Exception.__super__ = Error;
haxe_Exception.prototype = $extend(Error.prototype,{
	__skipStack: null
	,__nativeException: null
	,__previousException: null
	,unwrap: function() {
		return this.__nativeException;
	}
	,toString: function() {
		return this.get_message();
	}
	,details: function() {
		if(this.get_previous() == null) {
			var tmp = "Exception: " + this.toString();
			var tmp1 = this.get_stack();
			return tmp + (tmp1 == null ? "null" : haxe_CallStack.toString(tmp1));
		} else {
			var result = "";
			var e = this;
			var prev = null;
			while(e != null) {
				if(prev == null) {
					var result1 = "Exception: " + e.get_message();
					var tmp = e.get_stack();
					result = result1 + (tmp == null ? "null" : haxe_CallStack.toString(tmp)) + result;
				} else {
					var prevStack = haxe_CallStack.subtract(e.get_stack(),prev.get_stack());
					result = "Exception: " + e.get_message() + (prevStack == null ? "null" : haxe_CallStack.toString(prevStack)) + "\n\nNext " + result;
				}
				prev = e;
				e = e.get_previous();
			}
			return result;
		}
	}
	,__shiftStack: function() {
		this.__skipStack++;
	}
	,get_message: function() {
		return this.message;
	}
	,get_previous: function() {
		return this.__previousException;
	}
	,get_native: function() {
		return this.__nativeException;
	}
	,get_stack: function() {
		var _g = this.__exceptionStack;
		if(_g == null) {
			var value = haxe_NativeStackTrace.toHaxe(haxe_NativeStackTrace.normalize(this.stack),this.__skipStack);
			this.setProperty("__exceptionStack",value);
			return value;
		} else {
			var s = _g;
			return s;
		}
	}
	,setProperty: function(name,value) {
		try {
			Object.defineProperty(this,name,{ value : value});
		} catch( _g ) {
			this[name] = value;
		}
	}
	,__class__: haxe_Exception
});
var haxe_Int32 = {};
haxe_Int32.ucompare = function(a,b) {
	if(a < 0) {
		if(b < 0) {
			return ~b - ~a | 0;
		} else {
			return 1;
		}
	}
	if(b < 0) {
		return -1;
	} else {
		return a - b | 0;
	}
};
var haxe_Int64 = {};
haxe_Int64.toString = function(this1) {
	var i = this1;
	var b_high = 0;
	var b_low = 0;
	if(i.high == b_high && i.low == b_low) {
		return "0";
	}
	var str = "";
	var neg = false;
	if(i.high < 0) {
		neg = true;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(0,10);
	var ten = this1;
	while(true) {
		var b_high = 0;
		var b_low = 0;
		if(!(i.high != b_high || i.low != b_low)) {
			break;
		}
		var r = haxe_Int64.divMod(i,ten);
		if(r.modulus.high < 0) {
			var x = r.modulus;
			var high = ~x.high;
			var low = ~x.low + 1 | 0;
			if(low == 0) {
				var ret = high++;
				high = high | 0;
			}
			var this_high = high;
			var this_low = low;
			str = this_low + str;
			var x1 = r.quotient;
			var high1 = ~x1.high;
			var low1 = ~x1.low + 1 | 0;
			if(low1 == 0) {
				var ret1 = high1++;
				high1 = high1 | 0;
			}
			var this1 = new haxe__$Int64__$_$_$Int64(high1,low1);
			i = this1;
		} else {
			str = r.modulus.low + str;
			i = r.quotient;
		}
	}
	if(neg) {
		str = "-" + str;
	}
	return str;
};
haxe_Int64.divMod = function(dividend,divisor) {
	if(divisor.high == 0) {
		switch(divisor.low) {
		case 0:
			throw haxe_Exception.thrown("divide by zero");
		case 1:
			var this1 = new haxe__$Int64__$_$_$Int64(dividend.high,dividend.low);
			var this2 = new haxe__$Int64__$_$_$Int64(0,0);
			return { quotient : this1, modulus : this2};
		}
	}
	var divSign = dividend.high < 0 != divisor.high < 0;
	var modulus;
	if(dividend.high < 0) {
		var high = ~dividend.high;
		var low = ~dividend.low + 1 | 0;
		if(low == 0) {
			var ret = high++;
			high = high | 0;
		}
		var this1 = new haxe__$Int64__$_$_$Int64(high,low);
		modulus = this1;
	} else {
		var this1 = new haxe__$Int64__$_$_$Int64(dividend.high,dividend.low);
		modulus = this1;
	}
	if(divisor.high < 0) {
		var high = ~divisor.high;
		var low = ~divisor.low + 1 | 0;
		if(low == 0) {
			var ret = high++;
			high = high | 0;
		}
		var this1 = new haxe__$Int64__$_$_$Int64(high,low);
		divisor = this1;
	}
	var this1 = new haxe__$Int64__$_$_$Int64(0,0);
	var quotient = this1;
	var this1 = new haxe__$Int64__$_$_$Int64(0,1);
	var mask = this1;
	while(!(divisor.high < 0)) {
		var v = haxe_Int32.ucompare(divisor.high,modulus.high);
		var cmp = v != 0 ? v : haxe_Int32.ucompare(divisor.low,modulus.low);
		var b = 1;
		b &= 63;
		if(b == 0) {
			var this1 = new haxe__$Int64__$_$_$Int64(divisor.high,divisor.low);
			divisor = this1;
		} else if(b < 32) {
			var this2 = new haxe__$Int64__$_$_$Int64(divisor.high << b | divisor.low >>> 32 - b,divisor.low << b);
			divisor = this2;
		} else {
			var this3 = new haxe__$Int64__$_$_$Int64(divisor.low << b - 32,0);
			divisor = this3;
		}
		var b1 = 1;
		b1 &= 63;
		if(b1 == 0) {
			var this4 = new haxe__$Int64__$_$_$Int64(mask.high,mask.low);
			mask = this4;
		} else if(b1 < 32) {
			var this5 = new haxe__$Int64__$_$_$Int64(mask.high << b1 | mask.low >>> 32 - b1,mask.low << b1);
			mask = this5;
		} else {
			var this6 = new haxe__$Int64__$_$_$Int64(mask.low << b1 - 32,0);
			mask = this6;
		}
		if(cmp >= 0) {
			break;
		}
	}
	while(true) {
		var b_high = 0;
		var b_low = 0;
		if(!(mask.high != b_high || mask.low != b_low)) {
			break;
		}
		var v = haxe_Int32.ucompare(modulus.high,divisor.high);
		if((v != 0 ? v : haxe_Int32.ucompare(modulus.low,divisor.low)) >= 0) {
			var this1 = new haxe__$Int64__$_$_$Int64(quotient.high | mask.high,quotient.low | mask.low);
			quotient = this1;
			var high = modulus.high - divisor.high | 0;
			var low = modulus.low - divisor.low | 0;
			if(haxe_Int32.ucompare(modulus.low,divisor.low) < 0) {
				var ret = high--;
				high = high | 0;
			}
			var this2 = new haxe__$Int64__$_$_$Int64(high,low);
			modulus = this2;
		}
		var b = 1;
		b &= 63;
		if(b == 0) {
			var this3 = new haxe__$Int64__$_$_$Int64(mask.high,mask.low);
			mask = this3;
		} else if(b < 32) {
			var this4 = new haxe__$Int64__$_$_$Int64(mask.high >>> b,mask.high << 32 - b | mask.low >>> b);
			mask = this4;
		} else {
			var this5 = new haxe__$Int64__$_$_$Int64(0,mask.high >>> b - 32);
			mask = this5;
		}
		var b1 = 1;
		b1 &= 63;
		if(b1 == 0) {
			var this6 = new haxe__$Int64__$_$_$Int64(divisor.high,divisor.low);
			divisor = this6;
		} else if(b1 < 32) {
			var this7 = new haxe__$Int64__$_$_$Int64(divisor.high >>> b1,divisor.high << 32 - b1 | divisor.low >>> b1);
			divisor = this7;
		} else {
			var this8 = new haxe__$Int64__$_$_$Int64(0,divisor.high >>> b1 - 32);
			divisor = this8;
		}
	}
	if(divSign) {
		var high = ~quotient.high;
		var low = ~quotient.low + 1 | 0;
		if(low == 0) {
			var ret = high++;
			high = high | 0;
		}
		var this1 = new haxe__$Int64__$_$_$Int64(high,low);
		quotient = this1;
	}
	if(dividend.high < 0) {
		var high = ~modulus.high;
		var low = ~modulus.low + 1 | 0;
		if(low == 0) {
			var ret = high++;
			high = high | 0;
		}
		var this1 = new haxe__$Int64__$_$_$Int64(high,low);
		modulus = this1;
	}
	return { quotient : quotient, modulus : modulus};
};
var haxe__$Int64__$_$_$Int64 = function(high,low) {
	this.high = high;
	this.low = low;
};
$hxClasses["haxe._Int64.___Int64"] = haxe__$Int64__$_$_$Int64;
haxe__$Int64__$_$_$Int64.__name__ = "haxe._Int64.___Int64";
haxe__$Int64__$_$_$Int64.prototype = {
	high: null
	,low: null
	,__class__: haxe__$Int64__$_$_$Int64
};
var haxe_Log = function() { };
$hxClasses["haxe.Log"] = haxe_Log;
haxe_Log.__name__ = "haxe.Log";
haxe_Log.formatOutput = function(v,infos) {
	var str = Std.string(v);
	if(infos == null) {
		return str;
	}
	var pstr = infos.fileName + ":" + infos.lineNumber;
	if(infos.customParams != null) {
		var _g = 0;
		var _g1 = infos.customParams;
		while(_g < _g1.length) {
			var v = _g1[_g];
			++_g;
			str += ", " + Std.string(v);
		}
	}
	return pstr + ": " + str;
};
haxe_Log.trace = function(v,infos) {
	var str = haxe_Log.formatOutput(v,infos);
	if(typeof(console) != "undefined" && console.log != null) {
		console.log(str);
	}
};
var haxe_MainEvent = function(f,p) {
	this.isBlocking = true;
	this.f = f;
	this.priority = p;
	this.nextRun = -Infinity;
};
$hxClasses["haxe.MainEvent"] = haxe_MainEvent;
haxe_MainEvent.__name__ = "haxe.MainEvent";
haxe_MainEvent.prototype = {
	f: null
	,prev: null
	,next: null
	,isBlocking: null
	,nextRun: null
	,priority: null
	,delay: function(t) {
		this.nextRun = t == null ? -Infinity : HxOverrides.now() / 1000 + t;
	}
	,stop: function() {
		if(this.f == null) {
			return;
		}
		this.f = null;
		this.nextRun = -Infinity;
		if(this.prev == null) {
			haxe_MainLoop.pending = this.next;
		} else {
			this.prev.next = this.next;
		}
		if(this.next != null) {
			this.next.prev = this.prev;
		}
	}
	,__class__: haxe_MainEvent
};
var haxe_MainLoop = function() { };
$hxClasses["haxe.MainLoop"] = haxe_MainLoop;
haxe_MainLoop.__name__ = "haxe.MainLoop";
haxe_MainLoop.pending = null;
haxe_MainLoop.hasEvents = function() {
	var p = haxe_MainLoop.pending;
	while(p != null) {
		if(p.isBlocking) {
			return true;
		}
		p = p.next;
	}
	return false;
};
haxe_MainLoop.runInMainThread = function(f) {
	haxe_EntryPoint.runInMainThread(f);
};
haxe_MainLoop.add = function(f,priority) {
	if(priority == null) {
		priority = 0;
	}
	if(f == null) {
		throw haxe_Exception.thrown("Event function is null");
	}
	var e = new haxe_MainEvent(f,priority);
	var head = haxe_MainLoop.pending;
	if(head != null) {
		head.prev = e;
	}
	e.next = head;
	haxe_MainLoop.pending = e;
	return e;
};
haxe_MainLoop.sortEvents = function() {
	var list = haxe_MainLoop.pending;
	if(list == null) {
		return;
	}
	var insize = 1;
	var nmerges;
	var psize = 0;
	var qsize = 0;
	var p;
	var q;
	var e;
	var tail;
	while(true) {
		p = list;
		list = null;
		tail = null;
		nmerges = 0;
		while(p != null) {
			++nmerges;
			q = p;
			psize = 0;
			var _g = 0;
			var _g1 = insize;
			while(_g < _g1) {
				var i = _g++;
				++psize;
				q = q.next;
				if(q == null) {
					break;
				}
			}
			qsize = insize;
			while(psize > 0 || qsize > 0 && q != null) {
				if(psize == 0) {
					e = q;
					q = q.next;
					--qsize;
				} else if(qsize == 0 || q == null || (p.priority > q.priority || p.priority == q.priority && p.nextRun <= q.nextRun)) {
					e = p;
					p = p.next;
					--psize;
				} else {
					e = q;
					q = q.next;
					--qsize;
				}
				if(tail != null) {
					tail.next = e;
				} else {
					list = e;
				}
				e.prev = tail;
				tail = e;
			}
			p = q;
		}
		tail.next = null;
		if(nmerges <= 1) {
			break;
		}
		insize *= 2;
	}
	list.prev = null;
	haxe_MainLoop.pending = list;
};
haxe_MainLoop.tick = function() {
	haxe_MainLoop.sortEvents();
	var e = haxe_MainLoop.pending;
	var now = HxOverrides.now() / 1000;
	var wait = 1e9;
	while(e != null) {
		var next = e.next;
		var wt = e.nextRun - now;
		if(wt <= 0) {
			wait = 0;
			if(e.f != null) {
				e.f();
			}
		} else if(wait > wt) {
			wait = wt;
		}
		e = next;
	}
	return wait;
};
var haxe_NativeStackTrace = function() { };
$hxClasses["haxe.NativeStackTrace"] = haxe_NativeStackTrace;
haxe_NativeStackTrace.__name__ = "haxe.NativeStackTrace";
haxe_NativeStackTrace.toHaxe = function(s,skip) {
	if(skip == null) {
		skip = 0;
	}
	if(s == null) {
		return [];
	} else if(typeof(s) == "string") {
		var stack = s.split("\n");
		if(stack[0] == "Error") {
			stack.shift();
		}
		var m = [];
		var _g = 0;
		var _g1 = stack.length;
		while(_g < _g1) {
			var i = _g++;
			if(skip > i) {
				continue;
			}
			var line = stack[i];
			var matched = line.match(/^    at ([$A-Za-z0-9_. ]+) \(([^)]+):([0-9]+):([0-9]+)\)$/);
			if(matched != null) {
				var path = matched[1].split(".");
				if(path[0] == "$hxClasses") {
					path.shift();
				}
				var meth = path.pop();
				var file = matched[2];
				var line1 = Std.parseInt(matched[3]);
				var column = Std.parseInt(matched[4]);
				m.push(haxe_StackItem.FilePos(meth == "Anonymous function" ? haxe_StackItem.LocalFunction() : meth == "Global code" ? null : haxe_StackItem.Method(path.join("."),meth),file,line1,column));
			} else {
				m.push(haxe_StackItem.Module(StringTools.trim(line)));
			}
		}
		return m;
	} else if(skip > 0 && Array.isArray(s)) {
		return s.slice(skip);
	} else {
		return s;
	}
};
haxe_NativeStackTrace.normalize = function(stack,skipItems) {
	if(skipItems == null) {
		skipItems = 0;
	}
	if(Array.isArray(stack) && skipItems > 0) {
		return stack.slice(skipItems);
	} else if(typeof(stack) == "string") {
		switch(stack.substring(0,6)) {
		case "Error\n":case "Error:":
			++skipItems;
			break;
		default:
		}
		return haxe_NativeStackTrace.skipLines(stack,skipItems);
	} else {
		return stack;
	}
};
haxe_NativeStackTrace.skipLines = function(stack,skip,pos) {
	if(pos == null) {
		pos = 0;
	}
	if(skip > 0) {
		pos = stack.indexOf("\n",pos);
		if(pos < 0) {
			return "";
		} else {
			return haxe_NativeStackTrace.skipLines(stack,--skip,pos + 1);
		}
	} else {
		return stack.substring(pos);
	}
};
var haxe_Resource = function() { };
$hxClasses["haxe.Resource"] = haxe_Resource;
haxe_Resource.__name__ = "haxe.Resource";
haxe_Resource.content = null;
haxe_Resource.listNames = function() {
	var _g = [];
	var _g1 = 0;
	var _g2 = haxe_Resource.content;
	while(_g1 < _g2.length) {
		var x = _g2[_g1];
		++_g1;
		_g.push(x.name);
	}
	return _g;
};
haxe_Resource.getString = function(name) {
	var _g = 0;
	var _g1 = haxe_Resource.content;
	while(_g < _g1.length) {
		var x = _g1[_g];
		++_g;
		if(x.name == name) {
			if(x.str != null) {
				return x.str;
			}
			var b = haxe_crypto_Base64.decode(x.data);
			return b.toString();
		}
	}
	return null;
};
haxe_Resource.getBytes = function(name) {
	var _g = 0;
	var _g1 = haxe_Resource.content;
	while(_g < _g1.length) {
		var x = _g1[_g];
		++_g;
		if(x.name == name) {
			if(x.str != null) {
				return haxe_io_Bytes.ofString(x.str);
			}
			return haxe_crypto_Base64.decode(x.data);
		}
	}
	return null;
};
var haxe_Timer = function(time_ms) {
	var me = this;
	this.id = setInterval(function() {
		me.run();
	},time_ms);
};
$hxClasses["haxe.Timer"] = haxe_Timer;
haxe_Timer.__name__ = "haxe.Timer";
haxe_Timer.delay = function(f,time_ms) {
	var t = new haxe_Timer(time_ms);
	t.run = function() {
		t.stop();
		f();
	};
	return t;
};
haxe_Timer.stamp = function() {
	return HxOverrides.now() / 1000;
};
haxe_Timer.prototype = {
	id: null
	,stop: function() {
		if(this.id == null) {
			return;
		}
		clearInterval(this.id);
		this.id = null;
	}
	,run: function() {
	}
	,__class__: haxe_Timer
};
var haxe_ValueException = function(value,previous,native) {
	haxe_Exception.call(this,String(value),previous,native);
	this.value = value;
	this.__skipStack++;
};
$hxClasses["haxe.ValueException"] = haxe_ValueException;
haxe_ValueException.__name__ = "haxe.ValueException";
haxe_ValueException.__super__ = haxe_Exception;
haxe_ValueException.prototype = $extend(haxe_Exception.prototype,{
	value: null
	,unwrap: function() {
		return this.value;
	}
	,__class__: haxe_ValueException
});
var haxe_crypto_Adler32 = function() {
	this.a1 = 1;
	this.a2 = 0;
};
$hxClasses["haxe.crypto.Adler32"] = haxe_crypto_Adler32;
haxe_crypto_Adler32.__name__ = "haxe.crypto.Adler32";
haxe_crypto_Adler32.make = function(b) {
	var a = new haxe_crypto_Adler32();
	a.update(b,0,b.length);
	return a.get();
};
haxe_crypto_Adler32.prototype = {
	a1: null
	,a2: null
	,get: function() {
		return this.a2 << 16 | this.a1;
	}
	,update: function(b,pos,len) {
		var a1 = this.a1;
		var a2 = this.a2;
		var _g = pos;
		var _g1 = pos + len;
		while(_g < _g1) {
			var p = _g++;
			var c = b.b[p];
			a1 = (a1 + c) % 65521;
			a2 = (a2 + a1) % 65521;
		}
		this.a1 = a1;
		this.a2 = a2;
	}
	,__class__: haxe_crypto_Adler32
};
var haxe_io_Bytes = function(data) {
	this.length = data.byteLength;
	this.b = new Uint8Array(data);
	this.b.bufferValue = data;
	data.hxBytes = this;
	data.bytes = this.b;
};
$hxClasses["haxe.io.Bytes"] = haxe_io_Bytes;
haxe_io_Bytes.__name__ = "haxe.io.Bytes";
haxe_io_Bytes.ofString = function(s,encoding) {
	if(encoding == haxe_io_Encoding.RawNative) {
		var buf = new Uint8Array(s.length << 1);
		var _g = 0;
		var _g1 = s.length;
		while(_g < _g1) {
			var i = _g++;
			var c = s.charCodeAt(i);
			buf[i << 1] = c & 255;
			buf[i << 1 | 1] = c >> 8;
		}
		return new haxe_io_Bytes(buf.buffer);
	}
	var a = [];
	var i = 0;
	while(i < s.length) {
		var c = s.charCodeAt(i++);
		if(55296 <= c && c <= 56319) {
			c = c - 55232 << 10 | s.charCodeAt(i++) & 1023;
		}
		if(c <= 127) {
			a.push(c);
		} else if(c <= 2047) {
			a.push(192 | c >> 6);
			a.push(128 | c & 63);
		} else if(c <= 65535) {
			a.push(224 | c >> 12);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		} else {
			a.push(240 | c >> 18);
			a.push(128 | c >> 12 & 63);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		}
	}
	return new haxe_io_Bytes(new Uint8Array(a).buffer);
};
haxe_io_Bytes.prototype = {
	length: null
	,b: null
	,data: null
	,getDouble: function(pos) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		return this.data.getFloat64(pos,true);
	}
	,getFloat: function(pos) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		return this.data.getFloat32(pos,true);
	}
	,setDouble: function(pos,v) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		this.data.setFloat64(pos,v,true);
	}
	,getUInt16: function(pos) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		return this.data.getUint16(pos,true);
	}
	,getInt32: function(pos) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		return this.data.getInt32(pos,true);
	}
	,setInt32: function(pos,v) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		this.data.setInt32(pos,v,true);
	}
	,setInt64: function(pos,v) {
		this.setInt32(pos,v.low);
		this.setInt32(pos + 4,v.high);
	}
	,getString: function(pos,len,encoding) {
		if(pos < 0 || len < 0 || pos + len > this.length) {
			throw haxe_Exception.thrown(haxe_io_Error.OutsideBounds);
		}
		if(encoding == null) {
			encoding = haxe_io_Encoding.UTF8;
		}
		var s = "";
		var b = this.b;
		var i = pos;
		var max = pos + len;
		switch(encoding._hx_index) {
		case 0:
			var debug = pos > 0;
			while(i < max) {
				var c = b[i++];
				if(c < 128) {
					if(c == 0) {
						break;
					}
					s += String.fromCodePoint(c);
				} else if(c < 224) {
					var code = (c & 63) << 6 | b[i++] & 127;
					s += String.fromCodePoint(code);
				} else if(c < 240) {
					var c2 = b[i++];
					var code1 = (c & 31) << 12 | (c2 & 127) << 6 | b[i++] & 127;
					s += String.fromCodePoint(code1);
				} else {
					var c21 = b[i++];
					var c3 = b[i++];
					var u = (c & 15) << 18 | (c21 & 127) << 12 | (c3 & 127) << 6 | b[i++] & 127;
					s += String.fromCodePoint(u);
				}
			}
			break;
		case 1:
			while(i < max) {
				var c = b[i++] | b[i++] << 8;
				s += String.fromCodePoint(c);
			}
			break;
		}
		return s;
	}
	,toString: function() {
		return this.getString(0,this.length);
	}
	,__class__: haxe_io_Bytes
};
var haxe_io_Encoding = $hxEnums["haxe.io.Encoding"] = { __ename__:"haxe.io.Encoding",__constructs__:null
	,UTF8: {_hx_name:"UTF8",_hx_index:0,__enum__:"haxe.io.Encoding",toString:$estr}
	,RawNative: {_hx_name:"RawNative",_hx_index:1,__enum__:"haxe.io.Encoding",toString:$estr}
};
haxe_io_Encoding.__constructs__ = [haxe_io_Encoding.UTF8,haxe_io_Encoding.RawNative];
var haxe_crypto_Base64 = function() { };
$hxClasses["haxe.crypto.Base64"] = haxe_crypto_Base64;
haxe_crypto_Base64.__name__ = "haxe.crypto.Base64";
haxe_crypto_Base64.encode = function(bytes,complement) {
	if(complement == null) {
		complement = true;
	}
	var str = new haxe_crypto_BaseCode(haxe_crypto_Base64.BYTES).encodeBytes(bytes).toString();
	if(complement) {
		switch(bytes.length % 3) {
		case 1:
			str += "==";
			break;
		case 2:
			str += "=";
			break;
		default:
		}
	}
	return str;
};
haxe_crypto_Base64.decode = function(str,complement) {
	if(complement == null) {
		complement = true;
	}
	if(complement) {
		while(HxOverrides.cca(str,str.length - 1) == 61) str = HxOverrides.substr(str,0,-1);
	}
	return new haxe_crypto_BaseCode(haxe_crypto_Base64.BYTES).decodeBytes(haxe_io_Bytes.ofString(str));
};
var haxe_crypto_BaseCode = function(base) {
	var len = base.length;
	var nbits = 1;
	while(len > 1 << nbits) ++nbits;
	if(nbits > 8 || len != 1 << nbits) {
		throw haxe_Exception.thrown("BaseCode : base length must be a power of two.");
	}
	this.base = base;
	this.nbits = nbits;
};
$hxClasses["haxe.crypto.BaseCode"] = haxe_crypto_BaseCode;
haxe_crypto_BaseCode.__name__ = "haxe.crypto.BaseCode";
haxe_crypto_BaseCode.prototype = {
	base: null
	,nbits: null
	,tbl: null
	,encodeBytes: function(b) {
		var nbits = this.nbits;
		var base = this.base;
		var size = b.length * 8 / nbits | 0;
		var out = new haxe_io_Bytes(new ArrayBuffer(size + (b.length * 8 % nbits == 0 ? 0 : 1)));
		var buf = 0;
		var curbits = 0;
		var mask = (1 << nbits) - 1;
		var pin = 0;
		var pout = 0;
		while(pout < size) {
			while(curbits < nbits) {
				curbits += 8;
				buf <<= 8;
				buf |= b.b[pin++];
			}
			curbits -= nbits;
			out.b[pout++] = base.b[buf >> curbits & mask];
		}
		if(curbits > 0) {
			out.b[pout++] = base.b[buf << nbits - curbits & mask];
		}
		return out;
	}
	,initTable: function() {
		var tbl = [];
		var _g = 0;
		while(_g < 256) {
			var i = _g++;
			tbl[i] = -1;
		}
		var _g = 0;
		var _g1 = this.base.length;
		while(_g < _g1) {
			var i = _g++;
			tbl[this.base.b[i]] = i;
		}
		this.tbl = tbl;
	}
	,decodeBytes: function(b) {
		var nbits = this.nbits;
		var base = this.base;
		if(this.tbl == null) {
			this.initTable();
		}
		var tbl = this.tbl;
		var size = b.length * nbits >> 3;
		var out = new haxe_io_Bytes(new ArrayBuffer(size));
		var buf = 0;
		var curbits = 0;
		var pin = 0;
		var pout = 0;
		while(pout < size) {
			while(curbits < 8) {
				curbits += nbits;
				buf <<= nbits;
				var i = tbl[b.b[pin++]];
				if(i == -1) {
					throw haxe_Exception.thrown("BaseCode : invalid encoded char");
				}
				buf |= i;
			}
			curbits -= 8;
			out.b[pout++] = buf >> curbits & 255;
		}
		return out;
	}
	,__class__: haxe_crypto_BaseCode
};
var haxe_crypto_Crc32 = function() { };
$hxClasses["haxe.crypto.Crc32"] = haxe_crypto_Crc32;
haxe_crypto_Crc32.__name__ = "haxe.crypto.Crc32";
haxe_crypto_Crc32.make = function(data) {
	var c_crc = -1;
	var b = data.b.bufferValue;
	var _g = 0;
	var _g1 = data.length;
	while(_g < _g1) {
		var i = _g++;
		var tmp = (c_crc ^ b.bytes[i]) & 255;
		tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
		tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
		tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
		tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
		tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
		tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
		tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
		tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
		c_crc = c_crc >>> 8 ^ tmp;
	}
	return c_crc ^ -1;
};
var haxe_ds_ArraySort = function() { };
$hxClasses["haxe.ds.ArraySort"] = haxe_ds_ArraySort;
haxe_ds_ArraySort.__name__ = "haxe.ds.ArraySort";
haxe_ds_ArraySort.sort = function(a,cmp) {
	haxe_ds_ArraySort.rec(a,cmp,0,a.length);
};
haxe_ds_ArraySort.rec = function(a,cmp,from,to) {
	var middle = from + to >> 1;
	if(to - from < 12) {
		if(to <= from) {
			return;
		}
		var _g = from + 1;
		var _g1 = to;
		while(_g < _g1) {
			var i = _g++;
			var j = i;
			while(j > from) {
				if(cmp(a[j],a[j - 1]) < 0) {
					haxe_ds_ArraySort.swap(a,j - 1,j);
				} else {
					break;
				}
				--j;
			}
		}
		return;
	}
	haxe_ds_ArraySort.rec(a,cmp,from,middle);
	haxe_ds_ArraySort.rec(a,cmp,middle,to);
	haxe_ds_ArraySort.doMerge(a,cmp,from,middle,to,middle - from,to - middle);
};
haxe_ds_ArraySort.doMerge = function(a,cmp,from,pivot,to,len1,len2) {
	var first_cut;
	var second_cut;
	var len11;
	var len22;
	if(len1 == 0 || len2 == 0) {
		return;
	}
	if(len1 + len2 == 2) {
		if(cmp(a[pivot],a[from]) < 0) {
			haxe_ds_ArraySort.swap(a,pivot,from);
		}
		return;
	}
	if(len1 > len2) {
		len11 = len1 >> 1;
		first_cut = from + len11;
		second_cut = haxe_ds_ArraySort.lower(a,cmp,pivot,to,first_cut);
		len22 = second_cut - pivot;
	} else {
		len22 = len2 >> 1;
		second_cut = pivot + len22;
		first_cut = haxe_ds_ArraySort.upper(a,cmp,from,pivot,second_cut);
		len11 = first_cut - from;
	}
	haxe_ds_ArraySort.rotate(a,cmp,first_cut,pivot,second_cut);
	var new_mid = first_cut + len22;
	haxe_ds_ArraySort.doMerge(a,cmp,from,first_cut,new_mid,len11,len22);
	haxe_ds_ArraySort.doMerge(a,cmp,new_mid,second_cut,to,len1 - len11,len2 - len22);
};
haxe_ds_ArraySort.rotate = function(a,cmp,from,mid,to) {
	if(from == mid || mid == to) {
		return;
	}
	var n = haxe_ds_ArraySort.gcd(to - from,mid - from);
	while(n-- != 0) {
		var val = a[from + n];
		var shift = mid - from;
		var p1 = from + n;
		var p2 = from + n + shift;
		while(p2 != from + n) {
			a[p1] = a[p2];
			p1 = p2;
			if(to - p2 > shift) {
				p2 += shift;
			} else {
				p2 = from + (shift - (to - p2));
			}
		}
		a[p1] = val;
	}
};
haxe_ds_ArraySort.gcd = function(m,n) {
	while(n != 0) {
		var t = m % n;
		m = n;
		n = t;
	}
	return m;
};
haxe_ds_ArraySort.upper = function(a,cmp,from,to,val) {
	var len = to - from;
	var half;
	var mid;
	while(len > 0) {
		half = len >> 1;
		mid = from + half;
		if(cmp(a[val],a[mid]) < 0) {
			len = half;
		} else {
			from = mid + 1;
			len = len - half - 1;
		}
	}
	return from;
};
haxe_ds_ArraySort.lower = function(a,cmp,from,to,val) {
	var len = to - from;
	var half;
	var mid;
	while(len > 0) {
		half = len >> 1;
		mid = from + half;
		if(cmp(a[mid],a[val]) < 0) {
			from = mid + 1;
			len = len - half - 1;
		} else {
			len = half;
		}
	}
	return from;
};
haxe_ds_ArraySort.swap = function(a,i,j) {
	var tmp = a[i];
	a[i] = a[j];
	a[j] = tmp;
};
var haxe_ds_Either = $hxEnums["haxe.ds.Either"] = { __ename__:"haxe.ds.Either",__constructs__:null
	,Left: ($_=function(v) { return {_hx_index:0,v:v,__enum__:"haxe.ds.Either",toString:$estr}; },$_._hx_name="Left",$_.__params__ = ["v"],$_)
	,Right: ($_=function(v) { return {_hx_index:1,v:v,__enum__:"haxe.ds.Either",toString:$estr}; },$_._hx_name="Right",$_.__params__ = ["v"],$_)
};
haxe_ds_Either.__constructs__ = [haxe_ds_Either.Left,haxe_ds_Either.Right];
var haxe_ds_IntMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.IntMap"] = haxe_ds_IntMap;
haxe_ds_IntMap.__name__ = "haxe.ds.IntMap";
haxe_ds_IntMap.__interfaces__ = [haxe_IMap];
haxe_ds_IntMap.prototype = {
	h: null
	,set: function(key,value) {
		this.h[key] = value;
	}
	,get: function(key) {
		return this.h[key];
	}
	,exists: function(key) {
		return this.h.hasOwnProperty(key);
	}
	,keys: function() {
		var a = [];
		for( var key in this.h ) if(this.h.hasOwnProperty(key)) a.push(+key);
		return new haxe_iterators_ArrayIterator(a);
	}
	,keyValueIterator: function() {
		return new haxe_iterators_MapKeyValueIterator(this);
	}
	,__class__: haxe_ds_IntMap
};
var haxe_ds_List = function() {
	this.length = 0;
};
$hxClasses["haxe.ds.List"] = haxe_ds_List;
haxe_ds_List.__name__ = "haxe.ds.List";
haxe_ds_List.prototype = {
	h: null
	,length: null
	,iterator: function() {
		return new haxe_ds__$List_ListIterator(this.h);
	}
	,__class__: haxe_ds_List
};
var haxe_ds__$List_ListNode = function(item,next) {
	this.item = item;
	this.next = next;
};
$hxClasses["haxe.ds._List.ListNode"] = haxe_ds__$List_ListNode;
haxe_ds__$List_ListNode.__name__ = "haxe.ds._List.ListNode";
haxe_ds__$List_ListNode.prototype = {
	item: null
	,next: null
	,__class__: haxe_ds__$List_ListNode
};
var haxe_ds__$List_ListIterator = function(head) {
	this.head = head;
};
$hxClasses["haxe.ds._List.ListIterator"] = haxe_ds__$List_ListIterator;
haxe_ds__$List_ListIterator.__name__ = "haxe.ds._List.ListIterator";
haxe_ds__$List_ListIterator.prototype = {
	head: null
	,hasNext: function() {
		return this.head != null;
	}
	,next: function() {
		var val = this.head.item;
		this.head = this.head.next;
		return val;
	}
	,__class__: haxe_ds__$List_ListIterator
};
var haxe_ds_ObjectMap = function() {
	this.h = { __keys__ : { }};
};
$hxClasses["haxe.ds.ObjectMap"] = haxe_ds_ObjectMap;
haxe_ds_ObjectMap.__name__ = "haxe.ds.ObjectMap";
haxe_ds_ObjectMap.__interfaces__ = [haxe_IMap];
haxe_ds_ObjectMap.prototype = {
	h: null
	,set: function(key,value) {
		var id = key.__id__;
		if(id == null) {
			id = (key.__id__ = $global.$haxeUID++);
		}
		this.h[id] = value;
		this.h.__keys__[id] = key;
	}
	,get: function(key) {
		return this.h[key.__id__];
	}
	,exists: function(key) {
		return this.h.__keys__[key.__id__] != null;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h.__keys__ ) {
		if(this.h.hasOwnProperty(key)) {
			a.push(this.h.__keys__[key]);
		}
		}
		return new haxe_iterators_ArrayIterator(a);
	}
	,keyValueIterator: function() {
		return new haxe_iterators_MapKeyValueIterator(this);
	}
	,__class__: haxe_ds_ObjectMap
};
var haxe_ds_Option = $hxEnums["haxe.ds.Option"] = { __ename__:"haxe.ds.Option",__constructs__:null
	,Some: ($_=function(v) { return {_hx_index:0,v:v,__enum__:"haxe.ds.Option",toString:$estr}; },$_._hx_name="Some",$_.__params__ = ["v"],$_)
	,None: {_hx_name:"None",_hx_index:1,__enum__:"haxe.ds.Option",toString:$estr}
};
haxe_ds_Option.__constructs__ = [haxe_ds_Option.Some,haxe_ds_Option.None];
var haxe_ds_StringMap = function() {
	this.h = Object.create(null);
};
$hxClasses["haxe.ds.StringMap"] = haxe_ds_StringMap;
haxe_ds_StringMap.__name__ = "haxe.ds.StringMap";
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	h: null
	,exists: function(key) {
		return Object.prototype.hasOwnProperty.call(this.h,key);
	}
	,get: function(key) {
		return this.h[key];
	}
	,set: function(key,value) {
		this.h[key] = value;
	}
	,keys: function() {
		return new haxe_ds__$StringMap_StringMapKeyIterator(this.h);
	}
	,keyValueIterator: function() {
		return new haxe_ds__$StringMap_StringMapKeyValueIterator(this.h);
	}
	,__class__: haxe_ds_StringMap
};
var haxe_ds__$StringMap_StringMapKeyIterator = function(h) {
	this.h = h;
	this.keys = Object.keys(h);
	this.length = this.keys.length;
	this.current = 0;
};
$hxClasses["haxe.ds._StringMap.StringMapKeyIterator"] = haxe_ds__$StringMap_StringMapKeyIterator;
haxe_ds__$StringMap_StringMapKeyIterator.__name__ = "haxe.ds._StringMap.StringMapKeyIterator";
haxe_ds__$StringMap_StringMapKeyIterator.prototype = {
	h: null
	,keys: null
	,length: null
	,current: null
	,hasNext: function() {
		return this.current < this.length;
	}
	,next: function() {
		return this.keys[this.current++];
	}
	,__class__: haxe_ds__$StringMap_StringMapKeyIterator
};
var haxe_ds__$StringMap_StringMapKeyValueIterator = function(h) {
	this.h = h;
	this.keys = Object.keys(h);
	this.length = this.keys.length;
	this.current = 0;
};
$hxClasses["haxe.ds._StringMap.StringMapKeyValueIterator"] = haxe_ds__$StringMap_StringMapKeyValueIterator;
haxe_ds__$StringMap_StringMapKeyValueIterator.__name__ = "haxe.ds._StringMap.StringMapKeyValueIterator";
haxe_ds__$StringMap_StringMapKeyValueIterator.prototype = {
	h: null
	,keys: null
	,length: null
	,current: null
	,hasNext: function() {
		return this.current < this.length;
	}
	,next: function() {
		var key = this.keys[this.current++];
		return { key : key, value : this.h[key]};
	}
	,__class__: haxe_ds__$StringMap_StringMapKeyValueIterator
};
var haxe_exceptions_PosException = function(message,previous,pos) {
	haxe_Exception.call(this,message,previous);
	if(pos == null) {
		this.posInfos = { fileName : "(unknown)", lineNumber : 0, className : "(unknown)", methodName : "(unknown)"};
	} else {
		this.posInfos = pos;
	}
	this.__skipStack++;
};
$hxClasses["haxe.exceptions.PosException"] = haxe_exceptions_PosException;
haxe_exceptions_PosException.__name__ = "haxe.exceptions.PosException";
haxe_exceptions_PosException.__super__ = haxe_Exception;
haxe_exceptions_PosException.prototype = $extend(haxe_Exception.prototype,{
	posInfos: null
	,toString: function() {
		return "" + haxe_Exception.prototype.toString.call(this) + " in " + this.posInfos.className + "." + this.posInfos.methodName + " at " + this.posInfos.fileName + ":" + this.posInfos.lineNumber;
	}
	,__class__: haxe_exceptions_PosException
});
var haxe_exceptions_NotImplementedException = function(message,previous,pos) {
	if(message == null) {
		message = "Not implemented";
	}
	haxe_exceptions_PosException.call(this,message,previous,pos);
	this.__skipStack++;
};
$hxClasses["haxe.exceptions.NotImplementedException"] = haxe_exceptions_NotImplementedException;
haxe_exceptions_NotImplementedException.__name__ = "haxe.exceptions.NotImplementedException";
haxe_exceptions_NotImplementedException.__super__ = haxe_exceptions_PosException;
haxe_exceptions_NotImplementedException.prototype = $extend(haxe_exceptions_PosException.prototype,{
	__class__: haxe_exceptions_NotImplementedException
});
var haxe_io_BytesBuffer = function() {
	this.pos = 0;
	this.size = 0;
};
$hxClasses["haxe.io.BytesBuffer"] = haxe_io_BytesBuffer;
haxe_io_BytesBuffer.__name__ = "haxe.io.BytesBuffer";
haxe_io_BytesBuffer.prototype = {
	buffer: null
	,view: null
	,u8: null
	,pos: null
	,size: null
	,addByte: function(byte) {
		if(this.pos == this.size) {
			this.grow(1);
		}
		this.view.setUint8(this.pos++,byte);
	}
	,addBytes: function(src,pos,len) {
		if(pos < 0 || len < 0 || pos + len > src.length) {
			throw haxe_Exception.thrown(haxe_io_Error.OutsideBounds);
		}
		if(this.pos + len > this.size) {
			this.grow(len);
		}
		if(this.size == 0) {
			return;
		}
		var sub = new Uint8Array(src.b.buffer,src.b.byteOffset + pos,len);
		this.u8.set(sub,this.pos);
		this.pos += len;
	}
	,grow: function(delta) {
		var req = this.pos + delta;
		var nsize = this.size == 0 ? 16 : this.size;
		while(nsize < req) nsize = nsize * 3 >> 1;
		var nbuf = new ArrayBuffer(nsize);
		var nu8 = new Uint8Array(nbuf);
		if(this.size > 0) {
			nu8.set(this.u8);
		}
		this.size = nsize;
		this.buffer = nbuf;
		this.u8 = nu8;
		this.view = new DataView(this.buffer);
	}
	,getBytes: function() {
		if(this.size == 0) {
			return new haxe_io_Bytes(new ArrayBuffer(0));
		}
		var b = new haxe_io_Bytes(this.buffer);
		b.length = this.pos;
		return b;
	}
	,__class__: haxe_io_BytesBuffer
};
var haxe_io_BytesOutput = function() {
	this.b = new haxe_io_BytesBuffer();
};
$hxClasses["haxe.io.BytesOutput"] = haxe_io_BytesOutput;
haxe_io_BytesOutput.__name__ = "haxe.io.BytesOutput";
haxe_io_BytesOutput.__super__ = haxe_io_Output;
haxe_io_BytesOutput.prototype = $extend(haxe_io_Output.prototype,{
	b: null
	,writeByte: function(c) {
		this.b.addByte(c);
	}
	,writeBytes: function(buf,pos,len) {
		this.b.addBytes(buf,pos,len);
		return len;
	}
	,getBytes: function() {
		return this.b.getBytes();
	}
	,__class__: haxe_io_BytesOutput
});
var haxe_io_Eof = function() {
};
$hxClasses["haxe.io.Eof"] = haxe_io_Eof;
haxe_io_Eof.__name__ = "haxe.io.Eof";
haxe_io_Eof.prototype = {
	toString: function() {
		return "Eof";
	}
	,__class__: haxe_io_Eof
};
var haxe_io_Error = $hxEnums["haxe.io.Error"] = { __ename__:"haxe.io.Error",__constructs__:null
	,Blocked: {_hx_name:"Blocked",_hx_index:0,__enum__:"haxe.io.Error",toString:$estr}
	,Overflow: {_hx_name:"Overflow",_hx_index:1,__enum__:"haxe.io.Error",toString:$estr}
	,OutsideBounds: {_hx_name:"OutsideBounds",_hx_index:2,__enum__:"haxe.io.Error",toString:$estr}
	,Custom: ($_=function(e) { return {_hx_index:3,e:e,__enum__:"haxe.io.Error",toString:$estr}; },$_._hx_name="Custom",$_.__params__ = ["e"],$_)
};
haxe_io_Error.__constructs__ = [haxe_io_Error.Blocked,haxe_io_Error.Overflow,haxe_io_Error.OutsideBounds,haxe_io_Error.Custom];
var haxe_io_FPHelper = function() { };
$hxClasses["haxe.io.FPHelper"] = haxe_io_FPHelper;
haxe_io_FPHelper.__name__ = "haxe.io.FPHelper";
haxe_io_FPHelper.i32ToFloat = function(i) {
	haxe_io_FPHelper.helper.setInt32(0,i,true);
	return haxe_io_FPHelper.helper.getFloat32(0,true);
};
haxe_io_FPHelper.floatToI32 = function(f) {
	haxe_io_FPHelper.helper.setFloat32(0,f,true);
	return haxe_io_FPHelper.helper.getInt32(0,true);
};
haxe_io_FPHelper.i64ToDouble = function(low,high) {
	haxe_io_FPHelper.helper.setInt32(0,low,true);
	haxe_io_FPHelper.helper.setInt32(4,high,true);
	return haxe_io_FPHelper.helper.getFloat64(0,true);
};
haxe_io_FPHelper.doubleToI64 = function(v) {
	var i64 = haxe_io_FPHelper.i64tmp;
	haxe_io_FPHelper.helper.setFloat64(0,v,true);
	i64.low = haxe_io_FPHelper.helper.getInt32(0,true);
	i64.high = haxe_io_FPHelper.helper.getInt32(4,true);
	return i64;
};
var haxe_io_Path = function(path) {
	switch(path) {
	case ".":case "..":
		this.dir = path;
		this.file = "";
		return;
	}
	var c1 = path.lastIndexOf("/");
	var c2 = path.lastIndexOf("\\");
	if(c1 < c2) {
		this.dir = HxOverrides.substr(path,0,c2);
		path = HxOverrides.substr(path,c2 + 1,null);
		this.backslash = true;
	} else if(c2 < c1) {
		this.dir = HxOverrides.substr(path,0,c1);
		path = HxOverrides.substr(path,c1 + 1,null);
	} else {
		this.dir = null;
	}
	var cp = path.lastIndexOf(".");
	if(cp != -1) {
		this.ext = HxOverrides.substr(path,cp + 1,null);
		this.file = HxOverrides.substr(path,0,cp);
	} else {
		this.ext = null;
		this.file = path;
	}
};
$hxClasses["haxe.io.Path"] = haxe_io_Path;
haxe_io_Path.__name__ = "haxe.io.Path";
haxe_io_Path.directory = function(path) {
	var s = new haxe_io_Path(path);
	if(s.dir == null) {
		return "";
	}
	return s.dir;
};
haxe_io_Path.addTrailingSlash = function(path) {
	if(path.length == 0) {
		return "/";
	}
	var c1 = path.lastIndexOf("/");
	var c2 = path.lastIndexOf("\\");
	if(c1 < c2) {
		if(c2 != path.length - 1) {
			return path + "\\";
		} else {
			return path;
		}
	} else if(c1 != path.length - 1) {
		return path + "/";
	} else {
		return path;
	}
};
haxe_io_Path.prototype = {
	dir: null
	,file: null
	,ext: null
	,backslash: null
	,toString: function() {
		return (this.dir == null ? "" : this.dir + (this.backslash ? "\\" : "/")) + this.file + (this.ext == null ? "" : "." + this.ext);
	}
	,__class__: haxe_io_Path
};
var haxe_iterators_ArrayIterator = function(array) {
	this.current = 0;
	this.array = array;
};
$hxClasses["haxe.iterators.ArrayIterator"] = haxe_iterators_ArrayIterator;
haxe_iterators_ArrayIterator.__name__ = "haxe.iterators.ArrayIterator";
haxe_iterators_ArrayIterator.prototype = {
	array: null
	,current: null
	,hasNext: function() {
		return this.current < this.array.length;
	}
	,next: function() {
		return this.array[this.current++];
	}
	,__class__: haxe_iterators_ArrayIterator
};
var haxe_iterators_ArrayKeyValueIterator = function(array) {
	this.current = 0;
	this.array = array;
};
$hxClasses["haxe.iterators.ArrayKeyValueIterator"] = haxe_iterators_ArrayKeyValueIterator;
haxe_iterators_ArrayKeyValueIterator.__name__ = "haxe.iterators.ArrayKeyValueIterator";
haxe_iterators_ArrayKeyValueIterator.prototype = {
	current: null
	,array: null
	,hasNext: function() {
		return this.current < this.array.length;
	}
	,next: function() {
		return { value : this.array[this.current], key : this.current++};
	}
	,__class__: haxe_iterators_ArrayKeyValueIterator
};
var haxe_iterators_DynamicAccessKeyValueIterator = function(access) {
	this.access = access;
	this.keys = Reflect.fields(access);
	this.index = 0;
};
$hxClasses["haxe.iterators.DynamicAccessKeyValueIterator"] = haxe_iterators_DynamicAccessKeyValueIterator;
haxe_iterators_DynamicAccessKeyValueIterator.__name__ = "haxe.iterators.DynamicAccessKeyValueIterator";
haxe_iterators_DynamicAccessKeyValueIterator.prototype = {
	access: null
	,keys: null
	,index: null
	,hasNext: function() {
		return this.index < this.keys.length;
	}
	,next: function() {
		var key = this.keys[this.index++];
		return { value : this.access[key], key : key};
	}
	,__class__: haxe_iterators_DynamicAccessKeyValueIterator
};
var haxe_iterators_MapKeyValueIterator = function(map) {
	this.map = map;
	this.keys = map.keys();
};
$hxClasses["haxe.iterators.MapKeyValueIterator"] = haxe_iterators_MapKeyValueIterator;
haxe_iterators_MapKeyValueIterator.__name__ = "haxe.iterators.MapKeyValueIterator";
haxe_iterators_MapKeyValueIterator.prototype = {
	map: null
	,keys: null
	,hasNext: function() {
		return this.keys.hasNext();
	}
	,next: function() {
		var key = this.keys.next();
		return { value : this.map.get(key), key : key};
	}
	,__class__: haxe_iterators_MapKeyValueIterator
};
var haxe_macro_StringLiteralKind = $hxEnums["haxe.macro.StringLiteralKind"] = { __ename__:"haxe.macro.StringLiteralKind",__constructs__:null
	,DoubleQuotes: {_hx_name:"DoubleQuotes",_hx_index:0,__enum__:"haxe.macro.StringLiteralKind",toString:$estr}
	,SingleQuotes: {_hx_name:"SingleQuotes",_hx_index:1,__enum__:"haxe.macro.StringLiteralKind",toString:$estr}
};
haxe_macro_StringLiteralKind.__constructs__ = [haxe_macro_StringLiteralKind.DoubleQuotes,haxe_macro_StringLiteralKind.SingleQuotes];
var haxe_macro_Constant = $hxEnums["haxe.macro.Constant"] = { __ename__:"haxe.macro.Constant",__constructs__:null
	,CInt: ($_=function(v,s) { return {_hx_index:0,v:v,s:s,__enum__:"haxe.macro.Constant",toString:$estr}; },$_._hx_name="CInt",$_.__params__ = ["v","s"],$_)
	,CFloat: ($_=function(f,s) { return {_hx_index:1,f:f,s:s,__enum__:"haxe.macro.Constant",toString:$estr}; },$_._hx_name="CFloat",$_.__params__ = ["f","s"],$_)
	,CString: ($_=function(s,kind) { return {_hx_index:2,s:s,kind:kind,__enum__:"haxe.macro.Constant",toString:$estr}; },$_._hx_name="CString",$_.__params__ = ["s","kind"],$_)
	,CIdent: ($_=function(s) { return {_hx_index:3,s:s,__enum__:"haxe.macro.Constant",toString:$estr}; },$_._hx_name="CIdent",$_.__params__ = ["s"],$_)
	,CRegexp: ($_=function(r,opt) { return {_hx_index:4,r:r,opt:opt,__enum__:"haxe.macro.Constant",toString:$estr}; },$_._hx_name="CRegexp",$_.__params__ = ["r","opt"],$_)
};
haxe_macro_Constant.__constructs__ = [haxe_macro_Constant.CInt,haxe_macro_Constant.CFloat,haxe_macro_Constant.CString,haxe_macro_Constant.CIdent,haxe_macro_Constant.CRegexp];
var haxe_macro_Binop = $hxEnums["haxe.macro.Binop"] = { __ename__:"haxe.macro.Binop",__constructs__:null
	,OpAdd: {_hx_name:"OpAdd",_hx_index:0,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpMult: {_hx_name:"OpMult",_hx_index:1,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpDiv: {_hx_name:"OpDiv",_hx_index:2,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpSub: {_hx_name:"OpSub",_hx_index:3,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpAssign: {_hx_name:"OpAssign",_hx_index:4,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpEq: {_hx_name:"OpEq",_hx_index:5,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpNotEq: {_hx_name:"OpNotEq",_hx_index:6,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpGt: {_hx_name:"OpGt",_hx_index:7,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpGte: {_hx_name:"OpGte",_hx_index:8,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpLt: {_hx_name:"OpLt",_hx_index:9,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpLte: {_hx_name:"OpLte",_hx_index:10,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpAnd: {_hx_name:"OpAnd",_hx_index:11,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpOr: {_hx_name:"OpOr",_hx_index:12,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpXor: {_hx_name:"OpXor",_hx_index:13,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpBoolAnd: {_hx_name:"OpBoolAnd",_hx_index:14,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpBoolOr: {_hx_name:"OpBoolOr",_hx_index:15,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpShl: {_hx_name:"OpShl",_hx_index:16,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpShr: {_hx_name:"OpShr",_hx_index:17,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpUShr: {_hx_name:"OpUShr",_hx_index:18,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpMod: {_hx_name:"OpMod",_hx_index:19,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpAssignOp: ($_=function(op) { return {_hx_index:20,op:op,__enum__:"haxe.macro.Binop",toString:$estr}; },$_._hx_name="OpAssignOp",$_.__params__ = ["op"],$_)
	,OpInterval: {_hx_name:"OpInterval",_hx_index:21,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpArrow: {_hx_name:"OpArrow",_hx_index:22,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpIn: {_hx_name:"OpIn",_hx_index:23,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpNullCoal: {_hx_name:"OpNullCoal",_hx_index:24,__enum__:"haxe.macro.Binop",toString:$estr}
};
haxe_macro_Binop.__constructs__ = [haxe_macro_Binop.OpAdd,haxe_macro_Binop.OpMult,haxe_macro_Binop.OpDiv,haxe_macro_Binop.OpSub,haxe_macro_Binop.OpAssign,haxe_macro_Binop.OpEq,haxe_macro_Binop.OpNotEq,haxe_macro_Binop.OpGt,haxe_macro_Binop.OpGte,haxe_macro_Binop.OpLt,haxe_macro_Binop.OpLte,haxe_macro_Binop.OpAnd,haxe_macro_Binop.OpOr,haxe_macro_Binop.OpXor,haxe_macro_Binop.OpBoolAnd,haxe_macro_Binop.OpBoolOr,haxe_macro_Binop.OpShl,haxe_macro_Binop.OpShr,haxe_macro_Binop.OpUShr,haxe_macro_Binop.OpMod,haxe_macro_Binop.OpAssignOp,haxe_macro_Binop.OpInterval,haxe_macro_Binop.OpArrow,haxe_macro_Binop.OpIn,haxe_macro_Binop.OpNullCoal];
var haxe_macro_Unop = $hxEnums["haxe.macro.Unop"] = { __ename__:"haxe.macro.Unop",__constructs__:null
	,OpIncrement: {_hx_name:"OpIncrement",_hx_index:0,__enum__:"haxe.macro.Unop",toString:$estr}
	,OpDecrement: {_hx_name:"OpDecrement",_hx_index:1,__enum__:"haxe.macro.Unop",toString:$estr}
	,OpNot: {_hx_name:"OpNot",_hx_index:2,__enum__:"haxe.macro.Unop",toString:$estr}
	,OpNeg: {_hx_name:"OpNeg",_hx_index:3,__enum__:"haxe.macro.Unop",toString:$estr}
	,OpNegBits: {_hx_name:"OpNegBits",_hx_index:4,__enum__:"haxe.macro.Unop",toString:$estr}
	,OpSpread: {_hx_name:"OpSpread",_hx_index:5,__enum__:"haxe.macro.Unop",toString:$estr}
};
haxe_macro_Unop.__constructs__ = [haxe_macro_Unop.OpIncrement,haxe_macro_Unop.OpDecrement,haxe_macro_Unop.OpNot,haxe_macro_Unop.OpNeg,haxe_macro_Unop.OpNegBits,haxe_macro_Unop.OpSpread];
var haxe_macro_EFieldKind = $hxEnums["haxe.macro.EFieldKind"] = { __ename__:"haxe.macro.EFieldKind",__constructs__:null
	,Normal: {_hx_name:"Normal",_hx_index:0,__enum__:"haxe.macro.EFieldKind",toString:$estr}
	,Safe: {_hx_name:"Safe",_hx_index:1,__enum__:"haxe.macro.EFieldKind",toString:$estr}
};
haxe_macro_EFieldKind.__constructs__ = [haxe_macro_EFieldKind.Normal,haxe_macro_EFieldKind.Safe];
var haxe_macro_QuoteStatus = $hxEnums["haxe.macro.QuoteStatus"] = { __ename__:"haxe.macro.QuoteStatus",__constructs__:null
	,Unquoted: {_hx_name:"Unquoted",_hx_index:0,__enum__:"haxe.macro.QuoteStatus",toString:$estr}
	,Quoted: {_hx_name:"Quoted",_hx_index:1,__enum__:"haxe.macro.QuoteStatus",toString:$estr}
};
haxe_macro_QuoteStatus.__constructs__ = [haxe_macro_QuoteStatus.Unquoted,haxe_macro_QuoteStatus.Quoted];
var haxe_macro_FunctionKind = $hxEnums["haxe.macro.FunctionKind"] = { __ename__:"haxe.macro.FunctionKind",__constructs__:null
	,FAnonymous: {_hx_name:"FAnonymous",_hx_index:0,__enum__:"haxe.macro.FunctionKind",toString:$estr}
	,FNamed: ($_=function(name,inlined) { return {_hx_index:1,name:name,inlined:inlined,__enum__:"haxe.macro.FunctionKind",toString:$estr}; },$_._hx_name="FNamed",$_.__params__ = ["name","inlined"],$_)
	,FArrow: {_hx_name:"FArrow",_hx_index:2,__enum__:"haxe.macro.FunctionKind",toString:$estr}
};
haxe_macro_FunctionKind.__constructs__ = [haxe_macro_FunctionKind.FAnonymous,haxe_macro_FunctionKind.FNamed,haxe_macro_FunctionKind.FArrow];
var haxe_macro_ExprDef = $hxEnums["haxe.macro.ExprDef"] = { __ename__:"haxe.macro.ExprDef",__constructs__:null
	,EConst: ($_=function(c) { return {_hx_index:0,c:c,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="EConst",$_.__params__ = ["c"],$_)
	,EArray: ($_=function(e1,e2) { return {_hx_index:1,e1:e1,e2:e2,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="EArray",$_.__params__ = ["e1","e2"],$_)
	,EBinop: ($_=function(op,e1,e2) { return {_hx_index:2,op:op,e1:e1,e2:e2,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="EBinop",$_.__params__ = ["op","e1","e2"],$_)
	,EField: ($_=function(e,field,kind) { return {_hx_index:3,e:e,field:field,kind:kind,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="EField",$_.__params__ = ["e","field","kind"],$_)
	,EParenthesis: ($_=function(e) { return {_hx_index:4,e:e,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="EParenthesis",$_.__params__ = ["e"],$_)
	,EObjectDecl: ($_=function(fields) { return {_hx_index:5,fields:fields,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="EObjectDecl",$_.__params__ = ["fields"],$_)
	,EArrayDecl: ($_=function(values) { return {_hx_index:6,values:values,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="EArrayDecl",$_.__params__ = ["values"],$_)
	,ECall: ($_=function(e,params) { return {_hx_index:7,e:e,params:params,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="ECall",$_.__params__ = ["e","params"],$_)
	,ENew: ($_=function(t,params) { return {_hx_index:8,t:t,params:params,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="ENew",$_.__params__ = ["t","params"],$_)
	,EUnop: ($_=function(op,postFix,e) { return {_hx_index:9,op:op,postFix:postFix,e:e,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="EUnop",$_.__params__ = ["op","postFix","e"],$_)
	,EVars: ($_=function(vars) { return {_hx_index:10,vars:vars,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="EVars",$_.__params__ = ["vars"],$_)
	,EFunction: ($_=function(kind,f) { return {_hx_index:11,kind:kind,f:f,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="EFunction",$_.__params__ = ["kind","f"],$_)
	,EBlock: ($_=function(exprs) { return {_hx_index:12,exprs:exprs,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="EBlock",$_.__params__ = ["exprs"],$_)
	,EFor: ($_=function(it,expr) { return {_hx_index:13,it:it,expr:expr,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="EFor",$_.__params__ = ["it","expr"],$_)
	,EIf: ($_=function(econd,eif,eelse) { return {_hx_index:14,econd:econd,eif:eif,eelse:eelse,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="EIf",$_.__params__ = ["econd","eif","eelse"],$_)
	,EWhile: ($_=function(econd,e,normalWhile) { return {_hx_index:15,econd:econd,e:e,normalWhile:normalWhile,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="EWhile",$_.__params__ = ["econd","e","normalWhile"],$_)
	,ESwitch: ($_=function(e,cases,edef) { return {_hx_index:16,e:e,cases:cases,edef:edef,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="ESwitch",$_.__params__ = ["e","cases","edef"],$_)
	,ETry: ($_=function(e,catches) { return {_hx_index:17,e:e,catches:catches,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="ETry",$_.__params__ = ["e","catches"],$_)
	,EReturn: ($_=function(e) { return {_hx_index:18,e:e,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="EReturn",$_.__params__ = ["e"],$_)
	,EBreak: {_hx_name:"EBreak",_hx_index:19,__enum__:"haxe.macro.ExprDef",toString:$estr}
	,EContinue: {_hx_name:"EContinue",_hx_index:20,__enum__:"haxe.macro.ExprDef",toString:$estr}
	,EUntyped: ($_=function(e) { return {_hx_index:21,e:e,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="EUntyped",$_.__params__ = ["e"],$_)
	,EThrow: ($_=function(e) { return {_hx_index:22,e:e,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="EThrow",$_.__params__ = ["e"],$_)
	,ECast: ($_=function(e,t) { return {_hx_index:23,e:e,t:t,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="ECast",$_.__params__ = ["e","t"],$_)
	,EDisplay: ($_=function(e,displayKind) { return {_hx_index:24,e:e,displayKind:displayKind,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="EDisplay",$_.__params__ = ["e","displayKind"],$_)
	,ETernary: ($_=function(econd,eif,eelse) { return {_hx_index:25,econd:econd,eif:eif,eelse:eelse,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="ETernary",$_.__params__ = ["econd","eif","eelse"],$_)
	,ECheckType: ($_=function(e,t) { return {_hx_index:26,e:e,t:t,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="ECheckType",$_.__params__ = ["e","t"],$_)
	,EMeta: ($_=function(s,e) { return {_hx_index:27,s:s,e:e,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="EMeta",$_.__params__ = ["s","e"],$_)
	,EIs: ($_=function(e,t) { return {_hx_index:28,e:e,t:t,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="EIs",$_.__params__ = ["e","t"],$_)
};
haxe_macro_ExprDef.__constructs__ = [haxe_macro_ExprDef.EConst,haxe_macro_ExprDef.EArray,haxe_macro_ExprDef.EBinop,haxe_macro_ExprDef.EField,haxe_macro_ExprDef.EParenthesis,haxe_macro_ExprDef.EObjectDecl,haxe_macro_ExprDef.EArrayDecl,haxe_macro_ExprDef.ECall,haxe_macro_ExprDef.ENew,haxe_macro_ExprDef.EUnop,haxe_macro_ExprDef.EVars,haxe_macro_ExprDef.EFunction,haxe_macro_ExprDef.EBlock,haxe_macro_ExprDef.EFor,haxe_macro_ExprDef.EIf,haxe_macro_ExprDef.EWhile,haxe_macro_ExprDef.ESwitch,haxe_macro_ExprDef.ETry,haxe_macro_ExprDef.EReturn,haxe_macro_ExprDef.EBreak,haxe_macro_ExprDef.EContinue,haxe_macro_ExprDef.EUntyped,haxe_macro_ExprDef.EThrow,haxe_macro_ExprDef.ECast,haxe_macro_ExprDef.EDisplay,haxe_macro_ExprDef.ETernary,haxe_macro_ExprDef.ECheckType,haxe_macro_ExprDef.EMeta,haxe_macro_ExprDef.EIs];
var haxe_macro_DisplayKind = $hxEnums["haxe.macro.DisplayKind"] = { __ename__:"haxe.macro.DisplayKind",__constructs__:null
	,DKCall: {_hx_name:"DKCall",_hx_index:0,__enum__:"haxe.macro.DisplayKind",toString:$estr}
	,DKDot: {_hx_name:"DKDot",_hx_index:1,__enum__:"haxe.macro.DisplayKind",toString:$estr}
	,DKStructure: {_hx_name:"DKStructure",_hx_index:2,__enum__:"haxe.macro.DisplayKind",toString:$estr}
	,DKMarked: {_hx_name:"DKMarked",_hx_index:3,__enum__:"haxe.macro.DisplayKind",toString:$estr}
	,DKPattern: ($_=function(outermost) { return {_hx_index:4,outermost:outermost,__enum__:"haxe.macro.DisplayKind",toString:$estr}; },$_._hx_name="DKPattern",$_.__params__ = ["outermost"],$_)
};
haxe_macro_DisplayKind.__constructs__ = [haxe_macro_DisplayKind.DKCall,haxe_macro_DisplayKind.DKDot,haxe_macro_DisplayKind.DKStructure,haxe_macro_DisplayKind.DKMarked,haxe_macro_DisplayKind.DKPattern];
var haxe_macro_ComplexType = $hxEnums["haxe.macro.ComplexType"] = { __ename__:"haxe.macro.ComplexType",__constructs__:null
	,TPath: ($_=function(p) { return {_hx_index:0,p:p,__enum__:"haxe.macro.ComplexType",toString:$estr}; },$_._hx_name="TPath",$_.__params__ = ["p"],$_)
	,TFunction: ($_=function(args,ret) { return {_hx_index:1,args:args,ret:ret,__enum__:"haxe.macro.ComplexType",toString:$estr}; },$_._hx_name="TFunction",$_.__params__ = ["args","ret"],$_)
	,TAnonymous: ($_=function(fields) { return {_hx_index:2,fields:fields,__enum__:"haxe.macro.ComplexType",toString:$estr}; },$_._hx_name="TAnonymous",$_.__params__ = ["fields"],$_)
	,TParent: ($_=function(t) { return {_hx_index:3,t:t,__enum__:"haxe.macro.ComplexType",toString:$estr}; },$_._hx_name="TParent",$_.__params__ = ["t"],$_)
	,TExtend: ($_=function(p,fields) { return {_hx_index:4,p:p,fields:fields,__enum__:"haxe.macro.ComplexType",toString:$estr}; },$_._hx_name="TExtend",$_.__params__ = ["p","fields"],$_)
	,TOptional: ($_=function(t) { return {_hx_index:5,t:t,__enum__:"haxe.macro.ComplexType",toString:$estr}; },$_._hx_name="TOptional",$_.__params__ = ["t"],$_)
	,TNamed: ($_=function(n,t) { return {_hx_index:6,n:n,t:t,__enum__:"haxe.macro.ComplexType",toString:$estr}; },$_._hx_name="TNamed",$_.__params__ = ["n","t"],$_)
	,TIntersection: ($_=function(tl) { return {_hx_index:7,tl:tl,__enum__:"haxe.macro.ComplexType",toString:$estr}; },$_._hx_name="TIntersection",$_.__params__ = ["tl"],$_)
};
haxe_macro_ComplexType.__constructs__ = [haxe_macro_ComplexType.TPath,haxe_macro_ComplexType.TFunction,haxe_macro_ComplexType.TAnonymous,haxe_macro_ComplexType.TParent,haxe_macro_ComplexType.TExtend,haxe_macro_ComplexType.TOptional,haxe_macro_ComplexType.TNamed,haxe_macro_ComplexType.TIntersection];
var haxe_macro_TypeParam = $hxEnums["haxe.macro.TypeParam"] = { __ename__:"haxe.macro.TypeParam",__constructs__:null
	,TPType: ($_=function(t) { return {_hx_index:0,t:t,__enum__:"haxe.macro.TypeParam",toString:$estr}; },$_._hx_name="TPType",$_.__params__ = ["t"],$_)
	,TPExpr: ($_=function(e) { return {_hx_index:1,e:e,__enum__:"haxe.macro.TypeParam",toString:$estr}; },$_._hx_name="TPExpr",$_.__params__ = ["e"],$_)
};
haxe_macro_TypeParam.__constructs__ = [haxe_macro_TypeParam.TPType,haxe_macro_TypeParam.TPExpr];
var haxe_macro_Access = $hxEnums["haxe.macro.Access"] = { __ename__:"haxe.macro.Access",__constructs__:null
	,APublic: {_hx_name:"APublic",_hx_index:0,__enum__:"haxe.macro.Access",toString:$estr}
	,APrivate: {_hx_name:"APrivate",_hx_index:1,__enum__:"haxe.macro.Access",toString:$estr}
	,AStatic: {_hx_name:"AStatic",_hx_index:2,__enum__:"haxe.macro.Access",toString:$estr}
	,AOverride: {_hx_name:"AOverride",_hx_index:3,__enum__:"haxe.macro.Access",toString:$estr}
	,ADynamic: {_hx_name:"ADynamic",_hx_index:4,__enum__:"haxe.macro.Access",toString:$estr}
	,AInline: {_hx_name:"AInline",_hx_index:5,__enum__:"haxe.macro.Access",toString:$estr}
	,AMacro: {_hx_name:"AMacro",_hx_index:6,__enum__:"haxe.macro.Access",toString:$estr}
	,AFinal: {_hx_name:"AFinal",_hx_index:7,__enum__:"haxe.macro.Access",toString:$estr}
	,AExtern: {_hx_name:"AExtern",_hx_index:8,__enum__:"haxe.macro.Access",toString:$estr}
	,AAbstract: {_hx_name:"AAbstract",_hx_index:9,__enum__:"haxe.macro.Access",toString:$estr}
	,AOverload: {_hx_name:"AOverload",_hx_index:10,__enum__:"haxe.macro.Access",toString:$estr}
};
haxe_macro_Access.__constructs__ = [haxe_macro_Access.APublic,haxe_macro_Access.APrivate,haxe_macro_Access.AStatic,haxe_macro_Access.AOverride,haxe_macro_Access.ADynamic,haxe_macro_Access.AInline,haxe_macro_Access.AMacro,haxe_macro_Access.AFinal,haxe_macro_Access.AExtern,haxe_macro_Access.AAbstract,haxe_macro_Access.AOverload];
var haxe_macro_FieldType = $hxEnums["haxe.macro.FieldType"] = { __ename__:"haxe.macro.FieldType",__constructs__:null
	,FVar: ($_=function(t,e) { return {_hx_index:0,t:t,e:e,__enum__:"haxe.macro.FieldType",toString:$estr}; },$_._hx_name="FVar",$_.__params__ = ["t","e"],$_)
	,FFun: ($_=function(f) { return {_hx_index:1,f:f,__enum__:"haxe.macro.FieldType",toString:$estr}; },$_._hx_name="FFun",$_.__params__ = ["f"],$_)
	,FProp: ($_=function(get,set,t,e) { return {_hx_index:2,get:get,set:set,t:t,e:e,__enum__:"haxe.macro.FieldType",toString:$estr}; },$_._hx_name="FProp",$_.__params__ = ["get","set","t","e"],$_)
};
haxe_macro_FieldType.__constructs__ = [haxe_macro_FieldType.FVar,haxe_macro_FieldType.FFun,haxe_macro_FieldType.FProp];
var haxe_macro_TypeDefKind = $hxEnums["haxe.macro.TypeDefKind"] = { __ename__:"haxe.macro.TypeDefKind",__constructs__:null
	,TDEnum: {_hx_name:"TDEnum",_hx_index:0,__enum__:"haxe.macro.TypeDefKind",toString:$estr}
	,TDStructure: {_hx_name:"TDStructure",_hx_index:1,__enum__:"haxe.macro.TypeDefKind",toString:$estr}
	,TDClass: ($_=function(superClass,interfaces,isInterface,isFinal,isAbstract) { return {_hx_index:2,superClass:superClass,interfaces:interfaces,isInterface:isInterface,isFinal:isFinal,isAbstract:isAbstract,__enum__:"haxe.macro.TypeDefKind",toString:$estr}; },$_._hx_name="TDClass",$_.__params__ = ["superClass","interfaces","isInterface","isFinal","isAbstract"],$_)
	,TDAlias: ($_=function(t) { return {_hx_index:3,t:t,__enum__:"haxe.macro.TypeDefKind",toString:$estr}; },$_._hx_name="TDAlias",$_.__params__ = ["t"],$_)
	,TDAbstract: ($_=function(tthis,from,to) { return {_hx_index:4,tthis:tthis,from:from,to:to,__enum__:"haxe.macro.TypeDefKind",toString:$estr}; },$_._hx_name="TDAbstract",$_.__params__ = ["tthis","from","to"],$_)
	,TDField: ($_=function(kind,access) { return {_hx_index:5,kind:kind,access:access,__enum__:"haxe.macro.TypeDefKind",toString:$estr}; },$_._hx_name="TDField",$_.__params__ = ["kind","access"],$_)
};
haxe_macro_TypeDefKind.__constructs__ = [haxe_macro_TypeDefKind.TDEnum,haxe_macro_TypeDefKind.TDStructure,haxe_macro_TypeDefKind.TDClass,haxe_macro_TypeDefKind.TDAlias,haxe_macro_TypeDefKind.TDAbstract,haxe_macro_TypeDefKind.TDField];
var haxe_macro_Printer = function(tabString) {
	if(tabString == null) {
		tabString = "\t";
	}
	this.tabs = "";
	this.tabString = tabString;
};
$hxClasses["haxe.macro.Printer"] = haxe_macro_Printer;
haxe_macro_Printer.__name__ = "haxe.macro.Printer";
haxe_macro_Printer.prototype = {
	tabs: null
	,tabString: null
	,printUnop: function(op) {
		switch(op._hx_index) {
		case 0:
			return "++";
		case 1:
			return "--";
		case 2:
			return "!";
		case 3:
			return "-";
		case 4:
			return "~";
		case 5:
			return "...";
		}
	}
	,printBinop: function(op) {
		switch(op._hx_index) {
		case 0:
			return "+";
		case 1:
			return "*";
		case 2:
			return "/";
		case 3:
			return "-";
		case 4:
			return "=";
		case 5:
			return "==";
		case 6:
			return "!=";
		case 7:
			return ">";
		case 8:
			return ">=";
		case 9:
			return "<";
		case 10:
			return "<=";
		case 11:
			return "&";
		case 12:
			return "|";
		case 13:
			return "^";
		case 14:
			return "&&";
		case 15:
			return "||";
		case 16:
			return "<<";
		case 17:
			return ">>";
		case 18:
			return ">>>";
		case 19:
			return "%";
		case 20:
			var op1 = op.op;
			return this.printBinop(op1) + "=";
		case 21:
			return "...";
		case 22:
			return "=>";
		case 23:
			return "in";
		case 24:
			return "??";
		}
	}
	,escapeString: function(s,delim) {
		return delim + StringTools.replace(StringTools.replace(StringTools.replace(StringTools.replace(StringTools.replace(StringTools.replace(s,"\\","\\\\"),"\n","\\n"),"\t","\\t"),"\r","\\r"),"'","\\'"),"\"","\\\"") + delim;
	}
	,printFormatString: function(s) {
		return this.escapeString(s,"'");
	}
	,printString: function(s) {
		return this.escapeString(s,"\"");
	}
	,printConstant: function(c) {
		switch(c._hx_index) {
		case 0:
			var _g = c.v;
			var _g1 = c.s;
			if(_g1 == null) {
				var s = _g;
				return s;
			} else {
				var suffix = _g1;
				var s = _g;
				return s + suffix;
			}
			break;
		case 1:
			var _g = c.f;
			var _g1 = c.s;
			if(_g1 == null) {
				var s = _g;
				return s;
			} else {
				var suffix = _g1;
				var s = _g;
				return s + suffix;
			}
			break;
		case 2:
			var _g = c.s;
			var _g1 = c.kind;
			if(_g1 == null) {
				var s = _g;
				return this.printString(s);
			} else if(_g1._hx_index == 1) {
				var s = _g;
				return this.printFormatString(s);
			} else {
				var s = _g;
				return this.printString(s);
			}
			break;
		case 3:
			var s = c.s;
			return s;
		case 4:
			var s = c.r;
			var opt = c.opt;
			return "~/" + s + "/" + opt;
		}
	}
	,printTypeParam: function(param) {
		switch(param._hx_index) {
		case 0:
			var ct = param.t;
			return this.printComplexType(ct);
		case 1:
			var e = param.e;
			return this.printExpr(e);
		}
	}
	,printTypePath: function(tp) {
		var tmp = (tp.pack.length > 0 ? tp.pack.join(".") + "." : "") + tp.name + (tp.sub != null ? "." + tp.sub : "");
		var tmp1;
		if(tp.params == null) {
			tmp1 = "";
		} else if(tp.params.length > 0) {
			var _this = tp.params;
			var f = $bind(this,this.printTypeParam);
			var result = new Array(_this.length);
			var _g = 0;
			var _g1 = _this.length;
			while(_g < _g1) {
				var i = _g++;
				result[i] = f(_this[i]);
			}
			tmp1 = "<" + result.join(", ") + ">";
		} else {
			tmp1 = "";
		}
		return tmp + tmp1;
	}
	,printComplexType: function(ct) {
		switch(ct._hx_index) {
		case 0:
			var tp = ct.p;
			return this.printTypePath(tp);
		case 1:
			var args = ct.args;
			var ret = ct.ret;
			var wrapArgumentsInParentheses;
			if(args.length == 1) {
				var _g = args[0];
				switch(_g._hx_index) {
				case 0:
					var _g1 = _g.p;
					wrapArgumentsInParentheses = false;
					break;
				case 3:
					var t = _g.t;
					wrapArgumentsInParentheses = false;
					break;
				case 5:
					var _g1 = _g.t;
					if(_g1._hx_index == 0) {
						var _g = _g1.p;
						wrapArgumentsInParentheses = false;
					} else {
						wrapArgumentsInParentheses = true;
					}
					break;
				default:
					wrapArgumentsInParentheses = true;
				}
			} else {
				wrapArgumentsInParentheses = true;
			}
			var f = $bind(this,this.printComplexType);
			var result = new Array(args.length);
			var _g = 0;
			var _g1 = args.length;
			while(_g < _g1) {
				var i = _g++;
				result[i] = f(args[i]);
			}
			var argStr = result.join(", ");
			var tmp;
			if(ret._hx_index == 1) {
				var _g = ret.args;
				var _g = ret.ret;
				tmp = "(" + this.printComplexType(ret) + ")";
			} else {
				tmp = this.printComplexType(ret);
			}
			return (wrapArgumentsInParentheses ? "(" + argStr + ")" : argStr) + " -> " + tmp;
		case 2:
			var fields = ct.fields;
			var _g = [];
			var _g1 = 0;
			while(_g1 < fields.length) {
				var f = fields[_g1];
				++_g1;
				_g.push(this.printField(f) + "; ");
			}
			return "{ " + _g.join("") + "}";
		case 3:
			var ct1 = ct.t;
			return "(" + this.printComplexType(ct1) + ")";
		case 4:
			var tpl = ct.p;
			var fields = ct.fields;
			var _g = [];
			var _g1 = 0;
			while(_g1 < tpl.length) {
				var t = tpl[_g1];
				++_g1;
				_g.push("> " + this.printTypePath(t) + ", ");
			}
			var types = _g.join("");
			var _g = [];
			var _g1 = 0;
			while(_g1 < fields.length) {
				var f = fields[_g1];
				++_g1;
				_g.push(this.printField(f) + "; ");
			}
			var fields = _g.join("");
			return "{" + types + fields + "}";
		case 5:
			var ct1 = ct.t;
			return "?" + this.printComplexType(ct1);
		case 6:
			var n = ct.n;
			var ct1 = ct.t;
			return n + ":" + this.printComplexType(ct1);
		case 7:
			var tl = ct.tl;
			var f = $bind(this,this.printComplexType);
			var result = new Array(tl.length);
			var _g = 0;
			var _g1 = tl.length;
			while(_g < _g1) {
				var i = _g++;
				result[i] = f(tl[i]);
			}
			return result.join(" & ");
		}
	}
	,printMetadata: function(meta) {
		return "@" + meta.name + (meta.params != null && meta.params.length > 0 ? "(" + this.printExprs(meta.params,", ") + ")" : "");
	}
	,printAccess: function(access) {
		switch(access._hx_index) {
		case 0:
			return "public";
		case 1:
			return "private";
		case 2:
			return "static";
		case 3:
			return "override";
		case 4:
			return "dynamic";
		case 5:
			return "inline";
		case 6:
			return "macro";
		case 7:
			return "final";
		case 8:
			return "extern";
		case 9:
			return "abstract";
		case 10:
			return "overload";
		}
	}
	,printField: function(field) {
		var tmp = field.doc != null && field.doc != "" ? "/**\n" + this.tabs + this.tabString + StringTools.replace(field.doc,"\n","\n" + this.tabs + this.tabString) + "\n" + this.tabs + "**/\n" + this.tabs : "";
		var tmp1;
		if(field.meta != null && field.meta.length > 0) {
			var _this = field.meta;
			var f = $bind(this,this.printMetadata);
			var result = new Array(_this.length);
			var _g = 0;
			var _g1 = _this.length;
			while(_g < _g1) {
				var i = _g++;
				result[i] = f(_this[i]);
			}
			tmp1 = result.join("\n" + this.tabs) + ("\n" + this.tabs);
		} else {
			tmp1 = "";
		}
		var tmp2 = tmp + tmp1;
		var tmp;
		if(field.access != null && field.access.length > 0) {
			var access = field.access;
			var _this;
			if(Lambda.has(access,haxe_macro_Access.AFinal)) {
				var _g = [];
				var _g1 = 0;
				var _g2 = access;
				while(_g1 < _g2.length) {
					var v = _g2[_g1];
					++_g1;
					if(v._hx_index != 7) {
						_g.push(v);
					}
				}
				_this = _g.concat([haxe_macro_Access.AFinal]);
			} else {
				_this = access;
			}
			var f = $bind(this,this.printAccess);
			var result = new Array(_this.length);
			var _g = 0;
			var _g1 = _this.length;
			while(_g < _g1) {
				var i = _g++;
				result[i] = f(_this[i]);
			}
			tmp = result.join(" ") + " ";
		} else {
			tmp = "";
		}
		var tmp1 = tmp2 + tmp;
		var _g = field.kind;
		var tmp;
		switch(_g._hx_index) {
		case 0:
			var t = _g.t;
			var eo = _g.e;
			tmp = (field.access != null && Lambda.has(field.access,haxe_macro_Access.AFinal) ? "" : "var ") + ("" + field.name) + this.opt(t,$bind(this,this.printComplexType)," : ") + this.opt(eo,$bind(this,this.printExpr)," = ");
			break;
		case 1:
			var func = _g.f;
			tmp = "function " + field.name + this.printFunction(func);
			break;
		case 2:
			var get = _g.get;
			var set = _g.set;
			var t = _g.t;
			var eo = _g.e;
			tmp = "var " + field.name + "(" + get + ", " + set + ")" + this.opt(t,$bind(this,this.printComplexType)," : ") + this.opt(eo,$bind(this,this.printExpr)," = ");
			break;
		}
		return tmp1 + tmp;
	}
	,printTypeParamDecl: function(tpd) {
		var tmp;
		if(tpd.meta != null && tpd.meta.length > 0) {
			var _this = tpd.meta;
			var f = $bind(this,this.printMetadata);
			var result = new Array(_this.length);
			var _g = 0;
			var _g1 = _this.length;
			while(_g < _g1) {
				var i = _g++;
				result[i] = f(_this[i]);
			}
			tmp = result.join(" ") + " ";
		} else {
			tmp = "";
		}
		var tmp1 = tmp + tpd.name;
		var tmp;
		if(tpd.params != null && tpd.params.length > 0) {
			var _this = tpd.params;
			var f = $bind(this,this.printTypeParamDecl);
			var result = new Array(_this.length);
			var _g = 0;
			var _g1 = _this.length;
			while(_g < _g1) {
				var i = _g++;
				result[i] = f(_this[i]);
			}
			tmp = "<" + result.join(", ") + ">";
		} else {
			tmp = "";
		}
		var tmp2 = tmp1 + tmp;
		var tmp;
		if(tpd.constraints != null && tpd.constraints.length > 0) {
			var _this = tpd.constraints;
			var f = $bind(this,this.printComplexType);
			var result = new Array(_this.length);
			var _g = 0;
			var _g1 = _this.length;
			while(_g < _g1) {
				var i = _g++;
				result[i] = f(_this[i]);
			}
			tmp = ":(" + result.join(", ") + ")";
		} else {
			tmp = "";
		}
		return tmp2 + tmp + (tpd.defaultType != null ? "=" + this.printComplexType(tpd.defaultType) : "");
	}
	,printFunctionArg: function(arg) {
		return (arg.opt ? "?" : "") + arg.name + this.opt(arg.type,$bind(this,this.printComplexType),":") + this.opt(arg.value,$bind(this,this.printExpr)," = ");
	}
	,printFunction: function(func,kind) {
		var skipParentheses;
		var _g = func.args;
		if(_g.length == 1) {
			var _g1 = _g[0];
			var _g = _g1.meta;
			var _g = _g1.name;
			var _g = _g1.opt;
			var _g = _g1.value;
			skipParentheses = _g1.type == null && kind == haxe_macro_FunctionKind.FArrow;
		} else {
			skipParentheses = false;
		}
		var tmp;
		if(func.params == null) {
			tmp = "";
		} else if(func.params.length > 0) {
			var _this = func.params;
			var f = $bind(this,this.printTypeParamDecl);
			var result = new Array(_this.length);
			var _g = 0;
			var _g1 = _this.length;
			while(_g < _g1) {
				var i = _g++;
				result[i] = f(_this[i]);
			}
			tmp = "<" + result.join(", ") + ">";
		} else {
			tmp = "";
		}
		var tmp1 = tmp + (skipParentheses ? "" : "(");
		var _this = func.args;
		var f = $bind(this,this.printFunctionArg);
		var result = new Array(_this.length);
		var _g = 0;
		var _g1 = _this.length;
		while(_g < _g1) {
			var i = _g++;
			result[i] = f(_this[i]);
		}
		return tmp1 + result.join(", ") + (skipParentheses ? "" : ")") + (kind == haxe_macro_FunctionKind.FArrow ? " ->" : "") + this.opt(func.ret,$bind(this,this.printComplexType),":") + this.opt(func.expr,$bind(this,this.printExpr)," ");
	}
	,printVar: function(v) {
		var s = v.name + this.opt(v.type,$bind(this,this.printComplexType),":") + this.opt(v.expr,$bind(this,this.printExpr)," = ");
		var _g = v.meta;
		if(_g == null) {
			return s;
		} else if(_g.length == 0) {
			return s;
		} else {
			var meta = _g;
			var f = $bind(this,this.printMetadata);
			var result = new Array(meta.length);
			var _g = 0;
			var _g1 = meta.length;
			while(_g < _g1) {
				var i = _g++;
				result[i] = f(meta[i]);
			}
			return result.join(" ") + " " + s;
		}
	}
	,printObjectFieldKey: function(of) {
		var _g = of.quotes;
		if(_g == null) {
			return of.field;
		} else {
			switch(_g._hx_index) {
			case 0:
				return of.field;
			case 1:
				return "\"" + of.field + "\"";
			}
		}
	}
	,printObjectField: function(of) {
		return "" + this.printObjectFieldKey(of) + " : " + this.printExpr(of.expr);
	}
	,printExpr: function(e) {
		var _gthis = this;
		if(e == null) {
			return "#NULL";
		} else {
			var _g = e.expr;
			switch(_g._hx_index) {
			case 0:
				var c = _g.c;
				return this.printConstant(c);
			case 1:
				var e1 = _g.e1;
				var e2 = _g.e2;
				return "" + this.printExpr(e1) + "[" + this.printExpr(e2) + "]";
			case 2:
				var op = _g.op;
				var e1 = _g.e1;
				var e2 = _g.e2;
				return "" + this.printExpr(e1) + " " + this.printBinop(op) + " " + this.printExpr(e2);
			case 3:
				var _g1 = _g.kind;
				var e1 = _g.e;
				var n = _g.field;
				return "" + this.printExpr(e1) + "." + n;
			case 4:
				var e1 = _g.e;
				return "(" + this.printExpr(e1) + ")";
			case 5:
				var fl = _g.fields;
				var result = new Array(fl.length);
				var _g1 = 0;
				var _g2 = fl.length;
				while(_g1 < _g2) {
					var i = _g1++;
					result[i] = _gthis.printObjectField(fl[i]);
				}
				return "{ " + result.join(", ") + " }";
			case 6:
				var el = _g.values;
				return "[" + this.printExprs(el,", ") + "]";
			case 7:
				var e1 = _g.e;
				var el = _g.params;
				return "" + this.printExpr(e1) + "(" + this.printExprs(el,", ") + ")";
			case 8:
				var tp = _g.t;
				var el = _g.params;
				return "new " + this.printTypePath(tp) + "(" + this.printExprs(el,", ") + ")";
			case 9:
				var _g1 = _g.op;
				var _g2 = _g.e;
				if(_g.postFix) {
					var op = _g1;
					var e1 = _g2;
					return this.printExpr(e1) + this.printUnop(op);
				} else {
					var op = _g1;
					var e1 = _g2;
					return this.printUnop(op) + this.printExpr(e1);
				}
				break;
			case 10:
				var _g1 = _g.vars;
				if(_g1.length == 0) {
					return "var ";
				} else {
					var vl = _g1;
					var tmp = (vl[0].isStatic ? "static " : "") + (vl[0].isFinal ? "final " : "var ");
					var f = $bind(this,this.printVar);
					var result = new Array(vl.length);
					var _g1 = 0;
					var _g2 = vl.length;
					while(_g1 < _g2) {
						var i = _g1++;
						result[i] = f(vl[i]);
					}
					return tmp + result.join(", ");
				}
				break;
			case 11:
				var _g1 = _g.kind;
				var _g2 = _g.f;
				if(_g1 == null) {
					var kind = _g1;
					var func = _g2;
					return (kind != haxe_macro_FunctionKind.FArrow ? "function" : "") + this.printFunction(func,kind);
				} else if(_g1._hx_index == 1) {
					var no = _g1.name;
					var inlined = _g1.inlined;
					var func = _g2;
					return (inlined ? "inline " : "") + ("function " + no) + this.printFunction(func);
				} else {
					var kind = _g1;
					var func = _g2;
					return (kind != haxe_macro_FunctionKind.FArrow ? "function" : "") + this.printFunction(func,kind);
				}
				break;
			case 12:
				var _g1 = _g.exprs;
				if(_g1.length == 0) {
					return "{ }";
				} else {
					var el = _g1;
					var old = this.tabs;
					this.tabs += this.tabString;
					var s = "{\n" + this.tabs + this.printExprs(el,";\n" + this.tabs);
					this.tabs = old;
					return s + (";\n" + this.tabs + "}");
				}
				break;
			case 13:
				var e1 = _g.it;
				var e2 = _g.expr;
				return "for (" + this.printExpr(e1) + ") " + this.printExpr(e2);
			case 14:
				var _g1 = _g.econd;
				var _g2 = _g.eif;
				var _g3 = _g.eelse;
				if(_g3 == null) {
					var eif = _g2;
					var econd = _g1;
					return "if (" + this.printExpr(econd) + ") " + this.printExpr(eif);
				} else {
					var eelse = _g3;
					var eif = _g2;
					var econd = _g1;
					return "if (" + this.printExpr(econd) + ") " + this.printExpr(eif) + " else " + this.printExpr(eelse);
				}
				break;
			case 15:
				var _g1 = _g.econd;
				var _g2 = _g.e;
				if(_g.normalWhile) {
					var e1 = _g2;
					var econd = _g1;
					return "while (" + this.printExpr(econd) + ") " + this.printExpr(e1);
				} else {
					var e1 = _g2;
					var econd = _g1;
					return "do " + this.printExpr(e1) + " while (" + this.printExpr(econd) + ")";
				}
				break;
			case 16:
				var e1 = _g.e;
				var cl = _g.cases;
				var edef = _g.edef;
				var old = this.tabs;
				this.tabs += this.tabString;
				var s = "switch " + this.printExpr(e1) + " {\n" + this.tabs;
				var result = new Array(cl.length);
				var _g1 = 0;
				var _g2 = cl.length;
				while(_g1 < _g2) {
					var i = _g1++;
					var c = cl[i];
					result[i] = "case " + _gthis.printExprs(c.values,", ") + (c.guard != null ? " if (" + _gthis.printExpr(c.guard) + "):" : ":") + (c.expr != null ? _gthis.opt(c.expr,$bind(_gthis,_gthis.printExpr)) + ";" : "");
				}
				var s1 = s + result.join("\n" + this.tabs);
				if(edef != null) {
					s1 += "\n" + this.tabs + "default:" + (edef.expr == null ? "" : this.printExpr(edef) + ";");
				}
				this.tabs = old;
				return s1 + ("\n" + this.tabs + "}");
			case 17:
				var e1 = _g.e;
				var cl = _g.catches;
				var tmp = "try " + this.printExpr(e1);
				var result = new Array(cl.length);
				var _g1 = 0;
				var _g2 = cl.length;
				while(_g1 < _g2) {
					var i = _g1++;
					var c = cl[i];
					result[i] = " catch(" + c.name + (c.type == null ? "" : ":" + _gthis.printComplexType(c.type)) + ") " + _gthis.printExpr(c.expr);
				}
				return tmp + result.join("");
			case 18:
				var eo = _g.e;
				return "return" + this.opt(eo,$bind(this,this.printExpr)," ");
			case 19:
				return "break";
			case 20:
				return "continue";
			case 21:
				var e1 = _g.e;
				return "untyped " + this.printExpr(e1);
			case 22:
				var e1 = _g.e;
				return "throw " + this.printExpr(e1);
			case 23:
				var _g1 = _g.e;
				var e1 = _g1;
				var cto = _g.t;
				if(cto != null) {
					return "cast(" + this.printExpr(e1) + ", " + this.printComplexType(cto) + ")";
				} else {
					var e1 = _g1;
					return "cast " + this.printExpr(e1);
				}
				break;
			case 24:
				var _g1 = _g.displayKind;
				var e1 = _g.e;
				return "#DISPLAY(" + this.printExpr(e1) + ")";
			case 25:
				var econd = _g.econd;
				var eif = _g.eif;
				var eelse = _g.eelse;
				return "" + this.printExpr(econd) + " ? " + this.printExpr(eif) + " : " + this.printExpr(eelse);
			case 26:
				var e1 = _g.e;
				var ct = _g.t;
				return "(" + this.printExpr(e1) + " : " + this.printComplexType(ct) + ")";
			case 27:
				var _g1 = _g.s;
				var _g2 = _g.e;
				var _g3 = _g1.params;
				var _g3 = _g1.pos;
				if(_g1.name == ":implicitReturn") {
					var _g3 = _g2.expr;
					var _g4 = _g2.pos;
					if(_g3._hx_index == 18) {
						var e1 = _g3.e;
						return this.printExpr(e1);
					} else {
						var meta = _g1;
						var e1 = _g2;
						return this.printMetadata(meta) + " " + this.printExpr(e1);
					}
				} else {
					var meta = _g1;
					var e1 = _g2;
					return this.printMetadata(meta) + " " + this.printExpr(e1);
				}
				break;
			case 28:
				var e1 = _g.e;
				var ct = _g.t;
				return "" + this.printExpr(e1) + " is " + this.printComplexType(ct);
			}
		}
	}
	,printExprs: function(el,sep) {
		var f = $bind(this,this.printExpr);
		var result = new Array(el.length);
		var _g = 0;
		var _g1 = el.length;
		while(_g < _g1) {
			var i = _g++;
			result[i] = f(el[i]);
		}
		return result.join(sep);
	}
	,printExtension: function(tpl,fields) {
		var tmp = "{\n" + this.tabs + ">";
		var f = $bind(this,this.printTypePath);
		var result = new Array(tpl.length);
		var _g = 0;
		var _g1 = tpl.length;
		while(_g < _g1) {
			var i = _g++;
			result[i] = f(tpl[i]);
		}
		var tmp1 = tmp + result.join(",\n" + this.tabs + ">") + ",";
		var tmp;
		if(fields.length > 0) {
			var tmp2 = "\n" + this.tabs;
			var f = $bind(this,this.printField);
			var result = new Array(fields.length);
			var _g = 0;
			var _g1 = fields.length;
			while(_g < _g1) {
				var i = _g++;
				result[i] = f(fields[i]);
			}
			tmp = tmp2 + result.join(";\n" + this.tabs) + ";\n}";
		} else {
			tmp = "\n}";
		}
		return tmp1 + tmp;
	}
	,printStructure: function(fields) {
		if(fields.length == 0) {
			return "{ }";
		} else {
			var tmp = "{\n" + this.tabs;
			var f = $bind(this,this.printField);
			var result = new Array(fields.length);
			var _g = 0;
			var _g1 = fields.length;
			while(_g < _g1) {
				var i = _g++;
				result[i] = f(fields[i]);
			}
			return tmp + result.join(";\n" + this.tabs) + ";\n}";
		}
	}
	,printTypeDefinition: function(t,printPackage) {
		if(printPackage == null) {
			printPackage = true;
		}
		var old = this.tabs;
		this.tabs = this.tabString;
		var str;
		if(t == null) {
			str = "#NULL";
		} else {
			var str1 = (printPackage && t.pack.length > 0 && t.pack[0] != "" ? "package " + t.pack.join(".") + ";\n" : "") + (t.doc != null && t.doc != "" ? "/**\n" + this.tabString + StringTools.replace(t.doc,"\n","\n" + this.tabString) + "\n**/\n" : "");
			var str2;
			if(t.meta != null && t.meta.length > 0) {
				var _this = t.meta;
				var f = $bind(this,this.printMetadata);
				var result = new Array(_this.length);
				var _g = 0;
				var _g1 = _this.length;
				while(_g < _g1) {
					var i = _g++;
					result[i] = f(_this[i]);
				}
				str2 = result.join(" ") + " ";
			} else {
				str2 = "";
			}
			var str3 = str1 + str2 + (t.isExtern ? "extern " : "");
			var _g = t.kind;
			var str1;
			switch(_g._hx_index) {
			case 0:
				var str2 = "enum " + t.name;
				var str4;
				if(t.params != null && t.params.length > 0) {
					var _this = t.params;
					var f = $bind(this,this.printTypeParamDecl);
					var result = new Array(_this.length);
					var _g1 = 0;
					var _g2 = _this.length;
					while(_g1 < _g2) {
						var i = _g1++;
						result[i] = f(_this[i]);
					}
					str4 = "<" + result.join(", ") + ">";
				} else {
					str4 = "";
				}
				var str5 = str2 + str4 + " {\n";
				var _g1 = [];
				var _g2 = 0;
				var _g3 = t.fields;
				while(_g2 < _g3.length) {
					var field = _g3[_g2];
					++_g2;
					var str2 = this.tabs + (field.doc != null && field.doc != "" ? "/**\n" + this.tabs + this.tabString + StringTools.replace(field.doc,"\n","\n" + this.tabs + this.tabString) + "\n" + this.tabs + "**/\n" + this.tabs : "");
					var str4;
					if(field.meta != null && field.meta.length > 0) {
						var _this = field.meta;
						var f = $bind(this,this.printMetadata);
						var result = new Array(_this.length);
						var _g4 = 0;
						var _g5 = _this.length;
						while(_g4 < _g5) {
							var i = _g4++;
							result[i] = f(_this[i]);
						}
						str4 = result.join(" ") + " ";
					} else {
						str4 = "";
					}
					var str6 = str2 + str4;
					var _g6 = field.kind;
					var str7;
					switch(_g6._hx_index) {
					case 0:
						var _g7 = _g6.e;
						var t1 = _g6.t;
						str7 = field.name + this.opt(t1,$bind(this,this.printComplexType),":");
						break;
					case 1:
						var func = _g6.f;
						str7 = field.name + this.printFunction(func);
						break;
					case 2:
						var _g8 = _g6.get;
						var _g9 = _g6.set;
						var _g10 = _g6.t;
						var _g11 = _g6.e;
						throw haxe_Exception.thrown("FProp is invalid for TDEnum.");
					}
					_g1.push(str6 + str7 + ";");
				}
				str1 = str5 + _g1.join("\n") + "\n}";
				break;
			case 1:
				var str2 = "typedef " + t.name;
				var str4;
				if(t.params != null && t.params.length > 0) {
					var _this = t.params;
					var f = $bind(this,this.printTypeParamDecl);
					var result = new Array(_this.length);
					var _g1 = 0;
					var _g2 = _this.length;
					while(_g1 < _g2) {
						var i = _g1++;
						result[i] = f(_this[i]);
					}
					str4 = "<" + result.join(", ") + ">";
				} else {
					str4 = "";
				}
				var str5 = str2 + str4 + " = {\n";
				var _g1 = [];
				var _g2 = 0;
				var _g3 = t.fields;
				while(_g2 < _g3.length) {
					var f = _g3[_g2];
					++_g2;
					_g1.push(this.tabs + this.printField(f) + ";");
				}
				str1 = str5 + _g1.join("\n") + "\n}";
				break;
			case 2:
				var superClass = _g.superClass;
				var interfaces = _g.interfaces;
				var isInterface = _g.isInterface;
				var isFinal = _g.isFinal;
				var isAbstract = _g.isAbstract;
				var str2 = (isFinal ? "final " : "") + (isAbstract ? "abstract " : "") + (isInterface ? "interface " : "class ") + t.name;
				var str4;
				if(t.params != null && t.params.length > 0) {
					var _this = t.params;
					var f = $bind(this,this.printTypeParamDecl);
					var result = new Array(_this.length);
					var _g1 = 0;
					var _g2 = _this.length;
					while(_g1 < _g2) {
						var i = _g1++;
						result[i] = f(_this[i]);
					}
					str4 = "<" + result.join(", ") + ">";
				} else {
					str4 = "";
				}
				var str5 = str2 + str4 + (superClass != null ? " extends " + this.printTypePath(superClass) : "");
				var str2;
				if(interfaces != null) {
					var str4;
					if(isInterface) {
						var _g1 = [];
						var _g2 = 0;
						while(_g2 < interfaces.length) {
							var tp = interfaces[_g2];
							++_g2;
							_g1.push(" extends " + this.printTypePath(tp));
						}
						str4 = _g1;
					} else {
						var _g1 = [];
						var _g2 = 0;
						while(_g2 < interfaces.length) {
							var tp = interfaces[_g2];
							++_g2;
							_g1.push(" implements " + this.printTypePath(tp));
						}
						str4 = _g1;
					}
					str2 = str4.join("");
				} else {
					str2 = "";
				}
				var str4 = str5 + str2 + " {\n";
				var _g1 = [];
				var _g2 = 0;
				var _g3 = t.fields;
				while(_g2 < _g3.length) {
					var f = _g3[_g2];
					++_g2;
					_g1.push(this.tabs + this.printFieldWithDelimiter(f));
				}
				str1 = str4 + _g1.join("\n") + "\n}";
				break;
			case 3:
				var ct = _g.t;
				var str2 = "typedef " + t.name;
				var str4;
				if(t.params != null && t.params.length > 0) {
					var _this = t.params;
					var f = $bind(this,this.printTypeParamDecl);
					var result = new Array(_this.length);
					var _g1 = 0;
					var _g2 = _this.length;
					while(_g1 < _g2) {
						var i = _g1++;
						result[i] = f(_this[i]);
					}
					str4 = "<" + result.join(", ") + ">";
				} else {
					str4 = "";
				}
				var str5 = str2 + str4 + " = ";
				var str2;
				switch(ct._hx_index) {
				case 2:
					var fields = ct.fields;
					str2 = this.printStructure(fields);
					break;
				case 4:
					var tpl = ct.p;
					var fields = ct.fields;
					str2 = this.printExtension(tpl,fields);
					break;
				default:
					str2 = this.printComplexType(ct);
				}
				str1 = str5 + str2 + ";";
				break;
			case 4:
				var tthis = _g.tthis;
				var from = _g.from;
				var to = _g.to;
				var str2 = "abstract " + t.name;
				var str4;
				if(t.params != null && t.params.length > 0) {
					var _this = t.params;
					var f = $bind(this,this.printTypeParamDecl);
					var result = new Array(_this.length);
					var _g1 = 0;
					var _g2 = _this.length;
					while(_g1 < _g2) {
						var i = _g1++;
						result[i] = f(_this[i]);
					}
					str4 = "<" + result.join(", ") + ">";
				} else {
					str4 = "";
				}
				var str5 = str2 + str4 + (tthis == null ? "" : "(" + this.printComplexType(tthis) + ")");
				var str2;
				if(from == null) {
					str2 = "";
				} else {
					var _g1 = [];
					var _g2 = 0;
					while(_g2 < from.length) {
						var f = from[_g2];
						++_g2;
						_g1.push(" from " + this.printComplexType(f));
					}
					str2 = _g1.join("");
				}
				var str4 = str5 + str2;
				var str2;
				if(to == null) {
					str2 = "";
				} else {
					var _g1 = [];
					var _g2 = 0;
					while(_g2 < to.length) {
						var t1 = to[_g2];
						++_g2;
						_g1.push(" to " + this.printComplexType(t1));
					}
					str2 = _g1.join("");
				}
				var str5 = str4 + str2 + " {\n";
				var _g1 = [];
				var _g2 = 0;
				var _g3 = t.fields;
				while(_g2 < _g3.length) {
					var f = _g3[_g2];
					++_g2;
					_g1.push(this.tabs + this.printFieldWithDelimiter(f));
				}
				str1 = str5 + _g1.join("\n") + "\n}";
				break;
			case 5:
				var kind = _g.kind;
				var access = _g.access;
				this.tabs = old;
				var str2;
				if(access != null && access.length > 0) {
					var f = $bind(this,this.printAccess);
					var result = new Array(access.length);
					var _g = 0;
					var _g1 = access.length;
					while(_g < _g1) {
						var i = _g++;
						result[i] = f(access[i]);
					}
					str2 = result.join(" ") + " ";
				} else {
					str2 = "";
				}
				var str4;
				switch(kind._hx_index) {
				case 0:
					var type = kind.t;
					var eo = kind.e;
					str4 = (access != null && Lambda.has(access,haxe_macro_Access.AFinal) ? "" : "var ") + ("" + t.name) + this.opt(type,$bind(this,this.printComplexType)," : ") + this.opt(eo,$bind(this,this.printExpr)," = ") + ";";
					break;
				case 1:
					var func = kind.f;
					var str5 = "function " + t.name + this.printFunction(func);
					var _g = func.expr;
					var str6;
					if(_g == null) {
						str6 = ";";
					} else {
						var _g1 = _g.expr;
						var _g2 = _g.pos;
						if(_g1._hx_index == 12) {
							var _g = _g1.exprs;
							str6 = "";
						} else {
							str6 = ";";
						}
					}
					str4 = str5 + str6;
					break;
				case 2:
					var get = kind.get;
					var set = kind.set;
					var type = kind.t;
					var eo = kind.e;
					str4 = "var " + t.name + "(" + get + ", " + set + ")" + this.opt(type,$bind(this,this.printComplexType)," : ") + this.opt(eo,$bind(this,this.printExpr)," = ") + ";";
					break;
				}
				str1 = str2 + str4;
				break;
			}
			str = str3 + str1;
		}
		this.tabs = old;
		return str;
	}
	,printFieldWithDelimiter: function(f) {
		var tmp = this.printField(f);
		var _g = f.kind;
		var tmp1;
		switch(_g._hx_index) {
		case 0:
			var _g1 = _g.t;
			var _g1 = _g.e;
			tmp1 = ";";
			break;
		case 1:
			var _g1 = _g.f;
			var _g2 = _g1.args;
			var _g2 = _g1.expr;
			var _g3 = _g1.params;
			var _g3 = _g1.ret;
			if(_g2 == null) {
				tmp1 = ";";
			} else {
				var _g1 = _g2.expr;
				var _g3 = _g2.pos;
				if(_g1._hx_index == 12) {
					var _g2 = _g1.exprs;
					tmp1 = "";
				} else {
					tmp1 = ";";
				}
			}
			break;
		case 2:
			var _g1 = _g.get;
			var _g1 = _g.set;
			var _g1 = _g.t;
			var _g1 = _g.e;
			tmp1 = ";";
			break;
		}
		return tmp + tmp1;
	}
	,opt: function(v,f,prefix) {
		if(prefix == null) {
			prefix = "";
		}
		if(v == null) {
			return "";
		} else {
			return prefix + f(v);
		}
	}
	,__class__: haxe_macro_Printer
};
var haxe_rtti_CType = $hxEnums["haxe.rtti.CType"] = { __ename__:"haxe.rtti.CType",__constructs__:null
	,CUnknown: {_hx_name:"CUnknown",_hx_index:0,__enum__:"haxe.rtti.CType",toString:$estr}
	,CEnum: ($_=function(name,params) { return {_hx_index:1,name:name,params:params,__enum__:"haxe.rtti.CType",toString:$estr}; },$_._hx_name="CEnum",$_.__params__ = ["name","params"],$_)
	,CClass: ($_=function(name,params) { return {_hx_index:2,name:name,params:params,__enum__:"haxe.rtti.CType",toString:$estr}; },$_._hx_name="CClass",$_.__params__ = ["name","params"],$_)
	,CTypedef: ($_=function(name,params) { return {_hx_index:3,name:name,params:params,__enum__:"haxe.rtti.CType",toString:$estr}; },$_._hx_name="CTypedef",$_.__params__ = ["name","params"],$_)
	,CFunction: ($_=function(args,ret) { return {_hx_index:4,args:args,ret:ret,__enum__:"haxe.rtti.CType",toString:$estr}; },$_._hx_name="CFunction",$_.__params__ = ["args","ret"],$_)
	,CAnonymous: ($_=function(fields) { return {_hx_index:5,fields:fields,__enum__:"haxe.rtti.CType",toString:$estr}; },$_._hx_name="CAnonymous",$_.__params__ = ["fields"],$_)
	,CDynamic: ($_=function(t) { return {_hx_index:6,t:t,__enum__:"haxe.rtti.CType",toString:$estr}; },$_._hx_name="CDynamic",$_.__params__ = ["t"],$_)
	,CAbstract: ($_=function(name,params) { return {_hx_index:7,name:name,params:params,__enum__:"haxe.rtti.CType",toString:$estr}; },$_._hx_name="CAbstract",$_.__params__ = ["name","params"],$_)
};
haxe_rtti_CType.__constructs__ = [haxe_rtti_CType.CUnknown,haxe_rtti_CType.CEnum,haxe_rtti_CType.CClass,haxe_rtti_CType.CTypedef,haxe_rtti_CType.CFunction,haxe_rtti_CType.CAnonymous,haxe_rtti_CType.CDynamic,haxe_rtti_CType.CAbstract];
var haxe_rtti_Rights = $hxEnums["haxe.rtti.Rights"] = { __ename__:"haxe.rtti.Rights",__constructs__:null
	,RNormal: {_hx_name:"RNormal",_hx_index:0,__enum__:"haxe.rtti.Rights",toString:$estr}
	,RNo: {_hx_name:"RNo",_hx_index:1,__enum__:"haxe.rtti.Rights",toString:$estr}
	,RCall: ($_=function(m) { return {_hx_index:2,m:m,__enum__:"haxe.rtti.Rights",toString:$estr}; },$_._hx_name="RCall",$_.__params__ = ["m"],$_)
	,RMethod: {_hx_name:"RMethod",_hx_index:3,__enum__:"haxe.rtti.Rights",toString:$estr}
	,RDynamic: {_hx_name:"RDynamic",_hx_index:4,__enum__:"haxe.rtti.Rights",toString:$estr}
	,RInline: {_hx_name:"RInline",_hx_index:5,__enum__:"haxe.rtti.Rights",toString:$estr}
};
haxe_rtti_Rights.__constructs__ = [haxe_rtti_Rights.RNormal,haxe_rtti_Rights.RNo,haxe_rtti_Rights.RCall,haxe_rtti_Rights.RMethod,haxe_rtti_Rights.RDynamic,haxe_rtti_Rights.RInline];
var haxe_rtti_TypeTree = $hxEnums["haxe.rtti.TypeTree"] = { __ename__:"haxe.rtti.TypeTree",__constructs__:null
	,TPackage: ($_=function(name,full,subs) { return {_hx_index:0,name:name,full:full,subs:subs,__enum__:"haxe.rtti.TypeTree",toString:$estr}; },$_._hx_name="TPackage",$_.__params__ = ["name","full","subs"],$_)
	,TClassdecl: ($_=function(c) { return {_hx_index:1,c:c,__enum__:"haxe.rtti.TypeTree",toString:$estr}; },$_._hx_name="TClassdecl",$_.__params__ = ["c"],$_)
	,TEnumdecl: ($_=function(e) { return {_hx_index:2,e:e,__enum__:"haxe.rtti.TypeTree",toString:$estr}; },$_._hx_name="TEnumdecl",$_.__params__ = ["e"],$_)
	,TTypedecl: ($_=function(t) { return {_hx_index:3,t:t,__enum__:"haxe.rtti.TypeTree",toString:$estr}; },$_._hx_name="TTypedecl",$_.__params__ = ["t"],$_)
	,TAbstractdecl: ($_=function(a) { return {_hx_index:4,a:a,__enum__:"haxe.rtti.TypeTree",toString:$estr}; },$_._hx_name="TAbstractdecl",$_.__params__ = ["a"],$_)
};
haxe_rtti_TypeTree.__constructs__ = [haxe_rtti_TypeTree.TPackage,haxe_rtti_TypeTree.TClassdecl,haxe_rtti_TypeTree.TEnumdecl,haxe_rtti_TypeTree.TTypedecl,haxe_rtti_TypeTree.TAbstractdecl];
var haxe_rtti_Meta = function() { };
$hxClasses["haxe.rtti.Meta"] = haxe_rtti_Meta;
haxe_rtti_Meta.__name__ = "haxe.rtti.Meta";
haxe_rtti_Meta.getType = function(t) {
	var meta = haxe_rtti_Meta.getMeta(t);
	if(meta == null || meta.obj == null) {
		return { };
	} else {
		return meta.obj;
	}
};
haxe_rtti_Meta.getMeta = function(t) {
	return t.__meta__;
};
haxe_rtti_Meta.getFields = function(t) {
	var meta = haxe_rtti_Meta.getMeta(t);
	if(meta == null || meta.fields == null) {
		return { };
	} else {
		return meta.fields;
	}
};
var haxe_rtti_Rtti = function() { };
$hxClasses["haxe.rtti.Rtti"] = haxe_rtti_Rtti;
haxe_rtti_Rtti.__name__ = "haxe.rtti.Rtti";
haxe_rtti_Rtti.getRtti = function(c) {
	var rtti = Reflect.field(c,"__rtti");
	if(rtti == null) {
		throw haxe_Exception.thrown("Class " + c.__name__ + " has no RTTI information, consider adding @:rtti");
	}
	var x = Xml.parse(rtti).firstElement();
	var infos = new haxe_rtti_XmlParser().processElement(x);
	if(infos._hx_index == 1) {
		var c = infos.c;
		return c;
	} else {
		var t = infos;
		throw haxe_Exception.thrown("Enum mismatch: expected TClassDecl but found " + Std.string(t));
	}
};
haxe_rtti_Rtti.hasRtti = function(c) {
	return Lambda.has(Type.getClassFields(c),"__rtti");
};
var haxe_rtti_XmlParser = function() {
	this.root = [];
};
$hxClasses["haxe.rtti.XmlParser"] = haxe_rtti_XmlParser;
haxe_rtti_XmlParser.__name__ = "haxe.rtti.XmlParser";
haxe_rtti_XmlParser.prototype = {
	root: null
	,curplatform: null
	,mkPath: function(p) {
		return p;
	}
	,mkTypeParams: function(p) {
		var pl = p.split(":");
		if(pl[0] == "") {
			return [];
		}
		return pl;
	}
	,mkRights: function(r) {
		switch(r) {
		case "dynamic":
			return haxe_rtti_Rights.RDynamic;
		case "inline":
			return haxe_rtti_Rights.RInline;
		case "method":
			return haxe_rtti_Rights.RMethod;
		case "null":
			return haxe_rtti_Rights.RNo;
		default:
			return haxe_rtti_Rights.RCall(r);
		}
	}
	,xerror: function(c) {
		var tmp;
		if(c.nodeType == Xml.Document) {
			tmp = "Document";
		} else {
			if(c.nodeType != Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, expected Element but found " + (c.nodeType == null ? "null" : XmlType.toString(c.nodeType)));
			}
			tmp = c.nodeName;
		}
		throw haxe_Exception.thrown("Invalid " + tmp);
	}
	,processElement: function(x) {
		if(x.nodeType != Xml.Document && x.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Invalid nodeType " + (x.nodeType == null ? "null" : XmlType.toString(x.nodeType)));
		}
		var this1 = x;
		var c = this1;
		var _g;
		if(c.nodeType == Xml.Document) {
			_g = "Document";
		} else {
			if(c.nodeType != Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, expected Element but found " + (c.nodeType == null ? "null" : XmlType.toString(c.nodeType)));
			}
			_g = c.nodeName;
		}
		switch(_g) {
		case "abstract":
			return haxe_rtti_TypeTree.TAbstractdecl(this.xabstract(c));
		case "class":
			return haxe_rtti_TypeTree.TClassdecl(this.xclass(c));
		case "enum":
			return haxe_rtti_TypeTree.TEnumdecl(this.xenum(c));
		case "typedef":
			return haxe_rtti_TypeTree.TTypedecl(this.xtypedef(c));
		default:
			return this.xerror(c);
		}
	}
	,xmeta: function(x) {
		var ml = [];
		var _g = 0;
		var _g1 = haxe_xml__$Access_NodeListAccess.resolve(x,"m");
		while(_g < _g1.length) {
			var m = _g1[_g];
			++_g;
			var pl = [];
			var _g2 = 0;
			var _g3 = haxe_xml__$Access_NodeListAccess.resolve(m,"e");
			while(_g2 < _g3.length) {
				var p = _g3[_g2];
				++_g2;
				pl.push(haxe_xml_Access.get_innerHTML(p));
			}
			ml.push({ name : haxe_xml__$Access_AttribAccess.resolve(m,"n"), params : pl});
		}
		return ml;
	}
	,xoverloads: function(x) {
		var l = [];
		var m = x.elements();
		while(m.hasNext()) {
			var m1 = m.next();
			l.push(this.xclassfield(m1));
		}
		return l;
	}
	,xpath: function(x) {
		var path = this.mkPath(haxe_xml__$Access_AttribAccess.resolve(x,"path"));
		var params = [];
		var c = x.elements();
		while(c.hasNext()) {
			var c1 = c.next();
			params.push(this.xtype(c1));
		}
		return { path : path, params : params};
	}
	,xclass: function(x) {
		var csuper = null;
		var doc = null;
		var tdynamic = null;
		var interfaces = [];
		var fields = [];
		var statics = [];
		var meta = [];
		var isInterface = x.exists("interface");
		var c = x.elements();
		while(c.hasNext()) {
			var c1 = c.next();
			var _g;
			if(c1.nodeType == Xml.Document) {
				_g = "Document";
			} else {
				if(c1.nodeType != Xml.Element) {
					throw haxe_Exception.thrown("Bad node type, expected Element but found " + (c1.nodeType == null ? "null" : XmlType.toString(c1.nodeType)));
				}
				_g = c1.nodeName;
			}
			switch(_g) {
			case "extends":
				if(isInterface) {
					interfaces.push(this.xpath(c1));
				} else {
					csuper = this.xpath(c1);
				}
				break;
			case "haxe_doc":
				doc = haxe_xml_Access.get_innerData(c1);
				break;
			case "haxe_dynamic":
				var x1 = c1.firstElement();
				if(x1.nodeType != Xml.Document && x1.nodeType != Xml.Element) {
					throw haxe_Exception.thrown("Invalid nodeType " + (x1.nodeType == null ? "null" : XmlType.toString(x1.nodeType)));
				}
				var this1 = x1;
				tdynamic = this.xtype(this1);
				break;
			case "implements":
				interfaces.push(this.xpath(c1));
				break;
			case "meta":
				meta = this.xmeta(c1);
				break;
			default:
				if(c1.exists("static")) {
					statics.push(this.xclassfield(c1));
				} else {
					fields.push(this.xclassfield(c1));
				}
			}
		}
		return { file : haxe_xml__$Access_HasAttribAccess.resolve(x,"file") ? haxe_xml__$Access_AttribAccess.resolve(x,"file") : null, path : this.mkPath(haxe_xml__$Access_AttribAccess.resolve(x,"path")), module : haxe_xml__$Access_HasAttribAccess.resolve(x,"module") ? this.mkPath(haxe_xml__$Access_AttribAccess.resolve(x,"module")) : null, doc : doc, isPrivate : x.exists("private"), isExtern : x.exists("extern"), isFinal : x.exists("final"), isInterface : isInterface, params : this.mkTypeParams(haxe_xml__$Access_AttribAccess.resolve(x,"params")), superClass : csuper, interfaces : interfaces, fields : fields, statics : statics, tdynamic : tdynamic, platforms : this.defplat(), meta : meta};
	}
	,xclassfield: function(x,defPublic) {
		if(defPublic == null) {
			defPublic = false;
		}
		var e = x.elements();
		var t = this.xtype(e.next());
		var doc = null;
		var meta = [];
		var overloads = null;
		var c = e;
		while(c.hasNext()) {
			var c1 = c.next();
			var _g;
			if(c1.nodeType == Xml.Document) {
				_g = "Document";
			} else {
				if(c1.nodeType != Xml.Element) {
					throw haxe_Exception.thrown("Bad node type, expected Element but found " + (c1.nodeType == null ? "null" : XmlType.toString(c1.nodeType)));
				}
				_g = c1.nodeName;
			}
			switch(_g) {
			case "haxe_doc":
				doc = haxe_xml_Access.get_innerData(c1);
				break;
			case "meta":
				meta = this.xmeta(c1);
				break;
			case "overloads":
				overloads = this.xoverloads(c1);
				break;
			default:
				this.xerror(c1);
			}
		}
		var tmp;
		if(x.nodeType == Xml.Document) {
			tmp = "Document";
		} else {
			if(x.nodeType != Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, expected Element but found " + (x.nodeType == null ? "null" : XmlType.toString(x.nodeType)));
			}
			tmp = x.nodeName;
		}
		return { name : tmp, type : t, isPublic : x.exists("public") || defPublic, isFinal : x.exists("final"), isOverride : x.exists("override"), line : haxe_xml__$Access_HasAttribAccess.resolve(x,"line") ? Std.parseInt(haxe_xml__$Access_AttribAccess.resolve(x,"line")) : null, doc : doc, get : haxe_xml__$Access_HasAttribAccess.resolve(x,"get") ? this.mkRights(haxe_xml__$Access_AttribAccess.resolve(x,"get")) : haxe_rtti_Rights.RNormal, set : haxe_xml__$Access_HasAttribAccess.resolve(x,"set") ? this.mkRights(haxe_xml__$Access_AttribAccess.resolve(x,"set")) : haxe_rtti_Rights.RNormal, params : haxe_xml__$Access_HasAttribAccess.resolve(x,"params") ? this.mkTypeParams(haxe_xml__$Access_AttribAccess.resolve(x,"params")) : [], platforms : this.defplat(), meta : meta, overloads : overloads, expr : haxe_xml__$Access_HasAttribAccess.resolve(x,"expr") ? haxe_xml__$Access_AttribAccess.resolve(x,"expr") : null};
	}
	,xenum: function(x) {
		var cl = [];
		var doc = null;
		var meta = [];
		var c = x.elements();
		while(c.hasNext()) {
			var c1 = c.next();
			var tmp;
			if(c1.nodeType == Xml.Document) {
				tmp = "Document";
			} else {
				if(c1.nodeType != Xml.Element) {
					throw haxe_Exception.thrown("Bad node type, expected Element but found " + (c1.nodeType == null ? "null" : XmlType.toString(c1.nodeType)));
				}
				tmp = c1.nodeName;
			}
			if(tmp == "haxe_doc") {
				doc = haxe_xml_Access.get_innerData(c1);
			} else {
				var tmp1;
				if(c1.nodeType == Xml.Document) {
					tmp1 = "Document";
				} else {
					if(c1.nodeType != Xml.Element) {
						throw haxe_Exception.thrown("Bad node type, expected Element but found " + (c1.nodeType == null ? "null" : XmlType.toString(c1.nodeType)));
					}
					tmp1 = c1.nodeName;
				}
				if(tmp1 == "meta") {
					meta = this.xmeta(c1);
				} else {
					cl.push(this.xenumfield(c1));
				}
			}
		}
		return { file : haxe_xml__$Access_HasAttribAccess.resolve(x,"file") ? haxe_xml__$Access_AttribAccess.resolve(x,"file") : null, path : this.mkPath(haxe_xml__$Access_AttribAccess.resolve(x,"path")), module : haxe_xml__$Access_HasAttribAccess.resolve(x,"module") ? this.mkPath(haxe_xml__$Access_AttribAccess.resolve(x,"module")) : null, doc : doc, isPrivate : x.exists("private"), isExtern : x.exists("extern"), params : this.mkTypeParams(haxe_xml__$Access_AttribAccess.resolve(x,"params")), constructors : cl, platforms : this.defplat(), meta : meta};
	}
	,xenumfield: function(x) {
		var args = null;
		var docElements = x.elementsNamed("haxe_doc");
		var xdoc = docElements.hasNext() ? docElements.next() : null;
		var meta = haxe_xml__$Access_HasNodeAccess.resolve(x,"meta") ? this.xmeta(haxe_xml__$Access_NodeAccess.resolve(x,"meta")) : [];
		if(haxe_xml__$Access_HasAttribAccess.resolve(x,"a")) {
			var names = haxe_xml__$Access_AttribAccess.resolve(x,"a").split(":");
			var elts = x.elements();
			args = [];
			var _g = 0;
			while(_g < names.length) {
				var c = names[_g];
				++_g;
				var opt = false;
				if(c.charAt(0) == "?") {
					opt = true;
					c = HxOverrides.substr(c,1,null);
				}
				args.push({ name : c, opt : opt, t : this.xtype(elts.next())});
			}
		}
		var tmp;
		if(x.nodeType == Xml.Document) {
			tmp = "Document";
		} else {
			if(x.nodeType != Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, expected Element but found " + (x.nodeType == null ? "null" : XmlType.toString(x.nodeType)));
			}
			tmp = x.nodeName;
		}
		var tmp1;
		if(xdoc == null) {
			tmp1 = null;
		} else {
			if(xdoc.nodeType != Xml.Document && xdoc.nodeType != Xml.Element) {
				throw haxe_Exception.thrown("Invalid nodeType " + (xdoc.nodeType == null ? "null" : XmlType.toString(xdoc.nodeType)));
			}
			var this1 = xdoc;
			tmp1 = haxe_xml_Access.get_innerData(this1);
		}
		return { name : tmp, args : args, doc : tmp1, meta : meta, platforms : this.defplat()};
	}
	,xabstract: function(x) {
		var doc = null;
		var impl = null;
		var athis = null;
		var meta = [];
		var to = [];
		var from = [];
		var c = x.elements();
		while(c.hasNext()) {
			var c1 = c.next();
			var _g;
			if(c1.nodeType == Xml.Document) {
				_g = "Document";
			} else {
				if(c1.nodeType != Xml.Element) {
					throw haxe_Exception.thrown("Bad node type, expected Element but found " + (c1.nodeType == null ? "null" : XmlType.toString(c1.nodeType)));
				}
				_g = c1.nodeName;
			}
			switch(_g) {
			case "from":
				var t = c1.elements();
				while(t.hasNext()) {
					var t1 = t.next();
					var x1 = t1.firstElement();
					if(x1.nodeType != Xml.Document && x1.nodeType != Xml.Element) {
						throw haxe_Exception.thrown("Invalid nodeType " + (x1.nodeType == null ? "null" : XmlType.toString(x1.nodeType)));
					}
					var this1 = x1;
					from.push({ t : this.xtype(this1), field : haxe_xml__$Access_HasAttribAccess.resolve(t1,"field") ? haxe_xml__$Access_AttribAccess.resolve(t1,"field") : null});
				}
				break;
			case "haxe_doc":
				doc = haxe_xml_Access.get_innerData(c1);
				break;
			case "impl":
				impl = this.xclass(haxe_xml__$Access_NodeAccess.resolve(c1,"class"));
				break;
			case "meta":
				meta = this.xmeta(c1);
				break;
			case "this":
				var x2 = c1.firstElement();
				if(x2.nodeType != Xml.Document && x2.nodeType != Xml.Element) {
					throw haxe_Exception.thrown("Invalid nodeType " + (x2.nodeType == null ? "null" : XmlType.toString(x2.nodeType)));
				}
				var this2 = x2;
				athis = this.xtype(this2);
				break;
			case "to":
				var t2 = c1.elements();
				while(t2.hasNext()) {
					var t3 = t2.next();
					var x3 = t3.firstElement();
					if(x3.nodeType != Xml.Document && x3.nodeType != Xml.Element) {
						throw haxe_Exception.thrown("Invalid nodeType " + (x3.nodeType == null ? "null" : XmlType.toString(x3.nodeType)));
					}
					var this3 = x3;
					to.push({ t : this.xtype(this3), field : haxe_xml__$Access_HasAttribAccess.resolve(t3,"field") ? haxe_xml__$Access_AttribAccess.resolve(t3,"field") : null});
				}
				break;
			default:
				this.xerror(c1);
			}
		}
		return { file : haxe_xml__$Access_HasAttribAccess.resolve(x,"file") ? haxe_xml__$Access_AttribAccess.resolve(x,"file") : null, path : this.mkPath(haxe_xml__$Access_AttribAccess.resolve(x,"path")), module : haxe_xml__$Access_HasAttribAccess.resolve(x,"module") ? this.mkPath(haxe_xml__$Access_AttribAccess.resolve(x,"module")) : null, doc : doc, isPrivate : x.exists("private"), params : this.mkTypeParams(haxe_xml__$Access_AttribAccess.resolve(x,"params")), platforms : this.defplat(), meta : meta, athis : athis, to : to, from : from, impl : impl};
	}
	,xtypedef: function(x) {
		var doc = null;
		var t = null;
		var meta = [];
		var c = x.elements();
		while(c.hasNext()) {
			var c1 = c.next();
			var tmp;
			if(c1.nodeType == Xml.Document) {
				tmp = "Document";
			} else {
				if(c1.nodeType != Xml.Element) {
					throw haxe_Exception.thrown("Bad node type, expected Element but found " + (c1.nodeType == null ? "null" : XmlType.toString(c1.nodeType)));
				}
				tmp = c1.nodeName;
			}
			if(tmp == "haxe_doc") {
				doc = haxe_xml_Access.get_innerData(c1);
			} else {
				var tmp1;
				if(c1.nodeType == Xml.Document) {
					tmp1 = "Document";
				} else {
					if(c1.nodeType != Xml.Element) {
						throw haxe_Exception.thrown("Bad node type, expected Element but found " + (c1.nodeType == null ? "null" : XmlType.toString(c1.nodeType)));
					}
					tmp1 = c1.nodeName;
				}
				if(tmp1 == "meta") {
					meta = this.xmeta(c1);
				} else {
					t = this.xtype(c1);
				}
			}
		}
		var types = new haxe_ds_StringMap();
		if(this.curplatform != null) {
			types.h[this.curplatform] = t;
		}
		return { file : haxe_xml__$Access_HasAttribAccess.resolve(x,"file") ? haxe_xml__$Access_AttribAccess.resolve(x,"file") : null, path : this.mkPath(haxe_xml__$Access_AttribAccess.resolve(x,"path")), module : haxe_xml__$Access_HasAttribAccess.resolve(x,"module") ? this.mkPath(haxe_xml__$Access_AttribAccess.resolve(x,"module")) : null, doc : doc, isPrivate : x.exists("private"), params : this.mkTypeParams(haxe_xml__$Access_AttribAccess.resolve(x,"params")), type : t, types : types, platforms : this.defplat(), meta : meta};
	}
	,xtype: function(x) {
		var _g;
		if(x.nodeType == Xml.Document) {
			_g = "Document";
		} else {
			if(x.nodeType != Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, expected Element but found " + (x.nodeType == null ? "null" : XmlType.toString(x.nodeType)));
			}
			_g = x.nodeName;
		}
		switch(_g) {
		case "a":
			var fields = [];
			var f = x.elements();
			while(f.hasNext()) {
				var f1 = f.next();
				var f2 = this.xclassfield(f1,true);
				f2.platforms = [];
				fields.push(f2);
			}
			return haxe_rtti_CType.CAnonymous(fields);
		case "c":
			return haxe_rtti_CType.CClass(this.mkPath(haxe_xml__$Access_AttribAccess.resolve(x,"path")),this.xtypeparams(x));
		case "d":
			var t = null;
			var tx = x.firstElement();
			if(tx != null) {
				if(tx.nodeType != Xml.Document && tx.nodeType != Xml.Element) {
					throw haxe_Exception.thrown("Invalid nodeType " + (tx.nodeType == null ? "null" : XmlType.toString(tx.nodeType)));
				}
				var this1 = tx;
				t = this.xtype(this1);
			}
			return haxe_rtti_CType.CDynamic(t);
		case "e":
			return haxe_rtti_CType.CEnum(this.mkPath(haxe_xml__$Access_AttribAccess.resolve(x,"path")),this.xtypeparams(x));
		case "f":
			var args = [];
			var aname = haxe_xml__$Access_AttribAccess.resolve(x,"a").split(":");
			var eargs_current = 0;
			var eargs_array = aname;
			var evalues = haxe_xml__$Access_HasAttribAccess.resolve(x,"v") ? new haxe_iterators_ArrayIterator(haxe_xml__$Access_AttribAccess.resolve(x,"v").split(":")) : null;
			var e = x.elements();
			while(e.hasNext()) {
				var e1 = e.next();
				var opt = false;
				var a = eargs_current < eargs_array.length ? eargs_array[eargs_current++] : null;
				if(a == null) {
					a = "";
				}
				if(a.charAt(0) == "?") {
					opt = true;
					a = HxOverrides.substr(a,1,null);
				}
				var v = evalues == null || evalues.current >= evalues.array.length ? null : evalues.array[evalues.current++];
				args.push({ name : a, opt : opt, t : this.xtype(e1), value : v == "" ? null : v});
			}
			var ret = args[args.length - 1];
			HxOverrides.remove(args,ret);
			return haxe_rtti_CType.CFunction(args,ret.t);
		case "t":
			return haxe_rtti_CType.CTypedef(this.mkPath(haxe_xml__$Access_AttribAccess.resolve(x,"path")),this.xtypeparams(x));
		case "unknown":
			return haxe_rtti_CType.CUnknown;
		case "x":
			return haxe_rtti_CType.CAbstract(this.mkPath(haxe_xml__$Access_AttribAccess.resolve(x,"path")),this.xtypeparams(x));
		default:
			return this.xerror(x);
		}
	}
	,xtypeparams: function(x) {
		var p = [];
		var c = x.elements();
		while(c.hasNext()) {
			var c1 = c.next();
			p.push(this.xtype(c1));
		}
		return p;
	}
	,defplat: function() {
		var l = [];
		if(this.curplatform != null) {
			l.push(this.curplatform);
		}
		return l;
	}
	,__class__: haxe_rtti_XmlParser
};
var haxe_xml__$Access_NodeAccess = {};
haxe_xml__$Access_NodeAccess.resolve = function(this1,name) {
	var x = this1.elementsNamed(name).next();
	if(x == null) {
		var xname;
		if(this1.nodeType == Xml.Document) {
			xname = "Document";
		} else {
			if(this1.nodeType != Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, expected Element but found " + (this1.nodeType == null ? "null" : XmlType.toString(this1.nodeType)));
			}
			xname = this1.nodeName;
		}
		throw haxe_Exception.thrown(xname + " is missing element " + name);
	}
	if(x.nodeType != Xml.Document && x.nodeType != Xml.Element) {
		throw haxe_Exception.thrown("Invalid nodeType " + (x.nodeType == null ? "null" : XmlType.toString(x.nodeType)));
	}
	var this1 = x;
	return this1;
};
var haxe_xml__$Access_AttribAccess = {};
haxe_xml__$Access_AttribAccess.resolve = function(this1,name) {
	if(this1.nodeType == Xml.Document) {
		throw haxe_Exception.thrown("Cannot access document attribute " + name);
	}
	var v = this1.get(name);
	if(v == null) {
		if(this1.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element but found " + (this1.nodeType == null ? "null" : XmlType.toString(this1.nodeType)));
		}
		throw haxe_Exception.thrown(this1.nodeName + " is missing attribute " + name);
	}
	return v;
};
var haxe_xml__$Access_HasAttribAccess = {};
haxe_xml__$Access_HasAttribAccess.resolve = function(this1,name) {
	if(this1.nodeType == Xml.Document) {
		throw haxe_Exception.thrown("Cannot access document attribute " + name);
	}
	return this1.exists(name);
};
var haxe_xml__$Access_HasNodeAccess = {};
haxe_xml__$Access_HasNodeAccess.resolve = function(this1,name) {
	return this1.elementsNamed(name).hasNext();
};
var haxe_xml__$Access_NodeListAccess = {};
haxe_xml__$Access_NodeListAccess.resolve = function(this1,name) {
	var l = [];
	var x = this1.elementsNamed(name);
	while(x.hasNext()) {
		var x1 = x.next();
		if(x1.nodeType != Xml.Document && x1.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Invalid nodeType " + (x1.nodeType == null ? "null" : XmlType.toString(x1.nodeType)));
		}
		var this1 = x1;
		l.push(this1);
	}
	return l;
};
var haxe_xml_Access = {};
haxe_xml_Access.get_innerData = function(this1) {
	if(this1.nodeType != Xml.Document && this1.nodeType != Xml.Element) {
		throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (this1.nodeType == null ? "null" : XmlType.toString(this1.nodeType)));
	}
	var it_current = 0;
	var it_array = this1.children;
	if(it_current >= it_array.length) {
		var tmp;
		if(this1.nodeType == Xml.Document) {
			tmp = "Document";
		} else {
			if(this1.nodeType != Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, expected Element but found " + (this1.nodeType == null ? "null" : XmlType.toString(this1.nodeType)));
			}
			tmp = this1.nodeName;
		}
		throw haxe_Exception.thrown(tmp + " does not have data");
	}
	var v = it_array[it_current++];
	if(it_current < it_array.length) {
		var n = it_array[it_current++];
		var tmp;
		if(v.nodeType == Xml.PCData && n.nodeType == Xml.CData) {
			if(v.nodeType == Xml.Document || v.nodeType == Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, unexpected " + (v.nodeType == null ? "null" : XmlType.toString(v.nodeType)));
			}
			tmp = StringTools.trim(v.nodeValue) == "";
		} else {
			tmp = false;
		}
		if(tmp) {
			if(it_current >= it_array.length) {
				if(n.nodeType == Xml.Document || n.nodeType == Xml.Element) {
					throw haxe_Exception.thrown("Bad node type, unexpected " + (n.nodeType == null ? "null" : XmlType.toString(n.nodeType)));
				}
				return n.nodeValue;
			}
			var n2 = it_array[it_current++];
			var tmp;
			if(n2.nodeType == Xml.PCData) {
				if(n2.nodeType == Xml.Document || n2.nodeType == Xml.Element) {
					throw haxe_Exception.thrown("Bad node type, unexpected " + (n2.nodeType == null ? "null" : XmlType.toString(n2.nodeType)));
				}
				tmp = StringTools.trim(n2.nodeValue) == "";
			} else {
				tmp = false;
			}
			if(tmp && it_current >= it_array.length) {
				if(n.nodeType == Xml.Document || n.nodeType == Xml.Element) {
					throw haxe_Exception.thrown("Bad node type, unexpected " + (n.nodeType == null ? "null" : XmlType.toString(n.nodeType)));
				}
				return n.nodeValue;
			}
		}
		var tmp;
		if(this1.nodeType == Xml.Document) {
			tmp = "Document";
		} else {
			if(this1.nodeType != Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, expected Element but found " + (this1.nodeType == null ? "null" : XmlType.toString(this1.nodeType)));
			}
			tmp = this1.nodeName;
		}
		throw haxe_Exception.thrown(tmp + " does not only have data");
	}
	if(v.nodeType != Xml.PCData && v.nodeType != Xml.CData) {
		var tmp;
		if(this1.nodeType == Xml.Document) {
			tmp = "Document";
		} else {
			if(this1.nodeType != Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, expected Element but found " + (this1.nodeType == null ? "null" : XmlType.toString(this1.nodeType)));
			}
			tmp = this1.nodeName;
		}
		throw haxe_Exception.thrown(tmp + " does not have data");
	}
	if(v.nodeType == Xml.Document || v.nodeType == Xml.Element) {
		throw haxe_Exception.thrown("Bad node type, unexpected " + (v.nodeType == null ? "null" : XmlType.toString(v.nodeType)));
	}
	return v.nodeValue;
};
haxe_xml_Access.get_innerHTML = function(this1) {
	var s_b = "";
	if(this1.nodeType != Xml.Document && this1.nodeType != Xml.Element) {
		throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (this1.nodeType == null ? "null" : XmlType.toString(this1.nodeType)));
	}
	var _g_current = 0;
	var _g_array = this1.children;
	while(_g_current < _g_array.length) {
		var x = _g_array[_g_current++];
		s_b += Std.string(haxe_xml_Printer.print(x));
	}
	return s_b;
};
var haxe_xml_XmlParserException = function(message,xml,position) {
	this.xml = xml;
	this.message = message;
	this.position = position;
	this.lineNumber = 1;
	this.positionAtLine = 0;
	var _g = 0;
	var _g1 = position;
	while(_g < _g1) {
		var i = _g++;
		var c = xml.charCodeAt(i);
		if(c == 10) {
			this.lineNumber++;
			this.positionAtLine = 0;
		} else if(c != 13) {
			this.positionAtLine++;
		}
	}
};
$hxClasses["haxe.xml.XmlParserException"] = haxe_xml_XmlParserException;
haxe_xml_XmlParserException.__name__ = "haxe.xml.XmlParserException";
haxe_xml_XmlParserException.prototype = {
	message: null
	,lineNumber: null
	,positionAtLine: null
	,position: null
	,xml: null
	,toString: function() {
		var c = js_Boot.getClass(this);
		return c.__name__ + ": " + this.message + " at line " + this.lineNumber + " char " + this.positionAtLine;
	}
	,__class__: haxe_xml_XmlParserException
};
var haxe_xml_Parser = function() { };
$hxClasses["haxe.xml.Parser"] = haxe_xml_Parser;
haxe_xml_Parser.__name__ = "haxe.xml.Parser";
haxe_xml_Parser.parse = function(str,strict) {
	if(strict == null) {
		strict = false;
	}
	var doc = Xml.createDocument();
	haxe_xml_Parser.doParse(str,strict,0,doc);
	return doc;
};
haxe_xml_Parser.doParse = function(str,strict,p,parent) {
	if(p == null) {
		p = 0;
	}
	var xml = null;
	var state = 1;
	var next = 1;
	var aname = null;
	var start = 0;
	var nsubs = 0;
	var nbrackets = 0;
	var buf = new StringBuf();
	var escapeNext = 1;
	var attrValQuote = -1;
	while(p < str.length) {
		var c = str.charCodeAt(p);
		switch(state) {
		case 0:
			switch(c) {
			case 9:case 10:case 13:case 32:
				break;
			default:
				state = next;
				continue;
			}
			break;
		case 1:
			if(c == 60) {
				state = 0;
				next = 2;
			} else {
				start = p;
				state = 13;
				continue;
			}
			break;
		case 2:
			switch(c) {
			case 33:
				if(str.charCodeAt(p + 1) == 91) {
					p += 2;
					if(HxOverrides.substr(str,p,6).toUpperCase() != "CDATA[") {
						throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected <![CDATA[",str,p));
					}
					p += 5;
					state = 17;
					start = p + 1;
				} else if(str.charCodeAt(p + 1) == 68 || str.charCodeAt(p + 1) == 100) {
					if(HxOverrides.substr(str,p + 2,6).toUpperCase() != "OCTYPE") {
						throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected <!DOCTYPE",str,p));
					}
					p += 8;
					state = 16;
					start = p + 1;
				} else if(str.charCodeAt(p + 1) != 45 || str.charCodeAt(p + 2) != 45) {
					throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected <!--",str,p));
				} else {
					p += 2;
					state = 15;
					start = p + 1;
				}
				break;
			case 47:
				if(parent == null) {
					throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected node name",str,p));
				}
				start = p + 1;
				state = 0;
				next = 10;
				break;
			case 63:
				state = 14;
				start = p;
				break;
			default:
				state = 3;
				start = p;
				continue;
			}
			break;
		case 3:
			if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45)) {
				if(p == start) {
					throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected node name",str,p));
				}
				xml = Xml.createElement(HxOverrides.substr(str,start,p - start));
				parent.addChild(xml);
				++nsubs;
				state = 0;
				next = 4;
				continue;
			}
			break;
		case 4:
			switch(c) {
			case 47:
				state = 11;
				break;
			case 62:
				state = 9;
				break;
			default:
				state = 5;
				start = p;
				continue;
			}
			break;
		case 5:
			if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45)) {
				if(start == p) {
					throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected attribute name",str,p));
				}
				var tmp = HxOverrides.substr(str,start,p - start);
				aname = tmp;
				if(xml.exists(aname)) {
					throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Duplicate attribute [" + aname + "]",str,p));
				}
				state = 0;
				next = 6;
				continue;
			}
			break;
		case 6:
			if(c == 61) {
				state = 0;
				next = 7;
			} else {
				throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected =",str,p));
			}
			break;
		case 7:
			switch(c) {
			case 34:case 39:
				buf = new StringBuf();
				state = 8;
				start = p + 1;
				attrValQuote = c;
				break;
			default:
				throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected \"",str,p));
			}
			break;
		case 8:
			switch(c) {
			case 38:
				var len = p - start;
				buf.b += len == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len);
				state = 18;
				escapeNext = 8;
				start = p + 1;
				break;
			case 60:case 62:
				if(strict) {
					throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Invalid unescaped " + String.fromCodePoint(c) + " in attribute value",str,p));
				} else if(c == attrValQuote) {
					var len1 = p - start;
					buf.b += len1 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len1);
					var val = buf.b;
					buf = new StringBuf();
					xml.set(aname,val);
					state = 0;
					next = 4;
				}
				break;
			default:
				if(c == attrValQuote) {
					var len2 = p - start;
					buf.b += len2 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len2);
					var val1 = buf.b;
					buf = new StringBuf();
					xml.set(aname,val1);
					state = 0;
					next = 4;
				}
			}
			break;
		case 9:
			p = haxe_xml_Parser.doParse(str,strict,p,xml);
			start = p;
			state = 1;
			break;
		case 10:
			if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45)) {
				if(start == p) {
					throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected node name",str,p));
				}
				var v = HxOverrides.substr(str,start,p - start);
				if(parent == null || parent.nodeType != 0) {
					throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Unexpected </" + v + ">, tag is not open",str,p));
				}
				if(parent.nodeType != Xml.Element) {
					throw haxe_Exception.thrown("Bad node type, expected Element but found " + (parent.nodeType == null ? "null" : XmlType.toString(parent.nodeType)));
				}
				if(v != parent.nodeName) {
					if(parent.nodeType != Xml.Element) {
						throw haxe_Exception.thrown("Bad node type, expected Element but found " + (parent.nodeType == null ? "null" : XmlType.toString(parent.nodeType)));
					}
					throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected </" + parent.nodeName + ">",str,p));
				}
				state = 0;
				next = 12;
				continue;
			}
			break;
		case 11:
			if(c == 62) {
				state = 1;
			} else {
				throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected >",str,p));
			}
			break;
		case 12:
			if(c == 62) {
				if(nsubs == 0) {
					parent.addChild(Xml.createPCData(""));
				}
				return p;
			} else {
				throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected >",str,p));
			}
			break;
		case 13:
			if(c == 60) {
				var len3 = p - start;
				buf.b += len3 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len3);
				var child = Xml.createPCData(buf.b);
				buf = new StringBuf();
				parent.addChild(child);
				++nsubs;
				state = 0;
				next = 2;
			} else if(c == 38) {
				var len4 = p - start;
				buf.b += len4 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len4);
				state = 18;
				escapeNext = 13;
				start = p + 1;
			}
			break;
		case 14:
			if(c == 63 && str.charCodeAt(p + 1) == 62) {
				++p;
				var str1 = HxOverrides.substr(str,start + 1,p - start - 2);
				parent.addChild(Xml.createProcessingInstruction(str1));
				++nsubs;
				state = 1;
			}
			break;
		case 15:
			if(c == 45 && str.charCodeAt(p + 1) == 45 && str.charCodeAt(p + 2) == 62) {
				parent.addChild(Xml.createComment(HxOverrides.substr(str,start,p - start)));
				++nsubs;
				p += 2;
				state = 1;
			}
			break;
		case 16:
			if(c == 91) {
				++nbrackets;
			} else if(c == 93) {
				--nbrackets;
			} else if(c == 62 && nbrackets == 0) {
				parent.addChild(Xml.createDocType(HxOverrides.substr(str,start,p - start)));
				++nsubs;
				state = 1;
			}
			break;
		case 17:
			if(c == 93 && str.charCodeAt(p + 1) == 93 && str.charCodeAt(p + 2) == 62) {
				var child1 = Xml.createCData(HxOverrides.substr(str,start,p - start));
				parent.addChild(child1);
				++nsubs;
				p += 2;
				state = 1;
			}
			break;
		case 18:
			if(c == 59) {
				var s = HxOverrides.substr(str,start,p - start);
				if(s.charCodeAt(0) == 35) {
					var c1 = s.charCodeAt(1) == 120 ? Std.parseInt("0" + HxOverrides.substr(s,1,s.length - 1)) : Std.parseInt(HxOverrides.substr(s,1,s.length - 1));
					buf.b += String.fromCodePoint(c1);
				} else if(!Object.prototype.hasOwnProperty.call(haxe_xml_Parser.escapes.h,s)) {
					if(strict) {
						throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Undefined entity: " + s,str,p));
					}
					buf.b += Std.string("&" + s + ";");
				} else {
					buf.b += Std.string(haxe_xml_Parser.escapes.h[s]);
				}
				start = p + 1;
				state = escapeNext;
			} else if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45) && c != 35) {
				if(strict) {
					throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Invalid character in entity: " + String.fromCodePoint(c),str,p));
				}
				buf.b += String.fromCodePoint(38);
				var len5 = p - start;
				buf.b += len5 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len5);
				--p;
				start = p + 1;
				state = escapeNext;
			}
			break;
		}
		++p;
	}
	if(state == 1) {
		start = p;
		state = 13;
	}
	if(state == 13) {
		if(parent.nodeType == 0) {
			if(parent.nodeType != Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, expected Element but found " + (parent.nodeType == null ? "null" : XmlType.toString(parent.nodeType)));
			}
			throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Unclosed node <" + parent.nodeName + ">",str,p));
		}
		if(p != start || nsubs == 0) {
			var len = p - start;
			buf.b += len == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len);
			parent.addChild(Xml.createPCData(buf.b));
			++nsubs;
		}
		return p;
	}
	if(!strict && state == 18 && escapeNext == 13) {
		buf.b += String.fromCodePoint(38);
		var len = p - start;
		buf.b += len == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len);
		parent.addChild(Xml.createPCData(buf.b));
		++nsubs;
		return p;
	}
	throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Unexpected end",str,p));
};
var haxe_xml_Printer = function(pretty) {
	this.output = new StringBuf();
	this.pretty = pretty;
};
$hxClasses["haxe.xml.Printer"] = haxe_xml_Printer;
haxe_xml_Printer.__name__ = "haxe.xml.Printer";
haxe_xml_Printer.print = function(xml,pretty) {
	if(pretty == null) {
		pretty = false;
	}
	var printer = new haxe_xml_Printer(pretty);
	printer.writeNode(xml,"");
	return printer.output.b;
};
haxe_xml_Printer.prototype = {
	output: null
	,pretty: null
	,writeNode: function(value,tabs) {
		switch(value.nodeType) {
		case 0:
			this.output.b += Std.string(tabs + "<");
			if(value.nodeType != Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, expected Element but found " + (value.nodeType == null ? "null" : XmlType.toString(value.nodeType)));
			}
			this.output.b += Std.string(value.nodeName);
			var attribute = value.attributes();
			while(attribute.hasNext()) {
				var attribute1 = attribute.next();
				this.output.b += Std.string(" " + attribute1 + "=\"");
				var input = StringTools.htmlEscape(value.get(attribute1),true);
				this.output.b += Std.string(input);
				this.output.b += "\"";
			}
			if(this.hasChildren(value)) {
				this.output.b += ">";
				if(this.pretty) {
					this.output.b += "\n";
				}
				if(value.nodeType != Xml.Document && value.nodeType != Xml.Element) {
					throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (value.nodeType == null ? "null" : XmlType.toString(value.nodeType)));
				}
				var _g_current = 0;
				var _g_array = value.children;
				while(_g_current < _g_array.length) {
					var child = _g_array[_g_current++];
					this.writeNode(child,this.pretty ? tabs + "\t" : tabs);
				}
				this.output.b += Std.string(tabs + "</");
				if(value.nodeType != Xml.Element) {
					throw haxe_Exception.thrown("Bad node type, expected Element but found " + (value.nodeType == null ? "null" : XmlType.toString(value.nodeType)));
				}
				this.output.b += Std.string(value.nodeName);
				this.output.b += ">";
				if(this.pretty) {
					this.output.b += "\n";
				}
			} else {
				this.output.b += "/>";
				if(this.pretty) {
					this.output.b += "\n";
				}
			}
			break;
		case 1:
			if(value.nodeType == Xml.Document || value.nodeType == Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, unexpected " + (value.nodeType == null ? "null" : XmlType.toString(value.nodeType)));
			}
			var nodeValue = value.nodeValue;
			if(nodeValue.length != 0) {
				var input = tabs + StringTools.htmlEscape(nodeValue);
				this.output.b += Std.string(input);
				if(this.pretty) {
					this.output.b += "\n";
				}
			}
			break;
		case 2:
			this.output.b += Std.string(tabs + "<![CDATA[");
			if(value.nodeType == Xml.Document || value.nodeType == Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, unexpected " + (value.nodeType == null ? "null" : XmlType.toString(value.nodeType)));
			}
			this.output.b += Std.string(value.nodeValue);
			this.output.b += "]]>";
			if(this.pretty) {
				this.output.b += "\n";
			}
			break;
		case 3:
			if(value.nodeType == Xml.Document || value.nodeType == Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, unexpected " + (value.nodeType == null ? "null" : XmlType.toString(value.nodeType)));
			}
			var commentContent = value.nodeValue;
			var _this_r = new RegExp("[\n\r\t]+","g".split("u").join(""));
			commentContent = commentContent.replace(_this_r,"");
			commentContent = "<!--" + commentContent + "-->";
			this.output.b += tabs == null ? "null" : "" + tabs;
			var input = StringTools.trim(commentContent);
			this.output.b += Std.string(input);
			if(this.pretty) {
				this.output.b += "\n";
			}
			break;
		case 4:
			if(value.nodeType == Xml.Document || value.nodeType == Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, unexpected " + (value.nodeType == null ? "null" : XmlType.toString(value.nodeType)));
			}
			this.output.b += Std.string("<!DOCTYPE " + value.nodeValue + ">");
			if(this.pretty) {
				this.output.b += "\n";
			}
			break;
		case 5:
			if(value.nodeType == Xml.Document || value.nodeType == Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, unexpected " + (value.nodeType == null ? "null" : XmlType.toString(value.nodeType)));
			}
			this.output.b += Std.string("<?" + value.nodeValue + "?>");
			if(this.pretty) {
				this.output.b += "\n";
			}
			break;
		case 6:
			if(value.nodeType != Xml.Document && value.nodeType != Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (value.nodeType == null ? "null" : XmlType.toString(value.nodeType)));
			}
			var _g_current = 0;
			var _g_array = value.children;
			while(_g_current < _g_array.length) {
				var child = _g_array[_g_current++];
				this.writeNode(child,tabs);
			}
			break;
		}
	}
	,hasChildren: function(value) {
		if(value.nodeType != Xml.Document && value.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (value.nodeType == null ? "null" : XmlType.toString(value.nodeType)));
		}
		var _g_current = 0;
		var _g_array = value.children;
		while(_g_current < _g_array.length) {
			var child = _g_array[_g_current++];
			switch(child.nodeType) {
			case 0:case 1:
				return true;
			case 2:case 3:
				if(child.nodeType == Xml.Document || child.nodeType == Xml.Element) {
					throw haxe_Exception.thrown("Bad node type, unexpected " + (child.nodeType == null ? "null" : XmlType.toString(child.nodeType)));
				}
				if(StringTools.ltrim(child.nodeValue).length != 0) {
					return true;
				}
				break;
			default:
			}
		}
		return false;
	}
	,__class__: haxe_xml_Printer
};
var hre_HreError = function(message) {
	this.message = message;
};
$hxClasses["hre.HreError"] = hre_HreError;
hre_HreError.__name__ = "hre.HreError";
hre_HreError.prototype = {
	message: null
	,__class__: hre_HreError
};
var hre_Match = function(input,index,groups) {
	this.input = input;
	this.index = index;
	this.groups = groups;
};
$hxClasses["hre.Match"] = hre_Match;
hre_Match.__name__ = "hre.Match";
hre_Match.prototype = {
	input: null
	,index: null
	,groups: null
	,equals: function(other) {
		if(other == null || this.input != other.input || this.index != other.index) {
			return false;
		}
		var _g = 0;
		var _g1 = this.groups.length;
		while(_g < _g1) {
			var i = _g++;
			if(this.groups[i] != other.groups[i]) {
				return false;
			}
		}
		return true;
	}
	,toString: function() {
		return "Match(input=\"" + this.input + "\", index=" + this.index + ", groups=[" + this.groups.join(", ") + "])";
	}
	,__class__: hre_Match
};
var hre_RegExp = function(pattern,flags) {
	this.length = 2;
	this.pattern = hre_RegExpParser.parse(pattern);
	var global1 = false;
	var ignoreCase = false;
	var multiline = false;
	var sticky = false;
	if(flags != null) {
		var _g = 0;
		var _g1 = flags.length;
		while(_g < _g1) {
			var i = _g++;
			var charCode = HxOverrides.cca(flags,i);
			if(charCode == hre_RegExp.LATIN_SMALL_LETTER_G) {
				global1 = true;
			} else if(charCode == hre_RegExp.LATIN_SMALL_LETTER_I) {
				ignoreCase = true;
			} else if(charCode == hre_RegExp.LATIN_SMALL_LETTER_M) {
				multiline = true;
			} else if(charCode == hre_RegExp.LATIN_SMALL_LETTER_U) {
				haxe_Log.trace("Unicode flag is always enabled, no need to provide it",{ fileName : "hre/RegExp.hx", lineNumber : 49, className : "hre.RegExp", methodName : "new"});
			} else if(charCode == hre_RegExp.LATIN_SMALL_LETTER_Y) {
				sticky = true;
			} else {
				throw haxe_Exception.thrown(new hre_RegExpSyntaxError("Invalid flags",0,pattern));
			}
		}
	}
	this.flags = new hre_RegExpFlags(global1,ignoreCase,multiline,sticky);
	this.lastIndex = 0;
};
$hxClasses["hre.RegExp"] = hre_RegExp;
hre_RegExp.__name__ = "hre.RegExp";
hre_RegExp.prototype = {
	length: null
	,lastIndex: null
	,pattern: null
	,flags: null
	,exec: function(input) {
		var matcher = hre_RegExpMatcher.evaluatePattern(this.pattern,this.flags);
		var currentIndex = this.flags.global || this.flags.sticky ? this.lastIndex : 0;
		var successfulMatch = null;
		_hx_loop1: while(true) {
			if(currentIndex > input.length) {
				this.lastIndex = 0;
				return null;
			}
			var _g = matcher(input,currentIndex);
			switch(_g._hx_index) {
			case 0:
				if(this.flags.sticky) {
					this.lastIndex = 0;
					return null;
				}
				++currentIndex;
				continue;
			case 1:
				var state = _g.matcherState;
				successfulMatch = state;
				break _hx_loop1;
			}
		}
		if(this.flags.global || this.flags.sticky) {
			this.lastIndex = successfulMatch.index;
		}
		var matchedSubstring = input.substring(currentIndex,successfulMatch.index);
		var groups = [matchedSubstring];
		var _g = 0;
		var _g1 = successfulMatch.captures;
		while(_g < _g1.length) {
			var captured = _g1[_g];
			++_g;
			groups.push(captured);
		}
		return new hre_Match(input,currentIndex,groups);
	}
	,test: function(input) {
		return this.exec(input) != null;
	}
	,__class__: hre_RegExp
};
var hre_RegExpFlags = function(global1,ignoreCase,multiline,sticky) {
	this.global = global1;
	this.ignoreCase = ignoreCase;
	this.multiline = multiline;
	this.unicode = true;
	this.sticky = sticky;
};
$hxClasses["hre.RegExpFlags"] = hre_RegExpFlags;
hre_RegExpFlags.__name__ = "hre.RegExpFlags";
hre_RegExpFlags.prototype = {
	global: null
	,ignoreCase: null
	,multiline: null
	,unicode: null
	,sticky: null
	,__class__: hre_RegExpFlags
};
var hre_MatcherResult = $hxEnums["hre.MatcherResult"] = { __ename__:"hre.MatcherResult",__constructs__:null
	,Failure: {_hx_name:"Failure",_hx_index:0,__enum__:"hre.MatcherResult",toString:$estr}
	,Success: ($_=function(matcherState) { return {_hx_index:1,matcherState:matcherState,__enum__:"hre.MatcherResult",toString:$estr}; },$_._hx_name="Success",$_.__params__ = ["matcherState"],$_)
};
hre_MatcherResult.__constructs__ = [hre_MatcherResult.Failure,hre_MatcherResult.Success];
var hre_MatcherState = function() {
};
$hxClasses["hre.MatcherState"] = hre_MatcherState;
hre_MatcherState.__name__ = "hre.MatcherState";
hre_MatcherState.prototype = {
	index: null
	,length: null
	,ignoreCase: null
	,multiline: null
	,unicode: null
	,list: null
	,captures: null
	,copy: function() {
		var result = new hre_MatcherState();
		result.index = this.index;
		result.length = this.length;
		result.ignoreCase = this.ignoreCase;
		result.multiline = this.multiline;
		result.unicode = this.unicode;
		result.list = this.list.slice();
		result.captures = this.captures.slice();
		return result;
	}
	,__class__: hre_MatcherState
};
var hre_RegExpMatcher = function() {
};
$hxClasses["hre.RegExpMatcher"] = hre_RegExpMatcher;
hre_RegExpMatcher.__name__ = "hre.RegExpMatcher";
hre_RegExpMatcher.evaluatePattern = function(pattern,flags) {
	return function(source,index) {
		if(index > source.length) {
			throw haxe_Exception.thrown(new hre_HreError("Assertion `index <= source.length` failed"));
		}
		var state = new hre_MatcherState();
		state.length = source.length;
		state.list = [];
		var _g = 0;
		var _g1 = source.length;
		while(_g < _g1) {
			var i = _g++;
			state.list.push(HxOverrides.cca(source,i));
		}
		state.index = index;
		state.multiline = flags.multiline;
		state.ignoreCase = flags.ignoreCase;
		state.unicode = flags.unicode;
		state.captures = [];
		var _g = 0;
		var _g1 = pattern.captures;
		while(_g < _g1) {
			var _ = _g++;
			state.captures.push(null);
		}
		var m = hre_RegExpMatcher.evaluateDisjunction(pattern);
		var continuation = function(state) {
			return hre_MatcherResult.Success(state);
		};
		return m(state,continuation);
	};
};
hre_RegExpMatcher.evaluateDisjunction = function(disjunction) {
	var _this = disjunction.alternatives;
	var f = hre_RegExpMatcher.evaluateAlternative;
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = f(_this[i]);
	}
	var alternativeMatchers = result;
	return function(state,continuation) {
		if(alternativeMatchers.length == 0) {
			return continuation(state);
		}
		var _g = 0;
		while(_g < alternativeMatchers.length) {
			var matcher = alternativeMatchers[_g];
			++_g;
			var r = matcher(state,continuation);
			if(r._hx_index == 0) {
				continue;
			} else {
				return r;
			}
		}
		return hre_MatcherResult.Failure;
	};
};
hre_RegExpMatcher.evaluateAlternative = function(alternative) {
	return function(state,continuation) {
		var c = continuation;
		var idx = alternative.terms.length;
		while(idx > 0) {
			--idx;
			var m = [hre_RegExpMatcher.evaluateTerm(alternative.terms[idx])];
			var nextContinuation = [c];
			c = (function(nextContinuation,m) {
				return function(s) {
					return m[0](s,nextContinuation[0]);
				};
			})(nextContinuation,m);
		}
		return c(state);
	};
};
hre_RegExpMatcher.evaluateTerm = function(term) {
	switch(term._hx_index) {
	case 0:
		var assertion = term.assertion;
		return function(state,continuation) {
			if(term == null) {
				return hre_MatcherResult.Failure;
			}
			var _g = hre_RegExpMatcher.evaluateAssertion(assertion);
			switch(_g._hx_index) {
			case 0:
				var assertionTester = _g.v;
				if(assertionTester(state)) {
					return continuation(state);
				} else {
					return hre_MatcherResult.Failure;
				}
				break;
			case 1:
				var matcher = _g.v;
				return matcher(state,continuation);
			}
		};
	case 1:
		var atom = term.atom;
		return hre_RegExpMatcher.evaluateAtom(atom);
	case 2:
		var atom = term.atom;
		var quantifier = term.quantifier;
		var captureStart = term.capturesStartIndex;
		var captureEnd = term.capturesEndIndex;
		return hre_RegExpMatcher.evaluateQuantifiedAtom(atom,quantifier,captureStart,captureEnd);
	}
};
hre_RegExpMatcher.evaluateAssertion = function(assertion) {
	switch(assertion._hx_index) {
	case 0:
		return haxe_ds_Either.Left(function(state) {
			var e = state.index;
			if(e == 0) {
				return true;
			}
			if(!state.multiline) {
				return false;
			}
			if(hre_RegExpMatcher.isLineTerminator(state.list[e - 1])) {
				return true;
			}
			return false;
		});
	case 1:
		return haxe_ds_Either.Left(function(state) {
			if(state.index == state.length) {
				return true;
			}
			if(!state.multiline) {
				return false;
			}
			if(hre_RegExpMatcher.isLineTerminator(state.list[state.index])) {
				return true;
			}
			return false;
		});
	case 2:
		return haxe_ds_Either.Left(function(state) {
			var e = state.index;
			var a = e > 0 && hre_RegExpMatcher.isWordChar(state.list[e - 1]);
			var b = e < state.length && hre_RegExpMatcher.isWordChar(state.list[e]);
			return a != b;
		});
	case 3:
		return haxe_ds_Either.Left(function(state) {
			var e = state.index;
			var a = e > 0 && hre_RegExpMatcher.isWordChar(state.list[e - 1]);
			var b = e < state.length && hre_RegExpMatcher.isWordChar(state.list[e]);
			return a == b;
		});
	case 4:
		var disjunction = assertion.disjunction;
		var m = hre_RegExpMatcher.evaluateDisjunction(disjunction);
		return haxe_ds_Either.Right(function(state,continuation) {
			var d = function(state) {
				return hre_MatcherResult.Success(state);
			};
			var _g = m(state,d);
			switch(_g._hx_index) {
			case 0:
				return hre_MatcherResult.Failure;
			case 1:
				var subState = _g.matcherState;
				var nextState = subState.copy();
				nextState.index = state.index;
				return continuation(nextState);
			}
		});
	case 5:
		var disjunction = assertion.disjunction;
		var m1 = hre_RegExpMatcher.evaluateDisjunction(disjunction);
		return haxe_ds_Either.Right(function(state,continuation) {
			var d = function(state) {
				return hre_MatcherResult.Success(state);
			};
			var _g = m1(state,d);
			switch(_g._hx_index) {
			case 0:
				return continuation(state);
			case 1:
				var _g1 = _g.matcherState;
				return hre_MatcherResult.Failure;
			}
		});
	}
};
hre_RegExpMatcher.evaluateAtom = function(atom) {
	switch(atom._hx_index) {
	case 0:
		return hre_RegExpMatcher.characterSetMatcher(hre_RegExpMatcher.lineTerminators,true);
	case 1:
		return function(state,continuation) {
			var e = state.index;
			if(e == state.length) {
				return hre_MatcherResult.Failure;
			}
			var cc = hre_RegExpMatcher.canonicalize(state,state.list[e]);
			if(48 <= cc && cc <= 57) {
				var nextState = state.copy();
				nextState.index++;
				return continuation(nextState);
			} else {
				return hre_MatcherResult.Failure;
			}
		};
	case 2:
		return function(state,continuation) {
			var e = state.index;
			if(e == state.length) {
				return hre_MatcherResult.Failure;
			}
			var cc = hre_RegExpMatcher.canonicalize(state,state.list[e]);
			if(!(48 <= cc && cc <= 57)) {
				var nextState = state.copy();
				nextState.index++;
				return continuation(nextState);
			} else {
				return hre_MatcherResult.Failure;
			}
		};
	case 3:
		return hre_RegExpMatcher.characterSetMatcher(hre_RegExpMatcher.separators,false);
	case 4:
		return hre_RegExpMatcher.characterSetMatcher(hre_RegExpMatcher.separators,true);
	case 5:
		return function(state,continuation) {
			var e = state.index;
			if(e == state.length) {
				return hre_MatcherResult.Failure;
			}
			var cc = hre_RegExpMatcher.canonicalize(state,state.list[e]);
			if(hre_RegExpMatcher.isWordChar(cc)) {
				var nextState = state.copy();
				nextState.index++;
				return continuation(nextState);
			} else {
				return hre_MatcherResult.Failure;
			}
		};
	case 6:
		return function(state,continuation) {
			var e = state.index;
			if(e == state.length) {
				return hre_MatcherResult.Failure;
			}
			var cc = hre_RegExpMatcher.canonicalize(state,state.list[e]);
			if(!hre_RegExpMatcher.isWordChar(cc)) {
				var nextState = state.copy();
				nextState.index++;
				return continuation(nextState);
			} else {
				return hre_MatcherResult.Failure;
			}
		};
	case 7:
		var captureId = atom.captureId;
		return hre_RegExpMatcher.evaluateBackreference(captureId);
	case 8:
		var literal = atom.literal;
		return hre_RegExpMatcher.characterSetMatcher([HxOverrides.cca(literal,0)],false);
	case 9:
		var characterClass = atom.characterClass;
		return hre_RegExpMatcher.evaluateCharacterClass(characterClass);
	case 10:
		var disjunction = atom.disjunction;
		var captureIndex = atom.captureIndex;
		return hre_RegExpMatcher.evaluateCaptureGroup(disjunction,captureIndex);
	case 11:
		var disjunction = atom.disjunction;
		return hre_RegExpMatcher.evaluateDisjunction(disjunction);
	}
};
hre_RegExpMatcher.evaluateQuantifiedAtom = function(atom,quantifier,captureStart,captureEnd) {
	var m = hre_RegExpMatcher.evaluateAtom(atom);
	return function(state,continuation) {
		return hre_RegExpMatcher.repeatMatcher(m,quantifier.min,quantifier.max,quantifier.greedy,state,continuation,captureStart,captureEnd);
	};
};
hre_RegExpMatcher.repeatMatcher = function(m,min,max,greedy,x,c,captureStart,captureEnd) {
	if(max == 0) {
		return c(x);
	}
	var d = function(y) {
		if(min == 0 && x.index == y.index) {
			return hre_MatcherResult.Failure;
		}
		var min2 = min == 0 ? 0 : min - 1;
		var max2 = max == -1 ? -1 : max - 1;
		return hre_RegExpMatcher.repeatMatcher(m,min2,max2,greedy,y,c,captureStart,captureEnd);
	};
	var xr = x.copy();
	var _g = captureStart;
	var _g1 = captureEnd;
	while(_g < _g1) {
		var k = _g++;
		xr.captures[k] = null;
	}
	if(min > 0) {
		return m(xr,d);
	}
	if(!greedy) {
		var z = c(x);
		if(z._hx_index == 0) {
			return m(xr,d);
		} else {
			return z;
		}
	}
	var z = m(xr,d);
	if(z._hx_index == 0) {
		return c(x);
	} else {
		return z;
	}
};
hre_RegExpMatcher.evaluateCaptureGroup = function(disjunction,captureIndex) {
	var m = hre_RegExpMatcher.evaluateDisjunction(disjunction);
	return function(state,continuation) {
		var subContinuation = function(subState) {
			var capturedSubstring = "";
			var _g = state.index;
			var _g1 = subState.index;
			while(_g < _g1) {
				var i = _g++;
				var code = state.list[i];
				capturedSubstring += String.fromCodePoint(code);
			}
			var nextState = subState.copy();
			nextState.captures[captureIndex] = capturedSubstring;
			return continuation(nextState);
		};
		return m(state,subContinuation);
	};
};
hre_RegExpMatcher.evaluateBackreference = function(captureId) {
	var captureIndex = captureId - 1;
	return function(state,continuation) {
		var referenced = state.captures[captureIndex];
		if(referenced == null) {
			return continuation(state);
		}
		var e = state.index;
		var f = e + referenced.length;
		if(f > state.list.length) {
			return hre_MatcherResult.Failure;
		}
		var _g = 0;
		var _g1 = referenced.length;
		while(_g < _g1) {
			var i = _g++;
			if(hre_RegExpMatcher.canonicalize(state,state.list[e + i]) != hre_RegExpMatcher.canonicalize(state,HxOverrides.cca(referenced,i))) {
				return hre_MatcherResult.Failure;
			}
		}
		var y = state.copy();
		y.index = f;
		return continuation(y);
	};
};
hre_RegExpMatcher.evaluateCharacterClass = function(characterClass) {
	return function(state,continuation) {
		var e = state.index;
		if(e == state.length) {
			return hre_MatcherResult.Failure;
		}
		var cc = hre_RegExpMatcher.canonicalize(state,state.list[e]);
		var matched = false;
		var _g = 0;
		var _g1 = characterClass.ranges;
		_hx_loop1: while(_g < _g1.length) {
			var range = _g1[_g];
			++_g;
			switch(range._hx_index) {
			case 0:
				var start = range.start;
				var end = range.end;
				var startCode = HxOverrides.cca(start,0);
				var endCode = HxOverrides.cca(end,0);
				if(state.ignoreCase) {
					var _g2 = startCode;
					var _g3 = endCode + 1;
					while(_g2 < _g3) {
						var i = _g2++;
						if(cc == hre_RegExpMatcher.canonicalize(state,i)) {
							matched = true;
							break;
						}
					}
				} else if(startCode <= cc && cc <= endCode) {
					matched = true;
					break _hx_loop1;
				}
				break;
			case 1:
				var ccAtom = range.value;
				switch(ccAtom._hx_index) {
				case 0:
					var value = ccAtom.value;
					if(hre_RegExpMatcher.canonicalize(state,HxOverrides.cca(value,0)) == cc) {
						matched = true;
						break _hx_loop1;
					}
					break;
				case 1:
					if(48 <= cc && cc <= 57) {
						matched = true;
						break _hx_loop1;
					}
					break;
				case 2:
					if(!(48 <= cc && cc <= 57)) {
						matched = true;
						break _hx_loop1;
					}
					break;
				case 3:
					if(hre_RegExpMatcher.separators.indexOf(cc) >= 0) {
						matched = true;
						break _hx_loop1;
					}
					break;
				case 4:
					if(hre_RegExpMatcher.separators.indexOf(cc) < 0) {
						matched = true;
						break _hx_loop1;
					}
					break;
				case 5:
					if(hre_RegExpMatcher.isWordChar(cc)) {
						matched = true;
						break _hx_loop1;
					}
					break;
				case 6:
					if(!hre_RegExpMatcher.isWordChar(cc)) {
						matched = true;
						break _hx_loop1;
					}
					break;
				}
				break;
			}
		}
		if(characterClass.inverted == matched) {
			return hre_MatcherResult.Failure;
		}
		var nextState = state.copy();
		nextState.index++;
		return continuation(nextState);
	};
};
hre_RegExpMatcher.characterSetMatcher = function(codepoints,invert) {
	return function(state,continuation) {
		var e = state.index;
		if(e == state.length) {
			return hre_MatcherResult.Failure;
		}
		var cc = hre_RegExpMatcher.canonicalize(state,state.list[e]);
		var matched = false;
		var _g = 0;
		while(_g < codepoints.length) {
			var chr = codepoints[_g];
			++_g;
			if(cc == hre_RegExpMatcher.canonicalize(state,chr)) {
				matched = true;
				break;
			}
		}
		if(invert == matched) {
			return hre_MatcherResult.Failure;
		}
		var nextState = state.copy();
		nextState.index++;
		return continuation(nextState);
	};
};
hre_RegExpMatcher.canonicalize = function(state,codepoint) {
	if(!state.ignoreCase) {
		return codepoint;
	}
	return HxOverrides.cca(String.fromCodePoint(codepoint).toLowerCase(),0);
};
hre_RegExpMatcher.isLineTerminator = function(codepoint) {
	return hre_RegExpMatcher.lineTerminators.indexOf(codepoint) >= 0;
};
hre_RegExpMatcher.isWordChar = function(codepoint) {
	if(!(97 <= codepoint && codepoint <= 122 || 65 <= codepoint && codepoint <= 90 || 48 <= codepoint && codepoint <= 57)) {
		return codepoint == 95;
	} else {
		return true;
	}
};
hre_RegExpMatcher.prototype = {
	__class__: hre_RegExpMatcher
};
var hre_RegExpSyntaxError = function(message,index,source) {
	hre_HreError.call(this,"RegExp syntax error for \"" + source + "\" at index " + index + ": " + message);
	this.index = index;
	this.source = source;
};
$hxClasses["hre.RegExpSyntaxError"] = hre_RegExpSyntaxError;
hre_RegExpSyntaxError.__name__ = "hre.RegExpSyntaxError";
hre_RegExpSyntaxError.__super__ = hre_HreError;
hre_RegExpSyntaxError.prototype = $extend(hre_HreError.prototype,{
	index: null
	,source: null
	,__class__: hre_RegExpSyntaxError
});
var hre_QuantifierPrefix = function(min,max) {
	this.min = min;
	this.max = max;
};
$hxClasses["hre.QuantifierPrefix"] = hre_QuantifierPrefix;
hre_QuantifierPrefix.__name__ = "hre.QuantifierPrefix";
hre_QuantifierPrefix.prototype = {
	min: null
	,max: null
	,__class__: hre_QuantifierPrefix
};
var hre_IntLiteral = function(length,value) {
	this.length = length;
	this.value = value;
};
$hxClasses["hre.IntLiteral"] = hre_IntLiteral;
hre_IntLiteral.__name__ = "hre.IntLiteral";
hre_IntLiteral.prototype = {
	length: null
	,value: null
	,__class__: hre_IntLiteral
};
var hre_Escape = $hxEnums["hre.Escape"] = { __ename__:"hre.Escape",__constructs__:null
	,Literal: ($_=function(codepoint) { return {_hx_index:0,codepoint:codepoint,__enum__:"hre.Escape",toString:$estr}; },$_._hx_name="Literal",$_.__params__ = ["codepoint"],$_)
	,Backreference: ($_=function(captureId) { return {_hx_index:1,captureId:captureId,__enum__:"hre.Escape",toString:$estr}; },$_._hx_name="Backreference",$_.__params__ = ["captureId"],$_)
	,Word: {_hx_name:"Word",_hx_index:2,__enum__:"hre.Escape",toString:$estr}
	,NotWord: {_hx_name:"NotWord",_hx_index:3,__enum__:"hre.Escape",toString:$estr}
	,Decimal: {_hx_name:"Decimal",_hx_index:4,__enum__:"hre.Escape",toString:$estr}
	,NotDecimal: {_hx_name:"NotDecimal",_hx_index:5,__enum__:"hre.Escape",toString:$estr}
	,Separator: {_hx_name:"Separator",_hx_index:6,__enum__:"hre.Escape",toString:$estr}
	,NotSeparator: {_hx_name:"NotSeparator",_hx_index:7,__enum__:"hre.Escape",toString:$estr}
	,WordBoundary: {_hx_name:"WordBoundary",_hx_index:8,__enum__:"hre.Escape",toString:$estr}
	,NotWordBoundary: {_hx_name:"NotWordBoundary",_hx_index:9,__enum__:"hre.Escape",toString:$estr}
};
hre_Escape.__constructs__ = [hre_Escape.Literal,hre_Escape.Backreference,hre_Escape.Word,hre_Escape.NotWord,hre_Escape.Decimal,hre_Escape.NotDecimal,hre_Escape.Separator,hre_Escape.NotSeparator,hre_Escape.WordBoundary,hre_Escape.NotWordBoundary];
var hre_RegExpParser = function(source) {
	this.source = source;
	this.currentIndex = 0;
	this.length = source.length;
	this.capturesCount = 0;
};
$hxClasses["hre.RegExpParser"] = hre_RegExpParser;
hre_RegExpParser.__name__ = "hre.RegExpParser";
hre_RegExpParser.parse = function(pattern) {
	return new hre_RegExpParser(pattern).readPattern();
};
hre_RegExpParser.prototype = {
	source: null
	,currentIndex: null
	,length: null
	,capturesCount: null
	,isEndOfPattern: function() {
		if(this.peek()._hx_index == 0) {
			return true;
		} else {
			return false;
		}
	}
	,readPattern: function() {
		var alternatives = [];
		_hx_loop1: while(!this.isEndOfPattern()) {
			alternatives.push(this.readAlternative());
			var _g = this.peek();
			switch(_g._hx_index) {
			case 0:
				break _hx_loop1;
			case 1:
				var c = _g.character;
				if(c == "|") {
					this.currentIndex++;
				} else {
					throw haxe_Exception.thrown(new hre_RegExpSyntaxError("Unexpected character " + c,this.currentIndex,this.source));
				}
				break;
			}
		}
		return new hre_ast_Pattern(alternatives,this.capturesCount);
	}
	,isEndOfDisjunction: function() {
		var _g = this.peek();
		switch(_g._hx_index) {
		case 0:
			return true;
		case 1:
			var c = _g.character;
			return c == ")";
		}
	}
	,readDisjunction: function() {
		var alternatives = [];
		_hx_loop1: while(!this.isEndOfDisjunction()) {
			alternatives.push(this.readAlternative());
			var _g = this.peek();
			switch(_g._hx_index) {
			case 0:
				break _hx_loop1;
			case 1:
				var c = _g.character;
				switch(c) {
				case ")":
					break _hx_loop1;
				case "|":
					this.currentIndex++;
					break;
				default:
					throw haxe_Exception.thrown(new hre_RegExpSyntaxError("Unexpected character " + c,this.currentIndex,this.source));
				}
				break;
			}
		}
		return new hre_ast_Disjunction(alternatives);
	}
	,isEndOfAlternative: function() {
		var _g = this.peek();
		switch(_g._hx_index) {
		case 0:
			return true;
		case 1:
			var c = _g.character;
			if(c == "|" || c == ")") {
				return true;
			} else {
				return false;
			}
			break;
		}
	}
	,readAlternative: function() {
		var terms = [];
		while(!this.isEndOfAlternative()) terms.push(this.readTerm());
		return new hre_ast_Alternative(terms);
	}
	,readTerm: function() {
		if(this.readQuantifier() != null) {
			throw haxe_Exception.thrown(new hre_RegExpSyntaxError("There is nothing to repeat",this.currentIndex,this.source));
		}
		var oldCapturesCount = this.capturesCount;
		var assertionOrAtom;
		var _g = this.peek();
		switch(_g._hx_index) {
		case 0:
			throw haxe_Exception.thrown(new hre_RegExpSyntaxError("Unexpected end of text",this.currentIndex,this.source));
		case 1:
			var c = _g.character;
			switch(c) {
			case "$":
				this.currentIndex++;
				assertionOrAtom = haxe_ds_Either.Left(hre_ast_Assertion.EndOfText);
				break;
			case "(":
				assertionOrAtom = this.readGroup();
				break;
			case ".":
				this.currentIndex++;
				assertionOrAtom = haxe_ds_Either.Right(hre_ast_Atom.AnyCharacter);
				break;
			case "[":
				assertionOrAtom = haxe_ds_Either.Right(this.readCharacterClass());
				break;
			case "\\":
				assertionOrAtom = this.readEscapeTerm();
				break;
			case "^":
				this.currentIndex++;
				assertionOrAtom = haxe_ds_Either.Left(hre_ast_Assertion.StartOfText);
				break;
			case "|":
				throw haxe_Exception.thrown(new hre_RegExpSyntaxError("Unexpected syntax character |",this.currentIndex,this.source));
			default:
				this.currentIndex++;
				assertionOrAtom = haxe_ds_Either.Right(hre_ast_Atom.Literal(c));
			}
			break;
		}
		switch(assertionOrAtom._hx_index) {
		case 0:
			var assertion = assertionOrAtom.v;
			return hre_ast_Term.Assertion(assertion);
		case 1:
			var atom = assertionOrAtom.v;
			var quantifier = this.readQuantifier();
			if(quantifier == null) {
				return hre_ast_Term.Atom(atom);
			} else {
				return hre_ast_Term.QuantifiedAtom(atom,quantifier,oldCapturesCount,this.capturesCount);
			}
			break;
		}
	}
	,readEscape: function(inCharacterClass) {
		if(this.peekChar() != "\\") {
			throw haxe_Exception.thrown(new hre_RegExpSyntaxError("Invalid escape term, expected \\",this.currentIndex,this.source));
		}
		this.currentIndex++;
		var _g = this.peek();
		switch(_g._hx_index) {
		case 0:
			throw haxe_Exception.thrown(new hre_RegExpSyntaxError("Escape at the end of the pattern",this.currentIndex,this.source));
		case 1:
			var c = _g.character;
			var charCode = HxOverrides.cca(c,0);
			if(48 <= charCode && charCode <= 57) {
				if(charCode == 48) {
					this.currentIndex++;
					return hre_Escape.Literal(0);
				} else {
					if(inCharacterClass) {
						throw haxe_Exception.thrown(new hre_RegExpSyntaxError("Invalid decimal escape in character class",this.currentIndex,this.source));
					}
					var decimal = this.readDecimalDigits();
					var decimalLen = decimal.length;
					var decimalVal = decimal.value;
					return hre_Escape.Backreference(decimalVal);
				}
			} else {
				switch(c) {
				case "B":
					if(inCharacterClass) {
						throw haxe_Exception.thrown(new hre_RegExpSyntaxError("Invalid `\\B` escape in character class",this.currentIndex,this.source));
					}
					this.currentIndex++;
					return hre_Escape.NotWordBoundary;
				case "D":
					this.currentIndex++;
					return hre_Escape.NotDecimal;
				case "S":
					this.currentIndex++;
					return hre_Escape.NotSeparator;
				case "W":
					this.currentIndex++;
					return hre_Escape.NotWord;
				case "b":
					this.currentIndex++;
					if(inCharacterClass) {
						return hre_Escape.Literal(8);
					} else {
						return hre_Escape.WordBoundary;
					}
					break;
				case "c":
					this.currentIndex++;
					var controlLetter = this.peekChar();
					var controlLetterCode = HxOverrides.cca(controlLetter,0);
					if(!(65 <= controlLetterCode && controlLetterCode <= 90) && !(97 <= controlLetterCode && controlLetterCode <= 122)) {
						throw haxe_Exception.thrown(new hre_RegExpSyntaxError("Control letter must be in A-Za-z",this.currentIndex,this.source));
					}
					this.currentIndex++;
					return hre_Escape.Literal(controlLetterCode % 32);
				case "d":
					this.currentIndex++;
					return hre_Escape.Decimal;
				case "f":
					this.currentIndex++;
					return hre_Escape.Literal(12);
				case "n":
					this.currentIndex++;
					return hre_Escape.Literal(10);
				case "r":
					this.currentIndex++;
					return hre_Escape.Literal(13);
				case "s":
					this.currentIndex++;
					return hre_Escape.Separator;
				case "t":
					this.currentIndex++;
					return hre_Escape.Literal(9);
				case "u":
					this.currentIndex++;
					var codePoint;
					if(this.peekChar() == "{") {
						this.currentIndex++;
						var hexLiteral = this.readHexadecimal(4,-1);
						if(this.peekChar() != "}") {
							throw haxe_Exception.thrown(new hre_RegExpSyntaxError("Expected `}`",this.currentIndex,this.source));
						}
						this.currentIndex++;
						codePoint = hexLiteral.value;
					} else {
						codePoint = this.readHexadecimal(4,4).value;
					}
					if(codePoint > 1114111) {
						throw haxe_Exception.thrown(new hre_RegExpSyntaxError("Codepoint exceeds max value (0x10ffff)`",this.currentIndex,this.source));
					}
					return hre_Escape.Literal(codePoint);
				case "v":
					this.currentIndex++;
					return hre_Escape.Literal(11);
				case "w":
					this.currentIndex++;
					return hre_Escape.Word;
				case "x":
					this.currentIndex++;
					var hexLiteral = this.readHexadecimal(2,2);
					return hre_Escape.Literal(hexLiteral.value);
				default:
					this.currentIndex++;
					return hre_Escape.Literal(HxOverrides.cca(c,0));
				}
			}
			break;
		}
	}
	,readEscapeTerm: function() {
		var _g = this.readEscape(false);
		switch(_g._hx_index) {
		case 0:
			var codePoint = _g.codepoint;
			return haxe_ds_Either.Right(hre_ast_Atom.Literal(String.fromCodePoint(codePoint)));
		case 1:
			var captureId = _g.captureId;
			return haxe_ds_Either.Right(hre_ast_Atom.Backreference(captureId));
		case 2:
			return haxe_ds_Either.Right(hre_ast_Atom.Word);
		case 3:
			return haxe_ds_Either.Right(hre_ast_Atom.NotWord);
		case 4:
			return haxe_ds_Either.Right(hre_ast_Atom.Decimal);
		case 5:
			return haxe_ds_Either.Right(hre_ast_Atom.NotDecimal);
		case 6:
			return haxe_ds_Either.Right(hre_ast_Atom.Separator);
		case 7:
			return haxe_ds_Either.Right(hre_ast_Atom.NotSeparator);
		case 8:
			return haxe_ds_Either.Left(hre_ast_Assertion.WordBoundary);
		case 9:
			return haxe_ds_Either.Left(hre_ast_Assertion.NotWordBoundary);
		}
	}
	,readGroup: function() {
		if(this.peekChar() != "(") {
			throw haxe_Exception.thrown(new hre_RegExpSyntaxError("Invalid group, expected (",this.currentIndex,this.source));
		}
		this.currentIndex++;
		var kind = hre_GroupKind.Capture;
		var oldCaptureCount = this.capturesCount;
		var _g = this.peek();
		switch(_g._hx_index) {
		case 0:
			throw haxe_Exception.thrown(new hre_RegExpSyntaxError("Unterminated group",this.currentIndex,this.source));
		case 1:
			var c = _g.character;
			if(c == "?") {
				this.currentIndex++;
				var _g = this.peek();
				switch(_g._hx_index) {
				case 0:
					throw haxe_Exception.thrown(new hre_RegExpSyntaxError("Invalid group, expected modifier",this.currentIndex,this.source));
				case 1:
					var c = _g.character;
					switch(c) {
					case "!":
						kind = hre_GroupKind.NotFollowedBy;
						break;
					case ":":
						kind = hre_GroupKind.Simple;
						break;
					case "=":
						kind = hre_GroupKind.FollowedBy;
						break;
					default:
						throw haxe_Exception.thrown(new hre_RegExpSyntaxError("Invalid group, unknown modifier: " + c,this.currentIndex,this.source));
					}
					break;
				}
				this.currentIndex++;
			}
			break;
		}
		if(kind._hx_index == 0) {
			this.capturesCount++;
		}
		var disjunction = this.readDisjunction();
		var _g = this.peek();
		switch(_g._hx_index) {
		case 0:
			throw haxe_Exception.thrown(new hre_RegExpSyntaxError("Invalid group, unterminated group",this.currentIndex,this.source));
		case 1:
			var c = _g.character;
			if(c == ")") {
				this.currentIndex++;
			}
			break;
		}
		switch(kind._hx_index) {
		case 0:
			return haxe_ds_Either.Right(hre_ast_Atom.CaptureGroup(disjunction,oldCaptureCount));
		case 1:
			return haxe_ds_Either.Right(hre_ast_Atom.SimpleGroup(disjunction));
		case 2:
			return haxe_ds_Either.Left(hre_ast_Assertion.FollowedBy(disjunction));
		case 3:
			return haxe_ds_Either.Left(hre_ast_Assertion.NotFollowedBy(disjunction));
		}
	}
	,isEndOfCharacterClass: function() {
		var _g = this.peek();
		switch(_g._hx_index) {
		case 0:
			return false;
		case 1:
			var c = _g.character;
			return c == "]";
		}
	}
	,readCharacterClass: function() {
		if(this.peekChar() != "[") {
			throw haxe_Exception.thrown(new hre_RegExpSyntaxError("Invalid character class, expected [",this.currentIndex,this.source));
		}
		this.currentIndex++;
		var inverted;
		var _g = this.peek();
		switch(_g._hx_index) {
		case 0:
			throw haxe_Exception.thrown(new hre_RegExpSyntaxError("Unterminated character class",this.currentIndex,this.source));
		case 1:
			var c = _g.character;
			if(c == "^") {
				this.currentIndex++;
				inverted = true;
			} else {
				inverted = false;
			}
			break;
		}
		var ranges = [];
		while(!this.isEndOfCharacterClass()) ranges.push(this.readCharacterClassRange(ranges.length == 0));
		var _g = this.peek();
		switch(_g._hx_index) {
		case 0:
			throw haxe_Exception.thrown(new hre_RegExpSyntaxError("Unterminated character class",this.currentIndex,this.source));
		case 1:
			var c = _g.character;
			if(c == "]") {
				this.currentIndex++;
			}
			break;
		}
		return hre_ast_Atom.Class(new hre_ast_CharacterClass(inverted,ranges));
	}
	,readCharacterClassRange: function(firstRange) {
		var start = this.readCharacterClassAtom(!firstRange);
		if(start == null) {
			throw haxe_Exception.thrown(new hre_RegExpSyntaxError("Expected character class atom",this.currentIndex,this.source));
		}
		var c = this.peekChar();
		if(c != "-") {
			return hre_ast_CharacterClassRange.Simple(start);
		}
		if(this.peekChar(1) == "]") {
			return hre_ast_CharacterClassRange.Simple(start);
		}
		this.currentIndex++;
		var end = this.readCharacterClassAtom(false);
		if(end == null) {
			throw haxe_Exception.thrown(new hre_RegExpSyntaxError("Invalid range in character class",this.currentIndex,this.source));
		}
		var startCharacter;
		if(start._hx_index == 0) {
			var c = start.value;
			startCharacter = c;
		} else {
			throw haxe_Exception.thrown(new hre_RegExpSyntaxError("Start of range is not a literal",this.currentIndex,this.source));
		}
		var endCharacter;
		if(end._hx_index == 0) {
			var c = end.value;
			endCharacter = c;
		} else {
			throw haxe_Exception.thrown(new hre_RegExpSyntaxError("End of range is not a literal",this.currentIndex,this.source));
		}
		if(HxOverrides.cca(startCharacter,0) > HxOverrides.cca(endCharacter,0)) {
			throw haxe_Exception.thrown(new hre_RegExpSyntaxError("Invalid range",this.currentIndex,this.source));
		}
		return hre_ast_CharacterClassRange.Range(startCharacter,endCharacter);
	}
	,readCharacterClassAtom: function(noDash) {
		var _g = this.peek();
		switch(_g._hx_index) {
		case 0:
			return null;
		case 1:
			var c = _g.character;
			switch(c) {
			case "-":
				if(noDash) {
					return null;
				}
				this.currentIndex++;
				return hre_ast_CharacterClassAtom.Literal("-");
			case "\\":
				return this.readEscapedCharacterClassAtom();
			case "]":
				return null;
			default:
				this.currentIndex++;
				return hre_ast_CharacterClassAtom.Literal(c);
			}
			break;
		}
	}
	,readEscapedCharacterClassAtom: function() {
		var $escape = this.readEscape(true);
		switch($escape._hx_index) {
		case 0:
			var codePoint = $escape.codepoint;
			return hre_ast_CharacterClassAtom.Literal(String.fromCodePoint(codePoint));
		case 2:
			return hre_ast_CharacterClassAtom.Word;
		case 3:
			return hre_ast_CharacterClassAtom.NotWord;
		case 4:
			return hre_ast_CharacterClassAtom.Decimal;
		case 5:
			return hre_ast_CharacterClassAtom.NotDecimal;
		case 6:
			return hre_ast_CharacterClassAtom.Separator;
		case 7:
			return hre_ast_CharacterClassAtom.NotSeparator;
		default:
			throw haxe_Exception.thrown(new hre_RegExpSyntaxError("Unexpected escape in character class: " + $hxEnums[$escape.__enum__].__constructs__[$escape._hx_index]._hx_name,this.currentIndex,this.source));
		}
	}
	,isGreedyQuantifier: function() {
		var _g = this.peek();
		if(_g._hx_index == 1) {
			var c = _g.character;
			return c != "?";
		} else {
			return true;
		}
	}
	,readQuantifierPrefix: function() {
		var _g = this.peek();
		if(_g._hx_index == 1) {
			var c = _g.character;
			switch(c) {
			case "*":
				this.currentIndex++;
				return new hre_QuantifierPrefix(0,-1);
			case "+":
				this.currentIndex++;
				return new hre_QuantifierPrefix(1,-1);
			case "?":
				this.currentIndex++;
				return new hre_QuantifierPrefix(0,1);
			case "{":
				return this.readQuantifierBlock();
			default:
				return null;
			}
		} else {
			return null;
		}
	}
	,readQuantifierBlock: function() {
		var oldIndex = this.currentIndex;
		if(this.peekChar() != "{") {
			return null;
		}
		this.currentIndex++;
		var min = this.readDecimalDigits();
		var minLen = min.length;
		var minVal = min.value;
		if(minLen == 0) {
			this.currentIndex = oldIndex;
			return null;
		}
		var _g = this.peek();
		switch(_g._hx_index) {
		case 0:
			this.currentIndex = oldIndex;
			return null;
		case 1:
			var c = _g.character;
			switch(c) {
			case ",":
				this.currentIndex++;
				break;
			case "}":
				this.currentIndex++;
				return new hre_QuantifierPrefix(minVal,minVal);
			default:
				this.currentIndex = oldIndex;
				return null;
			}
			break;
		}
		var max = this.readDecimalDigits();
		var maxLen = max.length;
		var maxVal = max.value;
		var _g = this.peek();
		switch(_g._hx_index) {
		case 0:
			this.currentIndex = oldIndex;
			return null;
		case 1:
			var c = _g.character;
			if(c != "}") {
				this.currentIndex = oldIndex;
				return null;
			}
			this.currentIndex++;
			if(maxLen == 0) {
				return new hre_QuantifierPrefix(minVal,-1);
			} else {
				if(maxVal < minVal) {
					throw haxe_Exception.thrown(new hre_RegExpSyntaxError("Max is finite and less than min",this.currentIndex,this.source));
				}
				return new hre_QuantifierPrefix(minVal,maxVal);
			}
			break;
		}
	}
	,readQuantifier: function() {
		var prefix = this.readQuantifierPrefix();
		if(prefix == null) {
			return null;
		}
		var greedy = this.isGreedyQuantifier();
		if(!greedy) {
			this.currentIndex++;
		}
		return new hre_ast_Quantifier(prefix.min,prefix.max,greedy);
	}
	,readDecimalDigits: function() {
		var len = 0;
		var val = 0;
		while(true) {
			var _g = this.peek();
			if(_g._hx_index == 1) {
				var c = _g.character;
				var charCode = HxOverrides.cca(c,0);
				if(48 <= charCode && charCode <= 57) {
					this.currentIndex++;
					++len;
					val = 10 * val + (charCode - 48);
				} else {
					break;
				}
			} else {
				break;
			}
		}
		return new hre_IntLiteral(len,val);
	}
	,readHexadecimal: function(minLen,maxLen) {
		var len = 0;
		var val = 0;
		while(!(maxLen == -1 && len >= maxLen)) {
			var _g = this.peek();
			if(_g._hx_index == 1) {
				var c = _g.character;
				var charCode = HxOverrides.cca(c,0);
				if(48 <= charCode && charCode <= 57) {
					this.currentIndex++;
					++len;
					val = 16 * val + (charCode - 48);
				} else if(65 <= charCode && charCode <= 70) {
					this.currentIndex++;
					++len;
					val = 16 * val + (10 + charCode - 65);
				} else if(97 <= charCode && charCode <= 102) {
					this.currentIndex++;
					++len;
					val = 16 * val + (10 + charCode - 97);
				} else {
					break;
				}
			} else {
				break;
			}
		}
		if(len < minLen) {
			throw haxe_Exception.thrown(new hre_RegExpSyntaxError("Not enough hex digits",this.currentIndex,this.source));
		}
		return new hre_IntLiteral(len,val);
	}
	,symbolAt: function(index) {
		if(index < this.length) {
			return hre_tokens_Symbol.Character(this.source.charAt(index));
		} else {
			return hre_tokens_Symbol.EndOfText;
		}
	}
	,charAt: function(index) {
		if(index >= this.length) {
			throw haxe_Exception.thrown(new hre_RegExpSyntaxError("Unexpected end of text",this.currentIndex,this.source));
		}
		return this.source.charAt(index);
	}
	,peek: function(lookahead) {
		if(lookahead == null) {
			lookahead = 0;
		}
		return this.symbolAt(this.currentIndex + lookahead);
	}
	,peekChar: function(lookahead) {
		if(lookahead == null) {
			lookahead = 0;
		}
		return this.charAt(this.currentIndex + lookahead);
	}
	,__class__: hre_RegExpParser
};
var hre_GroupKind = $hxEnums["hre.GroupKind"] = { __ename__:"hre.GroupKind",__constructs__:null
	,Capture: {_hx_name:"Capture",_hx_index:0,__enum__:"hre.GroupKind",toString:$estr}
	,Simple: {_hx_name:"Simple",_hx_index:1,__enum__:"hre.GroupKind",toString:$estr}
	,FollowedBy: {_hx_name:"FollowedBy",_hx_index:2,__enum__:"hre.GroupKind",toString:$estr}
	,NotFollowedBy: {_hx_name:"NotFollowedBy",_hx_index:3,__enum__:"hre.GroupKind",toString:$estr}
};
hre_GroupKind.__constructs__ = [hre_GroupKind.Capture,hre_GroupKind.Simple,hre_GroupKind.FollowedBy,hre_GroupKind.NotFollowedBy];
var hre_ast_Alternative = function(expressions) {
	this.terms = expressions;
};
$hxClasses["hre.ast.Alternative"] = hre_ast_Alternative;
hre_ast_Alternative.__name__ = "hre.ast.Alternative";
hre_ast_Alternative.prototype = {
	terms: null
	,__class__: hre_ast_Alternative
};
var hre_ast_Assertion = $hxEnums["hre.ast.Assertion"] = { __ename__:"hre.ast.Assertion",__constructs__:null
	,StartOfText: {_hx_name:"StartOfText",_hx_index:0,__enum__:"hre.ast.Assertion",toString:$estr}
	,EndOfText: {_hx_name:"EndOfText",_hx_index:1,__enum__:"hre.ast.Assertion",toString:$estr}
	,WordBoundary: {_hx_name:"WordBoundary",_hx_index:2,__enum__:"hre.ast.Assertion",toString:$estr}
	,NotWordBoundary: {_hx_name:"NotWordBoundary",_hx_index:3,__enum__:"hre.ast.Assertion",toString:$estr}
	,FollowedBy: ($_=function(disjunction) { return {_hx_index:4,disjunction:disjunction,__enum__:"hre.ast.Assertion",toString:$estr}; },$_._hx_name="FollowedBy",$_.__params__ = ["disjunction"],$_)
	,NotFollowedBy: ($_=function(disjunction) { return {_hx_index:5,disjunction:disjunction,__enum__:"hre.ast.Assertion",toString:$estr}; },$_._hx_name="NotFollowedBy",$_.__params__ = ["disjunction"],$_)
};
hre_ast_Assertion.__constructs__ = [hre_ast_Assertion.StartOfText,hre_ast_Assertion.EndOfText,hre_ast_Assertion.WordBoundary,hre_ast_Assertion.NotWordBoundary,hre_ast_Assertion.FollowedBy,hre_ast_Assertion.NotFollowedBy];
var hre_ast_Atom = $hxEnums["hre.ast.Atom"] = { __ename__:"hre.ast.Atom",__constructs__:null
	,AnyCharacter: {_hx_name:"AnyCharacter",_hx_index:0,__enum__:"hre.ast.Atom",toString:$estr}
	,Decimal: {_hx_name:"Decimal",_hx_index:1,__enum__:"hre.ast.Atom",toString:$estr}
	,NotDecimal: {_hx_name:"NotDecimal",_hx_index:2,__enum__:"hre.ast.Atom",toString:$estr}
	,Separator: {_hx_name:"Separator",_hx_index:3,__enum__:"hre.ast.Atom",toString:$estr}
	,NotSeparator: {_hx_name:"NotSeparator",_hx_index:4,__enum__:"hre.ast.Atom",toString:$estr}
	,Word: {_hx_name:"Word",_hx_index:5,__enum__:"hre.ast.Atom",toString:$estr}
	,NotWord: {_hx_name:"NotWord",_hx_index:6,__enum__:"hre.ast.Atom",toString:$estr}
	,Backreference: ($_=function(captureId) { return {_hx_index:7,captureId:captureId,__enum__:"hre.ast.Atom",toString:$estr}; },$_._hx_name="Backreference",$_.__params__ = ["captureId"],$_)
	,Literal: ($_=function(literal) { return {_hx_index:8,literal:literal,__enum__:"hre.ast.Atom",toString:$estr}; },$_._hx_name="Literal",$_.__params__ = ["literal"],$_)
	,Class: ($_=function(characterClass) { return {_hx_index:9,characterClass:characterClass,__enum__:"hre.ast.Atom",toString:$estr}; },$_._hx_name="Class",$_.__params__ = ["characterClass"],$_)
	,CaptureGroup: ($_=function(disjunction,captureIndex) { return {_hx_index:10,disjunction:disjunction,captureIndex:captureIndex,__enum__:"hre.ast.Atom",toString:$estr}; },$_._hx_name="CaptureGroup",$_.__params__ = ["disjunction","captureIndex"],$_)
	,SimpleGroup: ($_=function(disjunction) { return {_hx_index:11,disjunction:disjunction,__enum__:"hre.ast.Atom",toString:$estr}; },$_._hx_name="SimpleGroup",$_.__params__ = ["disjunction"],$_)
};
hre_ast_Atom.__constructs__ = [hre_ast_Atom.AnyCharacter,hre_ast_Atom.Decimal,hre_ast_Atom.NotDecimal,hre_ast_Atom.Separator,hre_ast_Atom.NotSeparator,hre_ast_Atom.Word,hre_ast_Atom.NotWord,hre_ast_Atom.Backreference,hre_ast_Atom.Literal,hre_ast_Atom.Class,hre_ast_Atom.CaptureGroup,hre_ast_Atom.SimpleGroup];
var hre_ast_CharacterClass = function(inverted,ranges) {
	this.inverted = inverted;
	this.ranges = ranges;
};
$hxClasses["hre.ast.CharacterClass"] = hre_ast_CharacterClass;
hre_ast_CharacterClass.__name__ = "hre.ast.CharacterClass";
hre_ast_CharacterClass.prototype = {
	inverted: null
	,ranges: null
	,__class__: hre_ast_CharacterClass
};
var hre_ast_CharacterClassAtom = $hxEnums["hre.ast.CharacterClassAtom"] = { __ename__:"hre.ast.CharacterClassAtom",__constructs__:null
	,Literal: ($_=function(value) { return {_hx_index:0,value:value,__enum__:"hre.ast.CharacterClassAtom",toString:$estr}; },$_._hx_name="Literal",$_.__params__ = ["value"],$_)
	,Decimal: {_hx_name:"Decimal",_hx_index:1,__enum__:"hre.ast.CharacterClassAtom",toString:$estr}
	,NotDecimal: {_hx_name:"NotDecimal",_hx_index:2,__enum__:"hre.ast.CharacterClassAtom",toString:$estr}
	,Separator: {_hx_name:"Separator",_hx_index:3,__enum__:"hre.ast.CharacterClassAtom",toString:$estr}
	,NotSeparator: {_hx_name:"NotSeparator",_hx_index:4,__enum__:"hre.ast.CharacterClassAtom",toString:$estr}
	,Word: {_hx_name:"Word",_hx_index:5,__enum__:"hre.ast.CharacterClassAtom",toString:$estr}
	,NotWord: {_hx_name:"NotWord",_hx_index:6,__enum__:"hre.ast.CharacterClassAtom",toString:$estr}
};
hre_ast_CharacterClassAtom.__constructs__ = [hre_ast_CharacterClassAtom.Literal,hre_ast_CharacterClassAtom.Decimal,hre_ast_CharacterClassAtom.NotDecimal,hre_ast_CharacterClassAtom.Separator,hre_ast_CharacterClassAtom.NotSeparator,hre_ast_CharacterClassAtom.Word,hre_ast_CharacterClassAtom.NotWord];
var hre_ast_CharacterClassRange = $hxEnums["hre.ast.CharacterClassRange"] = { __ename__:"hre.ast.CharacterClassRange",__constructs__:null
	,Range: ($_=function(start,end) { return {_hx_index:0,start:start,end:end,__enum__:"hre.ast.CharacterClassRange",toString:$estr}; },$_._hx_name="Range",$_.__params__ = ["start","end"],$_)
	,Simple: ($_=function(value) { return {_hx_index:1,value:value,__enum__:"hre.ast.CharacterClassRange",toString:$estr}; },$_._hx_name="Simple",$_.__params__ = ["value"],$_)
};
hre_ast_CharacterClassRange.__constructs__ = [hre_ast_CharacterClassRange.Range,hre_ast_CharacterClassRange.Simple];
var hre_ast_Disjunction = function(alternatives) {
	this.alternatives = alternatives;
};
$hxClasses["hre.ast.Disjunction"] = hre_ast_Disjunction;
hre_ast_Disjunction.__name__ = "hre.ast.Disjunction";
hre_ast_Disjunction.prototype = {
	alternatives: null
	,__class__: hre_ast_Disjunction
};
var hre_ast_Pattern = function(alternatives,captures) {
	hre_ast_Disjunction.call(this,alternatives);
	this.captures = captures;
};
$hxClasses["hre.ast.Pattern"] = hre_ast_Pattern;
hre_ast_Pattern.__name__ = "hre.ast.Pattern";
hre_ast_Pattern.__super__ = hre_ast_Disjunction;
hre_ast_Pattern.prototype = $extend(hre_ast_Disjunction.prototype,{
	captures: null
	,__class__: hre_ast_Pattern
});
var hre_ast_Quantifier = function(min,max,greedy) {
	this.min = min;
	this.max = max;
	this.greedy = greedy;
};
$hxClasses["hre.ast.Quantifier"] = hre_ast_Quantifier;
hre_ast_Quantifier.__name__ = "hre.ast.Quantifier";
hre_ast_Quantifier.prototype = {
	min: null
	,max: null
	,greedy: null
	,__class__: hre_ast_Quantifier
};
var hre_ast_Term = $hxEnums["hre.ast.Term"] = { __ename__:"hre.ast.Term",__constructs__:null
	,Assertion: ($_=function(assertion) { return {_hx_index:0,assertion:assertion,__enum__:"hre.ast.Term",toString:$estr}; },$_._hx_name="Assertion",$_.__params__ = ["assertion"],$_)
	,Atom: ($_=function(atom) { return {_hx_index:1,atom:atom,__enum__:"hre.ast.Term",toString:$estr}; },$_._hx_name="Atom",$_.__params__ = ["atom"],$_)
	,QuantifiedAtom: ($_=function(atom,quantifier,capturesStartIndex,capturesEndIndex) { return {_hx_index:2,atom:atom,quantifier:quantifier,capturesStartIndex:capturesStartIndex,capturesEndIndex:capturesEndIndex,__enum__:"hre.ast.Term",toString:$estr}; },$_._hx_name="QuantifiedAtom",$_.__params__ = ["atom","quantifier","capturesStartIndex","capturesEndIndex"],$_)
};
hre_ast_Term.__constructs__ = [hre_ast_Term.Assertion,hre_ast_Term.Atom,hre_ast_Term.QuantifiedAtom];
var hre_tokens_Symbol = $hxEnums["hre.tokens.Symbol"] = { __ename__:"hre.tokens.Symbol",__constructs__:null
	,EndOfText: {_hx_name:"EndOfText",_hx_index:0,__enum__:"hre.tokens.Symbol",toString:$estr}
	,Character: ($_=function(character) { return {_hx_index:1,character:character,__enum__:"hre.tokens.Symbol",toString:$estr}; },$_._hx_name="Character",$_.__params__ = ["character"],$_)
};
hre_tokens_Symbol.__constructs__ = [hre_tokens_Symbol.EndOfText,hre_tokens_Symbol.Character];
var hx_files_GlobPatterns = function() { };
$hxClasses["hx.files.GlobPatterns"] = hx_files_GlobPatterns;
hx_files_GlobPatterns.__name__ = "hx.files.GlobPatterns";
hx_files_GlobPatterns.toEReg = function(globPattern,regexOptions) {
	if(regexOptions == null) {
		regexOptions = "";
	}
	var str = hx_files_GlobPatterns.toRegEx(globPattern);
	var opt = regexOptions;
	if(opt == null) {
		opt = "";
	}
	if(str == null) {
		return null;
	} else {
		return new EReg(str,opt);
	}
};
hx_files_GlobPatterns.toPattern = function(globPattern,options) {
	var str = hx_files_GlobPatterns.toRegEx(globPattern);
	if(str == null) {
		return null;
	} else {
		return hx_strings_Pattern.compile(str,options);
	}
};
hx_files_GlobPatterns.toRegEx = function(globPattern) {
	if(globPattern == null || globPattern.length == 0) {
		return globPattern;
	}
	var sb = new hx_strings_StringBuilder();
	sb.addChar(94);
	var chars = hx_strings_Strings.toChars(globPattern);
	var charsLenMinus1 = chars.length - 1;
	var chPrev = -1;
	var groupDepth = 0;
	var idx = -1;
	while(idx < charsLenMinus1) {
		++idx;
		var ch = chars[idx];
		switch(ch) {
		case 33:
			if(chPrev == 91) {
				sb.addChar(94);
			} else {
				sb.addChar(ch);
			}
			break;
		case 36:
			sb.add("\\$");
			break;
		case 40:
			sb.add("\\(");
			break;
		case 41:
			sb.add("\\)");
			break;
		case 42:
			if(chars[idx + 1] == 42) {
				if(chars[idx + 2] == 47) {
					if(chars[idx + 3] == 42) {
						sb.add(".*");
						idx += 3;
					} else {
						sb.add("(.*[\\/\\\\])?");
						idx += 2;
						ch = 47;
					}
				} else {
					sb.add(".*");
					++idx;
				}
			} else {
				sb.add("[^\\\\^\\/]*");
			}
			break;
		case 44:
			if(chPrev == 92) {
				sb.add("\\,");
			} else {
				sb.addChar(groupDepth > 0 ? 124 : 44);
			}
			break;
		case 46:
			sb.add("\\.");
			break;
		case 47:
			sb.add("[\\/\\\\]");
			break;
		case 63:
			if(chPrev == 92) {
				sb.add("\\?");
			} else {
				sb.add("[^\\\\^\\/]");
			}
			break;
		case 92:
			if(chPrev == 92) {
				sb.add("\\\\");
			}
			break;
		case 123:
			if(chPrev == 92) {
				sb.add("\\{");
			} else {
				++groupDepth;
				sb.addChar(40);
			}
			break;
		case 125:
			if(chPrev == 92) {
				sb.add("\\}");
			} else {
				--groupDepth;
				sb.addChar(41);
			}
			break;
		default:
			if(chPrev == 92) {
				sb.addChar(92);
			}
			sb.addChar(ch);
		}
		chPrev = ch;
	}
	sb.addChar(36);
	return sb.toString();
};
var hx_strings_AnyAsString = {};
hx_strings_AnyAsString.fromBool = function(value) {
	if(value) {
		return "true";
	} else {
		return "false";
	}
};
hx_strings_AnyAsString.fromAny = function(value) {
	return Std.string(value);
};
var hx_strings__$Char_CharCaseMapper = function() {
	this.mapL2U = new haxe_ds_IntMap();
	this.mapU2L = new haxe_ds_IntMap();
	this._addCaseMapping(97,65);
	this._addCaseMapping(98,66);
	this._addCaseMapping(99,67);
	this._addCaseMapping(100,68);
	this._addCaseMapping(101,69);
	this._addCaseMapping(102,70);
	this._addCaseMapping(103,71);
	this._addCaseMapping(104,72);
	this._addCaseMapping(105,73);
	this._addCaseMapping(106,74);
	this._addCaseMapping(107,75);
	this._addCaseMapping(108,76);
	this._addCaseMapping(109,77);
	this._addCaseMapping(110,78);
	this._addCaseMapping(111,79);
	this._addCaseMapping(112,80);
	this._addCaseMapping(113,81);
	this._addCaseMapping(114,82);
	this._addCaseMapping(115,83);
	this._addCaseMapping(116,84);
	this._addCaseMapping(117,85);
	this._addCaseMapping(118,86);
	this._addCaseMapping(119,87);
	this._addCaseMapping(120,88);
	this._addCaseMapping(121,89);
	this._addCaseMapping(122,90);
	this._addCaseMapping(224,192);
	this._addCaseMapping(225,193);
	this._addCaseMapping(226,194);
	this._addCaseMapping(227,195);
	this._addCaseMapping(228,196);
	this._addCaseMapping(229,197);
	this._addCaseMapping(230,198);
	this._addCaseMapping(231,199);
	this._addCaseMapping(232,200);
	this._addCaseMapping(233,201);
	this._addCaseMapping(234,202);
	this._addCaseMapping(235,203);
	this._addCaseMapping(236,204);
	this._addCaseMapping(237,205);
	this._addCaseMapping(238,206);
	this._addCaseMapping(239,207);
	this._addCaseMapping(240,208);
	this._addCaseMapping(241,209);
	this._addCaseMapping(242,210);
	this._addCaseMapping(243,211);
	this._addCaseMapping(244,212);
	this._addCaseMapping(245,213);
	this._addCaseMapping(246,214);
	this._addCaseMapping(248,216);
	this._addCaseMapping(249,217);
	this._addCaseMapping(250,218);
	this._addCaseMapping(251,219);
	this._addCaseMapping(252,220);
	this._addCaseMapping(253,221);
	this._addCaseMapping(254,222);
	this._addCaseMapping(255,376);
	this._addCaseMapping(257,256);
	this._addCaseMapping(259,258);
	this._addCaseMapping(261,260);
	this._addCaseMapping(263,262);
	this._addCaseMapping(265,264);
	this._addCaseMapping(267,266);
	this._addCaseMapping(269,268);
	this._addCaseMapping(271,270);
	this._addCaseMapping(273,272);
	this._addCaseMapping(275,274);
	this._addCaseMapping(277,276);
	this._addCaseMapping(279,278);
	this._addCaseMapping(281,280);
	this._addCaseMapping(283,282);
	this._addCaseMapping(285,284);
	this._addCaseMapping(287,286);
	this._addCaseMapping(289,288);
	this._addCaseMapping(291,290);
	this._addCaseMapping(293,292);
	this._addCaseMapping(295,294);
	this._addCaseMapping(297,296);
	this._addCaseMapping(299,298);
	this._addCaseMapping(301,300);
	this._addCaseMapping(303,302);
	this._addCaseMapping(305,73);
	this._addCaseMapping(307,306);
	this._addCaseMapping(309,308);
	this._addCaseMapping(311,310);
	this._addCaseMapping(314,313);
	this._addCaseMapping(316,315);
	this._addCaseMapping(318,317);
	this._addCaseMapping(320,319);
	this._addCaseMapping(322,321);
	this._addCaseMapping(324,323);
	this._addCaseMapping(326,325);
	this._addCaseMapping(328,327);
	this._addCaseMapping(331,330);
	this._addCaseMapping(333,332);
	this._addCaseMapping(335,334);
	this._addCaseMapping(337,336);
	this._addCaseMapping(339,338);
	this._addCaseMapping(341,340);
	this._addCaseMapping(343,342);
	this._addCaseMapping(345,344);
	this._addCaseMapping(347,346);
	this._addCaseMapping(349,348);
	this._addCaseMapping(351,350);
	this._addCaseMapping(353,352);
	this._addCaseMapping(355,354);
	this._addCaseMapping(357,356);
	this._addCaseMapping(359,358);
	this._addCaseMapping(361,360);
	this._addCaseMapping(363,362);
	this._addCaseMapping(365,364);
	this._addCaseMapping(367,366);
	this._addCaseMapping(369,368);
	this._addCaseMapping(371,370);
	this._addCaseMapping(373,372);
	this._addCaseMapping(375,374);
	this._addCaseMapping(378,377);
	this._addCaseMapping(380,379);
	this._addCaseMapping(382,381);
	this._addCaseMapping(387,386);
	this._addCaseMapping(389,388);
	this._addCaseMapping(392,391);
	this._addCaseMapping(396,395);
	this._addCaseMapping(402,401);
	this._addCaseMapping(409,408);
	this._addCaseMapping(417,416);
	this._addCaseMapping(419,418);
	this._addCaseMapping(421,420);
	this._addCaseMapping(424,423);
	this._addCaseMapping(429,428);
	this._addCaseMapping(432,431);
	this._addCaseMapping(436,435);
	this._addCaseMapping(438,437);
	this._addCaseMapping(441,440);
	this._addCaseMapping(445,444);
	this._addCaseMapping(454,452);
	this._addCaseMapping(457,455);
	this._addCaseMapping(460,458);
	this._addCaseMapping(462,461);
	this._addCaseMapping(464,463);
	this._addCaseMapping(466,465);
	this._addCaseMapping(468,467);
	this._addCaseMapping(470,469);
	this._addCaseMapping(472,471);
	this._addCaseMapping(474,473);
	this._addCaseMapping(476,475);
	this._addCaseMapping(479,478);
	this._addCaseMapping(481,480);
	this._addCaseMapping(483,482);
	this._addCaseMapping(485,484);
	this._addCaseMapping(487,486);
	this._addCaseMapping(489,488);
	this._addCaseMapping(491,490);
	this._addCaseMapping(493,492);
	this._addCaseMapping(495,494);
	this._addCaseMapping(499,497);
	this._addCaseMapping(501,500);
	this._addCaseMapping(507,506);
	this._addCaseMapping(509,508);
	this._addCaseMapping(511,510);
	this._addCaseMapping(513,512);
	this._addCaseMapping(515,514);
	this._addCaseMapping(517,516);
	this._addCaseMapping(519,518);
	this._addCaseMapping(521,520);
	this._addCaseMapping(523,522);
	this._addCaseMapping(525,524);
	this._addCaseMapping(527,526);
	this._addCaseMapping(529,528);
	this._addCaseMapping(531,530);
	this._addCaseMapping(533,532);
	this._addCaseMapping(535,534);
	this._addCaseMapping(595,385);
	this._addCaseMapping(596,390);
	this._addCaseMapping(599,394);
	this._addCaseMapping(600,398);
	this._addCaseMapping(601,399);
	this._addCaseMapping(603,400);
	this._addCaseMapping(608,403);
	this._addCaseMapping(611,404);
	this._addCaseMapping(616,407);
	this._addCaseMapping(617,406);
	this._addCaseMapping(623,412);
	this._addCaseMapping(626,413);
	this._addCaseMapping(629,415);
	this._addCaseMapping(643,425);
	this._addCaseMapping(648,430);
	this._addCaseMapping(650,433);
	this._addCaseMapping(651,434);
	this._addCaseMapping(658,439);
	this._addCaseMapping(924,181);
	this._addCaseMapping(940,902);
	this._addCaseMapping(941,904);
	this._addCaseMapping(942,905);
	this._addCaseMapping(943,906);
	this._addCaseMapping(945,913);
	this._addCaseMapping(946,914);
	this._addCaseMapping(947,915);
	this._addCaseMapping(948,916);
	this._addCaseMapping(949,917);
	this._addCaseMapping(950,918);
	this._addCaseMapping(951,919);
	this._addCaseMapping(952,920);
	this._addCaseMapping(953,921);
	this._addCaseMapping(954,922);
	this._addCaseMapping(955,923);
	this._addCaseMapping(956,924);
	this._addCaseMapping(957,925);
	this._addCaseMapping(958,926);
	this._addCaseMapping(959,927);
	this._addCaseMapping(960,928);
	this._addCaseMapping(961,929);
	this._addCaseMapping(963,931);
	this._addCaseMapping(964,932);
	this._addCaseMapping(965,933);
	this._addCaseMapping(966,934);
	this._addCaseMapping(967,935);
	this._addCaseMapping(968,936);
	this._addCaseMapping(969,937);
	this._addCaseMapping(970,938);
	this._addCaseMapping(971,939);
	this._addCaseMapping(972,908);
	this._addCaseMapping(973,910);
	this._addCaseMapping(974,911);
	this._addCaseMapping(995,994);
	this._addCaseMapping(997,996);
	this._addCaseMapping(999,998);
	this._addCaseMapping(1001,1000);
	this._addCaseMapping(1003,1002);
	this._addCaseMapping(1005,1004);
	this._addCaseMapping(1007,1006);
	this._addCaseMapping(1072,1040);
	this._addCaseMapping(1073,1041);
	this._addCaseMapping(1074,1042);
	this._addCaseMapping(1075,1043);
	this._addCaseMapping(1076,1044);
	this._addCaseMapping(1077,1045);
	this._addCaseMapping(1078,1046);
	this._addCaseMapping(1079,1047);
	this._addCaseMapping(1080,1048);
	this._addCaseMapping(1081,1049);
	this._addCaseMapping(1082,1050);
	this._addCaseMapping(1083,1051);
	this._addCaseMapping(1084,1052);
	this._addCaseMapping(1085,1053);
	this._addCaseMapping(1086,1054);
	this._addCaseMapping(1087,1055);
	this._addCaseMapping(1088,1056);
	this._addCaseMapping(1089,1057);
	this._addCaseMapping(1090,1058);
	this._addCaseMapping(1091,1059);
	this._addCaseMapping(1092,1060);
	this._addCaseMapping(1093,1061);
	this._addCaseMapping(1094,1062);
	this._addCaseMapping(1095,1063);
	this._addCaseMapping(1096,1064);
	this._addCaseMapping(1097,1065);
	this._addCaseMapping(1098,1066);
	this._addCaseMapping(1099,1067);
	this._addCaseMapping(1100,1068);
	this._addCaseMapping(1101,1069);
	this._addCaseMapping(1102,1070);
	this._addCaseMapping(1103,1071);
	this._addCaseMapping(1105,1025);
	this._addCaseMapping(1106,1026);
	this._addCaseMapping(1107,1027);
	this._addCaseMapping(1108,1028);
	this._addCaseMapping(1109,1029);
	this._addCaseMapping(1110,1030);
	this._addCaseMapping(1111,1031);
	this._addCaseMapping(1112,1032);
	this._addCaseMapping(1113,1033);
	this._addCaseMapping(1114,1034);
	this._addCaseMapping(1115,1035);
	this._addCaseMapping(1116,1036);
	this._addCaseMapping(1118,1038);
	this._addCaseMapping(1119,1039);
	this._addCaseMapping(1121,1120);
	this._addCaseMapping(1123,1122);
	this._addCaseMapping(1125,1124);
	this._addCaseMapping(1127,1126);
	this._addCaseMapping(1129,1128);
	this._addCaseMapping(1131,1130);
	this._addCaseMapping(1133,1132);
	this._addCaseMapping(1135,1134);
	this._addCaseMapping(1137,1136);
	this._addCaseMapping(1139,1138);
	this._addCaseMapping(1141,1140);
	this._addCaseMapping(1143,1142);
	this._addCaseMapping(1145,1144);
	this._addCaseMapping(1147,1146);
	this._addCaseMapping(1149,1148);
	this._addCaseMapping(1151,1150);
	this._addCaseMapping(1153,1152);
	this._addCaseMapping(1169,1168);
	this._addCaseMapping(1171,1170);
	this._addCaseMapping(1173,1172);
	this._addCaseMapping(1175,1174);
	this._addCaseMapping(1177,1176);
	this._addCaseMapping(1179,1178);
	this._addCaseMapping(1181,1180);
	this._addCaseMapping(1183,1182);
	this._addCaseMapping(1185,1184);
	this._addCaseMapping(1187,1186);
	this._addCaseMapping(1189,1188);
	this._addCaseMapping(1191,1190);
	this._addCaseMapping(1193,1192);
	this._addCaseMapping(1195,1194);
	this._addCaseMapping(1197,1196);
	this._addCaseMapping(1199,1198);
	this._addCaseMapping(1201,1200);
	this._addCaseMapping(1203,1202);
	this._addCaseMapping(1205,1204);
	this._addCaseMapping(1207,1206);
	this._addCaseMapping(1209,1208);
	this._addCaseMapping(1211,1210);
	this._addCaseMapping(1213,1212);
	this._addCaseMapping(1215,1214);
	this._addCaseMapping(1218,1217);
	this._addCaseMapping(1220,1219);
	this._addCaseMapping(1224,1223);
	this._addCaseMapping(1228,1227);
	this._addCaseMapping(1233,1232);
	this._addCaseMapping(1235,1234);
	this._addCaseMapping(1237,1236);
	this._addCaseMapping(1239,1238);
	this._addCaseMapping(1241,1240);
	this._addCaseMapping(1243,1242);
	this._addCaseMapping(1245,1244);
	this._addCaseMapping(1247,1246);
	this._addCaseMapping(1249,1248);
	this._addCaseMapping(1251,1250);
	this._addCaseMapping(1253,1252);
	this._addCaseMapping(1255,1254);
	this._addCaseMapping(1257,1256);
	this._addCaseMapping(1259,1258);
	this._addCaseMapping(1263,1262);
	this._addCaseMapping(1265,1264);
	this._addCaseMapping(1267,1266);
	this._addCaseMapping(1269,1268);
	this._addCaseMapping(1273,1272);
	this._addCaseMapping(1377,1329);
	this._addCaseMapping(1378,1330);
	this._addCaseMapping(1379,1331);
	this._addCaseMapping(1380,1332);
	this._addCaseMapping(1381,1333);
	this._addCaseMapping(1382,1334);
	this._addCaseMapping(1383,1335);
	this._addCaseMapping(1384,1336);
	this._addCaseMapping(1385,1337);
	this._addCaseMapping(1386,1338);
	this._addCaseMapping(1387,1339);
	this._addCaseMapping(1388,1340);
	this._addCaseMapping(1389,1341);
	this._addCaseMapping(1390,1342);
	this._addCaseMapping(1391,1343);
	this._addCaseMapping(1392,1344);
	this._addCaseMapping(1393,1345);
	this._addCaseMapping(1394,1346);
	this._addCaseMapping(1395,1347);
	this._addCaseMapping(1396,1348);
	this._addCaseMapping(1397,1349);
	this._addCaseMapping(1398,1350);
	this._addCaseMapping(1399,1351);
	this._addCaseMapping(1400,1352);
	this._addCaseMapping(1401,1353);
	this._addCaseMapping(1402,1354);
	this._addCaseMapping(1403,1355);
	this._addCaseMapping(1404,1356);
	this._addCaseMapping(1405,1357);
	this._addCaseMapping(1406,1358);
	this._addCaseMapping(1407,1359);
	this._addCaseMapping(1408,1360);
	this._addCaseMapping(1409,1361);
	this._addCaseMapping(1410,1362);
	this._addCaseMapping(1411,1363);
	this._addCaseMapping(1412,1364);
	this._addCaseMapping(1413,1365);
	this._addCaseMapping(1414,1366);
	this._addCaseMapping(4304,4256);
	this._addCaseMapping(4305,4257);
	this._addCaseMapping(4306,4258);
	this._addCaseMapping(4307,4259);
	this._addCaseMapping(4308,4260);
	this._addCaseMapping(4309,4261);
	this._addCaseMapping(4310,4262);
	this._addCaseMapping(4311,4263);
	this._addCaseMapping(4312,4264);
	this._addCaseMapping(4313,4265);
	this._addCaseMapping(4314,4266);
	this._addCaseMapping(4315,4267);
	this._addCaseMapping(4316,4268);
	this._addCaseMapping(4317,4269);
	this._addCaseMapping(4318,4270);
	this._addCaseMapping(4319,4271);
	this._addCaseMapping(4320,4272);
	this._addCaseMapping(4321,4273);
	this._addCaseMapping(4322,4274);
	this._addCaseMapping(4323,4275);
	this._addCaseMapping(4324,4276);
	this._addCaseMapping(4325,4277);
	this._addCaseMapping(4326,4278);
	this._addCaseMapping(4327,4279);
	this._addCaseMapping(4328,4280);
	this._addCaseMapping(4329,4281);
	this._addCaseMapping(4330,4282);
	this._addCaseMapping(4331,4283);
	this._addCaseMapping(4332,4284);
	this._addCaseMapping(4333,4285);
	this._addCaseMapping(4334,4286);
	this._addCaseMapping(4335,4287);
	this._addCaseMapping(4336,4288);
	this._addCaseMapping(4337,4289);
	this._addCaseMapping(4338,4290);
	this._addCaseMapping(4339,4291);
	this._addCaseMapping(4340,4292);
	this._addCaseMapping(4341,4293);
	this._addCaseMapping(7681,7680);
	this._addCaseMapping(7683,7682);
	this._addCaseMapping(7685,7684);
	this._addCaseMapping(7687,7686);
	this._addCaseMapping(7689,7688);
	this._addCaseMapping(7691,7690);
	this._addCaseMapping(7693,7692);
	this._addCaseMapping(7695,7694);
	this._addCaseMapping(7697,7696);
	this._addCaseMapping(7699,7698);
	this._addCaseMapping(7701,7700);
	this._addCaseMapping(7703,7702);
	this._addCaseMapping(7705,7704);
	this._addCaseMapping(7707,7706);
	this._addCaseMapping(7709,7708);
	this._addCaseMapping(7711,7710);
	this._addCaseMapping(7713,7712);
	this._addCaseMapping(7715,7714);
	this._addCaseMapping(7717,7716);
	this._addCaseMapping(7719,7718);
	this._addCaseMapping(7721,7720);
	this._addCaseMapping(7723,7722);
	this._addCaseMapping(7725,7724);
	this._addCaseMapping(7727,7726);
	this._addCaseMapping(7729,7728);
	this._addCaseMapping(7731,7730);
	this._addCaseMapping(7733,7732);
	this._addCaseMapping(7735,7734);
	this._addCaseMapping(7737,7736);
	this._addCaseMapping(7739,7738);
	this._addCaseMapping(7741,7740);
	this._addCaseMapping(7743,7742);
	this._addCaseMapping(7745,7744);
	this._addCaseMapping(7747,7746);
	this._addCaseMapping(7749,7748);
	this._addCaseMapping(7751,7750);
	this._addCaseMapping(7753,7752);
	this._addCaseMapping(7755,7754);
	this._addCaseMapping(7757,7756);
	this._addCaseMapping(7759,7758);
	this._addCaseMapping(7761,7760);
	this._addCaseMapping(7763,7762);
	this._addCaseMapping(7765,7764);
	this._addCaseMapping(7767,7766);
	this._addCaseMapping(7769,7768);
	this._addCaseMapping(7771,7770);
	this._addCaseMapping(7773,7772);
	this._addCaseMapping(7775,7774);
	this._addCaseMapping(7777,7776);
	this._addCaseMapping(7779,7778);
	this._addCaseMapping(7781,7780);
	this._addCaseMapping(7783,7782);
	this._addCaseMapping(7785,7784);
	this._addCaseMapping(7787,7786);
	this._addCaseMapping(7789,7788);
	this._addCaseMapping(7791,7790);
	this._addCaseMapping(7793,7792);
	this._addCaseMapping(7795,7794);
	this._addCaseMapping(7797,7796);
	this._addCaseMapping(7799,7798);
	this._addCaseMapping(7801,7800);
	this._addCaseMapping(7803,7802);
	this._addCaseMapping(7805,7804);
	this._addCaseMapping(7807,7806);
	this._addCaseMapping(7809,7808);
	this._addCaseMapping(7811,7810);
	this._addCaseMapping(7813,7812);
	this._addCaseMapping(7815,7814);
	this._addCaseMapping(7817,7816);
	this._addCaseMapping(7819,7818);
	this._addCaseMapping(7821,7820);
	this._addCaseMapping(7823,7822);
	this._addCaseMapping(7825,7824);
	this._addCaseMapping(7827,7826);
	this._addCaseMapping(7829,7828);
	this._addCaseMapping(7841,7840);
	this._addCaseMapping(7843,7842);
	this._addCaseMapping(7845,7844);
	this._addCaseMapping(7847,7846);
	this._addCaseMapping(7849,7848);
	this._addCaseMapping(7851,7850);
	this._addCaseMapping(7853,7852);
	this._addCaseMapping(7855,7854);
	this._addCaseMapping(7857,7856);
	this._addCaseMapping(7859,7858);
	this._addCaseMapping(7861,7860);
	this._addCaseMapping(7863,7862);
	this._addCaseMapping(7865,7864);
	this._addCaseMapping(7867,7866);
	this._addCaseMapping(7869,7868);
	this._addCaseMapping(7871,7870);
	this._addCaseMapping(7873,7872);
	this._addCaseMapping(7875,7874);
	this._addCaseMapping(7877,7876);
	this._addCaseMapping(7879,7878);
	this._addCaseMapping(7881,7880);
	this._addCaseMapping(7883,7882);
	this._addCaseMapping(7885,7884);
	this._addCaseMapping(7887,7886);
	this._addCaseMapping(7889,7888);
	this._addCaseMapping(7891,7890);
	this._addCaseMapping(7893,7892);
	this._addCaseMapping(7895,7894);
	this._addCaseMapping(7897,7896);
	this._addCaseMapping(7899,7898);
	this._addCaseMapping(7901,7900);
	this._addCaseMapping(7903,7902);
	this._addCaseMapping(7905,7904);
	this._addCaseMapping(7907,7906);
	this._addCaseMapping(7909,7908);
	this._addCaseMapping(7911,7910);
	this._addCaseMapping(7913,7912);
	this._addCaseMapping(7915,7914);
	this._addCaseMapping(7917,7916);
	this._addCaseMapping(7919,7918);
	this._addCaseMapping(7921,7920);
	this._addCaseMapping(7923,7922);
	this._addCaseMapping(7925,7924);
	this._addCaseMapping(7927,7926);
	this._addCaseMapping(7929,7928);
	this._addCaseMapping(7936,7944);
	this._addCaseMapping(7937,7945);
	this._addCaseMapping(7938,7946);
	this._addCaseMapping(7939,7947);
	this._addCaseMapping(7940,7948);
	this._addCaseMapping(7941,7949);
	this._addCaseMapping(7942,7950);
	this._addCaseMapping(7943,7951);
	this._addCaseMapping(7952,7960);
	this._addCaseMapping(7953,7961);
	this._addCaseMapping(7954,7962);
	this._addCaseMapping(7955,7963);
	this._addCaseMapping(7956,7964);
	this._addCaseMapping(7957,7965);
	this._addCaseMapping(7968,7976);
	this._addCaseMapping(7969,7977);
	this._addCaseMapping(7970,7978);
	this._addCaseMapping(7971,7979);
	this._addCaseMapping(7972,7980);
	this._addCaseMapping(7973,7981);
	this._addCaseMapping(7974,7982);
	this._addCaseMapping(7975,7983);
	this._addCaseMapping(7984,7992);
	this._addCaseMapping(7985,7993);
	this._addCaseMapping(7986,7994);
	this._addCaseMapping(7987,7995);
	this._addCaseMapping(7988,7996);
	this._addCaseMapping(7989,7997);
	this._addCaseMapping(7990,7998);
	this._addCaseMapping(7991,7999);
	this._addCaseMapping(8000,8008);
	this._addCaseMapping(8001,8009);
	this._addCaseMapping(8002,8010);
	this._addCaseMapping(8003,8011);
	this._addCaseMapping(8004,8012);
	this._addCaseMapping(8005,8013);
	this._addCaseMapping(8017,8025);
	this._addCaseMapping(8019,8027);
	this._addCaseMapping(8021,8029);
	this._addCaseMapping(8023,8031);
	this._addCaseMapping(8032,8040);
	this._addCaseMapping(8033,8041);
	this._addCaseMapping(8034,8042);
	this._addCaseMapping(8035,8043);
	this._addCaseMapping(8036,8044);
	this._addCaseMapping(8037,8045);
	this._addCaseMapping(8038,8046);
	this._addCaseMapping(8039,8047);
	this._addCaseMapping(8064,8072);
	this._addCaseMapping(8065,8073);
	this._addCaseMapping(8066,8074);
	this._addCaseMapping(8067,8075);
	this._addCaseMapping(8068,8076);
	this._addCaseMapping(8069,8077);
	this._addCaseMapping(8070,8078);
	this._addCaseMapping(8071,8079);
	this._addCaseMapping(8080,8088);
	this._addCaseMapping(8081,8089);
	this._addCaseMapping(8082,8090);
	this._addCaseMapping(8083,8091);
	this._addCaseMapping(8084,8092);
	this._addCaseMapping(8085,8093);
	this._addCaseMapping(8086,8094);
	this._addCaseMapping(8087,8095);
	this._addCaseMapping(8096,8104);
	this._addCaseMapping(8097,8105);
	this._addCaseMapping(8098,8106);
	this._addCaseMapping(8099,8107);
	this._addCaseMapping(8100,8108);
	this._addCaseMapping(8101,8109);
	this._addCaseMapping(8102,8110);
	this._addCaseMapping(8103,8111);
	this._addCaseMapping(8112,8120);
	this._addCaseMapping(8113,8121);
	this._addCaseMapping(8144,8152);
	this._addCaseMapping(8145,8153);
	this._addCaseMapping(8160,8168);
	this._addCaseMapping(8161,8169);
	this._addCaseMapping(9424,9398);
	this._addCaseMapping(9425,9399);
	this._addCaseMapping(9426,9400);
	this._addCaseMapping(9427,9401);
	this._addCaseMapping(9428,9402);
	this._addCaseMapping(9429,9403);
	this._addCaseMapping(9430,9404);
	this._addCaseMapping(9431,9405);
	this._addCaseMapping(9432,9406);
	this._addCaseMapping(9433,9407);
	this._addCaseMapping(9434,9408);
	this._addCaseMapping(9435,9409);
	this._addCaseMapping(9436,9410);
	this._addCaseMapping(9437,9411);
	this._addCaseMapping(9438,9412);
	this._addCaseMapping(9439,9413);
	this._addCaseMapping(9440,9414);
	this._addCaseMapping(9441,9415);
	this._addCaseMapping(9442,9416);
	this._addCaseMapping(9443,9417);
	this._addCaseMapping(9444,9418);
	this._addCaseMapping(9445,9419);
	this._addCaseMapping(9446,9420);
	this._addCaseMapping(9447,9421);
	this._addCaseMapping(9448,9422);
	this._addCaseMapping(9449,9423);
	this._addCaseMapping(65345,65313);
	this._addCaseMapping(65346,65314);
	this._addCaseMapping(65347,65315);
	this._addCaseMapping(65348,65316);
	this._addCaseMapping(65349,65317);
	this._addCaseMapping(65350,65318);
	this._addCaseMapping(65351,65319);
	this._addCaseMapping(65352,65320);
	this._addCaseMapping(65353,65321);
	this._addCaseMapping(65354,65322);
	this._addCaseMapping(65355,65323);
	this._addCaseMapping(65356,65324);
	this._addCaseMapping(65357,65325);
	this._addCaseMapping(65358,65326);
	this._addCaseMapping(65359,65327);
	this._addCaseMapping(65360,65328);
	this._addCaseMapping(65361,65329);
	this._addCaseMapping(65362,65330);
	this._addCaseMapping(65363,65331);
	this._addCaseMapping(65364,65332);
	this._addCaseMapping(65365,65333);
	this._addCaseMapping(65366,65334);
	this._addCaseMapping(65367,65335);
	this._addCaseMapping(65368,65336);
	this._addCaseMapping(65369,65337);
	this._addCaseMapping(65370,65338);
};
$hxClasses["hx.strings._Char.CharCaseMapper"] = hx_strings__$Char_CharCaseMapper;
hx_strings__$Char_CharCaseMapper.__name__ = "hx.strings._Char.CharCaseMapper";
hx_strings__$Char_CharCaseMapper.prototype = {
	mapU2L: null
	,mapL2U: null
	,_addCaseMapping: function(lowerChar,upperChar) {
		if(!this.mapU2L.h.hasOwnProperty(upperChar)) {
			this.mapU2L.h[upperChar] = lowerChar;
		}
		if(!this.mapL2U.h.hasOwnProperty(lowerChar)) {
			this.mapL2U.h[lowerChar] = upperChar;
		}
	}
	,isLowerCase: function(ch) {
		return this.mapL2U.h.hasOwnProperty(ch);
	}
	,isUpperCase: function(ch) {
		return this.mapU2L.h.hasOwnProperty(ch);
	}
	,toLowerCase: function(ch) {
		var lowerChar = this.mapU2L.h[ch];
		if(lowerChar == null) {
			return ch;
		} else {
			return lowerChar;
		}
	}
	,toUpperCase: function(ch) {
		var upperChar = this.mapL2U.h[ch];
		if(upperChar == null) {
			return ch;
		} else {
			return upperChar;
		}
	}
	,__class__: hx_strings__$Char_CharCaseMapper
};
var hx_strings_Char = {};
hx_strings_Char.fromString = function(str) {
	var strLen = str == null ? 0 : str.length;
	if(strLen == 0 || 0 >= strLen) {
		return -1;
	} else {
		return HxOverrides.cca(str,0);
	}
};
hx_strings_Char.of = function(ch) {
	return ch;
};
hx_strings_Char.op_plus_string = function(ch,other) {
	return String.fromCodePoint(ch) + other;
};
hx_strings_Char.op_plus_string2 = function(str,ch) {
	return str + String.fromCodePoint(ch);
};
hx_strings_Char.op_plus = function(ch,other) {
	return ch + other;
};
hx_strings_Char.isAscii = function(this1) {
	if(this1 > -1) {
		return this1 < 128;
	} else {
		return false;
	}
};
hx_strings_Char.isAsciiAlpha = function(this1) {
	if(!(this1 > 64 && this1 < 91)) {
		if(this1 > 96) {
			return this1 < 123;
		} else {
			return false;
		}
	} else {
		return true;
	}
};
hx_strings_Char.isAsciiAlphanumeric = function(this1) {
	if(!(this1 > 64 && this1 < 91 || this1 > 96 && this1 < 123)) {
		if(this1 > 47) {
			return this1 < 58;
		} else {
			return false;
		}
	} else {
		return true;
	}
};
hx_strings_Char.isAsciiControl = function(this1) {
	if(!(this1 > -1 && this1 < 32)) {
		return this1 == 127;
	} else {
		return true;
	}
};
hx_strings_Char.isAsciiPrintable = function(this1) {
	if(this1 > 31) {
		return this1 < 127;
	} else {
		return false;
	}
};
hx_strings_Char.isDigit = function(this1) {
	if(this1 > 47) {
		return this1 < 58;
	} else {
		return false;
	}
};
hx_strings_Char.isEOF = function(this1) {
	return this1 != this1;
};
hx_strings_Char.isSpace = function(this1) {
	return this1 == 32;
};
hx_strings_Char.isUTF8 = function(this1) {
	if(this1 > -1) {
		return this1 < 1114112;
	} else {
		return false;
	}
};
hx_strings_Char.isWhitespace = function(this1) {
	if(!(this1 > 8 && this1 < 14)) {
		return this1 == 32;
	} else {
		return true;
	}
};
hx_strings_Char.isLowerCase = function(this1) {
	return hx_strings_Char.CHAR_CASE_MAPPER.mapL2U.h.hasOwnProperty(this1);
};
hx_strings_Char.isUpperCase = function(this1) {
	return hx_strings_Char.CHAR_CASE_MAPPER.mapU2L.h.hasOwnProperty(this1);
};
hx_strings_Char.toLowerCase = function(this1) {
	var lowerChar = hx_strings_Char.CHAR_CASE_MAPPER.mapU2L.h[this1];
	if(lowerChar == null) {
		return this1;
	} else {
		return lowerChar;
	}
};
hx_strings_Char.toUpperCase = function(this1) {
	var upperChar = hx_strings_Char.CHAR_CASE_MAPPER.mapL2U.h[this1];
	if(upperChar == null) {
		return this1;
	} else {
		return upperChar;
	}
};
hx_strings_Char.toInt = function(this1) {
	return this1;
};
hx_strings_Char.toString = function(this1) {
	return String.fromCodePoint(this1);
};
var hx_strings_CharIterator = function(prevBufferSize) {
	this.prevBufferNextIdx = -1;
	this.prevBufferPrevIdx = -1;
	this.currChar = -1;
	this.col = 0;
	this.line = 0;
	this.index = -1;
	var tmp;
	if(prevBufferSize > 0) {
		var this1 = new hx_strings_internal__$RingBuffer_RingBufferImpl(prevBufferSize + 1);
		tmp = this1;
	} else {
		tmp = null;
	}
	this.prevBuffer = tmp;
};
$hxClasses["hx.strings.CharIterator"] = hx_strings_CharIterator;
hx_strings_CharIterator.__name__ = "hx.strings.CharIterator";
hx_strings_CharIterator.fromString = function(chars,prevBufferSize) {
	if(prevBufferSize == null) {
		prevBufferSize = 0;
	}
	if(chars == null) {
		return hx_strings__$CharIterator_NullCharIterator.INSTANCE;
	}
	return new hx_strings__$CharIterator_StringCharIterator(chars,prevBufferSize);
};
hx_strings_CharIterator.fromArray = function(chars,prevBufferSize) {
	if(prevBufferSize == null) {
		prevBufferSize = 0;
	}
	if(chars == null) {
		return hx_strings__$CharIterator_NullCharIterator.INSTANCE;
	}
	return new hx_strings__$CharIterator_ArrayCharIterator(chars,prevBufferSize);
};
hx_strings_CharIterator.fromInput = function(chars,prevBufferSize) {
	if(prevBufferSize == null) {
		prevBufferSize = 0;
	}
	if(chars == null) {
		return hx_strings__$CharIterator_NullCharIterator.INSTANCE;
	}
	return new hx_strings__$CharIterator_InputCharIterator(chars,prevBufferSize);
};
hx_strings_CharIterator.fromIterator = function(chars,prevBufferSize) {
	if(prevBufferSize == null) {
		prevBufferSize = 0;
	}
	if(chars == null) {
		return hx_strings__$CharIterator_NullCharIterator.INSTANCE;
	}
	return new hx_strings__$CharIterator_IteratorCharIterator(chars,prevBufferSize);
};
hx_strings_CharIterator.prototype = {
	index: null
	,line: null
	,col: null
	,currChar: null
	,prevBuffer: null
	,prevBufferPrevIdx: null
	,prevBufferNextIdx: null
	,get_current: function() {
		if(this.index > -1) {
			return this.currChar;
		} else {
			return null;
		}
	}
	,get_pos: function() {
		return new hx_strings_CharPos(this.index,this.line,this.col);
	}
	,hasPrev: function() {
		return this.prevBufferPrevIdx > -1;
	}
	,prev: function() {
		if(this.prevBufferPrevIdx <= -1) {
			throw haxe_Exception.thrown(new haxe_io_Eof());
		}
		var prevChar = this.prevBuffer.get(this.prevBufferPrevIdx);
		this.currChar = prevChar.char;
		this.index = prevChar.index;
		this.line = prevChar.line;
		this.col = prevChar.col;
		this.prevBufferNextIdx = this.prevBufferPrevIdx + 1 < this.prevBuffer.length ? this.prevBufferPrevIdx + 1 : -1;
		this.prevBufferPrevIdx--;
		return this.currChar;
	}
	,hasNext: function() {
		if(this.prevBufferNextIdx > -1) {
			return true;
		} else {
			return !this.isEOF();
		}
	}
	,next: function() {
		if(this.prevBufferNextIdx > -1) {
			var prevChar = this.prevBuffer.get(this.prevBufferNextIdx);
			this.currChar = prevChar.char;
			this.index = prevChar.index;
			this.line = prevChar.line;
			this.col = prevChar.col;
			this.prevBufferPrevIdx = this.prevBufferNextIdx - 1;
			this.prevBufferNextIdx = this.prevBufferNextIdx + 1 < this.prevBuffer.length ? this.prevBufferNextIdx + 1 : -1;
			return this.currChar;
		}
		if(this.isEOF()) {
			throw haxe_Exception.thrown(new haxe_io_Eof());
		}
		if(this.currChar == 10 || this.currChar < 0) {
			this.line++;
			this.col = 0;
		}
		this.index++;
		this.col++;
		this.currChar = this.getChar();
		if(this.prevBuffer != null) {
			this.prevBuffer.add(new hx_strings__$CharIterator_CharWithPos(this.currChar,this.index,this.col,this.line));
			this.prevBufferPrevIdx = this.prevBuffer.length - 2;
			this.prevBufferNextIdx = -1;
		}
		return this.currChar;
	}
	,getChar: function() {
		throw haxe_Exception.thrown("Not implemented");
	}
	,isEOF: function() {
		throw haxe_Exception.thrown("Not implemented");
	}
	,__class__: hx_strings_CharIterator
};
var hx_strings_CharPos = function(index,line,col) {
	this.index = index;
	this.line = line;
	this.col = col;
};
$hxClasses["hx.strings.CharPos"] = hx_strings_CharPos;
hx_strings_CharPos.__name__ = "hx.strings.CharPos";
hx_strings_CharPos.prototype = {
	index: null
	,line: null
	,col: null
	,toString: function() {
		return "CharPos[index=" + this.index + ", line=" + this.line + ", col=" + this.col + "]";
	}
	,__class__: hx_strings_CharPos
};
var hx_strings__$CharIterator_CharWithPos = function(char,index,line,col) {
	hx_strings_CharPos.call(this,index,line,col);
	this.char = char;
};
$hxClasses["hx.strings._CharIterator.CharWithPos"] = hx_strings__$CharIterator_CharWithPos;
hx_strings__$CharIterator_CharWithPos.__name__ = "hx.strings._CharIterator.CharWithPos";
hx_strings__$CharIterator_CharWithPos.__super__ = hx_strings_CharPos;
hx_strings__$CharIterator_CharWithPos.prototype = $extend(hx_strings_CharPos.prototype,{
	char: null
	,__class__: hx_strings__$CharIterator_CharWithPos
});
var hx_strings_internal__$RingBuffer_RingBufferImpl = function(size) {
	this.length = 0;
	this.bufferEndIdx = -1;
	this.bufferStartIdx = 0;
	if(size < 1) {
		throw haxe_Exception.thrown("[size] must be > 0");
	}
	var this1 = new Array(size);
	this.buffer = this1;
	this.size = size;
	this.bufferMaxIdx = size - 1;
};
$hxClasses["hx.strings.internal._RingBuffer.RingBufferImpl"] = hx_strings_internal__$RingBuffer_RingBufferImpl;
hx_strings_internal__$RingBuffer_RingBufferImpl.__name__ = "hx.strings.internal._RingBuffer.RingBufferImpl";
hx_strings_internal__$RingBuffer_RingBufferImpl.prototype = {
	buffer: null
	,bufferStartIdx: null
	,bufferEndIdx: null
	,bufferMaxIdx: null
	,length: null
	,size: null
	,add: function(item) {
		if(this.length == this.size) {
			this.bufferEndIdx = this.bufferStartIdx;
			this.bufferStartIdx++;
			if(this.bufferStartIdx > this.bufferMaxIdx) {
				this.bufferStartIdx = 0;
			}
		} else {
			this.bufferEndIdx++;
			this.length++;
		}
		this.buffer[this.bufferEndIdx] = item;
	}
	,get: function(index) {
		if(index < 0 || index > this.bufferMaxIdx) {
			throw haxe_Exception.thrown("[index] " + index + " is out of bound");
		}
		var realIdx = this.bufferStartIdx + index;
		if(realIdx > this.bufferMaxIdx) {
			realIdx -= this.length;
		}
		return this.buffer[realIdx];
	}
	,iterator: function() {
		return new hx_strings_internal__$RingBuffer_RingBufferIterator(this);
	}
	,toArray: function() {
		var arr = [];
		var i = this.iterator();
		while(i.hasNext()) {
			var i1 = i.next();
			arr.push(i1);
		}
		return arr;
	}
	,__class__: hx_strings_internal__$RingBuffer_RingBufferImpl
};
var hx_strings__$CharIterator_NullCharIterator = function() {
	hx_strings_CharIterator.call(this,0);
};
$hxClasses["hx.strings._CharIterator.NullCharIterator"] = hx_strings__$CharIterator_NullCharIterator;
hx_strings__$CharIterator_NullCharIterator.__name__ = "hx.strings._CharIterator.NullCharIterator";
hx_strings__$CharIterator_NullCharIterator.__super__ = hx_strings_CharIterator;
hx_strings__$CharIterator_NullCharIterator.prototype = $extend(hx_strings_CharIterator.prototype,{
	isEOF: function() {
		return true;
	}
	,__class__: hx_strings__$CharIterator_NullCharIterator
});
var hx_strings__$CharIterator_ArrayCharIterator = function(chars,prevBufferSize) {
	hx_strings_CharIterator.call(this,prevBufferSize);
	this.chars = chars;
	this.charsMaxIndex = chars.length - 1;
};
$hxClasses["hx.strings._CharIterator.ArrayCharIterator"] = hx_strings__$CharIterator_ArrayCharIterator;
hx_strings__$CharIterator_ArrayCharIterator.__name__ = "hx.strings._CharIterator.ArrayCharIterator";
hx_strings__$CharIterator_ArrayCharIterator.__super__ = hx_strings_CharIterator;
hx_strings__$CharIterator_ArrayCharIterator.prototype = $extend(hx_strings_CharIterator.prototype,{
	chars: null
	,charsMaxIndex: null
	,isEOF: function() {
		return this.index >= this.charsMaxIndex;
	}
	,getChar: function() {
		return this.chars[this.index];
	}
	,__class__: hx_strings__$CharIterator_ArrayCharIterator
});
var hx_strings__$CharIterator_IteratorCharIterator = function(chars,prevBufferSize) {
	hx_strings_CharIterator.call(this,prevBufferSize);
	this.chars = chars;
};
$hxClasses["hx.strings._CharIterator.IteratorCharIterator"] = hx_strings__$CharIterator_IteratorCharIterator;
hx_strings__$CharIterator_IteratorCharIterator.__name__ = "hx.strings._CharIterator.IteratorCharIterator";
hx_strings__$CharIterator_IteratorCharIterator.__super__ = hx_strings_CharIterator;
hx_strings__$CharIterator_IteratorCharIterator.prototype = $extend(hx_strings_CharIterator.prototype,{
	chars: null
	,isEOF: function() {
		return !this.chars.hasNext();
	}
	,getChar: function() {
		return this.chars.next();
	}
	,__class__: hx_strings__$CharIterator_IteratorCharIterator
});
var hx_strings__$CharIterator_InputCharIterator = function(chars,prevBufferSize) {
	this.nextCharAvailable = null;
	this.currCharIndex = -1;
	this.byteIndex = 0;
	hx_strings_CharIterator.call(this,prevBufferSize);
	this.input = chars;
};
$hxClasses["hx.strings._CharIterator.InputCharIterator"] = hx_strings__$CharIterator_InputCharIterator;
hx_strings__$CharIterator_InputCharIterator.__name__ = "hx.strings._CharIterator.InputCharIterator";
hx_strings__$CharIterator_InputCharIterator.__super__ = hx_strings_CharIterator;
hx_strings__$CharIterator_InputCharIterator.prototype = $extend(hx_strings_CharIterator.prototype,{
	byteIndex: null
	,input: null
	,currCharIndex: null
	,nextChar: null
	,nextCharAvailable: null
	,isEOF: function() {
		if(this.nextCharAvailable == null) {
			try {
				var byte1 = this.input.readByte();
				this.byteIndex++;
				var tmp;
				if(byte1 <= 127) {
					tmp = byte1;
				} else {
					byte1 &= -129;
					byte1 &= -65;
					var totalBytes = 2;
					var isBit6Set = 1 == (byte1 >> 5 & 1);
					var isBit5Set = false;
					if(isBit6Set) {
						byte1 &= -33;
						++totalBytes;
						isBit5Set = 1 == (byte1 >> 4 & 1);
						if(isBit5Set) {
							byte1 &= -17;
							++totalBytes;
							if(1 == (byte1 >> 3 & 1)) {
								throw haxe_Exception.thrown("Valid UTF-8 byte expected at position [" + this.byteIndex + "] but found byte with value [" + byte1 + "]!");
							}
						}
					}
					var result = byte1 << 6 * (totalBytes - 1);
					var byte = this.input.readByte();
					this.byteIndex++;
					if(1 != (byte >> 7 & 1)) {
						throw haxe_Exception.thrown("Valid UTF-8 multi-sequence byte expected at position [" + this.byteIndex + "] but found byte with value [" + byte + "]!");
					}
					if(1 == (byte >> 6 & 1)) {
						throw haxe_Exception.thrown("Valid UTF-8 multi-sequence byte expected at position [" + this.byteIndex + "] but found byte with value [" + byte + "]!");
					}
					var byte2 = byte & -129;
					result += byte2 << 6 * (totalBytes - 2);
					if(isBit6Set) {
						var byte = this.input.readByte();
						this.byteIndex++;
						if(1 != (byte >> 7 & 1)) {
							throw haxe_Exception.thrown("Valid UTF-8 multi-sequence byte expected at position [" + this.byteIndex + "] but found byte with value [" + byte + "]!");
						}
						if(1 == (byte >> 6 & 1)) {
							throw haxe_Exception.thrown("Valid UTF-8 multi-sequence byte expected at position [" + this.byteIndex + "] but found byte with value [" + byte + "]!");
						}
						var byte3 = byte & -129;
						result += byte3 << 6 * (totalBytes - 3);
						if(isBit5Set) {
							var byte = this.input.readByte();
							this.byteIndex++;
							if(1 != (byte >> 7 & 1)) {
								throw haxe_Exception.thrown("Valid UTF-8 multi-sequence byte expected at position [" + this.byteIndex + "] but found byte with value [" + byte + "]!");
							}
							if(1 == (byte >> 6 & 1)) {
								throw haxe_Exception.thrown("Valid UTF-8 multi-sequence byte expected at position [" + this.byteIndex + "] but found byte with value [" + byte + "]!");
							}
							var byte4 = byte & -129;
							result += byte4 << 6 * (totalBytes - 4);
						}
					}
					if(this.index == 0 && result == 65279) {
						var byte1 = this.input.readByte();
						this.byteIndex++;
						if(byte1 <= 127) {
							tmp = byte1;
						} else {
							byte1 &= -129;
							byte1 &= -65;
							var totalBytes = 2;
							var isBit6Set = 1 == (byte1 >> 5 & 1);
							var isBit5Set = false;
							if(isBit6Set) {
								byte1 &= -33;
								++totalBytes;
								isBit5Set = 1 == (byte1 >> 4 & 1);
								if(isBit5Set) {
									byte1 &= -17;
									++totalBytes;
									if(1 == (byte1 >> 3 & 1)) {
										throw haxe_Exception.thrown("Valid UTF-8 byte expected at position [" + this.byteIndex + "] but found byte with value [" + byte1 + "]!");
									}
								}
							}
							var result1 = byte1 << 6 * (totalBytes - 1);
							var byte = this.input.readByte();
							this.byteIndex++;
							if(1 != (byte >> 7 & 1)) {
								throw haxe_Exception.thrown("Valid UTF-8 multi-sequence byte expected at position [" + this.byteIndex + "] but found byte with value [" + byte + "]!");
							}
							if(1 == (byte >> 6 & 1)) {
								throw haxe_Exception.thrown("Valid UTF-8 multi-sequence byte expected at position [" + this.byteIndex + "] but found byte with value [" + byte + "]!");
							}
							var byte2 = byte & -129;
							result1 += byte2 << 6 * (totalBytes - 2);
							if(isBit6Set) {
								var byte = this.input.readByte();
								this.byteIndex++;
								if(1 != (byte >> 7 & 1)) {
									throw haxe_Exception.thrown("Valid UTF-8 multi-sequence byte expected at position [" + this.byteIndex + "] but found byte with value [" + byte + "]!");
								}
								if(1 == (byte >> 6 & 1)) {
									throw haxe_Exception.thrown("Valid UTF-8 multi-sequence byte expected at position [" + this.byteIndex + "] but found byte with value [" + byte + "]!");
								}
								var byte3 = byte & -129;
								result1 += byte3 << 6 * (totalBytes - 3);
								if(isBit5Set) {
									var byte = this.input.readByte();
									this.byteIndex++;
									if(1 != (byte >> 7 & 1)) {
										throw haxe_Exception.thrown("Valid UTF-8 multi-sequence byte expected at position [" + this.byteIndex + "] but found byte with value [" + byte + "]!");
									}
									if(1 == (byte >> 6 & 1)) {
										throw haxe_Exception.thrown("Valid UTF-8 multi-sequence byte expected at position [" + this.byteIndex + "] but found byte with value [" + byte + "]!");
									}
									var byte4 = byte & -129;
									result1 += byte4 << 6 * (totalBytes - 4);
								}
							}
							tmp = this.index == 0 && result1 == 65279 ? this.readUtf8Char() : result1;
						}
					} else {
						tmp = result;
					}
				}
				this.nextChar = tmp;
				this.nextCharAvailable = true;
			} catch( _g ) {
				if(((haxe_Exception.caught(_g).unwrap()) instanceof haxe_io_Eof)) {
					this.nextCharAvailable = false;
				} else {
					throw _g;
				}
			}
		}
		return this.nextCharAvailable != true;
	}
	,getChar: function() {
		if(this.index != this.currCharIndex) {
			this.currCharIndex = this.index;
			this.nextCharAvailable = null;
			return this.nextChar;
		}
		return this.currChar;
	}
	,readUtf8Char: function() {
		var byte1 = this.input.readByte();
		this.byteIndex++;
		if(byte1 <= 127) {
			return byte1;
		}
		byte1 &= -129;
		byte1 &= -65;
		var totalBytes = 2;
		var isBit6Set = 1 == (byte1 >> 5 & 1);
		var isBit5Set = false;
		if(isBit6Set) {
			byte1 &= -33;
			++totalBytes;
			isBit5Set = 1 == (byte1 >> 4 & 1);
			if(isBit5Set) {
				byte1 &= -17;
				++totalBytes;
				if(1 == (byte1 >> 3 & 1)) {
					throw haxe_Exception.thrown("Valid UTF-8 byte expected at position [" + this.byteIndex + "] but found byte with value [" + byte1 + "]!");
				}
			}
		}
		var result = byte1 << 6 * (totalBytes - 1);
		var byte = this.input.readByte();
		this.byteIndex++;
		if(1 != (byte >> 7 & 1)) {
			throw haxe_Exception.thrown("Valid UTF-8 multi-sequence byte expected at position [" + this.byteIndex + "] but found byte with value [" + byte + "]!");
		}
		if(1 == (byte >> 6 & 1)) {
			throw haxe_Exception.thrown("Valid UTF-8 multi-sequence byte expected at position [" + this.byteIndex + "] but found byte with value [" + byte + "]!");
		}
		var byte2 = byte & -129;
		result += byte2 << 6 * (totalBytes - 2);
		if(isBit6Set) {
			var byte = this.input.readByte();
			this.byteIndex++;
			if(1 != (byte >> 7 & 1)) {
				throw haxe_Exception.thrown("Valid UTF-8 multi-sequence byte expected at position [" + this.byteIndex + "] but found byte with value [" + byte + "]!");
			}
			if(1 == (byte >> 6 & 1)) {
				throw haxe_Exception.thrown("Valid UTF-8 multi-sequence byte expected at position [" + this.byteIndex + "] but found byte with value [" + byte + "]!");
			}
			var byte3 = byte & -129;
			result += byte3 << 6 * (totalBytes - 3);
			if(isBit5Set) {
				var byte = this.input.readByte();
				this.byteIndex++;
				if(1 != (byte >> 7 & 1)) {
					throw haxe_Exception.thrown("Valid UTF-8 multi-sequence byte expected at position [" + this.byteIndex + "] but found byte with value [" + byte + "]!");
				}
				if(1 == (byte >> 6 & 1)) {
					throw haxe_Exception.thrown("Valid UTF-8 multi-sequence byte expected at position [" + this.byteIndex + "] but found byte with value [" + byte + "]!");
				}
				var byte4 = byte & -129;
				result += byte4 << 6 * (totalBytes - 4);
			}
		}
		if(this.index == 0 && result == 65279) {
			return this.readUtf8Char();
		}
		return result;
	}
	,readUtf8MultiSequenceByte: function() {
		var byte = this.input.readByte();
		this.byteIndex++;
		if(1 != (byte >> 7 & 1)) {
			throw haxe_Exception.thrown("Valid UTF-8 multi-sequence byte expected at position [" + this.byteIndex + "] but found byte with value [" + byte + "]!");
		}
		if(1 == (byte >> 6 & 1)) {
			throw haxe_Exception.thrown("Valid UTF-8 multi-sequence byte expected at position [" + this.byteIndex + "] but found byte with value [" + byte + "]!");
		}
		return byte & -129;
	}
	,__class__: hx_strings__$CharIterator_InputCharIterator
});
var hx_strings__$CharIterator_StringCharIterator = function(chars,prevBufferSize) {
	hx_strings_CharIterator.call(this,prevBufferSize);
	this.chars = chars;
	this.charsMaxIndex = (chars == null ? 0 : chars.length) - 1;
};
$hxClasses["hx.strings._CharIterator.StringCharIterator"] = hx_strings__$CharIterator_StringCharIterator;
hx_strings__$CharIterator_StringCharIterator.__name__ = "hx.strings._CharIterator.StringCharIterator";
hx_strings__$CharIterator_StringCharIterator.__super__ = hx_strings_CharIterator;
hx_strings__$CharIterator_StringCharIterator.prototype = $extend(hx_strings_CharIterator.prototype,{
	chars: null
	,charsMaxIndex: null
	,isEOF: function() {
		return this.index >= this.charsMaxIndex;
	}
	,getChar: function() {
		return HxOverrides.cca(this.chars,this.index);
	}
	,__class__: hx_strings__$CharIterator_StringCharIterator
});
var hx_strings_Pattern = function(pattern,options) {
	this.pattern = pattern;
	this.options = options;
	this.ereg = new EReg(pattern,options);
	this.options += "u";
};
$hxClasses["hx.strings.Pattern"] = hx_strings_Pattern;
hx_strings_Pattern.__name__ = "hx.strings.Pattern";
hx_strings_Pattern.compile = function(pattern,options) {
	if(options == null) {
		return new hx_strings_Pattern(pattern,"");
	}
	var _g = options;
	var tmp;
	switch(_g._hx_index) {
	case 0:
		var str = _g.v;
		var str1 = hx_strings_Strings.toLowerCase8(str);
		if(str1 == null || str1.length == 0) {
			tmp = str1;
		} else {
			var _g1 = [];
			var _g2 = 0;
			var _g3 = hx_strings_Strings.toChars(str1);
			while(_g2 < _g3.length) {
				var v = _g3[_g2];
				++_g2;
				var tmp1;
				var tmp2;
				var strLen = "i".length;
				if(v != (strLen == 0 || 0 >= strLen ? -1 : HxOverrides.cca("i",0))) {
					var strLen1 = "m".length;
					tmp2 = v == (strLen1 == 0 || 0 >= strLen1 ? -1 : HxOverrides.cca("m",0));
				} else {
					tmp2 = true;
				}
				if(!tmp2) {
					var strLen2 = "g".length;
					tmp1 = v == (strLen2 == 0 || 0 >= strLen2 ? -1 : HxOverrides.cca("g",0));
				} else {
					tmp1 = true;
				}
				if(tmp1) {
					_g1.push(v);
				}
			}
			var _this = _g1;
			var result = new Array(_this.length);
			var _g1 = 0;
			var _g2 = _this.length;
			while(_g1 < _g2) {
				var i = _g1++;
				result[i] = String.fromCodePoint(_this[i]);
			}
			tmp = result.join("");
		}
		break;
	case 1:
		var opt = _g.v;
		tmp = Std.string(opt);
		break;
	case 2:
		var arr = _g.v;
		var _g = [];
		var _g1 = 0;
		var _g2 = arr;
		while(_g1 < _g2.length) {
			var v = _g2[_g1];
			++_g1;
			if(v != null) {
				_g.push(v);
			}
		}
		tmp = _g.join("");
		break;
	}
	return new hx_strings_Pattern(pattern,tmp);
};
hx_strings_Pattern.prototype = {
	pattern: null
	,options: null
	,ereg: null
	,matcher: function(str) {
		return new hx_strings__$Pattern_MatcherImpl(this.ereg,this.pattern,this.options,str);
	}
	,replace: function(str,replaceWith) {
		return str.replace(this.ereg.r,replaceWith);
	}
	,remove: function(str) {
		return str.replace(this.ereg.r,"");
	}
	,split: function(str) {
		return this.ereg.split(str);
	}
	,__class__: hx_strings_Pattern
};
var hx_strings_Matcher = function() { };
$hxClasses["hx.strings.Matcher"] = hx_strings_Matcher;
hx_strings_Matcher.__name__ = "hx.strings.Matcher";
hx_strings_Matcher.__isInterface__ = true;
hx_strings_Matcher.prototype = {
	iterate: null
	,map: null
	,matched: null
	,matchedPos: null
	,matches: null
	,matchesInRegion: null
	,reset: null
	,substringAfterMatch: null
	,substringBeforeMatch: null
	,__class__: hx_strings_Matcher
};
var hx_strings__$Pattern_MatcherImpl = function(ereg,pattern,options,str) {
	this.ereg = this._cloneEReg(ereg,pattern,options);
	this.str = str;
	this.isMatch = null;
};
$hxClasses["hx.strings._Pattern.MatcherImpl"] = hx_strings__$Pattern_MatcherImpl;
hx_strings__$Pattern_MatcherImpl.__name__ = "hx.strings._Pattern.MatcherImpl";
hx_strings__$Pattern_MatcherImpl.__interfaces__ = [hx_strings_Matcher];
hx_strings__$Pattern_MatcherImpl.prototype = {
	ereg: null
	,isMatch: null
	,str: null
	,reset: function(str) {
		this.str = str;
		this.isMatch = null;
		return this;
	}
	,iterate: function(onMatch) {
		var startAt = 0;
		while(this.ereg.matchSub(this.str,startAt)) {
			this.isMatch = true;
			var matchedPos = this.ereg.matchedPos();
			onMatch(this);
			startAt = matchedPos.pos + matchedPos.len;
		}
		this.isMatch = false;
	}
	,map: function(mapper) {
		var _gthis = this;
		return this.ereg.map(this.str,function(ereg) {
			_gthis.isMatch = true;
			return mapper(_gthis);
		});
	}
	,matched: function(n) {
		if(n == null) {
			n = 0;
		}
		if(this.isMatch == null) {
			this.isMatch = this.ereg.match(this.str);
		}
		if(!this.isMatch) {
			throw haxe_Exception.thrown("No string matched");
		}
		var result = this.ereg.matched(n);
		return result;
	}
	,matches: function() {
		return this.isMatch = this.ereg.match(this.str);
	}
	,matchesInRegion: function(pos,len) {
		if(len == null) {
			len = -1;
		}
		return this.isMatch = this.ereg.matchSub(this.str,pos,len);
	}
	,matchedPos: function() {
		if(this.isMatch == null) {
			this.isMatch = this.ereg.match(this.str);
		}
		if(!this.isMatch) {
			throw haxe_Exception.thrown("No string matched");
		}
		return this.ereg.matchedPos();
	}
	,substringAfterMatch: function() {
		if(this.isMatch == null) {
			this.isMatch = this.ereg.match(this.str);
		}
		if(!this.isMatch) {
			return "";
		}
		return this.ereg.matchedRight();
	}
	,substringBeforeMatch: function() {
		if(this.isMatch == null) {
			this.isMatch = this.ereg.match(this.str);
		}
		if(!this.isMatch) {
			return "";
		}
		return this.ereg.matchedLeft();
	}
	,_cloneEReg: function(from,pattern,options) {
		var clone = new EReg(pattern,options);
		return clone;
	}
	,__class__: hx_strings__$Pattern_MatcherImpl
};
var hx_strings_StringBuilder = function(initialContent) {
	this.len = 0;
	this.pre = null;
	this.sb = new StringBuf();
	if(initialContent != null) {
		this.add(initialContent);
	}
};
$hxClasses["hx.strings.StringBuilder"] = hx_strings_StringBuilder;
hx_strings_StringBuilder.__name__ = "hx.strings.StringBuilder";
hx_strings_StringBuilder.prototype = {
	sb: null
	,pre: null
	,len: null
	,length: null
	,get_length: function() {
		return this.len;
	}
	,add: function(item) {
		this.sb.b += Std.string(item);
		this.len += item == null ? 0 : item.length;
		return this;
	}
	,addChar: function(ch) {
		if(ch > -1 && ch < 128) {
			this.sb.b += String.fromCodePoint(ch);
		} else {
			var _this = this.sb;
			var x = String.fromCodePoint(ch);
			_this.b += Std.string(x);
		}
		this.len++;
		return this;
	}
	,addAll: function(items) {
		var _g = 0;
		while(_g < items.length) {
			var item = items[_g];
			++_g;
			this.sb.b += Std.string(item);
			this.len += item == null ? 0 : item.length;
		}
		return this;
	}
	,clear: function() {
		this.pre = null;
		this.sb = new StringBuf();
		this.len = 0;
		return this;
	}
	,isEmpty: function() {
		return this.len == 0;
	}
	,newLine: function() {
		this.sb.b += "\n";
		this.len++;
		return this;
	}
	,insert: function(pos,item) {
		if(pos < 0) {
			throw haxe_Exception.thrown("[pos] must not be negative");
		}
		if(pos > this.len) {
			throw haxe_Exception.thrown("[pos] must not be greater than this.length");
		}
		if(pos == this.len) {
			this.add(item);
			return this;
		}
		if(pos == 0) {
			if(this.pre == null) {
				this.pre = [];
			}
			this.pre.unshift(item);
			this.len += item == null ? 0 : item.length;
			return this;
		}
		var pre_len = 0;
		if(this.pre != null) {
			var i = this.pre.length;
			var _g = 0;
			var _g1 = this.pre.length;
			while(_g < _g1) {
				var i = _g++;
				var str = this.pre[i];
				var next_pre_len = pre_len + (str == null ? 0 : str.length);
				if(next_pre_len == pos) {
					this.pre.splice(i + 1,0,item);
					this.len += item == null ? 0 : item.length;
					return this;
				}
				if(next_pre_len > pos) {
					var preSplitted = hx_strings_Strings.splitAt(this.pre[i],[pos - pre_len]);
					this.pre[i] = preSplitted[0];
					this.pre.splice(i + 1,0,item);
					this.pre.splice(i + 2,0,preSplitted[1]);
					this.len += item == null ? 0 : item.length;
					return this;
				}
				pre_len = next_pre_len;
			}
		}
		if(this.sb.b.length == 0) {
			this.add(item);
			return this;
		}
		var sbSplitted = hx_strings_Strings.splitAt(this.sb.b,[pos - pre_len]);
		this.sb = new StringBuf();
		this.sb.b += Std.string(sbSplitted[0]);
		this.sb.b += Std.string(item);
		this.len += item == null ? 0 : item.length;
		this.sb.b += Std.string(sbSplitted[1]);
		return this;
	}
	,insertChar: function(pos,ch) {
		if(pos < 0) {
			throw haxe_Exception.thrown("[pos] must not be negative");
		}
		if(pos > this.len) {
			throw haxe_Exception.thrown("[pos] must not be greater than this.length");
		}
		if(pos == this.len) {
			this.addChar(ch);
			return this;
		}
		if(pos == 0) {
			if(this.pre == null) {
				this.pre = [];
			}
			this.pre.unshift(String.fromCodePoint(ch));
			this.len++;
			return this;
		}
		var pre_len = 0;
		if(this.pre != null) {
			var i = this.pre.length;
			var _g = 0;
			var _g1 = this.pre.length;
			while(_g < _g1) {
				var i = _g++;
				var str = this.pre[i];
				var next_pre_len = pre_len + (str == null ? 0 : str.length);
				if(next_pre_len == pos) {
					var _this = this.pre;
					var x = String.fromCodePoint(ch);
					_this.splice(i + 1,0,x);
					this.len++;
					return this;
				}
				if(next_pre_len > pos) {
					var preSplitted = hx_strings_Strings.splitAt(this.pre[i],[pos - pre_len]);
					this.pre[i] = preSplitted[0];
					var _this1 = this.pre;
					var x1 = String.fromCodePoint(ch);
					_this1.splice(i + 1,0,x1);
					this.pre.splice(i + 2,0,preSplitted[1]);
					this.len++;
					return this;
				}
				pre_len = next_pre_len;
			}
		}
		if(this.sb.b.length == 0) {
			this.addChar(ch);
			return this;
		}
		var sbSplitted = hx_strings_Strings.splitAt(this.sb.b,[pos - pre_len]);
		this.sb = new StringBuf();
		this.sb.b += Std.string(sbSplitted[0]);
		this.addChar(ch);
		this.sb.b += Std.string(sbSplitted[1]);
		return this;
	}
	,insertAll: function(pos,items) {
		if(pos < 0) {
			throw haxe_Exception.thrown("[pos] must not be negative");
		}
		if(pos > this.len) {
			throw haxe_Exception.thrown("[pos] must not be greater than this.length");
		}
		if(pos == this.len) {
			this.addAll(items);
			return this;
		}
		if(pos == 0) {
			if(this.pre == null) {
				this.pre = [];
			}
			var i = items.length;
			while(i-- > 0) {
				var item = items[i];
				this.pre.unshift(item);
				this.len += item == null ? 0 : item.length;
			}
			return this;
		}
		var pre_len = 0;
		if(this.pre != null) {
			var i = this.pre.length;
			var _g = 0;
			var _g1 = this.pre.length;
			while(_g < _g1) {
				var i = _g++;
				var str = this.pre[i];
				var next_pre_len = pre_len + (str == null ? 0 : str.length);
				if(next_pre_len == pos) {
					var j = items.length;
					while(j-- > 0) {
						var item = items[j];
						this.pre.splice(i + 1,0,item);
						this.len += item == null ? 0 : item.length;
					}
					return this;
				}
				if(next_pre_len > pos) {
					var preSplitted = hx_strings_Strings.splitAt(this.pre[i],[pos - pre_len]);
					this.pre[i] = preSplitted[0];
					this.pre.splice(i + 1,0,preSplitted[1]);
					var j1 = items.length;
					while(j1-- > 0) {
						var item1 = items[j1];
						this.pre.splice(i + 1,0,item1);
						this.len += item1 == null ? 0 : item1.length;
					}
					return this;
				}
				pre_len = next_pre_len;
			}
		}
		if(this.sb.b.length == 0) {
			var _g = 0;
			while(_g < items.length) {
				var item = items[_g];
				++_g;
				this.add(item);
			}
			return this;
		}
		var sbSplitted = hx_strings_Strings.splitAt(this.sb.b,[pos - pre_len]);
		this.sb = new StringBuf();
		this.sb.b += Std.string(sbSplitted[0]);
		var _g = 0;
		while(_g < items.length) {
			var item = items[_g];
			++_g;
			this.sb.b += Std.string(item);
			this.len += item == null ? 0 : item.length;
		}
		this.sb.b += Std.string(sbSplitted[1]);
		return this;
	}
	,asOutput: function() {
		return new hx_strings__$StringBuilder_OutputWrapper(this);
	}
	,toString: function() {
		if(this.pre == null) {
			return this.sb.b;
		}
		var str = this.pre.join("") + this.sb.b;
		this.clear();
		this.add(str);
		return str;
	}
	,__class__: hx_strings_StringBuilder
};
var hx_strings__$StringBuilder_OutputWrapper = function(sb) {
	this.sb = sb;
};
$hxClasses["hx.strings._StringBuilder.OutputWrapper"] = hx_strings__$StringBuilder_OutputWrapper;
hx_strings__$StringBuilder_OutputWrapper.__name__ = "hx.strings._StringBuilder.OutputWrapper";
hx_strings__$StringBuilder_OutputWrapper.__super__ = haxe_io_Output;
hx_strings__$StringBuilder_OutputWrapper.prototype = $extend(haxe_io_Output.prototype,{
	sb: null
	,bo: null
	,flush: function() {
		if(this.bo != null && this.bo.b.pos > 0) {
			this.sb.add(this.bo.getBytes().toString());
		}
	}
	,writeByte: function(c) {
		if(this.bo == null) {
			this.bo = new haxe_io_BytesOutput();
		}
		this.bo.writeByte(c);
	}
	,writeString: function(str,encoding) {
		this.flush();
		this.sb.add(str);
	}
	,__class__: hx_strings__$StringBuilder_OutputWrapper
});
var hx_strings_internal_OS = function() { };
$hxClasses["hx.strings.internal.OS"] = hx_strings_internal_OS;
hx_strings_internal_OS.__name__ = "hx.strings.internal.OS";
var js_Boot = function() { };
$hxClasses["js.Boot"] = js_Boot;
js_Boot.__name__ = "js.Boot";
js_Boot.getClass = function(o) {
	if(o == null) {
		return null;
	} else if(((o) instanceof Array)) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o.__enum__) {
			var e = $hxEnums[o.__enum__];
			var con = e.__constructs__[o._hx_index];
			var n = con._hx_name;
			if(con.__params__) {
				s = s + "\t";
				return n + "(" + ((function($this) {
					var $r;
					var _g = [];
					{
						var _g1 = 0;
						var _g2 = con.__params__;
						while(true) {
							if(!(_g1 < _g2.length)) {
								break;
							}
							var p = _g2[_g1];
							_g1 = _g1 + 1;
							_g.push(js_Boot.__string_rec(o[p],s));
						}
					}
					$r = _g;
					return $r;
				}(this))).join(",") + ")";
			} else {
				return n;
			}
		}
		if(((o) instanceof Array)) {
			var str = "[";
			s += "\t";
			var _g = 0;
			var _g1 = o.length;
			while(_g < _g1) {
				var i = _g++;
				str += (i > 0 ? "," : "") + js_Boot.__string_rec(o[i],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( _g ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var str = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		var k = null;
		for( k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str.length != 2) {
			str += ", \n";
		}
		str += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str += "\n" + s + "}";
		return str;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g = 0;
		var _g1 = intf.length;
		while(_g < _g1) {
			var i = _g++;
			var i1 = intf[i];
			if(i1 == cl || js_Boot.__interfLoop(i1,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		return ((o) instanceof Array);
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return o != null;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return ((o | 0) === o);
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(js_Boot.__downcastCheck(o,cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(((o) instanceof cl)) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		return o.__enum__ != null ? $hxEnums[o.__enum__] == cl : false;
	}
};
js_Boot.__downcastCheck = function(o,cl) {
	if(!((o) instanceof cl)) {
		if(cl.__isInterface__) {
			return js_Boot.__interfLoop(js_Boot.getClass(o),cl);
		} else {
			return false;
		}
	} else {
		return true;
	}
};
js_Boot.__implements = function(o,iface) {
	return js_Boot.__interfLoop(js_Boot.getClass(o),iface);
};
js_Boot.__cast = function(o,t) {
	if(o == null || js_Boot.__instanceof(o,t)) {
		return o;
	} else {
		throw haxe_Exception.thrown("Cannot cast " + Std.string(o) + " to " + Std.string(t));
	}
};
js_Boot.__toStr = null;
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var hx_strings_internal__$Either3__$Either3 = $hxEnums["hx.strings.internal._Either3._Either3"] = { __ename__:"hx.strings.internal._Either3._Either3",__constructs__:null
	,a: ($_=function(v) { return {_hx_index:0,v:v,__enum__:"hx.strings.internal._Either3._Either3",toString:$estr}; },$_._hx_name="a",$_.__params__ = ["v"],$_)
	,b: ($_=function(v) { return {_hx_index:1,v:v,__enum__:"hx.strings.internal._Either3._Either3",toString:$estr}; },$_._hx_name="b",$_.__params__ = ["v"],$_)
	,c: ($_=function(v) { return {_hx_index:2,v:v,__enum__:"hx.strings.internal._Either3._Either3",toString:$estr}; },$_._hx_name="c",$_.__params__ = ["v"],$_)
};
hx_strings_internal__$Either3__$Either3.__constructs__ = [hx_strings_internal__$Either3__$Either3.a,hx_strings_internal__$Either3__$Either3.b,hx_strings_internal__$Either3__$Either3.c];
var hx_strings_Strings = function() { };
$hxClasses["hx.strings.Strings"] = hx_strings_Strings;
hx_strings_Strings.__name__ = "hx.strings.Strings";
hx_strings_Strings._getNotFoundDefault = function(str,notFoundDefault) {
	switch(notFoundDefault) {
	case 1:
		return null;
	case 2:
		return "";
	case 3:
		return str;
	}
};
hx_strings_Strings._charCodeAt8Unsafe = function(str,pos) {
	return HxOverrides.cca(str,pos);
};
hx_strings_Strings._splitAsciiWordsUnsafe = function(str) {
	var words = [];
	var currentWord = new hx_strings_StringBuilder();
	var chars = hx_strings_Strings.toChars(str);
	var len = chars.length;
	var lastIndex = len - 1;
	var _g = 0;
	var _g1 = len;
	while(_g < _g1) {
		var i = _g++;
		var ch = chars[i];
		if(ch > 64 && ch < 91 || ch > 96 && ch < 123) {
			var chNext = i < lastIndex ? chars[i + 1] : -1;
			currentWord.addChar(ch);
			if(chNext > 47 && chNext < 58) {
				words.push(currentWord.toString());
				currentWord.clear();
			} else if(hx_strings_Char.CHAR_CASE_MAPPER.mapU2L.h.hasOwnProperty(ch)) {
				if(hx_strings_Char.CHAR_CASE_MAPPER.mapU2L.h.hasOwnProperty(chNext) && chars.length > i + 2) {
					if(!hx_strings_Char.CHAR_CASE_MAPPER.mapU2L.h.hasOwnProperty(chars[i + 2])) {
						words.push(currentWord.toString());
						currentWord.clear();
					}
				}
			} else if(hx_strings_Char.CHAR_CASE_MAPPER.mapU2L.h.hasOwnProperty(chNext)) {
				words.push(currentWord.toString());
				currentWord.clear();
			}
		} else if(ch > 47 && ch < 58) {
			currentWord.addChar(ch);
			var chNext1 = i < lastIndex ? chars[i + 1] : -1;
			if(!(chNext1 > 47 && chNext1 < 58)) {
				words.push(currentWord.toString());
				currentWord.clear();
			}
		} else if(currentWord.len > 0) {
			words.push(currentWord.toString());
			currentWord.clear();
		}
	}
	if(currentWord.len > 0) {
		words.push(currentWord.toString());
	}
	return words;
};
hx_strings_Strings.ansiToHtml = function(str,renderMethod,initialState) {
	if(str == null || str.length == 0) {
		return str;
	}
	if(renderMethod == null) {
		renderMethod = hx_strings_AnsiToHtmlRenderMethod.StyleAttributes;
	}
	var styleOrClassAttribute;
	switch(renderMethod._hx_index) {
	case 0:
		styleOrClassAttribute = "style";
		break;
	case 1:
		styleOrClassAttribute = "class";
		break;
	case 2:
		var cb = renderMethod.func;
		styleOrClassAttribute = "class";
		break;
	}
	var sb = new hx_strings_StringBuilder();
	if(initialState != null && (initialState.fgcolor != null || initialState.bgcolor != null || initialState.bold || initialState.underline || initialState.blink)) {
		sb.add("<span " + styleOrClassAttribute + "=\"").add(initialState.toCSS(renderMethod)).add("\">");
	}
	var effectiveState = new hx_strings_AnsiState(initialState);
	var strLenMinus1 = (str == null ? 0 : str.length) - 1;
	var i = -1;
	var lookAhead = new hx_strings_StringBuilder();
	while(i < strLenMinus1) {
		++i;
		var ch = HxOverrides.cca(str,i);
		if(ch == 27 && i < strLenMinus1 && HxOverrides.cca(str,i + 1) == 91) {
			lookAhead.clear();
			var currentState = new hx_strings_AnsiState(effectiveState);
			var currentGraphicModeParam = 0;
			var isValidEscapeSequence = false;
			++i;
			_hx_loop2: while(i < strLenMinus1) {
				++i;
				var ch2 = HxOverrides.cca(str,i);
				lookAhead.addChar(ch2);
				switch(ch2) {
				case 48:
					currentGraphicModeParam *= 10;
					break;
				case 49:
					currentGraphicModeParam = currentGraphicModeParam * 10 + 1;
					break;
				case 50:
					currentGraphicModeParam = currentGraphicModeParam * 10 + 2;
					break;
				case 51:
					currentGraphicModeParam = currentGraphicModeParam * 10 + 3;
					break;
				case 52:
					currentGraphicModeParam = currentGraphicModeParam * 10 + 4;
					break;
				case 53:
					currentGraphicModeParam = currentGraphicModeParam * 10 + 5;
					break;
				case 54:
					currentGraphicModeParam = currentGraphicModeParam * 10 + 6;
					break;
				case 55:
					currentGraphicModeParam = currentGraphicModeParam * 10 + 7;
					break;
				case 56:
					currentGraphicModeParam = currentGraphicModeParam * 10 + 8;
					break;
				case 57:
					currentGraphicModeParam = currentGraphicModeParam * 10 + 9;
					break;
				case 59:
					currentState.setGraphicModeParameter(currentGraphicModeParam);
					currentGraphicModeParam = 0;
					break;
				case 109:
					currentState.setGraphicModeParameter(currentGraphicModeParam);
					if(effectiveState.fgcolor != null || effectiveState.bgcolor != null || effectiveState.bold || effectiveState.underline || effectiveState.blink) {
						sb.add("</span>");
					}
					if(currentState.fgcolor != null || currentState.bgcolor != null || currentState.bold || currentState.underline || currentState.blink) {
						sb.add("<span " + styleOrClassAttribute + "=\"").add(currentState.toCSS(renderMethod)).add("\">");
					}
					effectiveState = currentState;
					isValidEscapeSequence = true;
					break _hx_loop2;
				default:
					break _hx_loop2;
				}
			}
			if(!isValidEscapeSequence) {
				sb.addChar(27).add("[").add(Std.string(lookAhead));
			}
		} else {
			sb.addChar(ch);
		}
	}
	if(effectiveState.fgcolor != null || effectiveState.bgcolor != null || effectiveState.bold || effectiveState.underline || effectiveState.blink) {
		sb.add("</span>");
	}
	return sb.toString();
};
hx_strings_Strings.appendIfMissing = function(str,suffix) {
	if(str == null) {
		return null;
	}
	if(str.length == 0) {
		return str + suffix;
	}
	if(hx_strings_Strings.endsWith(str,suffix)) {
		return str;
	}
	return str + suffix;
};
hx_strings_Strings.base64Encode = function(plain) {
	if(plain == null) {
		return null;
	}
	return haxe_crypto_Base64.encode(plain == null ? null : haxe_io_Bytes.ofString(plain));
};
hx_strings_Strings.base64Decode = function(encoded) {
	if(encoded == null) {
		return null;
	}
	return haxe_crypto_Base64.decode(encoded).toString();
};
hx_strings_Strings.charAt8 = function(str,pos,resultIfOutOfBound) {
	if(resultIfOutOfBound == null) {
		resultIfOutOfBound = "";
	}
	if(str == null || str.length == 0 || pos < 0 || pos >= (str == null ? 0 : str.length)) {
		return resultIfOutOfBound;
	}
	return str.charAt(pos);
};
hx_strings_Strings.charCodeAt8 = function(str,pos,resultIfOutOfBound) {
	if(resultIfOutOfBound == null) {
		resultIfOutOfBound = -1;
	}
	var strLen = str == null ? 0 : str.length;
	if(strLen == 0 || pos < 0 || pos >= strLen) {
		return resultIfOutOfBound;
	}
	return HxOverrides.cca(str,pos);
};
hx_strings_Strings.compact = function(str) {
	if(str == null || str.length == 0) {
		return str;
	}
	var sb = new hx_strings_StringBuilder();
	var needWhiteSpace = false;
	var _g = 0;
	var _g1 = hx_strings_Strings.toChars(str);
	while(_g < _g1.length) {
		var char = _g1[_g];
		++_g;
		if(char > 8 && char < 14 || char == 32) {
			if(sb.len != 0) {
				needWhiteSpace = true;
			}
			continue;
		} else if(needWhiteSpace) {
			sb.addChar(32);
			needWhiteSpace = false;
		}
		sb.addChar(char);
	}
	return sb.toString();
};
hx_strings_Strings.contains = function(searchIn,searchFor) {
	if(searchIn == null || searchFor == null) {
		return false;
	}
	if(searchFor == "") {
		return true;
	}
	return searchIn.indexOf(searchFor) > -1;
};
hx_strings_Strings.containsOnly = function(searchIn,allowedChars) {
	if(searchIn == null || searchIn.length == 0) {
		return true;
	}
	if(allowedChars == null) {
		return false;
	}
	var allowedCharsArray;
	var _g = allowedChars;
	switch(_g._hx_index) {
	case 0:
		var str = _g.v;
		allowedCharsArray = hx_strings_Strings.toChars(str);
		break;
	case 1:
		var chars = _g.v;
		allowedCharsArray = chars;
		break;
	}
	var _g = 0;
	var _g1 = hx_strings_Strings.toChars(searchIn);
	while(_g < _g1.length) {
		var ch = _g1[_g];
		++_g;
		if(allowedCharsArray.indexOf(ch) < 0) {
			return false;
		}
	}
	return true;
};
hx_strings_Strings.containsAll = function(searchIn,searchFor) {
	if(searchIn == null || searchFor == null) {
		return false;
	}
	var _g = 0;
	while(_g < searchFor.length) {
		var candidate = searchFor[_g];
		++_g;
		if(!(searchIn == null || candidate == null ? false : candidate == "" ? true : searchIn.indexOf(candidate) > -1)) {
			return false;
		}
	}
	return true;
};
hx_strings_Strings.containsAllIgnoreCase = function(searchIn,searchFor) {
	if(searchIn == null || searchFor == null) {
		return false;
	}
	searchIn = searchIn.toLowerCase();
	var _g = 0;
	while(_g < searchFor.length) {
		var candidate = searchFor[_g];
		++_g;
		var searchFor1 = candidate.toLowerCase();
		if(!(searchIn == null || searchFor1 == null ? false : searchFor1 == "" ? true : searchIn.indexOf(searchFor1) > -1)) {
			return false;
		}
	}
	return true;
};
hx_strings_Strings.containsAny = function(searchIn,searchFor) {
	if(searchIn == null || searchFor == null) {
		return false;
	}
	var _g = 0;
	while(_g < searchFor.length) {
		var candidate = searchFor[_g];
		++_g;
		if(searchIn == null || candidate == null ? false : candidate == "" ? true : searchIn.indexOf(candidate) > -1) {
			return true;
		}
	}
	return false;
};
hx_strings_Strings.containsAnyIgnoreCase = function(searchIn,searchFor) {
	if(searchIn == null || searchFor == null) {
		return false;
	}
	searchIn = searchIn.toLowerCase();
	var _g = 0;
	while(_g < searchFor.length) {
		var candidate = searchFor[_g];
		++_g;
		var searchFor1 = candidate.toLowerCase();
		if(searchIn == null || searchFor1 == null ? false : searchFor1 == "" ? true : searchIn.indexOf(searchFor1) > -1) {
			return true;
		}
	}
	return false;
};
hx_strings_Strings.containsNone = function(searchIn,searchFor) {
	return !hx_strings_Strings.containsAny(searchIn,searchFor);
};
hx_strings_Strings.containsNoneIgnoreCase = function(searchIn,searchFor) {
	return !hx_strings_Strings.containsAnyIgnoreCase(searchIn,searchFor);
};
hx_strings_Strings.containsWhitespaces = function(searchIn) {
	if(searchIn == null) {
		return false;
	}
	var _g = 0;
	var _g1 = hx_strings_Strings.toChars(searchIn);
	while(_g < _g1.length) {
		var ch = _g1[_g];
		++_g;
		if(ch > 8 && ch < 14 || ch == 32) {
			return true;
		}
	}
	return false;
};
hx_strings_Strings.countMatches = function(searchIn,searchFor,startAt) {
	if(startAt == null) {
		startAt = 0;
	}
	if(searchIn == null || searchIn.length == 0 || (searchFor == null || searchFor.length == 0) || startAt >= searchIn.length) {
		return 0;
	}
	if(startAt < 0) {
		startAt = 0;
	}
	var count = 0;
	var foundAt = startAt > -1 ? startAt - 1 : 0;
	while(true) {
		foundAt = searchIn.indexOf(searchFor,foundAt + 1);
		if(!(foundAt > -1)) {
			break;
		}
		++count;
	}
	return count;
};
hx_strings_Strings.countMatchesIgnoreCase = function(searchIn,searchFor,startAt) {
	if(startAt == null) {
		startAt = 0;
	}
	if(searchIn == null || searchIn.length == 0 || (searchFor == null || searchFor.length == 0) || startAt >= searchIn.length) {
		return 0;
	}
	if(startAt < 0) {
		startAt = 0;
	}
	searchIn = searchIn.toLowerCase();
	searchFor = searchFor.toLowerCase();
	var count = 0;
	var foundAt = startAt > -1 ? startAt - 1 : 0;
	while(true) {
		foundAt = searchIn.indexOf(searchFor,foundAt + 1);
		if(!(foundAt > -1)) {
			break;
		}
		++count;
	}
	return count;
};
hx_strings_Strings.compare = function(str,other) {
	if(str == null) {
		if(other == null) {
			return 0;
		} else {
			return -1;
		}
	}
	if(other == null) {
		if(str == null) {
			return 0;
		} else {
			return 1;
		}
	}
	if(str > other) {
		return 1;
	} else if(str == other) {
		return 0;
	} else {
		return -1;
	}
};
hx_strings_Strings.compareIgnoreCase = function(str,other) {
	if(str == null) {
		if(other == null) {
			return 0;
		} else {
			return -1;
		}
	}
	if(other == null) {
		if(str == null) {
			return 0;
		} else {
			return 1;
		}
	}
	str = hx_strings_Strings.toLowerCase8(str);
	other = hx_strings_Strings.toLowerCase8(other);
	if(str > other) {
		return 1;
	} else if(str == other) {
		return 0;
	} else {
		return -1;
	}
};
hx_strings_Strings.diff = function(left,right) {
	var diff = new hx_strings_StringDiff();
	diff.at = hx_strings_Strings.diffAt(left,right);
	diff.left = hx_strings_Strings.substr8(left,diff.at);
	diff.right = hx_strings_Strings.substr8(right,diff.at);
	return diff;
};
hx_strings_Strings.diffAt = function(str,other) {
	if(str == other) {
		return -1;
	}
	var strLen = str == null ? 0 : str.length;
	var otherLen = other == null ? 0 : other.length;
	if(strLen == 0 || otherLen == 0) {
		return 0;
	}
	var checkLen = strLen > otherLen ? otherLen : strLen;
	var _g = 0;
	var _g1 = checkLen;
	while(_g < _g1) {
		var i = _g++;
		if(HxOverrides.cca(str,i) != HxOverrides.cca(other,i)) {
			return i;
		}
	}
	return checkLen;
};
hx_strings_Strings.ellipsizeLeft = function(str,maxLength,ellipsis) {
	if(ellipsis == null) {
		ellipsis = "...";
	}
	if((str == null ? 0 : str.length) <= maxLength) {
		return str;
	}
	var ellipsisLen = ellipsis == null ? 0 : ellipsis.length;
	if(maxLength < ellipsisLen) {
		throw haxe_Exception.thrown("[maxLength] must not be smaller than " + ellipsisLen);
	}
	return ellipsis + hx_strings_Strings.right(str,maxLength - ellipsisLen);
};
hx_strings_Strings.ellipsizeMiddle = function(str,maxLength,ellipsis) {
	if(ellipsis == null) {
		ellipsis = "...";
	}
	var strLen = str == null ? 0 : str.length;
	if(strLen <= maxLength) {
		return str;
	}
	var ellipsisLen = ellipsis == null ? 0 : ellipsis.length;
	if(maxLength < ellipsisLen) {
		throw haxe_Exception.thrown("[maxLength] must not be smaller than " + ellipsisLen);
	}
	var maxStrLen = maxLength - ellipsisLen;
	var leftLen = Math.round(maxStrLen / 2);
	var rightLen = maxStrLen - leftLen;
	return ((str == null ? 0 : str.length) <= leftLen ? str : hx_strings_Strings.substring8(str,0,leftLen)) + ellipsis + hx_strings_Strings.right(str,rightLen);
};
hx_strings_Strings.ellipsizeRight = function(str,maxLength,ellipsis) {
	if(ellipsis == null) {
		ellipsis = "...";
	}
	if((str == null ? 0 : str.length) <= maxLength) {
		return str;
	}
	var ellipsisLen = ellipsis == null ? 0 : ellipsis.length;
	if(maxLength < ellipsisLen) {
		throw haxe_Exception.thrown("[maxLength] must not be smaller than " + ellipsisLen);
	}
	var len = maxLength - ellipsisLen;
	return ((str == null ? 0 : str.length) <= len ? str : hx_strings_Strings.substring8(str,0,len)) + ellipsis;
};
hx_strings_Strings.endsWith = function(searchIn,searchFor) {
	if(searchIn == null || searchFor == null) {
		return false;
	}
	return StringTools.endsWith(searchIn,searchFor);
};
hx_strings_Strings.endsWithAny = function(searchIn,searchFor) {
	if(searchIn == null || searchFor == null) {
		return false;
	}
	var _g = 0;
	while(_g < searchFor.length) {
		var candidate = searchFor[_g];
		++_g;
		if(candidate != null && hx_strings_Strings.endsWith(searchIn,candidate)) {
			return true;
		}
	}
	return false;
};
hx_strings_Strings.endsWithAnyIgnoreCase = function(searchIn,searchFor) {
	if(searchIn == null || searchFor == null) {
		return false;
	}
	searchIn = hx_strings_Strings.toLowerCase8(searchIn);
	var _g = 0;
	while(_g < searchFor.length) {
		var candidate = searchFor[_g];
		++_g;
		if(candidate != null && hx_strings_Strings.endsWith(searchIn,hx_strings_Strings.toLowerCase8(candidate))) {
			return true;
		}
	}
	return false;
};
hx_strings_Strings.endsWithIgnoreCase = function(searchIn,searchFor) {
	if(searchIn == null || searchFor == null) {
		return false;
	}
	return hx_strings_Strings.endsWith(searchIn.toLowerCase(),searchFor.toLowerCase());
};
hx_strings_Strings.equals = function(str,other) {
	return str == other;
};
hx_strings_Strings.equalsIgnoreCase = function(str,other) {
	return hx_strings_Strings.toLowerCase8(str) == hx_strings_Strings.toLowerCase8(other);
};
hx_strings_Strings.filter = function(str,filter,separator) {
	if(separator == null) {
		separator = "";
	}
	if(str == null || str.length == 0) {
		return str;
	}
	var _g = [];
	var _g1 = 0;
	var _g2 = hx_strings_Strings.split8(str,[separator]);
	while(_g1 < _g2.length) {
		var v = _g2[_g1];
		++_g1;
		if(filter(v)) {
			_g.push(v);
		}
	}
	return _g.join(separator);
};
hx_strings_Strings.filterChars = function(str,filter) {
	if(str == null || str.length == 0) {
		return str;
	}
	var _g = [];
	var _g1 = 0;
	var _g2 = hx_strings_Strings.toChars(str);
	while(_g1 < _g2.length) {
		var v = _g2[_g1];
		++_g1;
		if(filter(v)) {
			_g.push(v);
		}
	}
	var _this = _g;
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = String.fromCodePoint(_this[i]);
	}
	return result.join("");
};
hx_strings_Strings.getFuzzyDistance = function(left,right) {
	if(left == null || left.length == 0 || (right == null || right.length == 0)) {
		return 0;
	}
	left = hx_strings_Strings.toLowerCase8(left);
	right = hx_strings_Strings.toLowerCase8(right);
	var leftChars = hx_strings_Strings.toChars(left);
	var rightChars = hx_strings_Strings.toChars(right);
	var leftLastMatchAt = -100;
	var rightLastMatchAt = -100;
	var score = 0;
	var _g = 0;
	var _g1 = leftChars.length;
	while(_g < _g1) {
		var leftIdx = _g++;
		var leftChar = leftChars[leftIdx];
		var _g2 = rightLastMatchAt > -1 ? rightLastMatchAt + 1 : 0;
		var _g3 = rightChars.length;
		while(_g2 < _g3) {
			var rightIdx = _g2++;
			var rightChar = rightChars[rightIdx];
			if(leftChar == rightChar) {
				++score;
				if(leftLastMatchAt == leftIdx - 1 && rightLastMatchAt == rightIdx - 1) {
					score += 2;
				}
				leftLastMatchAt = leftIdx;
				rightLastMatchAt = rightIdx;
				break;
			}
		}
	}
	return score;
};
hx_strings_Strings.getLevenshteinDistance = function(left,right) {
	var leftLen = left == null ? 0 : left.length;
	var rightLen = right == null ? 0 : right.length;
	if(leftLen == 0) {
		return rightLen;
	}
	if(rightLen == 0) {
		return leftLen;
	}
	if(leftLen > rightLen) {
		var tmp = left;
		left = right;
		right = tmp;
		var tmpLen = leftLen;
		leftLen = rightLen;
		rightLen = tmpLen;
	}
	var prevCosts = [];
	var costs = [];
	var _g = 0;
	var _g1 = leftLen + 1;
	while(_g < _g1) {
		var leftIdx = _g++;
		prevCosts.push(leftIdx);
		costs.push(0);
	}
	var leftChars = hx_strings_Strings.toChars(left);
	var rightChars = hx_strings_Strings.toChars(right);
	var min = function(a,b) {
		if(a > b) {
			return b;
		} else {
			return a;
		}
	};
	var _g = 1;
	var _g1 = rightLen + 1;
	while(_g < _g1) {
		var rightIdx = _g++;
		var rightChar = rightChars[rightIdx - 1];
		costs[0] = rightIdx;
		var _g2 = 1;
		var _g3 = leftLen + 1;
		while(_g2 < _g3) {
			var leftIdx = _g2++;
			var leftIdxMinus1 = leftIdx - 1;
			var cost = leftChars[leftIdxMinus1] == rightChar ? 0 : 1;
			costs[leftIdx] = min(min(costs[leftIdxMinus1] + 1,prevCosts[leftIdx] + 1),prevCosts[leftIdxMinus1] + cost);
		}
		var tmp = prevCosts;
		prevCosts = costs;
		costs = tmp;
	}
	return prevCosts[leftLen];
};
hx_strings_Strings.getLongestCommonSubstring = function(left,right) {
	if(left == null || right == null) {
		return null;
	}
	var leftLen = left == null ? 0 : left.length;
	var rightLen = right == null ? 0 : right.length;
	if(leftLen == 0 || rightLen == 0) {
		return "";
	}
	var leftChars = hx_strings_Strings.toChars(left);
	var rightChars = hx_strings_Strings.toChars(right);
	var leftSubStartAt = 0;
	var leftSubLen = 0;
	var _g = 0;
	var _g1 = leftLen;
	while(_g < _g1) {
		var leftIdx = _g++;
		var _g2 = 0;
		var _g3 = rightLen;
		while(_g2 < _g3) {
			var rightIdx = _g2++;
			var currLen = 0;
			while(leftChars[leftIdx + currLen] == rightChars[rightIdx + currLen]) {
				++currLen;
				if(leftIdx + currLen >= leftLen || rightIdx + currLen >= rightLen) {
					break;
				}
			}
			if(currLen > leftSubLen) {
				leftSubLen = currLen;
				leftSubStartAt = leftIdx;
			}
		}
	}
	return hx_strings_Strings.substr8(left,leftSubStartAt,leftSubLen);
};
hx_strings_Strings.hashCode = function(str,algo) {
	if(str == null || str.length == 0) {
		return 0;
	}
	if(algo == null) {
		algo = hx_strings_HashCodeAlgorithm.PLATFORM_SPECIFIC;
	}
	if(algo == null) {
		return haxe_crypto_Crc32.make(str == null ? null : haxe_io_Bytes.ofString(str));
	} else {
		switch(algo._hx_index) {
		case 1:
			return haxe_crypto_Adler32.make(str == null ? null : haxe_io_Bytes.ofString(str));
		case 2:
			return haxe_crypto_Crc32.make(str == null ? null : haxe_io_Bytes.ofString(str));
		case 3:
			var hc = 5381;
			var _g = 0;
			var _g1 = hx_strings_Strings.toChars(str);
			while(_g < _g1.length) {
				var ch = _g1[_g];
				++_g;
				hc = ((hc << 5) + hc | 0) ^ ch;
			}
			return hc;
		case 4:
			var hc = 0;
			var _g = 0;
			var _g1 = hx_strings_Strings.toChars(str);
			while(_g < _g1.length) {
				var ch = _g1[_g];
				++_g;
				hc = ((hc << 5) - hc | 0) + ch | 0;
			}
			return hc;
		case 5:
			var hc = 0;
			var _g = 0;
			var _g1 = hx_strings_Strings.toChars(str);
			while(_g < _g1.length) {
				var ch = _g1[_g];
				++_g;
				hc = (((hc << 6) + (hc << 16) | 0) - hc | 0) + ch | 0;
			}
			return hc;
		default:
			return haxe_crypto_Crc32.make(str == null ? null : haxe_io_Bytes.ofString(str));
		}
	}
};
hx_strings_Strings.htmlDecode = function(str) {
	if(str == null || str.length == 0) {
		return str;
	}
	var _this = hx_strings_Strings.REGEX_HTML_UNESCAPE;
	return new hx_strings__$Pattern_MatcherImpl(_this.ereg,_this.pattern,_this.options,str).map(function(m) {
		var match = m.matched();
		switch(match) {
		case "&amp;":
			return "&";
		case "&apos;":
			return "'";
		case "&gt;":
			return ">";
		case "&lt;":
			return "<";
		case "&nbsp;":
			return " ";
		case "&quot;":
			return "\"";
		default:
			var this1 = Std.parseInt(hx_strings_Strings.substr8(match,2,(match == null ? 0 : match.length) - 3));
			return String.fromCodePoint(this1);
		}
	});
};
hx_strings_Strings.htmlEncode = function(str,escapeQuotes) {
	if(escapeQuotes == null) {
		escapeQuotes = false;
	}
	if(str == null || str.length == 0) {
		return str;
	}
	var sb = new hx_strings_StringBuilder();
	var isFirstSpace = true;
	var _g = 0;
	var _g1 = str == null ? 0 : str.length;
	while(_g < _g1) {
		var i = _g++;
		var ch = HxOverrides.cca(str,i);
		switch(ch) {
		case 32:
			if(isFirstSpace) {
				sb.add(" ");
				isFirstSpace = false;
			} else {
				sb.add("&nbsp;");
			}
			break;
		case 34:
			sb.add(escapeQuotes ? "&quot;" : "\"");
			break;
		case 38:
			sb.add("&amp;");
			break;
		case 39:
			sb.add(escapeQuotes ? "&#039;" : "'");
			break;
		case 60:
			sb.add("&lt;");
			break;
		case 62:
			sb.add("&gt;");
			break;
		default:
			if(ch > 127) {
				sb.add("&#").add(Std.string(ch)).add(";");
			} else {
				sb.addChar(ch);
			}
		}
		if(ch != 32) {
			isFirstSpace = true;
		}
	}
	return sb.toString();
};
hx_strings_Strings.insertAt = function(str,pos,insertion) {
	if(str == null) {
		return null;
	}
	var strLen = str == null ? 0 : str.length;
	if(pos < 0) {
		pos = strLen + pos;
	}
	if(pos < 0 || pos > strLen) {
		throw haxe_Exception.thrown("Absolute value of [pos] must be <= str.length");
	}
	if(insertion == null || insertion.length == 0) {
		return str;
	}
	return hx_strings_Strings.substring8(str,0,pos) + insertion + hx_strings_Strings.substring8(str,pos);
};
hx_strings_Strings.ifBlank = function(str,fallback) {
	if(str == null ? true : StringTools.trim(str).length == 0) {
		return fallback;
	} else {
		return str;
	}
};
hx_strings_Strings.ifEmpty = function(str,fallback) {
	if(str == null || str.length == 0) {
		return fallback;
	} else {
		return str;
	}
};
hx_strings_Strings.ifNull = function(str,fallback) {
	if(str == null) {
		return fallback;
	} else {
		return str;
	}
};
hx_strings_Strings.indentLines = function(str,indentWith) {
	if(str == null) {
		return null;
	}
	if(str.length == 0 || (indentWith == null || indentWith.length == 0)) {
		return str;
	}
	var isFirstLine = true;
	var sb = new hx_strings_StringBuilder();
	var _g = 0;
	var _g1 = hx_strings_Strings.REGEX_SPLIT_LINES.ereg.split(str);
	while(_g < _g1.length) {
		var line = _g1[_g];
		++_g;
		if(isFirstLine) {
			isFirstLine = false;
		} else {
			sb.newLine();
		}
		sb.add(indentWith);
		sb.add(line);
	}
	return sb.toString();
};
hx_strings_Strings.indexOf8 = function(str,searchFor,startAt) {
	if(startAt == null) {
		startAt = 0;
	}
	if(str == null || searchFor == null) {
		return -1;
	}
	var strLen = str == null ? 0 : str.length;
	var searchForLen = searchFor == null ? 0 : searchFor.length;
	if(startAt < 0) {
		startAt = 0;
	}
	if(searchForLen == 0) {
		if(startAt == 0) {
			return 0;
		}
		if(startAt > 0 && startAt < strLen) {
			return startAt;
		}
		return strLen;
	}
	if(startAt >= strLen) {
		return -1;
	}
	return str.indexOf(searchFor,startAt);
};
hx_strings_Strings.isBlank = function(str) {
	if(str == null) {
		return true;
	} else {
		return StringTools.trim(str).length == 0;
	}
};
hx_strings_Strings.isDigits = function(str) {
	if(str == null || str.length == 0) {
		return false;
	}
	var _g = 0;
	var _g1 = str == null ? 0 : str.length;
	while(_g < _g1) {
		var i = _g++;
		var this1 = HxOverrides.cca(str,i);
		if(!(this1 > 47 && this1 < 58)) {
			return false;
		}
	}
	return true;
};
hx_strings_Strings.isEmpty = function(str) {
	if(str != null) {
		return str.length == 0;
	} else {
		return true;
	}
};
hx_strings_Strings.isNotBlank = function(str) {
	if(str != null) {
		return StringTools.trim(str).length > 0;
	} else {
		return false;
	}
};
hx_strings_Strings.isNotEmpty = function(str) {
	if(str != null) {
		return str.length > 0;
	} else {
		return false;
	}
};
hx_strings_Strings.isLowerCase = function(str) {
	if(str == null || str.length == 0) {
		return false;
	}
	return str == hx_strings_Strings.toLowerCase8(str);
};
hx_strings_Strings.isUpperCase = function(str) {
	if(str == null || str.length == 0) {
		return false;
	}
	return str == hx_strings_Strings.toUpperCase8(str);
};
hx_strings_Strings.iterate = function(str,callback,separator) {
	if(separator == null) {
		separator = "";
	}
	if(str == null || str.length == 0) {
		return;
	}
	var _g = 0;
	var _g1 = hx_strings_Strings.split8(str,[separator]);
	while(_g < _g1.length) {
		var sub = _g1[_g];
		++_g;
		callback(sub);
	}
};
hx_strings_Strings.iterateChars = function(str,callback) {
	if(str == null || str.length == 0) {
		return;
	}
	var _g = 0;
	var _g1 = str == null ? 0 : str.length;
	while(_g < _g1) {
		var i = _g++;
		callback(HxOverrides.cca(str,i));
	}
};
hx_strings_Strings.lastIndexOf8 = function(str,searchFor,startAt) {
	if(str == null || searchFor == null) {
		return -1;
	}
	var strLen = str == null ? 0 : str.length;
	var searchForLen = searchFor == null ? 0 : searchFor.length;
	if(startAt == null) {
		startAt = strLen;
	}
	if(searchForLen == 0) {
		if(startAt < 0) {
			return 0;
		}
		if(startAt > strLen) {
			return strLen;
		}
		return startAt;
	}
	if(startAt < 0) {
		return -1;
	} else if(startAt >= strLen) {
		startAt = strLen - 1;
	}
	var strNeedsUTF8Workaround = str.length != strLen;
	var searchForNeedsUTF8Workaround = searchFor.length != searchForLen;
	if(!strNeedsUTF8Workaround && !searchForNeedsUTF8Workaround) {
		return str.lastIndexOf(searchFor,startAt);
	}
	if(searchForNeedsUTF8Workaround && !strNeedsUTF8Workaround) {
		return -1;
	}
	var searchForChars = hx_strings_Strings.toChars(searchFor);
	startAt += searchForLen - 1;
	var searchForPosToCheck = searchForLen - 1;
	var strPos = strLen;
	while(strPos-- > 0) {
		if(strPos > startAt) {
			continue;
		}
		var strCh = HxOverrides.cca(str,strPos);
		if(strCh == searchForChars[searchForPosToCheck]) {
			if(searchForPosToCheck == 0) {
				return strPos;
			}
			--searchForPosToCheck;
		} else {
			searchForPosToCheck = searchForLen - 1;
		}
	}
	return -1;
};
hx_strings_Strings.length8 = function(str) {
	if(str == null) {
		return 0;
	}
	return str.length;
};
hx_strings_Strings.left = function(str,len) {
	if((str == null ? 0 : str.length) <= len) {
		return str;
	}
	return hx_strings_Strings.substring8(str,0,len);
};
hx_strings_Strings.lpad = function(str,targetLength,padStr,canOverflow) {
	if(canOverflow == null) {
		canOverflow = true;
	}
	if(padStr == null) {
		padStr = " ";
	}
	var strLen = str == null ? 0 : str.length;
	if(str == null || strLen > targetLength) {
		return str;
	}
	if(padStr == null || padStr.length == 0) {
		padStr = " ";
	}
	var sb = [str];
	var padLen = padStr == null ? 0 : padStr.length;
	while(strLen < targetLength) {
		sb.unshift(padStr);
		strLen += padLen;
	}
	if(canOverflow) {
		return sb.join("");
	}
	return hx_strings_Strings.right(sb.join(""),targetLength);
};
hx_strings_Strings.map = function(str,mapper,separator) {
	if(separator == null) {
		separator = "";
	}
	if(str == null) {
		return null;
	}
	if(separator == null) {
		throw haxe_Exception.thrown("[separator] must not be null");
	}
	var _this = hx_strings_Strings.split8(str,[separator]);
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = mapper(_this[i]);
	}
	return result;
};
hx_strings_Strings.prependIfMissing = function(str,suffix) {
	if(str == null) {
		return null;
	}
	if(str.length == 0) {
		return suffix + str;
	}
	if(hx_strings_Strings.startsWith(str,suffix)) {
		return str;
	}
	return suffix + str;
};
hx_strings_Strings.quoteDouble = function(str) {
	if(str == null) {
		return str;
	}
	if(str.length == 0) {
		return "\"\"";
	}
	if(!(str == null ? false : str.indexOf("\"") > -1)) {
		return "\"" + str + "\"";
	}
	return "\"" + hx_strings_Strings.replaceAll(str,"\"","\\\"") + "\"";
};
hx_strings_Strings.quoteSingle = function(str) {
	if(str == null) {
		return str;
	}
	if(str.length == 0) {
		return "''";
	}
	if(!(str == null ? false : str.indexOf("'") > -1)) {
		return "'" + str + "'";
	}
	return "'" + hx_strings_Strings.replaceAll(str,"'","\\'") + "'";
};
hx_strings_Strings.removeAfter = function(str,searchFor) {
	return hx_strings_Strings.substringBefore(str,searchFor);
};
hx_strings_Strings.removeAfterLast = function(str,searchFor) {
	return hx_strings_Strings.substringBeforeLast(str,searchFor);
};
hx_strings_Strings.removeAfterIgnoreCase = function(str,searchFor) {
	return hx_strings_Strings.substringBeforeIgnoreCase(str,searchFor);
};
hx_strings_Strings.removeAfterLastIgnoreCase = function(str,searchFor) {
	return hx_strings_Strings.substringBeforeLastIgnoreCase(str,searchFor);
};
hx_strings_Strings.removeAt = function(str,pos,length) {
	if(str == null || str.length == 0 || length < 1) {
		return str;
	}
	var strLen = str == null ? 0 : str.length;
	if(pos < 0) {
		pos = strLen + pos;
	}
	if(pos < 0) {
		throw haxe_Exception.thrown("[pos] must be smaller than -1 * str.length");
	}
	if(pos + length >= strLen) {
		return hx_strings_Strings.substring8(str,0,pos);
	}
	return hx_strings_Strings.substring8(str,0,pos) + hx_strings_Strings.substring8(str,pos + length);
};
hx_strings_Strings.removeBefore = function(str,searchFor) {
	return hx_strings_Strings.substringAfter(str,searchFor);
};
hx_strings_Strings.removeBeforeLast = function(str,searchFor) {
	return hx_strings_Strings.substringAfterLast(str,searchFor);
};
hx_strings_Strings.removeBeforeIgnoreCase = function(str,searchFor) {
	return hx_strings_Strings.substringAfterIgnoreCase(str,searchFor);
};
hx_strings_Strings.removeBeforeLastIgnoreCase = function(str,searchFor) {
	return hx_strings_Strings.substringAfterLastIgnoreCase(str,searchFor);
};
hx_strings_Strings.removeAll = function(searchIn,searchFor) {
	return hx_strings_Strings.replaceAll(searchIn,searchFor,"");
};
hx_strings_Strings.removeFirst = function(searchIn,searchFor) {
	return hx_strings_Strings.replaceFirst(searchIn,searchFor,"");
};
hx_strings_Strings.removeFirstIgnoreCase = function(searchIn,searchFor) {
	return hx_strings_Strings.replaceFirstIgnoreCase(searchIn,searchFor,"");
};
hx_strings_Strings.removeAnsi = function(str) {
	if(str == null || str.length == 0) {
		return str;
	}
	return str.replace(hx_strings_Strings.REGEX_ANSI_ESC.ereg.r,"");
};
hx_strings_Strings.removeLeading = function(searchIn,searchFor) {
	if(searchIn == null || searchIn.length == 0 || (searchFor == null || searchFor.length == 0)) {
		return searchIn;
	}
	while(hx_strings_Strings.startsWith(searchIn,searchFor)) searchIn = searchIn.substring(searchFor.length,searchIn.length);
	return searchIn;
};
hx_strings_Strings.removeTags = function(xml) {
	if(xml == null || xml.length == 0) {
		return xml;
	}
	return xml.replace(hx_strings_Strings.REGEX_REMOVE_XML_TAGS.ereg.r,"");
};
hx_strings_Strings.removeTrailing = function(searchIn,searchFor) {
	if(searchIn == null || searchIn.length == 0 || (searchFor == null || searchFor.length == 0)) {
		return searchIn;
	}
	while(hx_strings_Strings.endsWith(searchIn,searchFor)) searchIn = searchIn.substring(0,searchIn.length - searchFor.length);
	return searchIn;
};
hx_strings_Strings.repeat = function(str,count,separator) {
	if(separator == null) {
		separator = "";
	}
	if(str == null) {
		return null;
	}
	if(count < 1) {
		return "";
	}
	if(count == 1) {
		return str;
	}
	var _g = [];
	var _g1 = 0;
	var _g2 = count;
	while(_g1 < _g2) {
		var i = _g1++;
		_g.push(str);
	}
	return _g.join(separator);
};
hx_strings_Strings.replaceAll = function(searchIn,searchFor,replaceWith) {
	if(searchIn == null || (searchIn == null || searchIn.length == 0) || searchFor == null) {
		return searchIn;
	}
	if(replaceWith == null) {
		replaceWith = "null";
	}
	return StringTools.replace(searchIn,searchFor,replaceWith);
};
hx_strings_Strings.replaceFirst = function(searchIn,searchFor,replaceWith) {
	if(searchIn == null || (searchIn == null || searchIn.length == 0) || searchFor == null) {
		return searchIn;
	}
	if(replaceWith == null) {
		replaceWith = "null";
	}
	var foundAt;
	if(searchFor.length == 0) {
		if((searchIn == null ? 0 : searchIn.length) > 1) {
			foundAt = 1;
		} else {
			return searchIn;
		}
	} else {
		foundAt = hx_strings_Strings.indexOf8(searchIn,searchFor);
	}
	return hx_strings_Strings.substr8(searchIn,0,foundAt) + replaceWith + hx_strings_Strings.substr8(searchIn,foundAt + (searchFor == null ? 0 : searchFor.length));
};
hx_strings_Strings.replaceFirstIgnoreCase = function(searchIn,searchFor,replaceWith) {
	if(searchIn == null || (searchIn == null || searchIn.length == 0) || searchFor == null) {
		return searchIn;
	}
	if(replaceWith == null) {
		replaceWith = "null";
	}
	searchFor = searchFor.toLowerCase();
	var foundAt;
	if(searchFor.length == 0) {
		if((searchIn == null ? 0 : searchIn.length) > 1) {
			foundAt = 1;
		} else {
			return searchIn;
		}
	} else {
		foundAt = hx_strings_Strings.indexOf8(searchIn.toLowerCase(),searchFor);
	}
	return hx_strings_Strings.substr8(searchIn,0,foundAt) + replaceWith + hx_strings_Strings.substr8(searchIn,foundAt + (searchFor == null ? 0 : searchFor.length));
};
hx_strings_Strings.reverse = function(str) {
	if(str == null || str.length == 0) {
		return str;
	}
	var chars = hx_strings_Strings.split8(str,[""]);
	chars.reverse();
	return chars.join("");
};
hx_strings_Strings.right = function(str,len) {
	if(str == null || str.length == 0) {
		return str;
	}
	return hx_strings_Strings.substring8(str,(str == null ? 0 : str.length) - len);
};
hx_strings_Strings.rpad = function(str,targetLength,padStr,canOverflow) {
	if(canOverflow == null) {
		canOverflow = true;
	}
	if(padStr == null) {
		padStr = " ";
	}
	var strLen = str == null ? 0 : str.length;
	if(str == null || strLen > targetLength) {
		return str;
	}
	if(padStr == null || padStr.length == 0) {
		padStr = " ";
	}
	var padLen = padStr == null ? 0 : padStr.length;
	var sb = new hx_strings_StringBuilder(str);
	while(strLen < targetLength) {
		sb.add(padStr);
		strLen += padLen;
	}
	if(canOverflow) {
		return sb.toString();
	}
	var str = sb.toString();
	if((str == null ? 0 : str.length) <= targetLength) {
		return str;
	} else {
		return hx_strings_Strings.substring8(str,0,targetLength);
	}
};
hx_strings_Strings.split8 = function(str,separator,maxParts) {
	if(maxParts == null) {
		maxParts = 0;
	}
	if(str == null || separator == null) {
		return null;
	}
	var strLen = str == null ? 0 : str.length;
	if(strLen == 0) {
		return [];
	}
	var _g = [];
	var _g1 = 0;
	var _g2 = separator;
	while(_g1 < _g2.length) {
		var v = _g2[_g1];
		++_g1;
		if(v != null) {
			_g.push(v);
		}
	}
	var separators = _g;
	if(separators.length == 0) {
		return null;
	}
	if(maxParts <= 0 && separators.length == 1) {
		return str.split(separators[0]);
	}
	if(separators.indexOf("") > -1) {
		if(maxParts <= 0) {
			var _g = [];
			var _g1 = 0;
			var _g2 = strLen;
			while(_g1 < _g2) {
				var i = _g1++;
				_g.push(HxOverrides.substr(str,i,1));
			}
			return _g;
		}
		if(maxParts > strLen) {
			maxParts = strLen;
		}
		--maxParts;
		var _g = [];
		var _g1 = 0;
		var _g2 = maxParts;
		while(_g1 < _g2) {
			var i = _g1++;
			_g.push(HxOverrides.substr(str,i,1));
		}
		var result = _g;
		result.push(HxOverrides.substr(str,maxParts,strLen - maxParts));
		return result;
	}
	var _g = [];
	var _g1 = 0;
	while(_g1 < separators.length) {
		var sep = separators[_g1];
		++_g1;
		_g.push(sep == null ? 0 : sep.length);
	}
	var separatorsLengths = _g;
	var lastFoundAt = 0;
	var result = [];
	var resultCount = 0;
	while(true) {
		var separatorLen = 0;
		var foundAt = -1;
		var _g = 0;
		var _g1 = separators.length;
		while(_g < _g1) {
			var i = _g++;
			var sepFoundAt = hx_strings_Strings.indexOf8(str,separators[i],lastFoundAt);
			if(sepFoundAt != -1) {
				if(foundAt == -1 || sepFoundAt < foundAt) {
					foundAt = sepFoundAt;
					separatorLen = separatorsLengths[i];
				}
			}
		}
		++resultCount;
		if(foundAt == -1 || resultCount == maxParts) {
			result.push(HxOverrides.substr(str,lastFoundAt,strLen - lastFoundAt));
			break;
		}
		result.push(HxOverrides.substr(str,lastFoundAt,foundAt - lastFoundAt));
		lastFoundAt = foundAt + separatorLen;
	}
	return result;
};
hx_strings_Strings.splitAt = function(str,splitPos) {
	if(str == null) {
		return null;
	}
	if(splitPos == null || splitPos.length == 0) {
		return [str];
	}
	var strLen = str == null ? 0 : str.length;
	if(strLen == 0) {
		return [str];
	}
	var pos = [];
	var _g = 0;
	var _g1 = splitPos;
	while(_g < _g1.length) {
		var p = _g1[_g];
		++_g;
		if(p < 0) {
			p = strLen + p;
		}
		if(p < 0 || p >= strLen) {
			continue;
		}
		if(pos.indexOf(p) > -1) {
			continue;
		}
		pos.push(p);
	}
	pos.sort(function(a,b) {
		if(a < b) {
			return -1;
		} else if(a > b) {
			return 1;
		} else {
			return 0;
		}
	});
	var result = [];
	var lastPos = 0;
	var _g = 0;
	while(_g < pos.length) {
		var p = pos[_g];
		++_g;
		var chunk = hx_strings_Strings.substring8(str,lastPos,p);
		if(chunk != null && chunk.length > 0) {
			result.push(chunk);
		}
		lastPos = p;
	}
	var chunk = hx_strings_Strings.substring8(str,lastPos);
	if(chunk != null && chunk.length > 0) {
		result.push(chunk);
	}
	return result;
};
hx_strings_Strings.splitEvery = function(str,count) {
	if(str == null) {
		return null;
	}
	if(count < 1) {
		throw haxe_Exception.thrown("[count] must be greater than 0");
	}
	var strLen = str == null ? 0 : str.length;
	if(strLen == 0 || count >= strLen) {
		return [str];
	}
	var result = [];
	var pos = 0;
	while(true) {
		var chunk = hx_strings_Strings.substr8(str,pos,count);
		pos += count;
		if(chunk == null || chunk.length == 0) {
			break;
		}
		result.push(chunk);
	}
	return result;
};
hx_strings_Strings.splitLines = function(str) {
	if(str == null || str.length == 0) {
		return [];
	} else {
		return hx_strings_Strings.REGEX_SPLIT_LINES.ereg.split(str);
	}
};
hx_strings_Strings.startsWith = function(searchIn,searchFor) {
	if(searchIn == null || searchFor == null) {
		return false;
	}
	if(searchFor == null || searchFor.length == 0 || searchIn == searchFor) {
		return true;
	}
	return StringTools.startsWith(searchIn,searchFor);
};
hx_strings_Strings.startsWithAny = function(searchIn,searchFor) {
	if(searchIn == null || searchFor == null) {
		return false;
	}
	var _g = 0;
	while(_g < searchFor.length) {
		var candidate = searchFor[_g];
		++_g;
		if(candidate != null && hx_strings_Strings.startsWith(searchIn,candidate)) {
			return true;
		}
	}
	return false;
};
hx_strings_Strings.startsWithAnyIgnoreCase = function(searchIn,searchFor) {
	if(searchIn == null || searchFor == null) {
		return false;
	}
	searchIn = hx_strings_Strings.toLowerCase8(searchIn);
	var _g = 0;
	while(_g < searchFor.length) {
		var candidate = searchFor[_g];
		++_g;
		if(candidate != null && hx_strings_Strings.startsWith(searchIn,hx_strings_Strings.toLowerCase8(candidate))) {
			return true;
		}
	}
	return false;
};
hx_strings_Strings.startsWithIgnoreCase = function(searchIn,searchFor) {
	if(searchIn == null || searchFor == null) {
		return false;
	}
	if(searchFor == null || searchFor.length == 0) {
		return true;
	}
	return hx_strings_Strings.startsWith(searchIn.toLowerCase(),searchFor.toLowerCase());
};
hx_strings_Strings.substr8 = function(str,startAt,len) {
	if(str == null || str.length == 0) {
		return str;
	}
	if(len == null) {
		len = str == null ? 0 : str.length;
	}
	if(len <= 0) {
		return "";
	}
	if(startAt < 0) {
		startAt += str == null ? 0 : str.length;
		if(startAt < 0) {
			startAt = 0;
		}
	}
	return HxOverrides.substr(str,startAt,len);
};
hx_strings_Strings.substring8 = function(str,startAt,endAt) {
	if(str == null || str.length == 0) {
		return str;
	}
	if(endAt == null) {
		endAt = str == null ? 0 : str.length;
	}
	return str.substring(startAt,endAt);
};
hx_strings_Strings.substringAfter = function(str,searchFor,notFoundDefault) {
	if(notFoundDefault == null) {
		notFoundDefault = 2;
	}
	if(str == null) {
		return null;
	}
	if(str == "" || (searchFor == null || searchFor.length == 0)) {
		switch(notFoundDefault) {
		case 1:
			return null;
		case 2:
			return "";
		case 3:
			return str;
		}
	}
	var foundAt = str.indexOf(searchFor);
	if(foundAt == -1) {
		switch(notFoundDefault) {
		case 1:
			return null;
		case 2:
			return "";
		case 3:
			return str;
		}
	}
	return str.substring(foundAt + searchFor.length);
};
hx_strings_Strings.substringAfterIgnoreCase = function(str,searchFor,notFoundDefault) {
	if(notFoundDefault == null) {
		notFoundDefault = 2;
	}
	if(str == null) {
		return null;
	}
	if(str == "" || (searchFor == null || searchFor.length == 0)) {
		switch(notFoundDefault) {
		case 1:
			return null;
		case 2:
			return "";
		case 3:
			return str;
		}
	}
	searchFor = searchFor.toLowerCase();
	var foundAt = str.toLowerCase().indexOf(searchFor);
	if(foundAt == -1) {
		switch(notFoundDefault) {
		case 1:
			return null;
		case 2:
			return "";
		case 3:
			return str;
		}
	}
	return str.substring(foundAt + searchFor.length);
};
hx_strings_Strings.substringBetween = function(str,after,before,notFoundDefault) {
	if(notFoundDefault == null) {
		notFoundDefault = 2;
	}
	if(str == null) {
		return null;
	}
	if(before == null) {
		before = after;
	}
	if(str == "" || (after == null || after.length == 0) || (before == null || before.length == 0)) {
		switch(notFoundDefault) {
		case 1:
			return null;
		case 2:
			return "";
		case 3:
			return str;
		}
	}
	var foundAfterAt = str.indexOf(after);
	if(foundAfterAt == -1) {
		switch(notFoundDefault) {
		case 1:
			return null;
		case 2:
			return "";
		case 3:
			return str;
		}
	}
	var foundBeforeAt = str.indexOf(before,foundAfterAt + after.length);
	if(foundBeforeAt == -1) {
		switch(notFoundDefault) {
		case 1:
			return null;
		case 2:
			return "";
		case 3:
			return str;
		}
	}
	return str.substring(foundAfterAt + after.length,foundBeforeAt);
};
hx_strings_Strings.substringBetweenIgnoreCase = function(str,after,before,notFoundDefault) {
	if(notFoundDefault == null) {
		notFoundDefault = 2;
	}
	if(str == null) {
		return null;
	}
	if(before == null) {
		before = after;
	}
	if(str == "" || (after == null || after.length == 0) || (before == null || before.length == 0)) {
		switch(notFoundDefault) {
		case 1:
			return null;
		case 2:
			return "";
		case 3:
			return str;
		}
	}
	var strLower = hx_strings_Strings.toLowerCase8(str);
	after = hx_strings_Strings.toLowerCase8(after);
	before = hx_strings_Strings.toLowerCase8(before);
	var foundAfterAt = strLower.indexOf(after);
	if(foundAfterAt == -1) {
		switch(notFoundDefault) {
		case 1:
			return null;
		case 2:
			return "";
		case 3:
			return str;
		}
	}
	var foundBeforeAt = strLower.indexOf(before,foundAfterAt + after.length);
	if(foundBeforeAt == -1) {
		switch(notFoundDefault) {
		case 1:
			return null;
		case 2:
			return "";
		case 3:
			return str;
		}
	}
	return str.substring(foundAfterAt + after.length,foundBeforeAt);
};
hx_strings_Strings.substringAfterLast = function(str,searchFor,notFoundDefault) {
	if(notFoundDefault == null) {
		notFoundDefault = 2;
	}
	if(str == null) {
		return null;
	}
	if(str == "" || (searchFor == null || searchFor.length == 0)) {
		switch(notFoundDefault) {
		case 1:
			return null;
		case 2:
			return "";
		case 3:
			return str;
		}
	}
	var foundAt = str.lastIndexOf(searchFor);
	if(foundAt == -1) {
		switch(notFoundDefault) {
		case 1:
			return null;
		case 2:
			return "";
		case 3:
			return str;
		}
	}
	return str.substring(foundAt + searchFor.length);
};
hx_strings_Strings.substringAfterLastIgnoreCase = function(str,searchFor,notFoundDefault) {
	if(notFoundDefault == null) {
		notFoundDefault = 2;
	}
	if(str == null) {
		return null;
	}
	if(str == "" || (searchFor == null || searchFor.length == 0)) {
		switch(notFoundDefault) {
		case 1:
			return null;
		case 2:
			return "";
		case 3:
			return str;
		}
	}
	searchFor = searchFor.toLowerCase();
	var foundAt = str.toLowerCase().lastIndexOf(searchFor);
	if(foundAt == -1) {
		switch(notFoundDefault) {
		case 1:
			return null;
		case 2:
			return "";
		case 3:
			return str;
		}
	}
	return str.substring(foundAt + searchFor.length);
};
hx_strings_Strings.substringBefore = function(str,searchFor,notFoundDefault) {
	if(notFoundDefault == null) {
		notFoundDefault = 2;
	}
	if(str == null) {
		return null;
	}
	if(str == "" || (searchFor == null || searchFor.length == 0)) {
		switch(notFoundDefault) {
		case 1:
			return null;
		case 2:
			return "";
		case 3:
			return str;
		}
	}
	var foundAt = str.indexOf(searchFor);
	if(foundAt == -1) {
		switch(notFoundDefault) {
		case 1:
			return null;
		case 2:
			return "";
		case 3:
			return str;
		}
	}
	return str.substring(0,foundAt);
};
hx_strings_Strings.substringBeforeIgnoreCase = function(str,searchFor,notFoundDefault) {
	if(notFoundDefault == null) {
		notFoundDefault = 2;
	}
	if(str == null) {
		return null;
	}
	if(str == "" || (searchFor == null || searchFor.length == 0)) {
		switch(notFoundDefault) {
		case 1:
			return null;
		case 2:
			return "";
		case 3:
			return str;
		}
	}
	searchFor = searchFor.toLowerCase();
	var foundAt = str.toLowerCase().indexOf(searchFor);
	if(foundAt == -1) {
		switch(notFoundDefault) {
		case 1:
			return null;
		case 2:
			return "";
		case 3:
			return str;
		}
	}
	return str.substring(0,foundAt);
};
hx_strings_Strings.substringBeforeLast = function(str,searchFor,notFoundDefault) {
	if(notFoundDefault == null) {
		notFoundDefault = 2;
	}
	if(str == null) {
		return null;
	}
	if(str == "" || (searchFor == null || searchFor.length == 0)) {
		switch(notFoundDefault) {
		case 1:
			return null;
		case 2:
			return "";
		case 3:
			return str;
		}
	}
	var foundAt = str.lastIndexOf(searchFor);
	if(foundAt == -1) {
		switch(notFoundDefault) {
		case 1:
			return null;
		case 2:
			return "";
		case 3:
			return str;
		}
	}
	return str.substring(0,foundAt);
};
hx_strings_Strings.substringBeforeLastIgnoreCase = function(str,searchFor,notFoundDefault) {
	if(notFoundDefault == null) {
		notFoundDefault = 2;
	}
	if(str == null) {
		return null;
	}
	if(str == "" || (searchFor == null || searchFor.length == 0)) {
		switch(notFoundDefault) {
		case 1:
			return null;
		case 2:
			return "";
		case 3:
			return str;
		}
	}
	searchFor = searchFor.toLowerCase();
	var foundAt = str.toLowerCase().lastIndexOf(searchFor);
	if(foundAt == -1) {
		switch(notFoundDefault) {
		case 1:
			return null;
		case 2:
			return "";
		case 3:
			return str;
		}
	}
	return str.substring(0,foundAt);
};
hx_strings_Strings.toBool = function(str) {
	if(str == null || str.length == 0) {
		return false;
	}
	switch(str.toLowerCase()) {
	case "0":case "false":case "no":
		return false;
	default:
		return true;
	}
};
hx_strings_Strings.toBytes = function(str) {
	if(str == null) {
		return null;
	}
	return haxe_io_Bytes.ofString(str);
};
hx_strings_Strings.toChar = function(charCode) {
	return charCode;
};
hx_strings_Strings.toCharIterator = function(str) {
	if(str == null) {
		return hx_strings__$CharIterator_NullCharIterator.INSTANCE;
	} else {
		return new hx_strings__$CharIterator_StringCharIterator(str,0);
	}
};
hx_strings_Strings.toChars = function(str) {
	if(str == null) {
		return null;
	}
	var strLen = str == null ? 0 : str.length;
	if(strLen == 0) {
		return [];
	}
	var _g = [];
	var _g1 = 0;
	var _g2 = strLen;
	while(_g1 < _g2) {
		var i = _g1++;
		_g.push(HxOverrides.cca(str,i));
	}
	return _g;
};
hx_strings_Strings.toPattern = function(str,options) {
	if(str == null) {
		return null;
	}
	return hx_strings_Pattern.compile(str,options);
};
hx_strings_Strings.toEReg = function(str,opt) {
	if(opt == null) {
		opt = "";
	}
	if(str == null) {
		return null;
	}
	return new EReg(str,opt);
};
hx_strings_Strings.toFloat = function(str,ifUnparseable) {
	var result = parseFloat(str);
	if(isNaN(result)) {
		return ifUnparseable;
	}
	return result;
};
hx_strings_Strings.toHex = function(num,minDigits,upperCase) {
	if(upperCase == null) {
		upperCase = true;
	}
	if(minDigits == null) {
		minDigits = 0;
	}
	var hexed = StringTools.hex(num,0);
	if(!upperCase) {
		return hexed.toLowerCase();
	}
	if(hexed.length >= minDigits) {
		return hexed;
	}
	return hx_strings_Strings.lpad(hexed,minDigits,"0");
};
hx_strings_Strings.toInt = function(str,ifUnparseable) {
	var result = Std.parseInt(str);
	if(result == null) {
		return ifUnparseable;
	}
	return result;
};
hx_strings_Strings.toLowerCase8 = function(str) {
	if(str == null || str.length == 0) {
		return str;
	}
	return str.toLowerCase();
};
hx_strings_Strings.toLowerCaseFirstChar = function(str) {
	if(str == null || str.length == 0) {
		return str;
	}
	var this1 = HxOverrides.cca(str,0);
	var lowerChar = hx_strings_Char.CHAR_CASE_MAPPER.mapU2L.h[this1];
	var firstChar = lowerChar == null ? this1 : lowerChar;
	if(str.length == 1) {
		return String.fromCodePoint(firstChar);
	}
	var other = hx_strings_Strings.substr8(str,1);
	return String.fromCodePoint(firstChar) + other;
};
hx_strings_Strings.toLowerCamel = function(str,keepUppercasedWords) {
	if(keepUppercasedWords == null) {
		keepUppercasedWords = true;
	}
	if(str == null || str.length == 0) {
		return str;
	}
	var sb = new hx_strings_StringBuilder();
	if(keepUppercasedWords) {
		var _g = 0;
		var _g1 = hx_strings_Strings._splitAsciiWordsUnsafe(str);
		while(_g < _g1.length) {
			var word = _g1[_g];
			++_g;
			sb.add(hx_strings_Strings.toUpperCaseFirstChar(word));
		}
	} else {
		var _g = 0;
		var _g1 = hx_strings_Strings._splitAsciiWordsUnsafe(str);
		while(_g < _g1.length) {
			var word = _g1[_g];
			++_g;
			sb.add(hx_strings_Strings.toUpperCaseFirstChar(hx_strings_Strings.toLowerCase8(word)));
		}
	}
	return hx_strings_Strings.toLowerCaseFirstChar(sb.toString());
};
hx_strings_Strings.toLowerHyphen = function(str) {
	if(str == null || str.length == 0) {
		return str;
	}
	var _this = hx_strings_Strings._splitAsciiWordsUnsafe(str);
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = hx_strings_Strings.toLowerCase8(_this[i]);
	}
	return result.join("-");
};
hx_strings_Strings.toLowerUnderscore = function(str) {
	if(str == null || str.length == 0) {
		return str;
	}
	var _this = hx_strings_Strings._splitAsciiWordsUnsafe(str);
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = hx_strings_Strings.toLowerCase8(_this[i]);
	}
	return result.join("_");
};
hx_strings_Strings.toTitle = function(str,keepUppercasedWords) {
	if(keepUppercasedWords == null) {
		keepUppercasedWords = true;
	}
	if(str == null || str.length == 0) {
		return str;
	}
	if(keepUppercasedWords) {
		var _this = hx_strings_Strings._splitAsciiWordsUnsafe(str);
		var result = new Array(_this.length);
		var _g = 0;
		var _g1 = _this.length;
		while(_g < _g1) {
			var i = _g++;
			var s = _this[i];
			result[i] = hx_strings_Strings.toUpperCase8(s) == s ? s : hx_strings_Strings.toUpperCaseFirstChar(hx_strings_Strings.toLowerCase8(s));
		}
		return result.join(" ");
	}
	var _this = hx_strings_Strings._splitAsciiWordsUnsafe(str);
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = hx_strings_Strings.toUpperCaseFirstChar(hx_strings_Strings.toLowerCase8(_this[i]));
	}
	return result.join(" ");
};
hx_strings_Strings.toUpperCamel = function(str,keepUppercasedWords) {
	if(keepUppercasedWords == null) {
		keepUppercasedWords = true;
	}
	if(str == null || str.length == 0) {
		return str;
	}
	var sb = new hx_strings_StringBuilder();
	if(keepUppercasedWords) {
		var _g = 0;
		var _g1 = hx_strings_Strings._splitAsciiWordsUnsafe(str);
		while(_g < _g1.length) {
			var word = _g1[_g];
			++_g;
			sb.add(hx_strings_Strings.toUpperCaseFirstChar(word));
		}
	} else {
		var _g = 0;
		var _g1 = hx_strings_Strings._splitAsciiWordsUnsafe(str);
		while(_g < _g1.length) {
			var word = _g1[_g];
			++_g;
			sb.add(hx_strings_Strings.toUpperCaseFirstChar(hx_strings_Strings.toLowerCase8(word)));
		}
	}
	return sb.toString();
};
hx_strings_Strings.toUpperUnderscore = function(str) {
	if(str == null || str.length == 0) {
		return str;
	}
	var _this = hx_strings_Strings._splitAsciiWordsUnsafe(str);
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = hx_strings_Strings.toUpperCase8(_this[i]);
	}
	return result.join("_");
};
hx_strings_Strings.toString = function(str) {
	if(str == null) {
		return "null";
	} else {
		return str;
	}
};
hx_strings_Strings.toUpperCase8 = function(str) {
	if(str == null || str.length == 0) {
		return str;
	}
	var sb = new hx_strings_StringBuilder();
	var _g = 0;
	var _g1 = str == null ? 0 : str.length;
	while(_g < _g1) {
		var i = _g++;
		var this1 = HxOverrides.cca(str,i);
		var upperChar = hx_strings_Char.CHAR_CASE_MAPPER.mapL2U.h[this1];
		sb.addChar(upperChar == null ? this1 : upperChar);
	}
	return sb.toString();
};
hx_strings_Strings.toUpperCaseFirstChar = function(str) {
	if(str == null || str.length == 0) {
		return str;
	}
	var this1 = HxOverrides.cca(str,0);
	var upperChar = hx_strings_Char.CHAR_CASE_MAPPER.mapL2U.h[this1];
	var firstChar = upperChar == null ? this1 : upperChar;
	if(str.length == 1) {
		return String.fromCodePoint(firstChar);
	}
	var other = hx_strings_Strings.substr8(str,1);
	return String.fromCodePoint(firstChar) + other;
};
hx_strings_Strings.trim = function(str,charsToRemove) {
	if(str == null || str.length == 0) {
		return str;
	}
	if(charsToRemove == null) {
		return StringTools.trim(str);
	}
	var removableChars;
	var _g = charsToRemove;
	switch(_g._hx_index) {
	case 0:
		var str1 = _g.v;
		removableChars = hx_strings_Strings.toChars(str1);
		break;
	case 1:
		var chars = _g.v;
		removableChars = chars;
		break;
	}
	var this1 = hx_strings_internal__$Either2__$Either2.b(removableChars);
	var this2 = hx_strings_internal__$Either2__$Either2.b(removableChars);
	return hx_strings_Strings.trimLeft(hx_strings_Strings.trimRight(str,this1),this2);
};
hx_strings_Strings.trimRight = function(str,charsToRemove) {
	if(str == null || str.length == 0) {
		return str;
	}
	if(charsToRemove == null) {
		return StringTools.rtrim(str);
	}
	var removableChars;
	var _g = charsToRemove;
	switch(_g._hx_index) {
	case 0:
		var str1 = _g.v;
		removableChars = hx_strings_Strings.toChars(str1);
		break;
	case 1:
		var chars = _g.v;
		removableChars = chars;
		break;
	}
	if(removableChars.length == 0) {
		return str;
	}
	var len = str == null ? 0 : str.length;
	var i = len - 1;
	while(true) {
		var tmp;
		if(i > -1) {
			var str1 = hx_strings_Strings.charAt8(str,i);
			var strLen = str1 == null ? 0 : str1.length;
			tmp = removableChars.indexOf(strLen == 0 || 0 >= strLen ? -1 : HxOverrides.cca(str1,0)) > -1;
		} else {
			tmp = false;
		}
		if(!tmp) {
			break;
		}
		--i;
	}
	if(i < len - 1) {
		return hx_strings_Strings.substring8(str,0,i + 1);
	}
	return str;
};
hx_strings_Strings.trimLeft = function(str,charsToRemove) {
	if(str == null) {
		return str;
	}
	if(charsToRemove == null) {
		return StringTools.ltrim(str);
	}
	var removableChars;
	var _g = charsToRemove;
	switch(_g._hx_index) {
	case 0:
		var str1 = _g.v;
		removableChars = hx_strings_Strings.toChars(str1);
		break;
	case 1:
		var chars = _g.v;
		removableChars = chars;
		break;
	}
	if(removableChars.length == 0) {
		return str;
	}
	var len = str == null ? 0 : str.length;
	var i = 0;
	while(true) {
		var tmp;
		if(i < len) {
			var str1 = hx_strings_Strings.charAt8(str,i);
			var strLen = str1 == null ? 0 : str1.length;
			tmp = removableChars.indexOf(strLen == 0 || 0 >= strLen ? -1 : HxOverrides.cca(str1,0)) > -1;
		} else {
			tmp = false;
		}
		if(!tmp) {
			break;
		}
		++i;
	}
	if(i > 0) {
		return hx_strings_Strings.substring8(str,i,len);
	}
	return str;
};
hx_strings_Strings.trimLines = function(str,charsToRemove) {
	if(str == null || str.length == 0) {
		return str;
	}
	var _this = hx_strings_Strings.REGEX_SPLIT_LINES.ereg.split(str);
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = hx_strings_Strings.trim(_this[i],charsToRemove);
	}
	return result.join("\n");
};
hx_strings_Strings.trimToNull = function(str) {
	if(str == null) {
		return null;
	}
	var trimmed = hx_strings_Strings.trim(str);
	if(trimmed == null || trimmed.length == 0) {
		return null;
	}
	return trimmed;
};
hx_strings_Strings.trimToEmpty = function(str) {
	var trimmed = hx_strings_Strings.trim(str);
	if(trimmed == null || trimmed.length == 0) {
		return "";
	}
	return trimmed;
};
hx_strings_Strings.truncate = function(str,maxLength) {
	if((str == null ? 0 : str.length) <= maxLength) {
		return str;
	} else {
		return hx_strings_Strings.substring8(str,0,maxLength);
	}
};
hx_strings_Strings.urlDecode = function(str) {
	if(str == null || str.length == 0) {
		return str;
	}
	return decodeURIComponent(str.split("+").join(" "));
};
hx_strings_Strings.urlEncode = function(str) {
	if(str == null || str.length == 0) {
		return str;
	}
	return encodeURIComponent(str);
};
hx_strings_Strings.wrap = function(str,maxLineLength,splitLongWords,newLineSeparator) {
	if(newLineSeparator == null) {
		newLineSeparator = "\n";
	}
	if(splitLongWords == null) {
		splitLongWords = true;
	}
	if((str == null ? 0 : str.length) <= maxLineLength || maxLineLength < 1) {
		return str;
	}
	var sb = new hx_strings_StringBuilder();
	var wordChars = [];
	var currLineLength = 0;
	var _g = 0;
	var _g1 = hx_strings_Strings.toChars(str);
	while(_g < _g1.length) {
		var ch = _g1[_g];
		++_g;
		if(ch > 8 && ch < 14 || ch == 32) {
			if(wordChars.length > 0) {
				var _g2 = 0;
				while(_g2 < wordChars.length) {
					var wordCh = wordChars[_g2];
					++_g2;
					if(currLineLength == maxLineLength && splitLongWords) {
						sb.add(newLineSeparator);
						currLineLength = 0;
					}
					++currLineLength;
					sb.addChar(wordCh);
				}
				wordChars = [];
			}
			if(currLineLength >= maxLineLength) {
				sb.add(newLineSeparator);
				currLineLength = 0;
			}
			sb.addChar(ch);
			++currLineLength;
		} else {
			wordChars.push(ch);
		}
	}
	if(wordChars.length > 0) {
		var _g = 0;
		while(_g < wordChars.length) {
			var wordCh = wordChars[_g];
			++_g;
			if(currLineLength == maxLineLength && splitLongWords) {
				sb.add(newLineSeparator);
				currLineLength = 0;
			}
			++currLineLength;
			sb.addChar(wordCh);
		}
	}
	return sb.toString();
};
var hx_strings_StringDiff = function() {
};
$hxClasses["hx.strings.StringDiff"] = hx_strings_StringDiff;
hx_strings_StringDiff.__name__ = "hx.strings.StringDiff";
hx_strings_StringDiff.prototype = {
	at: null
	,left: null
	,right: null
	,toString: function() {
		return "StringDiff[at=" + this.at + ", left=" + this.left + ", right=" + this.right + "]";
	}
	,__class__: hx_strings_StringDiff
};
var hx_strings_HashCodeAlgorithm = $hxEnums["hx.strings.HashCodeAlgorithm"] = { __ename__:"hx.strings.HashCodeAlgorithm",__constructs__:null
	,PLATFORM_SPECIFIC: {_hx_name:"PLATFORM_SPECIFIC",_hx_index:0,__enum__:"hx.strings.HashCodeAlgorithm",toString:$estr}
	,ADLER32: {_hx_name:"ADLER32",_hx_index:1,__enum__:"hx.strings.HashCodeAlgorithm",toString:$estr}
	,CRC32B: {_hx_name:"CRC32B",_hx_index:2,__enum__:"hx.strings.HashCodeAlgorithm",toString:$estr}
	,DJB2A: {_hx_name:"DJB2A",_hx_index:3,__enum__:"hx.strings.HashCodeAlgorithm",toString:$estr}
	,JAVA: {_hx_name:"JAVA",_hx_index:4,__enum__:"hx.strings.HashCodeAlgorithm",toString:$estr}
	,SDBM: {_hx_name:"SDBM",_hx_index:5,__enum__:"hx.strings.HashCodeAlgorithm",toString:$estr}
};
hx_strings_HashCodeAlgorithm.__constructs__ = [hx_strings_HashCodeAlgorithm.PLATFORM_SPECIFIC,hx_strings_HashCodeAlgorithm.ADLER32,hx_strings_HashCodeAlgorithm.CRC32B,hx_strings_HashCodeAlgorithm.DJB2A,hx_strings_HashCodeAlgorithm.JAVA,hx_strings_HashCodeAlgorithm.SDBM];
var hx_strings_AnsiToHtmlRenderMethod = $hxEnums["hx.strings.AnsiToHtmlRenderMethod"] = { __ename__:"hx.strings.AnsiToHtmlRenderMethod",__constructs__:null
	,StyleAttributes: {_hx_name:"StyleAttributes",_hx_index:0,__enum__:"hx.strings.AnsiToHtmlRenderMethod",toString:$estr}
	,CssClasses: {_hx_name:"CssClasses",_hx_index:1,__enum__:"hx.strings.AnsiToHtmlRenderMethod",toString:$estr}
	,CssClassesCallback: ($_=function(func) { return {_hx_index:2,func:func,__enum__:"hx.strings.AnsiToHtmlRenderMethod",toString:$estr}; },$_._hx_name="CssClassesCallback",$_.__params__ = ["func"],$_)
};
hx_strings_AnsiToHtmlRenderMethod.__constructs__ = [hx_strings_AnsiToHtmlRenderMethod.StyleAttributes,hx_strings_AnsiToHtmlRenderMethod.CssClasses,hx_strings_AnsiToHtmlRenderMethod.CssClassesCallback];
var hx_strings_AnsiState = function(copyFrom) {
	if(copyFrom == null) {
		this.reset();
	} else {
		this.copyFrom(copyFrom);
	}
};
$hxClasses["hx.strings.AnsiState"] = hx_strings_AnsiState;
hx_strings_AnsiState.__name__ = "hx.strings.AnsiState";
hx_strings_AnsiState.defaultCssClassesCallback = function(state) {
	var classes = [];
	if(state.fgcolor != null) {
		classes.push("ansi_fg_" + state.fgcolor);
	}
	if(state.bgcolor != null) {
		classes.push("ansi_bg_" + state.bgcolor);
	}
	if(state.bold) {
		classes.push("ansi_bold");
	}
	if(state.underline) {
		classes.push("ansi_underline");
	}
	if(state.blink) {
		classes.push("ansi_blink");
	}
	return classes.join(" ");
};
hx_strings_AnsiState.prototype = {
	bgcolor: null
	,blink: null
	,bold: null
	,fgcolor: null
	,underline: null
	,isActive: function() {
		if(!(this.fgcolor != null || this.bgcolor != null || this.bold || this.underline)) {
			return this.blink;
		} else {
			return true;
		}
	}
	,reset: function() {
		this.fgcolor = null;
		this.bgcolor = null;
		this.bold = false;
		this.underline = false;
		this.blink = false;
	}
	,copyFrom: function(other) {
		this.fgcolor = other.fgcolor;
		this.bgcolor = other.bgcolor;
		this.bold = other.bold;
		this.underline = other.underline;
		this.blink = other.blink;
	}
	,setGraphicModeParameter: function(param) {
		switch(param) {
		case 0:
			this.reset();
			break;
		case 1:
			this.bold = true;
			break;
		case 4:
			this.underline = true;
			break;
		case 5:
			this.blink = true;
			break;
		case 30:
			this.fgcolor = "black";
			break;
		case 31:
			this.fgcolor = "red";
			break;
		case 32:
			this.fgcolor = "green";
			break;
		case 33:
			this.fgcolor = "yellow";
			break;
		case 34:
			this.fgcolor = "blue";
			break;
		case 35:
			this.fgcolor = "magenta";
			break;
		case 36:
			this.fgcolor = "cyan";
			break;
		case 37:
			this.fgcolor = "white";
			break;
		case 40:
			this.bgcolor = "black";
			break;
		case 41:
			this.bgcolor = "red";
			break;
		case 42:
			this.bgcolor = "green";
			break;
		case 43:
			this.bgcolor = "yellow";
			break;
		case 44:
			this.bgcolor = "blue";
			break;
		case 45:
			this.bgcolor = "magenta";
			break;
		case 46:
			this.bgcolor = "cyan";
			break;
		case 47:
			this.bgcolor = "white";
			break;
		}
	}
	,toCSS: function(renderMethod) {
		if(this.fgcolor != null || this.bgcolor != null || this.bold || this.underline || this.blink) {
			var sb = new hx_strings_StringBuilder();
			if(renderMethod == null) {
				renderMethod = hx_strings_AnsiToHtmlRenderMethod.StyleAttributes;
			}
			switch(renderMethod._hx_index) {
			case 0:
				if(this.fgcolor != null) {
					sb.add("color:").add(this.fgcolor).add(";");
				}
				if(this.bgcolor != null) {
					sb.add("background-color:").add(this.bgcolor).add(";");
				}
				if(this.bold) {
					sb.add("font-weight:bold;");
				}
				if(this.underline) {
					sb.add("text-decoration:underline;");
				}
				if(this.blink) {
					sb.add("text-decoration:blink;");
				}
				break;
			case 1:
				sb.add(hx_strings_AnsiState.defaultCssClassesCallback(this));
				break;
			case 2:
				var func = renderMethod.func;
				sb.add(func(this));
				break;
			}
			return sb.toString();
		}
		return "";
	}
	,__class__: hx_strings_AnsiState
};
var hx_strings_internal_Bits = function() { };
$hxClasses["hx.strings.internal.Bits"] = hx_strings_internal_Bits;
hx_strings_internal_Bits.__name__ = "hx.strings.internal.Bits";
hx_strings_internal_Bits.clearBit = function(num,bitPos) {
	return num & ~(1 << bitPos - 1);
};
hx_strings_internal_Bits.setBit = function(num,bitPos) {
	return num | 1 << bitPos - 1;
};
hx_strings_internal_Bits.toggleBit = function(num,bitPos) {
	return num ^ 1 << bitPos - 1;
};
hx_strings_internal_Bits.getBit = function(num,bitPos) {
	return 1 == (num >> bitPos - 1 & 1);
};
var hx_strings_internal_Either2 = {};
hx_strings_internal_Either2._new = function(value) {
	var this1 = value;
	return this1;
};
hx_strings_internal_Either2.get_value = function(this1) {
	return this1;
};
hx_strings_internal_Either2.fromA = function(value) {
	var this1 = hx_strings_internal__$Either2__$Either2.a(value);
	return this1;
};
hx_strings_internal_Either2.fromB = function(value) {
	var this1 = hx_strings_internal__$Either2__$Either2.b(value);
	return this1;
};
var hx_strings_internal__$Either2__$Either2 = $hxEnums["hx.strings.internal._Either2._Either2"] = { __ename__:"hx.strings.internal._Either2._Either2",__constructs__:null
	,a: ($_=function(v) { return {_hx_index:0,v:v,__enum__:"hx.strings.internal._Either2._Either2",toString:$estr}; },$_._hx_name="a",$_.__params__ = ["v"],$_)
	,b: ($_=function(v) { return {_hx_index:1,v:v,__enum__:"hx.strings.internal._Either2._Either2",toString:$estr}; },$_._hx_name="b",$_.__params__ = ["v"],$_)
};
hx_strings_internal__$Either2__$Either2.__constructs__ = [hx_strings_internal__$Either2__$Either2.a,hx_strings_internal__$Either2__$Either2.b];
var hx_strings_internal_Either3 = {};
hx_strings_internal_Either3._new = function(value) {
	var this1 = value;
	return this1;
};
hx_strings_internal_Either3.get_value = function(this1) {
	return this1;
};
hx_strings_internal_Either3.fromA = function(value) {
	var this1 = hx_strings_internal__$Either3__$Either3.a(value);
	return this1;
};
hx_strings_internal_Either3.fromB = function(value) {
	var this1 = hx_strings_internal__$Either3__$Either3.b(value);
	return this1;
};
hx_strings_internal_Either3.fromC = function(value) {
	var this1 = hx_strings_internal__$Either3__$Either3.c(value);
	return this1;
};
var hx_strings_internal_OneOrMany = {};
hx_strings_internal_OneOrMany.fromSingle = function(value) {
	return [value];
};
var hx_strings_internal_RingBuffer = {};
hx_strings_internal_RingBuffer._new = function(size) {
	var this1 = new hx_strings_internal__$RingBuffer_RingBufferImpl(size);
	return this1;
};
hx_strings_internal_RingBuffer.get = function(this1,index) {
	return this1.get(index);
};
var hx_strings_internal__$RingBuffer_RingBufferIterator = function(buff) {
	this.idx = -1;
	this.buff = buff;
};
$hxClasses["hx.strings.internal._RingBuffer.RingBufferIterator"] = hx_strings_internal__$RingBuffer_RingBufferIterator;
hx_strings_internal__$RingBuffer_RingBufferIterator.__name__ = "hx.strings.internal._RingBuffer.RingBufferIterator";
hx_strings_internal__$RingBuffer_RingBufferIterator.prototype = {
	buff: null
	,idx: null
	,hasNext: function() {
		return this.idx + 1 < this.buff.length;
	}
	,next: function() {
		this.idx++;
		return this.buff.get(this.idx);
	}
	,__class__: hx_strings_internal__$RingBuffer_RingBufferIterator
};
var js_node_Fs = require("fs");
var js_node_KeyValue = {};
js_node_KeyValue.get_key = function(this1) {
	return this1[0];
};
js_node_KeyValue.get_value = function(this1) {
	return this1[1];
};
var js_node_Path = require("path");
var js_node_buffer_Buffer = require("buffer").Buffer;
var js_node_stream_WritableNewOptionsAdapter = {};
js_node_stream_WritableNewOptionsAdapter.from = function(options) {
	if(!Object.prototype.hasOwnProperty.call(options,"final")) {
		Object.defineProperty(options,"final",{ get : function() {
			return options.final_;
		}});
	}
	return options;
};
var js_node_url_URLSearchParamsEntry = {};
js_node_url_URLSearchParamsEntry._new = function(name,value) {
	var this1 = [name,value];
	return this1;
};
js_node_url_URLSearchParamsEntry.get_name = function(this1) {
	return this1[0];
};
js_node_url_URLSearchParamsEntry.get_value = function(this1) {
	return this1[1];
};
var stx_LiftASys = function() { };
$hxClasses["stx.LiftASys"] = stx_LiftASys;
stx_LiftASys.__name__ = "stx.LiftASys";
stx_LiftASys.asys = function(__) {
	return new stx_asys_ASys();
};
stx_LiftASys.localhost = function(__) {
	return stx_asys_Device.make0(stx_asys_Distro._new());
};
var stx_LiftAssert = function() { };
$hxClasses["stx.LiftAssert"] = stx_LiftAssert;
stx_LiftAssert.__name__ = "stx.LiftAssert";
stx_LiftAssert.that = function(stx,pos) {
	return new stx_assert_Module(pos);
};
stx_LiftAssert.assert = function(__,pos) {
	return new stx_assert_module_Crunch(pos);
};
stx_LiftAssert.expect = function(b,err) {
	if(b) {
		return stx_nano_Report.unit();
	} else {
		return stx_nano_Report.pure(err);
	}
};
var stx_AssertCtr = function() { };
$hxClasses["stx.AssertCtr"] = stx_AssertCtr;
stx_AssertCtr.__name__ = "stx.AssertCtr";
stx_AssertCtr.Assert = function(wildcard) {
	return stx_Nano.stx(stx_nano_Wildcard.__);
};
stx_AssertCtr.Comparable = function(stub) {
	return new stx_assert_stub_Comparable();
};
var stx_Bake = function() { };
$hxClasses["stx.Bake"] = stx_Bake;
stx_Bake.__name__ = "stx.Bake";
stx_Bake.bake = function(wildcard) {
	return stx_bake_Baked._new();
};
var stx_Configure = function() { };
$hxClasses["stx.Configure"] = stx_Configure;
stx_Configure.__name__ = "stx.Configure";
stx_Configure.config = function(wildcard) {
	return new stx_config_core_Module();
};
var stx_LiftCoroutine = function() { };
$hxClasses["stx.LiftCoroutine"] = stx_LiftCoroutine;
stx_LiftCoroutine.__name__ = "stx.LiftCoroutine";
stx_LiftCoroutine.e_coroutine = function(digests,note) {
	return new stx_coroutine_core_Digest(note);
};
stx_LiftCoroutine.upcast = function(wildcard,spx) {
	return spx;
};
stx_LiftCoroutine.quit = function(wildcard,er) {
	return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Exit(er)));
};
stx_LiftCoroutine.exit = function(wildcard,er) {
	return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Exit(er)));
};
stx_LiftCoroutine.halt = function(wildcard,ret) {
	return stx_coroutine_core_CoroutineSum.Halt(ret);
};
stx_LiftCoroutine.term = function(wildcard,cause) {
	return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(cause));
};
stx_LiftCoroutine.stop = function(wildcard) {
	return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Stop));
};
stx_LiftCoroutine.prod = function(wildcard,v) {
	return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Production(v));
};
stx_LiftCoroutine.wait = function(wildcard,fn) {
	return stx_coroutine_core_CoroutineSum.Wait(fn);
};
stx_LiftCoroutine.emit = function(wildcard,head,next) {
	return stx_coroutine_core_CoroutineSum.Emit(head,next);
};
stx_LiftCoroutine.hold = function(wildcard,h) {
	return stx_coroutine_core_CoroutineSum.Hold(h);
};
stx_LiftCoroutine.lazy = function(wildcard,self) {
	return stx_coroutine_core_Held.lazy(self);
};
stx_LiftCoroutine.into = function(wildcard,fn) {
	return fn;
};
stx_LiftCoroutine.tran = function(wildcard,fn) {
	var fn1 = fn;
	return stx_coroutine_core_CoroutineSum.Wait(stx_coroutine_core_Transmission.lift(function(control) {
		return stx_coroutine_core_ControlLift.fold(control,fn1,function(e) {
			return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_Cause.fromRefuse(stx_nano_lift_LiftErrorDigestToRefuse.toRefuse(e))));
		},function() {
			return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Stop));
		});
	}));
};
stx_LiftCoroutine.coroutine = function(wildcard) {
	return new stx_coroutine_Module();
};
var stx_LiftSource = function() { };
$hxClasses["stx.LiftSource"] = stx_LiftSource;
stx_LiftSource.__name__ = "stx.LiftSource";
var stx_RedBlackSum = $hxEnums["stx.RedBlackSum"] = { __ename__:"stx.RedBlackSum",__constructs__:null
	,Red: {_hx_name:"Red",_hx_index:0,__enum__:"stx.RedBlackSum",toString:$estr}
	,Black: {_hx_name:"Black",_hx_index:1,__enum__:"stx.RedBlackSum",toString:$estr}
};
stx_RedBlackSum.__constructs__ = [stx_RedBlackSum.Red,stx_RedBlackSum.Black];
var stx_LiftLinkedList = function() { };
$hxClasses["stx.LiftLinkedList"] = stx_LiftLinkedList;
stx_LiftLinkedList.__name__ = "stx.LiftLinkedList";
stx_LiftLinkedList.ds = function(ls) {
	return ls;
};
var stx_LiftArrayToLinkedList = function() { };
$hxClasses["stx.LiftArrayToLinkedList"] = stx_LiftArrayToLinkedList;
stx_LiftArrayToLinkedList.__name__ = "stx.LiftArrayToLinkedList";
stx_LiftArrayToLinkedList.toLinkedList = function(array) {
	return stx_lift_ArrayLift.rfold(array,function(next,memo) {
		return stx_ds_LinkedList.cons(memo,next);
	},stx_ds_LinkedList.unit());
};
var stx_LiftClusterToLinkedList = function() { };
$hxClasses["stx.LiftClusterToLinkedList"] = stx_LiftClusterToLinkedList;
stx_LiftClusterToLinkedList.__name__ = "stx.LiftClusterToLinkedList";
stx_LiftClusterToLinkedList.toLinkedList = function(array) {
	return stx_nano_ClusterLift.rfold(array,function(next,memo) {
		return stx_ds_LinkedList.cons(memo,next);
	},stx_ds_LinkedList.unit());
};
var stx_LiftStringMap = function() { };
$hxClasses["stx.LiftStringMap"] = stx_LiftStringMap;
stx_LiftStringMap.__name__ = "stx.LiftStringMap";
stx_LiftStringMap.ds = function(m) {
	var nm = stx_ds_RedBlackMap.make(stx_assert_Comparable.String());
	var h = m.h;
	var _g_h = h;
	var _g_keys = Object.keys(h);
	var _g_length = _g_keys.length;
	var _g_current = 0;
	while(_g_current < _g_length) {
		var key = _g_keys[_g_current++];
		var _g_key = key;
		var _g_value = _g_h[key];
		var key1 = _g_key;
		var val = _g_value;
		nm = stx_ds_RedBlackMap.set(nm,key1,val);
	}
	return nm;
};
var stx_Fail = function() { };
$hxClasses["stx.Fail"] = stx_Fail;
stx_Fail.__name__ = "stx.Fail";
stx_Fail.explain = function(self) {
	return stx_fail_Digest.Foreign(self.details());
};
var stx_Fn = function() { };
$hxClasses["stx.Fn"] = stx_Fn;
stx_Fn.__name__ = "stx.Fn";
stx_Fn.fn = function(wildcard) {
	return new stx_fn_Module();
};
stx_Fn.f = function(wildcard,f) {
	switch(f._hx_index) {
	case 0:
		var f1 = f.f;
		return function(_) {
			f1();
			return null;
		};
	case 1:
		var f2 = f.f;
		return function(x) {
			f2(x);
			return null;
		};
	case 2:
		var f3 = f.f;
		return function(x) {
			return f3(x);
		};
	}
};
stx_Fn._0x = function(fn) {
	var self = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,fn),stx_fn_Block.lift);
	if(self._hx_index == 0) {
		var v = self.v;
		return v;
	} else {
		return stx_fn_Block.unit();
	}
};
stx_Fn._1x = function(fn) {
	var self = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,fn),stx_fn_Sink.lift);
	if(self._hx_index == 0) {
		var v = self.v;
		return v;
	} else {
		var this1 = function(p) {
		};
		return this1;
	}
};
stx_Fn._1r = function() {
	return stx_fn_Unary.unit();
};
var stx_LiftCurriedBinary = function() { };
$hxClasses["stx.LiftCurriedBinary"] = stx_LiftCurriedBinary;
stx_LiftCurriedBinary.__name__ = "stx.LiftCurriedBinary";
stx_LiftCurriedBinary.uncurry = function(f) {
	return function(p1,p2) {
		return (f(p1))(p2);
	};
};
var stx_LiftCurriedTernary = function() { };
$hxClasses["stx.LiftCurriedTernary"] = stx_LiftCurriedTernary;
stx_LiftCurriedTernary.__name__ = "stx.LiftCurriedTernary";
stx_LiftCurriedTernary.uncurry = function(f) {
	return function(p1,p2,p3) {
		return ((f(p1))(p2))(p3);
	};
};
var stx_LiftFn = function() { };
$hxClasses["stx.LiftFn"] = stx_LiftFn;
stx_LiftFn.__name__ = "stx.LiftFn";
stx_LiftFn.pinch = function(fn0) {
	return function(x) {
		return fn0(stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,x,x));
	};
};
stx_LiftFn.repeat = function(fn) {
	return function(v) {
		var i = null;
		var o = null;
		_hx_loop1: while(true) {
			var _g = fn(i);
			switch(_g._hx_index) {
			case 0:
				var v = _g.v;
				i = v;
				break;
			case 1:
				var v1 = _g.v;
				o = v1;
				break _hx_loop1;
			}
		}
		return o;
	};
};
var stx_LiftUnary = function() { };
$hxClasses["stx.LiftUnary"] = stx_LiftUnary;
stx_LiftUnary.__name__ = "stx.LiftUnary";
stx_LiftUnary.fn = function(f) {
	return f;
};
var stx_LiftThunk = function() { };
$hxClasses["stx.LiftThunk"] = stx_LiftThunk;
stx_LiftThunk.__name__ = "stx.LiftThunk";
stx_LiftThunk.fn = function(fn) {
	return fn;
};
var stx_LiftBlock = function() { };
$hxClasses["stx.LiftBlock"] = stx_LiftBlock;
stx_LiftBlock.__name__ = "stx.LiftBlock";
stx_LiftBlock.fn = function(f) {
	return f;
};
var stx_LiftBinary = function() { };
$hxClasses["stx.LiftBinary"] = stx_LiftBinary;
stx_LiftBinary.__name__ = "stx.LiftBinary";
stx_LiftBinary.fn = function(fn) {
	return stx_fn_Binary._new(fn);
};
stx_LiftBinary.bind1 = function(fn,p) {
	var _g = fn;
	var a1 = p;
	return function(a2) {
		return _g(a1,a2);
	};
};
var stx_LiftPerhapsConstructor = function() { };
$hxClasses["stx.LiftPerhapsConstructor"] = stx_LiftPerhapsConstructor;
stx_LiftPerhapsConstructor.__name__ = "stx.LiftPerhapsConstructor";
stx_LiftPerhapsConstructor.perhaps = function(fn) {
	return function(x) {
		switch(x._hx_index) {
		case 0:
			var v = x.v;
			return fn(v);
		case 1:
			return haxe_ds_Option.None;
		}
	};
};
var stx_LiftPerhaps = function() { };
$hxClasses["stx.LiftPerhaps"] = stx_LiftPerhaps;
stx_LiftPerhaps.__name__ = "stx.LiftPerhaps";
stx_LiftPerhaps.perhaps = function(fn) {
	return function(x) {
		switch(x._hx_index) {
		case 0:
			var v = x.v;
			return haxe_ds_Option.Some(fn(v));
		case 1:
			return haxe_ds_Option.None;
		}
	};
};
var stx_LiftTernary = function() { };
$hxClasses["stx.LiftTernary"] = stx_LiftTernary;
stx_LiftTernary.__name__ = "stx.LiftTernary";
stx_LiftTernary.fn = function(fn) {
	return fn;
};
var stx_LiftIf = function() { };
$hxClasses["stx.LiftIf"] = stx_LiftIf;
stx_LiftIf.__name__ = "stx.LiftIf";
stx_LiftIf.if_else = function(b,yes,no) {
	if(b) {
		return yes();
	} else {
		return no();
	}
};
var stx_Fp = function() { };
$hxClasses["stx.Fp"] = stx_Fp;
stx_Fp.__name__ = "stx.Fp";
stx_Fp.handle = function(opt) {
};
stx_Fp.with = function(wildcard,a,b) {
	return function(c) {
		return stx_nano_lift_LiftNano.triple(stx_nano_Wildcard.__,a,b,c);
	};
};
var stx_LiftFp = function() { };
$hxClasses["stx.LiftFp"] = stx_LiftFp;
stx_LiftFp.__name__ = "stx.LiftFp";
var stx_In = {};
stx_In._new = function(x) {
	var this1 = x;
	return this1;
};
var stx_OfI = {};
stx_OfI._new = function(x) {
	var this1 = x;
	return this1;
};
var stx_Of = {};
stx_Of._new = function(o) {
	var this1 = o;
	return this1;
};
var stx_MeetSemiLatticeApi = function() { };
$hxClasses["stx.MeetSemiLatticeApi"] = stx_MeetSemiLatticeApi;
stx_MeetSemiLatticeApi.__name__ = "stx.MeetSemiLatticeApi";
stx_MeetSemiLatticeApi.__isInterface__ = true;
stx_MeetSemiLatticeApi.prototype = {
	meet: null
	,'with': null
	,__class__: stx_MeetSemiLatticeApi
};
var stx_JoinSemiLatticeApi = function() { };
$hxClasses["stx.JoinSemiLatticeApi"] = stx_JoinSemiLatticeApi;
stx_JoinSemiLatticeApi.__name__ = "stx.JoinSemiLatticeApi";
stx_JoinSemiLatticeApi.__isInterface__ = true;
stx_JoinSemiLatticeApi.prototype = {
	join: null
	,'with': null
	,__class__: stx_JoinSemiLatticeApi
};
var stx_LatticeApi = function() { };
$hxClasses["stx.LatticeApi"] = stx_LatticeApi;
stx_LatticeApi.__name__ = "stx.LatticeApi";
stx_LatticeApi.__isInterface__ = true;
stx_LatticeApi.__interfaces__ = [stx_MeetSemiLatticeApi,stx_JoinSemiLatticeApi];
var stx_LiftParseErrorInfoToPathParseFailure = function() { };
$hxClasses["stx.LiftParseErrorInfoToPathParseFailure"] = stx_LiftParseErrorInfoToPathParseFailure;
stx_LiftParseErrorInfoToPathParseFailure.__name__ = "stx.LiftParseErrorInfoToPathParseFailure";
stx_LiftParseErrorInfoToPathParseFailure.toPathParseFailure = function(e) {
	return stx_fail_PathParseFailureSum.E_PathParse_ParseErrorInfo(e);
};
var stx_Io = function() { };
$hxClasses["stx.Io"] = stx_Io;
stx_Io.__name__ = "stx.Io";
var stx_LiftLog = function() { };
$hxClasses["stx.LiftLog"] = stx_LiftLog;
stx_LiftLog.__name__ = "stx.LiftLog";
stx_LiftLog.log = function(wildcard) {
	return stx_Log.ZERO;
};
stx_LiftLog.scope = function(stx,pos,method) {
	var scoping = stx_log_LogPosition.fromPos(pos).get_scoping();
	if(method != null) {
		scoping = scoping.with_method(method);
	}
	return scoping;
};
stx_LiftLog.stamp = function(pos) {
	return stx_log_LogPosition.pure(pos);
};
var stx_log_logger_Global = {};
stx_log_logger_Global.ZERO = null;
stx_log_logger_Global.get_ZERO = function() {
	var result;
	if(stx_log_logger_Global.ZERO == null) {
		stx_log_logger_Global.ZERO = new stx_log_logger_Unit();
		haxe_Log.trace("stx.Log.global = stx.log.logger.ConsoleLogger()",{ fileName : "stx/log/logger/Global.hx", lineNumber : 10, className : "stx.log.logger._Global.Global_Impl_", methodName : "get_ZERO"});
		result = stx_log_logger_Global.ZERO;
	} else {
		result = stx_log_logger_Global.ZERO;
	}
	var level = $iterator(stx_pico_OptionLift)(stx_pico_OptionLift.flat_map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,process.env["STX_LOG__LEVEL"]),function(x) {
		return stx_log_Level.fromString(x);
	}));
	while(level.hasNext()) {
		var level1 = level.next();
		stx_log_logger_Global.ZERO.level = level1;
		haxe_Log.trace("ENV SET STX_LOG Global " + (level1 == null ? "null" : stx_log_Level.toString(level1)),{ fileName : "stx/log/logger/Global.hx", lineNumber : 23, className : "stx.log.logger._Global.Global_Impl_", methodName : "get_ZERO"});
	}
	if(process.env["VERBOSE"] == "true") {
		haxe_Log.trace("ENV SET STX_LOG Global VERBOSE",{ fileName : "stx/log/logger/Global.hx", lineNumber : 26, className : "stx.log.logger._Global.Global_Impl_", methodName : "get_ZERO"});
		stx_log_logger_Global.ZERO.verbose = true;
	}
	return result;
};
stx_log_logger_Global._new = function() {
	var this1 = stx_log_logger_Global.get_ZERO();
	return this1;
};
stx_log_logger_Global.unit = function() {
	return stx_log_logger_Global._new();
};
stx_log_logger_Global.toLoggerApi = function(this1) {
	return this1;
};
stx_log_logger_Global.prj = function(this1) {
	return this1;
};
var stx_log_Debugging = function() { };
$hxClasses["stx.log.Debugging"] = stx_log_Debugging;
stx_log_Debugging.__name__ = "stx.log.Debugging";
stx_log_Debugging.prototype = {
	note: function(str,pos) {
	}
	,__class__: stx_log_Debugging
};
var stx_log_OutputApi = function() { };
$hxClasses["stx.log.OutputApi"] = stx_log_OutputApi;
stx_log_OutputApi.__name__ = "stx.log.OutputApi";
stx_log_OutputApi.__isInterface__ = true;
stx_log_OutputApi.prototype = {
	render: null
	,__class__: stx_log_OutputApi
};
var stx_log_output_term_Full = function() { };
$hxClasses["stx.log.output.term.Full"] = stx_log_output_term_Full;
stx_log_output_term_Full.__name__ = "stx.log.output.term.Full";
stx_log_output_term_Full.__interfaces__ = [stx_log_OutputApi];
stx_log_output_term_Full.clear = function() {
	js_Boot.__clear_trace();
};
stx_log_output_term_Full.__super__ = stx_log_Debugging;
stx_log_output_term_Full.prototype = $extend(stx_log_Debugging.prototype,{
	render: function(v,infos) {
		this.note("haxelog " + Std.string(infos),{ fileName : "stx/log/output/term/Full.hx", lineNumber : 9, className : "stx.log.output.term.Full", methodName : "render"});
		this.note("js",{ fileName : "stx/log/output/term/Full.hx", lineNumber : 28, className : "stx.log.output.term.Full", methodName : "render"});
		new stx_log_output_term_Js().render(v,infos);
	}
	,__class__: stx_log_output_term_Full
});
var stx_log_LoggerApi = function() { };
$hxClasses["stx.log.LoggerApi"] = stx_log_LoggerApi;
stx_log_LoggerApi.__name__ = "stx.log.LoggerApi";
stx_log_LoggerApi.__isInterface__ = true;
stx_log_LoggerApi.prototype = {
	format: null
	,logic: null
	,apply: null
	,do_apply: null
	,__class__: stx_log_LoggerApi
};
var stx_log_logger_Base = function(logic,format) {
	var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,logic);
	var tmp;
	if(self._hx_index == 0) {
		var v = self.v;
		tmp = v;
	} else {
		tmp = stx_log_Filter.Unit();
	}
	this.logic = stx_log_Logic.fromFilter(tmp);
	var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,format);
	var v = stx_log_core_Format.unit();
	var tmp;
	if(self._hx_index == 0) {
		var v1 = self.v;
		tmp = v1;
	} else {
		tmp = v;
	}
	this.format = tmp;
};
$hxClasses["stx.log.logger.Base"] = stx_log_logger_Base;
stx_log_logger_Base.__name__ = "stx.log.logger.Base";
stx_log_logger_Base.__interfaces__ = [stx_log_LoggerApi];
stx_log_logger_Base.__super__ = stx_log_output_term_Full;
stx_log_logger_Base.prototype = $extend(stx_log_output_term_Full.prototype,{
	logic: null
	,format: null
	,apply: function(value) {
		var _gthis = this;
		return stx_fp_ContinuationLift.mod(this.do_apply(value),function(res) {
			var self = function(string) {
				if(!value.get_stamp().hidden) {
					_gthis.render(string,value.source);
				}
			};
			var fn = function(p) {
				self(p);
				return p;
			};
			var self1;
			switch(res._hx_index) {
			case 0:
				var t = res.t;
				self1 = stx_nano_ResSum.Accept(fn(t));
				break;
			case 1:
				var e = res.e;
				self1 = stx_nano_ResSum.Reject(e);
				break;
			}
			var this1 = self1;
			return this1;
		});
	}
	,do_apply: function(value) {
		var _gthis = this;
		return stx_fp_Continuation.lift(function(fn) {
			var result = stx_nano_ReportLift.resolve(stx_log_Logic.apply(_gthis.logic,value),function() {
				return _gthis.format.print(value);
			});
			return result;
		});
	}
	,__class__: stx_log_logger_Base
});
var stx_log_logger_Unit = function(logic,format,level,verbose,reinstate) {
	if(reinstate == null) {
		reinstate = false;
	}
	if(verbose == null) {
		verbose = false;
	}
	if(level == null) {
		level = 2;
	}
	stx_log_logger_Base.call(this,logic,format);
	this.level = level;
	this.verbose = verbose;
	this.reinstate = reinstate;
	this.includes = [];
};
$hxClasses["stx.log.logger.Unit"] = stx_log_logger_Unit;
stx_log_logger_Unit.__name__ = "stx.log.logger.Unit";
stx_log_logger_Unit.__super__ = stx_log_logger_Base;
stx_log_logger_Unit.prototype = $extend(stx_log_logger_Base.prototype,{
	level: null
	,reinstate: null
	,includes: null
	,verbose: null
	,do_apply: function(data) {
		var _gthis = this;
		this.note("" + Std.string(this),{ fileName : "stx/log/logger/Unit.hx", lineNumber : 17, className : "stx.log.logger.Unit", methodName : "do_apply"});
		var applied = stx_log_logger_Base.prototype.do_apply.call(this,data);
		var _g = function(e,pos) {
			return stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,e,pos);
		};
		var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/log/logger/Unit.hx", lineNumber : 19, className : "stx.log.logger.Unit", methodName : "do_apply"});
		var e = stx_nano_CTR.fromR(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_LogFailure.E_Log_Zero)),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1)));
		var applied_fn = function() {
			return _g(e,{ fileName : "stx/log/logger/Unit.hx", lineNumber : 19, className : "stx.log.logger.Unit", methodName : "do_apply"});
		};
		var self = applied(function(_) {
			return applied_fn();
		});
		var parent;
		switch(self._hx_index) {
		case 0:
			var t = self.t;
			parent = true;
			break;
		case 1:
			var e1 = self.e;
			parent = false;
			break;
		}
		var has_custom = stx_log_Signal.has_custom;
		var stamp_level = data.get_stamp().level;
		this.note("level: " + (this.level == null ? "null" : stx_log_Level.toString(this.level)) + " stamp.level: " + (stamp_level == null ? "null" : stx_log_Level.toString(stamp_level)) + " " + stx_log_Level.asInt(stamp_level) + " >= " + stx_log_Level.asInt(this.level),{ fileName : "stx/log/logger/Unit.hx", lineNumber : 23, className : "stx.log.logger.Unit", methodName : "do_apply"});
		this.note("" + stx_log_Level.asInt(data.get_stamp().level),{ fileName : "stx/log/logger/Unit.hx", lineNumber : 24, className : "stx.log.logger.Unit", methodName : "do_apply"});
		this.note("" + stx_log_Level.asInt(this.level),{ fileName : "stx/log/logger/Unit.hx", lineNumber : 25, className : "stx.log.logger.Unit", methodName : "do_apply"});
		this.note("" + (data.detail == null ? "null" : stx_log_core_Entry.toString(data.detail)),{ fileName : "stx/log/logger/Unit.hx", lineNumber : 26, className : "stx.log.logger.Unit", methodName : "do_apply"});
		var levelI = stx_log_Level.asInt(data.get_stamp().level) >= stx_log_Level.asInt(this.level);
		var include_tag = stx_LiftIf.if_else(this.includes.length > 0,function() {
			var self = stx_pico_OptionLift.flat_map(stx_pico_OptionLift.flat_map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,data),function(x) {
				return stx_pico_Option.fromNullT(x.get_stamp());
			}),function(x) {
				return stx_pico_Option.fromNullT(x.tags);
			});
			var include_tag;
			if(self._hx_index == 0) {
				var v = self.v;
				include_tag = v;
			} else {
				include_tag = [];
			}
			return stx_lift_ArrayLift.lfold(include_tag,function(next,memo) {
				return stx_LiftIf.if_else(memo,function() {
					return true;
				},function() {
					return stx_log_Includes.match(_gthis.includes,next);
				});
			},false);
		},function() {
			return data.get_stamp().tags.length <= 0;
		});
		var res = stx_LiftIf.if_else(has_custom,function() {
			return _gthis.reinstate;
		},function() {
			return stx_LiftIf.if_else(_gthis.verbose,function() {
				return true;
			},function() {
				if(data.get_stamp().level != 6) {
					return stx_LiftIf.if_else(include_tag,function() {
						if(parent) {
							return levelI;
						} else {
							return false;
						}
					},function() {
						return false;
					});
				} else {
					return true;
				}
			});
		});
		this.note("has_custom:" + (has_custom == null ? "null" : "" + has_custom) + " " + ("parent:" + (parent == null ? "null" : "" + parent) + " ") + ("level:" + (this.level == null ? "null" : stx_log_Level.toString(this.level)) + " ") + ("includes:" + Std.string(this.includes) + " ") + ("include_tag:" + (include_tag == null ? "null" : "" + include_tag) + " ") + ("stamp_tag:" + Std.string(data.get_stamp().tags) + " ") + ("parent && level: " + Std.string(parent && levelI) + " ") + ("verbose:" + Std.string(this.verbose) + " ") + ("res:" + (res == null ? "null" : "" + res) + " "),{ fileName : "stx/log/logger/Unit.hx", lineNumber : 50, className : "stx.log.logger.Unit", methodName : "do_apply"});
		return function(fn) {
			return stx_LiftIf.if_else(res,function() {
				return stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,_gthis.format.print(data));
			},function() {
				var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/log/logger/Unit.hx", lineNumber : 63, className : "stx.log.logger.Unit", methodName : "do_apply"});
				return stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_LogFailure.E_Log_Default({ has_custom : has_custom, parent : parent, level : _gthis.level, includes : _gthis.includes, include_tag : include_tag, stamp_tag : data.get_stamp().tags, verbose : _gthis.verbose}))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1))),{ fileName : "stx/log/logger/Unit.hx", lineNumber : 63, className : "stx.log.logger.Unit", methodName : "do_apply"});
			});
		};
	}
	,reset: function() {
		stx_log_Includes.clear(this.includes);
		this.level = 2;
		this.logic = stx_log_Logic._.make().always();
	}
	,__class__: stx_log_logger_Unit
});
var stx_log_LogicLift = function() { };
$hxClasses["stx.log.LogicLift"] = stx_log_LogicLift;
stx_log_LogicLift.__name__ = "stx.log.LogicLift";
stx_log_LogicLift.make = function() {
	return { pack : stx_log_Logic.pack, type : stx_log_Logic.type, line : stx_log_Logic.line, lines : stx_log_Logic.lines, tag : stx_log_Logic.tag, always : stx_log_Logic.always, never : stx_log_Logic.never, method : stx_log_Logic.method};
};
stx_log_LogicLift._ = function(fn) {
	return fn(stx_log_LogicLift.make());
};
var stx_log_Logic = {};
stx_log_Logic._new = function(self) {
	var this1 = self;
	return this1;
};
stx_log_Logic.lift = function(self) {
	return stx_log_Logic._new(self);
};
stx_log_Logic.ctr = function(fn) {
	return stx_log_Logic._._(fn);
};
stx_log_Logic.fromPosPredicate = function(self) {
	return stx_log_Logic.fromFilter(new stx_log_filter_term_PosPredicate(self));
};
stx_log_Logic.fromFilter = function(self) {
	return stx_log_LogicSum.LV(self);
};
stx_log_Logic.and = function(this1,that) {
	return stx_log_LogicSum.LAnd(this1,that);
};
stx_log_Logic.or = function(this1,that) {
	return stx_log_LogicSum.LOr(this1,that);
};
stx_log_Logic.not = function(this1) {
	return stx_log_LogicSum.LNot(stx_log_Logic.lift(this1));
};
stx_log_Logic.apply = function(this1,value) {
	switch(this1._hx_index) {
	case 0:
		var l = this1.l;
		var r = this1.r;
		return stx_nano_Report.or(stx_log_Logic.apply(l,value),function() {
			return stx_log_Logic.apply(r,value);
		});
	case 1:
		var l = this1.l;
		var r1 = this1.r;
		var fst = stx_log_Logic.apply(l,value);
		return stx_LiftIf.if_else(stx_nano_ReportLift.is_defined(fst),function() {
			return stx_log_Logic.apply(r1,value);
		},function() {
			return fst;
		});
	case 2:
		var v = this1.l;
		var self = stx_log_Logic.apply(v,value);
		if(self == null) {
			return stx_nano_Report.make(stx_fail_LogFailure.E_Log_Not,{ fileName : "stx/log/Logic.hx", lineNumber : 58, className : "stx.log._Logic.Logic_Impl_", methodName : "apply"});
		} else {
			switch(self._hx_index) {
			case 0:
				var v = self.v;
				return stx_nano_Report.unit();
			case 1:
				return stx_nano_Report.make(stx_fail_LogFailure.E_Log_Not,{ fileName : "stx/log/Logic.hx", lineNumber : 58, className : "stx.log._Logic.Logic_Impl_", methodName : "apply"});
			}
		}
		break;
	case 3:
		var v = this1.v;
		return v.apply(value);
	}
};
stx_log_Logic.opine = function(this1,value) {
	return stx_log_Logic.apply(this1,value);
};
stx_log_Logic.prj = function(this1) {
	return this1;
};
stx_log_Logic.get_self = function(this1) {
	return stx_log_Logic.lift(this1);
};
stx_log_Logic.construct = function(fn) {
	return stx_log_Logic.fromPosPredicate(stx_assert_Predicate.Anon(fn));
};
stx_log_Logic.pack = function(pack) {
	return stx_log_Logic.construct(function(info) {
		var canonical = pack.join(".");
		var query = new hre_RegExp("" + canonical + ".*","g");
		var self = stx_pico_OptionLift.map(info.pos,function(pos) {
			return query.test(stx_pico_Identifier.get_pack(stx_pico_Identifier.lift(stx_nano_Position.get_fileName(pos))).join("."));
		});
		var tmp;
		if(self._hx_index == 0) {
			var v = self.v;
			tmp = v;
		} else {
			tmp = false;
		}
		return stx_LiftIf.if_else(tmp,function() {
			return stx_nano_Report.unit();
		},function() {
			var f = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/log/Logic.hx", lineNumber : 84, className : "stx.log._Logic.Logic_Impl_", methodName : "pack"});
			var self = stx_pico_OptionLift.map(info.pos,function(pos) {
				return stx_fail_LogFailure.E_Log_SourceNotInPackage(stx_pico_Identifier.fromPath(new haxe_io_Path(stx_nano_Position.get_fileName(pos))),pack.join("."));
			});
			var data;
			if(self._hx_index == 0) {
				var v = self.v;
				data = v;
			} else {
				data = stx_fail_LogFailure.E_Log_SourceNotInPackage("<unknown>",pack.join("."));
			}
			return stx_nano_Report.pure(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(data)),haxe_ds_Option.None,stx_pico_Option.fromNullT(f)));
		});
	});
};
stx_log_Logic.type = function(type) {
	return stx_log_Logic.construct(function(info) {
		var self = stx_pico_OptionLift.map(info.pos,function(pos) {
			return type == stx_pico_Identifier.fromPath(new haxe_io_Path(stx_nano_Position.get_fileName(pos)));
		});
		var tmp;
		if(self._hx_index == 0) {
			var v = self.v;
			tmp = v;
		} else {
			tmp = false;
		}
		return stx_LiftIf.if_else(tmp,function() {
			return stx_nano_Report.unit();
		},function() {
			var f = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/log/Logic.hx", lineNumber : 100, className : "stx.log._Logic.Logic_Impl_", methodName : "type"});
			var self = stx_pico_OptionLift.map(info.pos,function(pos) {
				return stx_fail_LogFailure.E_Log_SourceNotInPackage(stx_pico_Identifier.fromPath(new haxe_io_Path(stx_nano_Position.get_fileName(pos))),type);
			});
			var data;
			if(self._hx_index == 0) {
				var v = self.v;
				data = v;
			} else {
				data = stx_fail_LogFailure.E_Log_SourceNotInPackage("<unknown>","<unknown>");
			}
			return stx_nano_Report.pure(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(data)),haxe_ds_Option.None,stx_pico_Option.fromNullT(f)));
		});
	});
};
stx_log_Logic.line = function(n) {
	return stx_log_Logic.construct(function(info) {
		var self = stx_pico_OptionLift.map(info.pos,function(x) {
			return stx_nano_Position.get_lineNumber(x) == n;
		});
		var result;
		if(self._hx_index == 0) {
			var v = self.v;
			result = v;
		} else {
			result = false;
		}
		return stx_LiftIf.if_else(result,function() {
			return stx_nano_Report.unit();
		},function() {
			var f = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/log/Logic.hx", lineNumber : 115, className : "stx.log._Logic.Logic_Impl_", methodName : "line"});
			return stx_nano_Report.pure(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_LogFailure.E_Log_NotLine(n))),haxe_ds_Option.None,stx_pico_Option.fromNullT(f)));
		});
	});
};
stx_log_Logic.lines = function(l,h) {
	return stx_log_Logic.construct(function(info) {
		var self = stx_pico_OptionLift.map(info.pos,function(pos) {
			if(stx_nano_Position.get_lineNumber(pos) >= l) {
				return stx_nano_Position.get_lineNumber(pos) <= h;
			} else {
				return false;
			}
		});
		var tmp;
		if(self._hx_index == 0) {
			var v = self.v;
			tmp = v;
		} else {
			tmp = false;
		}
		return stx_LiftIf.if_else(tmp,function() {
			return stx_nano_Report.unit();
		},function() {
			var f = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/log/Logic.hx", lineNumber : 126, className : "stx.log._Logic.Logic_Impl_", methodName : "lines"});
			return stx_nano_Report.pure(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_LogFailure.E_Log_NotOfRange(l,h))),haxe_ds_Option.None,stx_pico_Option.fromNullT(f)));
		});
	});
};
stx_log_Logic.tag = function(str) {
	return stx_log_Logic.construct(function(info) {
		return stx_LiftIf.if_else(stx_pico_OptionLift.is_defined(stx_lift_ArrayLift.search(info.stamp.tags,function(tag) {
			return tag == str;
		})),function() {
			return stx_nano_Report.unit();
		},function() {
			var f = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/log/Logic.hx", lineNumber : 136, className : "stx.log._Logic.Logic_Impl_", methodName : "tag"});
			return stx_nano_Report.pure(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_LogFailure.E_Log_DoesNotContainTag(str))),haxe_ds_Option.None,stx_pico_Option.fromNullT(f)));
		});
	});
};
stx_log_Logic.method = function(str) {
	return stx_log_Logic.construct(function(info) {
		var self = stx_pico_OptionLift.map(info.pos,function(pos) {
			return stx_nano_Position.get_methodName(pos) == str;
		});
		var tmp;
		if(self._hx_index == 0) {
			var v = self.v;
			tmp = v;
		} else {
			tmp = false;
		}
		return stx_LiftIf.if_else(tmp,function() {
			return stx_nano_Report.unit();
		},function() {
			var f = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/log/Logic.hx", lineNumber : 146, className : "stx.log._Logic.Logic_Impl_", methodName : "method"});
			return stx_nano_Report.pure(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_LogFailure.E_Log_NotInMethod(str))),haxe_ds_Option.None,stx_pico_Option.fromNullT(f)));
		});
	});
};
stx_log_Logic.always = function() {
	return stx_log_Logic.construct(function(pos) {
		return stx_nano_Report.unit();
	});
};
stx_log_Logic.never = function() {
	return stx_log_Logic.construct(function(value) {
		return stx_nano_Report.make(stx_fail_LogFailure.E_Log_Zero,{ fileName : "stx/log/Logic.hx", lineNumber : 157, className : "stx.log._Logic.Logic_Impl_", methodName : "never"});
	});
};
var stx_log_LogicSum = $hxEnums["stx.log.LogicSum"] = { __ename__:"stx.log.LogicSum",__constructs__:null
	,LAnd: ($_=function(l,r) { return {_hx_index:0,l:l,r:r,__enum__:"stx.log.LogicSum",toString:$estr}; },$_._hx_name="LAnd",$_.__params__ = ["l","r"],$_)
	,LOr: ($_=function(l,r) { return {_hx_index:1,l:l,r:r,__enum__:"stx.log.LogicSum",toString:$estr}; },$_._hx_name="LOr",$_.__params__ = ["l","r"],$_)
	,LNot: ($_=function(l) { return {_hx_index:2,l:l,__enum__:"stx.log.LogicSum",toString:$estr}; },$_._hx_name="LNot",$_.__params__ = ["l"],$_)
	,LV: ($_=function(v) { return {_hx_index:3,v:v,__enum__:"stx.log.LogicSum",toString:$estr}; },$_._hx_name="LV",$_.__params__ = ["v"],$_)
};
stx_log_LogicSum.__constructs__ = [stx_log_LogicSum.LAnd,stx_log_LogicSum.LOr,stx_log_LogicSum.LNot,stx_log_LogicSum.LV];
var stx_nano_lift_LiftNano = function() { };
$hxClasses["stx.nano.lift.LiftNano"] = stx_nano_lift_LiftNano;
stx_nano_lift_LiftNano.__name__ = "stx.nano.lift.LiftNano";
stx_nano_lift_LiftNano.nano = function(wildcard) {
	return new stx_nano_Module();
};
stx_nano_lift_LiftNano.arrd = function(wildcard,arr) {
	return arr;
};
stx_nano_lift_LiftNano.if_else = function(b,_if,_else) {
	if(b) {
		return _if();
	} else {
		return _else();
	}
};
stx_nano_lift_LiftNano.here = function(wildcard,pos) {
	return pos;
};
stx_nano_lift_LiftNano.uuid = function(v,value) {
	if(value == null) {
		value = "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx";
	}
	var reg = new EReg("[xy]","g");
	return reg.map(value,function(reg) {
		var r = Math.random() * 16 | 0 | 0;
		var v = reg.matched(0) == "x" ? r : r & 3 | 8;
		return StringTools.hex(v);
	}).toLowerCase();
};
stx_nano_lift_LiftNano.sep = function(_) {
	var out = "/";
	return out;
};
stx_nano_lift_LiftNano.option = function(wildcard,v) {
	if(v == null) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(v);
	}
};
stx_nano_lift_LiftNano.accept = function(wildcard,t) {
	return stx_nano_Res.accept(t);
};
stx_nano_lift_LiftNano.reject = function(wildcard,e,pos) {
	return stx_nano_Res.reject(stx_nano_CTR.apply(e,pos));
};
stx_nano_lift_LiftNano.decline = function(wildcard,except) {
	return stx_fail_DeclineSum.EXTERIOR(except);
};
stx_nano_lift_LiftNano.success = function(wildcard,t) {
	return stx_pico_Outcome.success(t);
};
stx_nano_lift_LiftNano.failure = function(wildcard,e) {
	return stx_pico_Outcome.failure(e);
};
stx_nano_lift_LiftNano.fault = function(wildcard,pos) {
	return stx_nano_Fault._new(pos);
};
stx_nano_lift_LiftNano.couple = function(wildcard,tI,tII) {
	return function(fn) {
		fn(tI,tII);
	};
};
stx_nano_lift_LiftNano.pair = function(wildcard,tI,tII) {
	var this1 = new tink_core_MPair(tI,tII);
	return this1;
};
stx_nano_lift_LiftNano.decouple = function(wildcard,fn) {
	return function(tp) {
		return stx_nano_CoupleLift.decouple(tp,fn);
	};
};
stx_nano_lift_LiftNano.triple = function(wildcard,tI,tII,tIII) {
	return function(fn) {
		fn(tI,tII,tIII);
	};
};
stx_nano_lift_LiftNano.detriple = function(wildcard,fn) {
	return function(tp) {
		return stx_nano_TripleLift.detriple(tp,fn);
	};
};
stx_nano_lift_LiftNano.toCouple = function(self) {
	return self;
};
stx_nano_lift_LiftNano.lbump = function(wildcard,tp) {
	return stx_nano_CoupleLift.decouple(tp,function(lhs,rhs) {
		var tmp;
		switch(lhs._hx_index) {
		case 0:
			var t = lhs.v;
			tmp = haxe_ds_Option.Some(stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,t,rhs));
			break;
		case 1:
			tmp = haxe_ds_Option.None;
			break;
		}
		return tmp;
	});
};
stx_nano_lift_LiftNano.rbump = function(wildcard,tp) {
	return stx_nano_CoupleLift.decouple(tp,function(lhs,rhs) {
		var tmp;
		switch(rhs._hx_index) {
		case 0:
			var t = rhs.v;
			tmp = haxe_ds_Option.Some(stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,lhs,t));
			break;
		case 1:
			tmp = haxe_ds_Option.None;
			break;
		}
		return tmp;
	});
};
stx_nano_lift_LiftNano.fromPos = function(pos) {
	return stx_nano_Position.fromPos(pos);
};
stx_nano_lift_LiftNano.future = function(wildcard) {
	var trigger = new tink_core_FutureTrigger();
	var future = trigger;
	return stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,trigger,future);
};
stx_nano_lift_LiftNano.tracer = function(v,pos) {
	return function(t) {
		haxe_Log.trace(t,pos);
		return t;
	};
};
stx_nano_lift_LiftNano.trace = function(v,pos) {
	var infos = pos;
	return function(d) {
		haxe_Log.trace(d,infos);
	};
};
stx_nano_lift_LiftNano.perform = function(__,fn) {
	return function(v) {
		fn();
		return v;
	};
};
stx_nano_lift_LiftNano.execute = function(__,fn) {
	return function(v) {
		var _g = fn();
		if(_g._hx_index == 0) {
			var e = _g.v;
			return stx_nano_ResSum.Reject(e);
		} else {
			return stx_nano_lift_LiftNano.accept(__,v);
		}
	};
};
stx_nano_lift_LiftNano.left = function(__,tI) {
	return haxe_ds_Either.Left(tI);
};
stx_nano_lift_LiftNano.right = function(__,tII) {
	return haxe_ds_Either.Right(tII);
};
stx_nano_lift_LiftNano.either = function(either) {
	return stx_pico_EitherLift.fold(either,function(l) {
		return l;
	},function(r) {
		return r;
	});
};
stx_nano_lift_LiftNano.crack = function(wildcard,e) {
	throw haxe_Exception.thrown(e);
};
stx_nano_lift_LiftNano.raise = function(wildcard,e) {
	throw haxe_Exception.thrown(e);
};
stx_nano_lift_LiftNano.report = function(wildcard,f,pos) {
	if(f == null) {
		return stx_nano_Report.unit();
	} else {
		return stx_nano_Report.pure(f(stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,pos)));
	}
};
stx_nano_lift_LiftNano.definition = function(wildcard,t) {
	return js_Boot.getClass(t);
};
stx_nano_lift_LiftNano.identifier = function(self) {
	return stx_pico_Identifier._new(self.__name__);
};
stx_nano_lift_LiftNano.locals = function(self) {
	return Type.getInstanceFields(self);
};
stx_nano_lift_LiftNano.vblock = function(wildcard,t) {
	return function() {
	};
};
stx_nano_lift_LiftNano.not = function(bool) {
	return !bool;
};
stx_nano_lift_LiftNano.toPosition = function(pos) {
	return stx_nano_Position.fromPos(pos);
};
stx_nano_lift_LiftNano.chunk = function(_,v) {
	if(v == null) {
		return stx_nano_ChunkSum.Tap;
	} else {
		return stx_nano_ChunkSum.Val(v);
	}
};
stx_nano_lift_LiftNano.way = function(wildcard,str) {
	if(str == null) {
		return stx_nano_Way.unit();
	} else {
		return stx_nano_Way.fromStringDotted(str);
	}
};
stx_nano_lift_LiftNano.toIdentifier = function(pos) {
	return stx_pico_Identifier.lift(stx_nano_Position.get_className(stx_nano_Position.fromPos(pos)));
};
stx_nano_lift_LiftNano.toAlert = function(ft) {
	return stx_nano_Alert.lift(ft);
};
stx_nano_lift_LiftNano.toString = function(pos) {
	var id = stx_nano_lift_LiftNano.toIdentifier(pos);
	var fn = stx_nano_Position.get_methodName(stx_nano_lift_LiftNano.toPosition(pos));
	return "" + (id == null ? "null" : stx_pico_Identifier.toString(id)) + "." + fn;
};
stx_nano_lift_LiftNano.toIdent = function(self) {
	return stx_nano_Ident.fromIdentifier(self);
};
var stx_nano_Wildcard = $hxEnums["stx.nano.Wildcard"] = { __ename__:"stx.nano.Wildcard",__constructs__:null
	,__: {_hx_name:"__",_hx_index:0,__enum__:"stx.nano.Wildcard",toString:$estr}
};
stx_nano_Wildcard.__constructs__ = [stx_nano_Wildcard.__];
var stx_assert_PredicateApi = function() { };
$hxClasses["stx.assert.PredicateApi"] = stx_assert_PredicateApi;
stx_assert_PredicateApi.__name__ = "stx.assert.PredicateApi";
stx_assert_PredicateApi.__isInterface__ = true;
stx_assert_PredicateApi.prototype = {
	apply: null
	,__class__: stx_assert_PredicateApi
};
var stx_log_Filter = function() {
};
$hxClasses["stx.log.Filter"] = stx_log_Filter;
stx_log_Filter.__name__ = "stx.log.Filter";
stx_log_Filter.__interfaces__ = [stx_assert_PredicateApi];
stx_log_Filter.Unit = function() {
	return new stx_log_filter_term_Unit();
};
stx_log_Filter.Race = function() {
	return new stx_log_filter_term_Race();
};
stx_log_Filter.PosPredicate = function() {
	return stx_log_filter_term_PosPredicate;
};
stx_log_Filter.prototype = {
	apply: function(value) {
		return stx_nano_Report.unit();
	}
	,note: function(str) {
	}
	,__class__: stx_log_Filter
};
var stx_log_filter_term_Unit = function() {
	stx_log_Filter.call(this);
};
$hxClasses["stx.log.filter.term.Unit"] = stx_log_filter_term_Unit;
stx_log_filter_term_Unit.__name__ = "stx.log.filter.term.Unit";
stx_log_filter_term_Unit.__super__ = stx_log_Filter;
stx_log_filter_term_Unit.prototype = $extend(stx_log_Filter.prototype,{
	apply: function(value) {
		return stx_nano_Report.unit();
	}
	,__class__: stx_log_filter_term_Unit
});
var stx_log_core_Format = {};
stx_log_core_Format.unit = function() {
	var this1 = stx_log_core_Format.fromArray(stx_log_core_Format.get_DEFAULT());
	return this1;
};
stx_log_core_Format._new = function(self) {
	var this1 = self;
	return this1;
};
stx_log_core_Format.lift = function(self) {
	var this1 = self;
	return this1;
};
stx_log_core_Format.DEFAULT = null;
stx_log_core_Format.fromArray = function(self) {
	return new stx_log_core_FormatCls(self);
};
stx_log_core_Format.get_DEFAULT = function() {
	if(stx_log_core_Format.DEFAULT == null) {
		return stx_log_core_Format.DEFAULT = [stx_log_core_FormatSum.INCLUDE_TAGS,stx_log_core_FormatSum.INCLUDE_LEVEL,stx_log_core_FormatSum.INCLUDE_TIMESTAMP,stx_log_core_FormatSum.INCLUDE_LOCATION,stx_log_core_FormatSum.INCLUDE_DETAIL];
	} else {
		return stx_log_core_Format.DEFAULT;
	}
};
stx_log_core_Format.prj = function(this1) {
	return this1;
};
stx_log_core_Format.get_self = function(this1) {
	var this2 = this1;
	return this2;
};
var stx_log_core_FormatCls = function(data) {
	var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,data);
	var v = stx_log_core_Format.get_DEFAULT();
	var tmp;
	if(self._hx_index == 0) {
		var v1 = self.v;
		tmp = v1;
	} else {
		tmp = v;
	}
	this.data = tmp;
};
$hxClasses["stx.log.core.FormatCls"] = stx_log_core_FormatCls;
stx_log_core_FormatCls.__name__ = "stx.log.core.FormatCls";
stx_log_core_FormatCls.prototype = {
	data: null
	,has: function(v) {
		var index = this.data.indexOf(v);
		return stx_pico_OptionLift.is_defined(index == -1 ? haxe_ds_Option.None : haxe_ds_Option.Some(index));
	}
	,print: function(value) {
		var p = value.source;
		var s = p.stamp;
		var a = [];
		if(this.has(stx_log_core_FormatSum.INCLUDE_LEVEL)) {
			a.push(stx_log_Level.toString(s.level));
		}
		if(this.has(stx_log_core_FormatSum.INCLUDE_TIMESTAMP)) {
			a.push(HxOverrides.dateStr(s.timestamp));
		}
		if(this.has(stx_log_core_FormatSum.INCLUDE_TAGS)) {
			a.push("[" + s.tags.join(",") + "]");
		}
		if(this.has(stx_log_core_FormatSum.INCLUDE_LOCATION)) {
			var self = stx_pico_OptionLift.map(p.pos,stx_nano_PositionLift.to_vscode_clickable_link);
			var b;
			if(self._hx_index == 0) {
				var v = self.v;
				b = v;
			} else {
				b = "";
			}
			a.push(b);
		}
		if(this.has(stx_log_core_FormatSum.INCLUDE_NEWLINE_FOR_DETAIL)) {
			a.push("\n");
		}
		if(this.has(stx_log_core_FormatSum.INCLUDE_DETAIL)) {
			a.push(value.detail == null ? "null" : stx_log_core_Entry.toString(value.detail));
		}
		return a.join(" ");
	}
	,__class__: stx_log_core_FormatCls
};
var stx_log_core_FormatSum = $hxEnums["stx.log.core.FormatSum"] = { __ename__:"stx.log.core.FormatSum",__constructs__:null
	,INCLUDE_LEVEL: {_hx_name:"INCLUDE_LEVEL",_hx_index:0,__enum__:"stx.log.core.FormatSum",toString:$estr}
	,INCLUDE_TIMESTAMP: {_hx_name:"INCLUDE_TIMESTAMP",_hx_index:1,__enum__:"stx.log.core.FormatSum",toString:$estr}
	,INCLUDE_TAGS: {_hx_name:"INCLUDE_TAGS",_hx_index:2,__enum__:"stx.log.core.FormatSum",toString:$estr}
	,INCLUDE_LOCATION: {_hx_name:"INCLUDE_LOCATION",_hx_index:3,__enum__:"stx.log.core.FormatSum",toString:$estr}
	,INCLUDE_NEWLINE_FOR_DETAIL: {_hx_name:"INCLUDE_NEWLINE_FOR_DETAIL",_hx_index:4,__enum__:"stx.log.core.FormatSum",toString:$estr}
	,INCLUDE_DETAIL: {_hx_name:"INCLUDE_DETAIL",_hx_index:5,__enum__:"stx.log.core.FormatSum",toString:$estr}
};
stx_log_core_FormatSum.__constructs__ = [stx_log_core_FormatSum.INCLUDE_LEVEL,stx_log_core_FormatSum.INCLUDE_TIMESTAMP,stx_log_core_FormatSum.INCLUDE_TAGS,stx_log_core_FormatSum.INCLUDE_LOCATION,stx_log_core_FormatSum.INCLUDE_NEWLINE_FOR_DETAIL,stx_log_core_FormatSum.INCLUDE_DETAIL];
var stx_pico_OptionLift = $hx_exports["stx"]["pico"]["OptionLift"] = function() { };
$hxClasses["stx.pico.OptionLift"] = stx_pico_OptionLift;
stx_pico_OptionLift.__name__ = "stx.pico.OptionLift";
stx_pico_OptionLift.fold = function(self,ok,no) {
	switch(self._hx_index) {
	case 0:
		var t = self.v;
		return ok(t);
	case 1:
		return no();
	}
};
stx_pico_OptionLift.map = function(self,f) {
	var tmp;
	switch(self._hx_index) {
	case 0:
		var t = self.v;
		tmp = haxe_ds_Option.Some(f(t));
		break;
	case 1:
		tmp = haxe_ds_Option.None;
		break;
	}
	return tmp;
};
stx_pico_OptionLift.flat_map = function(self,f) {
	if(self == null) {
		return haxe_ds_Option.None;
	} else {
		switch(self._hx_index) {
		case 0:
			var v = self.v;
			return f(v);
		case 1:
			return haxe_ds_Option.None;
		}
	}
};
stx_pico_OptionLift.or = function(self,thunk) {
	var tmp;
	switch(self._hx_index) {
	case 0:
		var t = self.v;
		tmp = haxe_ds_Option.Some(t);
		break;
	case 1:
		tmp = thunk();
		break;
	}
	return tmp;
};
stx_pico_OptionLift.either = function(self,fn) {
	var tmp;
	switch(self._hx_index) {
	case 0:
		var t = self.v;
		tmp = haxe_ds_Either.Left(t);
		break;
	case 1:
		tmp = haxe_ds_Either.Right(fn());
		break;
	}
	return tmp;
};
stx_pico_OptionLift.filter = function(self,fn) {
	return stx_pico_OptionLift.flat_map(self,function(v) {
		if(fn(v)) {
			return haxe_ds_Option.Some(v);
		} else {
			return haxe_ds_Option.None;
		}
	});
};
stx_pico_OptionLift.def = function(self,thunk) {
	if(self._hx_index == 0) {
		var v = self.v;
		return v;
	} else {
		return thunk();
	}
};
stx_pico_OptionLift.defv = function(self,v) {
	if(self._hx_index == 0) {
		var v1 = self.v;
		return v1;
	} else {
		return v;
	}
};
stx_pico_OptionLift.is_defined = function(self) {
	switch(self._hx_index) {
	case 0:
		var t = self.v;
		return true;
	case 1:
		return false;
	}
};
stx_pico_OptionLift.iterator = function(self) {
	var done = false;
	return { hasNext : function() {
		if(!done) {
			return stx_pico_OptionLift.is_defined(self);
		} else {
			return false;
		}
	}, next : function() {
		done = true;
		if(self._hx_index == 0) {
			var v = self.v;
			return v;
		} else {
			return null;
		}
	}};
};
stx_pico_OptionLift.merge = function(self,that,fn) {
	switch(self._hx_index) {
	case 0:
		var _g = self.v;
		switch(that._hx_index) {
		case 0:
			var r = that.v;
			var l = _g;
			return haxe_ds_Option.Some(fn(l,r));
		case 1:
			var l = _g;
			return haxe_ds_Option.Some(l);
		}
		break;
	case 1:
		if(that._hx_index == 0) {
			var r = that.v;
			return haxe_ds_Option.Some(r);
		} else {
			return haxe_ds_Option.None;
		}
		break;
	}
};
stx_pico_OptionLift.toArray = function(self) {
	switch(self._hx_index) {
	case 0:
		var v = self.v;
		return [v];
	case 1:
		return [];
	}
};
stx_pico_OptionLift.fudge = function(self,err) {
	switch(self._hx_index) {
	case 0:
		var t = self.v;
		return t;
	case 1:
		if(err != null) {
			throw haxe_Exception.thrown(err);
		} else {
			throw haxe_Exception.thrown("empty Option");
		}
		break;
	}
};
stx_pico_OptionLift.toString = function(self) {
	switch(self._hx_index) {
	case 0:
		var t = self.v;
		return "" + Std.string(t);
	case 1:
		return "<undefined>";
	}
};
stx_pico_OptionLift.prj = function(self) {
	return self;
};
var stx_log_Level = {};
stx_log_Level._new = function(self) {
	var this1 = self;
	return this1;
};
stx_log_Level.asInt = function(this1) {
	return stx_log_LevelSum.prj(this1);
};
stx_log_Level.toString = function(this1) {
	switch(this1) {
	case 0:
		return "BLANK";
	case 1:
		return "TRACE";
	case 2:
		return "DEBUG";
	case 3:
		return "INFO";
	case 4:
		return "WARN";
	case 5:
		return "ERROR";
	case 6:
		return "FATAL";
	}
};
stx_log_Level.fromString = function(self) {
	switch(self) {
	case "BLANK":
		return haxe_ds_Option.Some(0);
	case "DEBUG":
		return haxe_ds_Option.Some(2);
	case "ERROR":
		return haxe_ds_Option.Some(5);
	case "FATAL":
		return haxe_ds_Option.Some(6);
	case "INFO":
		return haxe_ds_Option.Some(3);
	case "TRACE":
		return haxe_ds_Option.Some(1);
	case "WARN":
		return haxe_ds_Option.Some(4);
	default:
		return haxe_ds_Option.None;
	}
};
var stx_log__$Signal_SignalCls = function() {
	this.handlers = [];
};
$hxClasses["stx.log._Signal.SignalCls"] = stx_log__$Signal_SignalCls;
stx_log__$Signal_SignalCls.__name__ = "stx.log._Signal.SignalCls";
stx_log__$Signal_SignalCls.prototype = {
	handlers: null
	,handle: function(fn) {
		this.handlers.push(fn);
	}
	,trigger: function(v) {
		var _g = 0;
		var _g1 = this.handlers;
		while(_g < _g1.length) {
			var handle = _g1[_g];
			++_g;
			handle(v);
		}
	}
	,attach: function(logger) {
		stx_log_Signal.has_custom = true;
		this.handle(function(x) {
			var o = (logger.apply(x))(stx_log_Logger.spur);
		});
	}
	,__class__: stx_log__$Signal_SignalCls
};
var stx_bake_Baked = {};
stx_bake_Baked._new = function() {
	var this1 = new haxe_io_Path("/mnt/dat/prj/haxe/stx/stx_parse_uri/");
	var this2 = stx_nano_Cluster.lift(["/mnt/dat/prj/haxe/stx/stx_parse_uri//src/gen/haxe/","/mnt/dat/lib/haxe/hxnodejs/git/src/","/mnt/dat/lib/haxe/tink_xml/git/src/","/mnt/dat/prj/haxe/stx/stx_show/src/main/haxe/","/mnt/dat/prj/haxe/stx/stx_bake/src/main/haxe/","/mnt/dat/prj/haxe/stx/stx_proxy/src/main/haxe/","/mnt/dat/prj/haxe/stx/stx_asys/src/main/haxe/","/mnt/dat/prj/haxe/stx/stx_config/src/main/haxe/","/mnt/dat/prj/haxe/stx/stx_parse/src/main/haxe/","/mnt/dat/lib/haxe/tink_macro/1,0,0/src/","/mnt/dat/prj/haxe/stx/stx_makro/src/main/haxe/","/mnt/dat/prj/haxe/stx/stx_ds/src/main/haxe/","/mnt/dat/prj/haxe/stx/stx_coroutine/src/main/haxe/","/mnt/dat/prj/haxe/stx/stx_stream/src/main/haxe/","/mnt/dat/prj/haxe/stx/stx_pkg/src/main/haxe/","/mnt/dat/lib/haxe/polygonal-printf/git/src/","/mnt/dat/lib/haxe/hre/0,2,1/src/","/mnt/dat/lib/haxe/haxe-strings/6,0,4/src/","/mnt/dat/lib/haxe/haxe-concurrent/git/src/","/mnt/dat/lib/haxe/haxe-files/2,0,0/src/","/mnt/dat/prj/haxe/stx/stx_log/src/main/haxe/","/mnt/dat/prj/haxe/stx/stx_assert/src/main/haxe/","/mnt/dat/prj/haxe/stx/stx_fp/src/main/haxe/","/mnt/dat/prj/haxe/stx/stx_fn/src/main/haxe/","/mnt/dat/prj/haxe/fletcher/src/main/haxe/","/mnt/dat/prj/haxe/pml/src/main/haxe/","/mnt/dat/lib/haxe/equals/1,0,2/src/","/mnt/dat/prj/haxe/forks/console.hx/","/mnt/dat/prj/haxe/stx/stx_test/src/main/haxe/","/mnt/dat/lib/haxe/tink_core/git/src/","/mnt/dat/prj/haxe/stx/stx_fail/src/main/haxe/","/mnt/dat/prj/haxe/stx/stx_nano/src/main/haxe/","/mnt/dat/prj/haxe/stx/stx_pico/src/main/haxe/","src/main/haxe/","","/usr/local/lib/haxe/extraLibs/","/usr/local/share/haxe/extraLibs/","/usr/local/bin/extraLibs/","/usr/local/lib/haxe/std/js/_std/","/usr/local/share/haxe/std/js/_std/","/usr/local/bin/std/js/_std/","/usr/local/lib/haxe/std/","/usr/local/share/haxe/std/","/usr/local/bin/std/"]);
	var this3 = stx_nano_Cluster.lift(["-main","stx.net.uri.Test","-cp","src/main/haxe","-cp","/mnt/dat/prj/haxe/stx/stx_pico/src/main/haxe/","-D","stx_pico=1.0.0","-cp","/mnt/dat/prj/haxe/stx/stx_nano/src/main/haxe/","-D","stx_nano=0.1.6","-cp","/mnt/dat/prj/haxe/stx/stx_fail/src/main/haxe/","-D","stx_pico=0.1.0","-cp","/mnt/dat/lib/haxe/tink_core/git/src/","-D","tink_core=2.0.2","-cp","/mnt/dat/prj/haxe/stx/stx_test/src/main/haxe/","-D","stx_test=0.1.0","--neko-lib","/mnt/dat/prj/haxe/forks/console.hx/ndll/","-cp","/mnt/dat/prj/haxe/forks/console.hx/","-D","console.hx=0.2.15","-cp","/mnt/dat/lib/haxe/equals/1,0,2/src/","-D","equals=1.0.2","-cp","/mnt/dat/prj/haxe/pml/src/main/haxe/","-D","pml=0.3.0","-cp","/mnt/dat/prj/haxe/fletcher/src/main/haxe/","-D","fletcher=0.2.0","-cp","/mnt/dat/prj/haxe/stx/stx_fn/src/main/haxe/","-D","stx_nano=1.1.0","-cp","/mnt/dat/prj/haxe/stx/stx_fp/src/main/haxe/","-D","stx_fp=0.3.0","-cp","/mnt/dat/prj/haxe/stx/stx_assert/src/main/haxe/","-D","stx_assert=0.2.0","-cp","/mnt/dat/prj/haxe/stx/stx_log/src/main/haxe/","-D","stx_log=0.1.5","--macro","hx.files.internal.Macros.addDefines()","-cp","/mnt/dat/lib/haxe/haxe-files/2,0,0/src/","-D","haxe-files=2.0.0","--macro","hx.concurrent.internal.Macros.addDefines()","-cp","/mnt/dat/lib/haxe/haxe-concurrent/git/src/","-D","haxe-concurrent=3.0.0","--macro","hx.strings.internal.Macros.addDefines()","-cp","/mnt/dat/lib/haxe/haxe-strings/6,0,4/src/","-D","haxe-strings=6.0.4","-cp","/mnt/dat/lib/haxe/hre/0,2,1/src/","-D","hre=0.2.1","-cp","/mnt/dat/lib/haxe/polygonal-printf/git/src/","-D","polygonal-printf=1.0.2-beta","-cp","/mnt/dat/prj/haxe/stx/stx_pkg/src/main/haxe/","-D","stx_pkg=0.1.0","-cp","/mnt/dat/prj/haxe/stx/stx_stream/src/main/haxe/","-D","stx_stream=0.1.1","-cp","/mnt/dat/prj/haxe/stx/stx_coroutine/src/main/haxe/","-D","stx_coroutine=0.3.0","-cp","/mnt/dat/prj/haxe/stx/stx_ds/src/main/haxe/","-D","stx_ds=0.2.1","--macro","stx.makro.Plugin.use()","-cp","/mnt/dat/prj/haxe/stx/stx_makro/src/main/haxe/","-D","stx_makro=0.0.1","-cp","/mnt/dat/lib/haxe/tink_macro/1,0,0/src/","-D","tink_macro=1.0.0","-cp","/mnt/dat/prj/haxe/stx/stx_parse/src/main/haxe/","-D","stx_parse=0.3.0","-cp","/mnt/dat/prj/haxe/stx/stx_config/src/main/haxe/","-D","stx_pico=0.1.0","-cp","/mnt/dat/prj/haxe/stx/stx_asys/src/main/haxe/","-D","stx_asys=0.1.0","-cp","/mnt/dat/prj/haxe/stx/stx_proxy/src/main/haxe/","-D","stx_proxy=0.1.0","--macro","stx.bake.Plugin.use()","-cp","/mnt/dat/prj/haxe/stx/stx_bake/src/main/haxe/","-D","stx_bake=0.1.0","-cp","/mnt/dat/prj/haxe/stx/stx_show/src/main/haxe/","-D","stx_show=0.1.0","-cp","/mnt/dat/lib/haxe/tink_xml/git/src/","-D","tink_xml=0.2.0","--macro","allowPackage('sys')","--macro","define('nodejs')","--macro","_internal.SuppressDeprecated.run()","-cp","/mnt/dat/lib/haxe/hxnodejs/git/src/","-D","hxnodejs=12.1.0","-D","no-deprecation-warnings","-D","stx.parse.switches.debug=false","-D","debug","-resource","tests.pml@tests","-resource","vendor/iri-tests/iris.xml@iris","-resource","vendor/ips/IPv6.txt@ipv6","-js","test.js"]);
	var _this = [{ val : "1", key : "utf16"},{ val : "1", key : "true"},{ val : "0.2.0", key : "tink_xml"},{ val : "1.0.0", key : "tink_macro"},{ val : "2.0.2", key : "tink_core"},{ val : "0.2.0", key : "tink-xml"},{ val : "1.0.0", key : "tink-macro"},{ val : "2.0.2", key : "tink-core"},{ val : "1", key : "target.utf16"},{ val : "1", key : "target.unicode"},{ val : "js", key : "target.name"},{ val : "0.1.0", key : "stx_test"},{ val : "0.1.1", key : "stx_stream"},{ val : "0.1.0", key : "stx_show"},{ val : "0.1.0", key : "stx_proxy"},{ val : "0.1.0", key : "stx_pkg"},{ val : "0.1.0", key : "stx_pico"},{ val : "0.3.0", key : "stx_parse"},{ val : "1.1.0", key : "stx_nano"},{ val : "0.0.1", key : "stx_makro"},{ val : "0.1.5", key : "stx_log"},{ val : "0.3.0", key : "stx_fp"},{ val : "0.2.1", key : "stx_ds"},{ val : "0.3.0", key : "stx_coroutine"},{ val : "0.1.0", key : "stx_bake"},{ val : "0.1.0", key : "stx_asys"},{ val : "0.2.0", key : "stx_assert"},{ val : "false", key : "stx.parse.switches.debug"},{ val : "0.1.0", key : "stx-test"},{ val : "0.1.1", key : "stx-stream"},{ val : "0.1.0", key : "stx-show"},{ val : "0.1.0", key : "stx-proxy"},{ val : "0.1.0", key : "stx-pkg"},{ val : "0.1.0", key : "stx-pico"},{ val : "0.3.0", key : "stx-parse"},{ val : "1.1.0", key : "stx-nano"},{ val : "0.0.1", key : "stx-makro"},{ val : "0.1.5", key : "stx-log"},{ val : "0.3.0", key : "stx-fp"},{ val : "0.2.1", key : "stx-ds"},{ val : "0.3.0", key : "stx-coroutine"},{ val : "0.1.0", key : "stx-bake"},{ val : "0.1.0", key : "stx-asys"},{ val : "0.2.0", key : "stx-assert"},{ val : "Generated by Haxe 4.3.0-rc.1", key : "source_header"},{ val : "Generated by Haxe 4.3.0-rc.1", key : "source-header"},{ val : "1.0.2-beta", key : "polygonal_printf"},{ val : "1.0.2-beta", key : "polygonal-printf"},{ val : "0.3.0", key : "pml"},{ val : "1", key : "no_deprecation_warnings"},{ val : "1", key : "no-deprecation-warnings"},{ val : "1", key : "js_es5"},{ val : "5", key : "js_es"},{ val : "1", key : "js-es5"},{ val : "5", key : "js-es"},{ val : "1", key : "js"},{ val : "12.1.0", key : "hxnodejs"},{ val : "0.2.1", key : "hre"},{ val : "4.300", key : "haxe_ver"},{ val : "6.0.4", key : "haxe_strings"},{ val : "2.0.0", key : "haxe_files"},{ val : "3.0.0", key : "haxe_concurrent"},{ val : "1", key : "haxe4"},{ val : "1", key : "haxe3"},{ val : "4.300", key : "haxe-ver"},{ val : "6.0.4", key : "haxe-strings"},{ val : "2.0.0", key : "haxe-files"},{ val : "3.0.0", key : "haxe-concurrent"},{ val : "4.3.0-rc.1", key : "haxe"},{ val : "0.2.0", key : "fletcher"},{ val : "1.0.2", key : "equals"},{ val : "1", key : "debug"},{ val : "std", key : "dce"},{ val : "0.2.15", key : "console.hx"}];
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		var kv = _this[i];
		result[i] = stx_nano_Field.lift({ key : kv.key, val : kv.val});
	}
	var this4 = new stx_bake_Baking(this1,this2,this3,stx_nano_Cluster.lift(result),"/home/dayz/");
	return this4;
};
var stx_lift_ArrayLift = function() { };
$hxClasses["stx.lift.ArrayLift"] = stx_lift_ArrayLift;
stx_lift_ArrayLift.__name__ = "stx.lift.ArrayLift";
stx_lift_ArrayLift.flatten = function(arrs) {
	var res = [];
	var _g = 0;
	while(_g < arrs.length) {
		var arr = arrs[_g];
		++_g;
		var _g1 = 0;
		while(_g1 < arr.length) {
			var e = arr[_g1];
			++_g1;
			res.push(e);
		}
	}
	return res;
};
stx_lift_ArrayLift.interleave = function(alls) {
	var res = [];
	if(alls.length > 0) {
		var minLength = alls[0].length;
		var _g = 0;
		while(_g < alls.length) {
			var e = alls[_g];
			++_g;
			minLength = Math.min(minLength,e.length) | 0;
		}
		var length = minLength;
		var i = 0;
		while(i < length) {
			var _g = 0;
			while(_g < alls.length) {
				var arr = alls[_g];
				++_g;
				res.push(arr[i]);
			}
			++i;
		}
	}
	return res;
};
stx_lift_ArrayLift.is_defined = function(self) {
	return self.length > 0;
};
stx_lift_ArrayLift.cons = function(self,t) {
	var copy = stx_lift_ArrayLift.copy(self);
	copy.unshift(t);
	return copy;
};
stx_lift_ArrayLift.snoc = function(self,t) {
	var copy = stx_lift_ArrayLift.copy(self);
	copy.push(t);
	return copy;
};
stx_lift_ArrayLift.set = function(self,i,v) {
	var arr0 = self.slice();
	arr0[i] = v;
	return arr0;
};
stx_lift_ArrayLift.get = function(self,i) {
	return self[i];
};
stx_lift_ArrayLift.head = function(self) {
	if(self.length == 0) {
		return haxe_ds_Option.None;
	} else if(self[0] == null) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(self[0]);
	}
};
stx_lift_ArrayLift.tail = function(self) {
	return self.slice(1);
};
stx_lift_ArrayLift.last = function(self) {
	var v = self[self.length > 0 ? self.length - 1 : 0];
	if(v == null) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(v);
	}
};
stx_lift_ArrayLift.copy = function(self) {
	return [].concat(self);
};
stx_lift_ArrayLift.concat = function(self,that) {
	var acc = stx_lift_ArrayLift.copy(self);
	var _g = 0;
	while(_g < self.length) {
		var e = self[_g];
		++_g;
		acc.push(e);
	}
	return acc;
};
stx_lift_ArrayLift.bind_fold = function(self,pure,init,bind,fold) {
	return stx_lift_ArrayLift.lfold(self,function(next,memo) {
		return bind(memo,function(b) {
			return pure(fold(next,b));
		});
	},pure(init));
};
stx_lift_ArrayLift.reduce = function(self,unit,pure,plus) {
	return stx_lift_ArrayLift.lfold(self,function(next,memo) {
		return plus(memo,pure(next));
	},unit());
};
stx_lift_ArrayLift.map = function(self,fn) {
	var n = [];
	var _g = 0;
	while(_g < self.length) {
		var e = self[_g];
		++_g;
		n.push(fn(e));
	}
	return n;
};
stx_lift_ArrayLift.imap = function(self,fn) {
	var n = [];
	var e = null;
	var _g = 0;
	var _g1 = self.length;
	while(_g < _g1) {
		var i = _g++;
		e = self[i];
		n.push(fn(i,e));
	}
	return n;
};
stx_lift_ArrayLift.flat_map = function(self,fn) {
	var n = [];
	var _g = 0;
	while(_g < self.length) {
		var e1 = self[_g];
		++_g;
		var e2 = $getIterator(fn(e1));
		while(e2.hasNext()) {
			var e21 = e2.next();
			n.push(e21);
		}
	}
	return n;
};
stx_lift_ArrayLift.lfold = function(self,fn,memo) {
	var r = memo;
	var _g = 0;
	while(_g < self.length) {
		var e = self[_g];
		++_g;
		r = fn(e,r);
	}
	return r;
};
stx_lift_ArrayLift.lfold1 = function(self,fn) {
	var folded = stx_lift_ArrayLift.head(self);
	var tail = stx_lift_ArrayLift.tail(self);
	return stx_pico_OptionLift.map(folded,function(memo) {
		var _g = 0;
		while(_g < tail.length) {
			var item = tail[_g];
			++_g;
			memo = fn(memo,item);
		}
		return memo;
	});
};
stx_lift_ArrayLift.rfold = function(self,fn,z) {
	var r = z;
	var _g = 0;
	var _g1 = self.length;
	while(_g < _g1) {
		var i = _g++;
		var e = self[self.length - 1 - i];
		r = fn(e,r);
	}
	return r;
};
stx_lift_ArrayLift.rfold1 = function(self,fn) {
	return stx_lift_ArrayLift.lfold1(stx_lift_ArrayLift.lfold(self,function(b,a) {
		a.unshift(b);
		return a;
	},[]),fn);
};
stx_lift_ArrayLift.lscan = function(self,f,init) {
	var accum = init;
	var result = [init];
	var _g = 0;
	while(_g < self.length) {
		var e = self[_g];
		++_g;
		result.push(f(e,accum));
	}
	return result;
};
stx_lift_ArrayLift.lscan1 = function(self,f) {
	var result = [];
	if(0 == self.length) {
		return result;
	}
	var accum = self[0];
	result.push(accum);
	var _g = 1;
	var _g1 = self.length;
	while(_g < _g1) {
		var i = _g++;
		result.push(f(self[i],accum));
	}
	return result;
};
stx_lift_ArrayLift.rscan = function(self,init,f) {
	var a = self.slice();
	a.reverse();
	return stx_lift_ArrayLift.lscan(a,f,init);
};
stx_lift_ArrayLift.rscan1 = function(self,f) {
	var a = self.slice();
	a.reverse();
	return stx_lift_ArrayLift.lscan1(a,f);
};
stx_lift_ArrayLift.filter = function(self,fn) {
	var n = [];
	var _g = 0;
	while(_g < self.length) {
		var e = self[_g];
		++_g;
		if(fn(e)) {
			n.push(e);
		}
	}
	return n;
};
stx_lift_ArrayLift.map_filter = function(self,fn) {
	return stx_lift_ArrayLift.lfold(self,function(next,memo) {
		var _g = fn(next);
		if(_g._hx_index == 0) {
			var v = _g.v;
			return stx_lift_ArrayLift.snoc(memo,v);
		} else {
			return memo;
		}
	},[]);
};
stx_lift_ArrayLift.whilst = function(self,fn) {
	var r = [];
	var _g = 0;
	while(_g < self.length) {
		var e = self[_g];
		++_g;
		if(fn(e)) {
			r.push(e);
		} else {
			break;
		}
	}
	return r;
};
stx_lift_ArrayLift.range = function(self,l,r) {
	return self.slice(l,r);
};
stx_lift_ArrayLift.ltaken = function(self,n) {
	return self.slice(0,Math.min(n,self.length) | 0);
};
stx_lift_ArrayLift.ldropn = function(self,n) {
	if(n >= self.length) {
		return [];
	} else {
		return self.slice(n);
	}
};
stx_lift_ArrayLift.rdropn = function(self,n) {
	if(self != null && n >= self.length) {
		return [];
	} else {
		return self.splice(0,self.length - n);
	}
};
stx_lift_ArrayLift.ldrop = function(self,p) {
	var r = [].concat(self);
	var _g = 0;
	while(_g < self.length) {
		var e = self[_g];
		++_g;
		if(p(e)) {
			r.shift();
		} else {
			break;
		}
	}
	return r;
};
stx_lift_ArrayLift.search = function(self,fn) {
	var out = haxe_ds_Option.None;
	var _g = 0;
	while(_g < self.length) {
		var el = self[_g];
		++_g;
		if(fn(el)) {
			out = haxe_ds_Option.Some(el);
			break;
		}
	}
	return out;
};
stx_lift_ArrayLift.all = function(self,fn) {
	return stx_lift_ArrayLift.lfold(self,function(b,a) {
		if(a) {
			return fn(b);
		} else {
			return false;
		}
	},true);
};
stx_lift_ArrayLift.any = function(self,fn) {
	return stx_lift_ArrayLift.lfold(self,function(b,a) {
		if(a) {
			return true;
		} else {
			return fn(b);
		}
	},false);
};
stx_lift_ArrayLift.zip_with = function(self,that,fn) {
	var next = [];
	var lower = Math.min(self.length,that.length) | 0;
	var _g = 0;
	var _g1 = lower;
	while(_g < _g1) {
		var i = _g++;
		next.push(fn(self[i],that[i]));
	}
	return next;
};
stx_lift_ArrayLift.cross_with = function(self,that,fn) {
	var r = [];
	var _g = 0;
	while(_g < self.length) {
		var va = self[_g];
		++_g;
		var _g1 = 0;
		while(_g1 < that.length) {
			var vb = that[_g1];
			++_g1;
			r.push(fn(va,vb));
		}
	}
	return r;
};
stx_lift_ArrayLift.difference_with = function(self,that,eq) {
	var res = [];
	var _g = 0;
	while(_g < self.length) {
		var e = [self[_g]];
		++_g;
		if(!stx_lift_ArrayLift.any(that,(function(e) {
			return function(x) {
				return eq(x,e[0]);
			};
		})(e))) {
			res.push(e[0]);
		}
	}
	return res;
};
stx_lift_ArrayLift.union_with = function(self,that,eq) {
	var res = [];
	var _g = 0;
	while(_g < self.length) {
		var e = self[_g];
		++_g;
		res.push(e);
	}
	var _g = 0;
	while(_g < that.length) {
		var e = [that[_g]];
		++_g;
		if(!stx_lift_ArrayLift.any(res,(function(e) {
			return function(x) {
				return eq(x,e[0]);
			};
		})(e))) {
			res.push(e[0]);
		}
	}
	return res;
};
stx_lift_ArrayLift.unique_with = function(self,eq) {
	var r = [];
	var _g = 0;
	while(_g < self.length) {
		var e = self[_g];
		++_g;
		var exists = stx_lift_ArrayLift.any(r,(function(_g,a1) {
			return function(a2) {
				return _g[0](a1[0],a2);
			};
		})([eq],[e]));
		var val = stx_lift_ArrayLift.search(r,(function(_g,a1) {
			return function(a2) {
				return _g[0](a1[0],a2);
			};
		})([eq],[e]));
		if(!exists) {
			r.push(e);
		}
	}
	return r;
};
stx_lift_ArrayLift.nub_with = function(self,f) {
	return stx_lift_ArrayLift.lfold(self,function(b,a) {
		var _g = f;
		var a1 = b;
		if(stx_lift_ArrayLift.any(a,function(a2) {
			return _g(a1,a2);
		})) {
			return a;
		} else {
			return stx_lift_ArrayLift.snoc(a,b);
		}
	},[]);
};
stx_lift_ArrayLift.intersect_with = function(self,that,f) {
	return stx_lift_ArrayLift.lfold(self,function(next,memo) {
		var _g = f;
		var a1 = next;
		var _g1 = function(a2) {
			return _g(a1,a2);
		};
		if(stx_lift_ArrayLift.any(that,_g1) == true) {
			return stx_lift_ArrayLift.snoc(memo,next);
		} else {
			return memo;
		}
	},[]);
};
stx_lift_ArrayLift.reversed = function(self) {
	return stx_lift_ArrayLift.lfold(self,function(b,a) {
		a.unshift(b);
		return a;
	},[]);
};
stx_lift_ArrayLift.count = function(self,f) {
	return stx_lift_ArrayLift.lfold(self,function(b,a) {
		return a + (f(b) ? 1 : 0);
	},0);
};
stx_lift_ArrayLift.size = function(self) {
	return self.length;
};
stx_lift_ArrayLift.index_of = function(self,t) {
	var index = 0;
	var ok = false;
	var _g = 0;
	while(_g < self.length) {
		var e = self[_g];
		++_g;
		if(t(e)) {
			ok = true;
			break;
		}
		++index;
	}
	if(ok) {
		return index;
	} else {
		return -1;
	}
};
stx_lift_ArrayLift.has = function(self,obj) {
	var index = self.indexOf(obj);
	if(index == -1) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(index);
	}
};
stx_lift_ArrayLift.partition = function(self,f) {
	return stx_lift_ArrayLift.lfold(self,function(next,memo) {
		if(f(next)) {
			memo.a.push(next);
		} else {
			memo.b.push(next);
		}
		return memo;
	},{ a : [], b : []});
};
stx_lift_ArrayLift.chunk = function(self,size) {
	var slices = [];
	var rest = 0;
	var _g = 0;
	while(_g < size.length) {
		var n = size[_g];
		++_g;
		var next = rest + n;
		var slice = self.slice(rest,next);
		slices.push(slice);
		rest = next;
	}
	return slices;
};
stx_lift_ArrayLift.pad = function(self,len,val) {
	var len0 = len - self.length;
	var arr0 = [];
	var _g = 0;
	var _g1 = len0;
	while(_g < _g1) {
		var i = _g++;
		arr0.push(val);
	}
	return self.concat(arr0);
};
stx_lift_ArrayLift.fill = function(self,def) {
	var result = new Array(self.length);
	var _g = 0;
	var _g1 = self.length;
	while(_g < _g1) {
		var i = _g++;
		var x = self[i];
		result[i] = x == null ? def : x;
	}
	return result;
};
stx_lift_ArrayLift.toIterable = function(self) {
	return self;
};
stx_lift_ArrayLift.toMap = function(self) {
	var mp = new haxe_ds_StringMap();
	var _g = 0;
	while(_g < self.length) {
		var tp = self[_g];
		++_g;
		var val = tp();
		mp.h[val.a] = val.b;
	}
	return mp;
};
stx_lift_ArrayLift.random = function(self) {
	var len = self.length;
	var ind = Math.round(Math.random() * (len - 1));
	return self[ind];
};
stx_lift_ArrayLift.shuffle = function(self) {
	var res = [];
	var cp = self.slice();
	while(cp.length > 0) {
		var randArray = Math.floor(Math.random() * cp.length);
		res.push(cp.splice(randArray,1)[0]);
	}
	return res;
};
stx_lift_ArrayLift.and_with = function(self,that,eq) {
	return stx_lift_ArrayLift.lfold(stx_lift_ArrayLift.zip_with(self,that,function(l,r) {
		return { a : l, b : r};
	}),function(next,memo) {
		if(memo) {
			if(eq(next.a,next.b)) {
				return eq(next.a,next.b);
			} else {
				return false;
			}
		} else {
			return memo;
		}
	},true);
};
stx_lift_ArrayLift.rotate = function(self,num) {
	num %= self.length;
	var l = stx_lift_ArrayLift.ltaken(self,num);
	var r = stx_lift_ArrayLift.ldropn(self,num);
	if(num < 0) {
		return stx_lift_ArrayLift.concat(l,r);
	} else if(num > 1) {
		return stx_lift_ArrayLift.concat(l,r);
	} else {
		return self;
	}
};
stx_lift_ArrayLift.iterator = function(self) {
	return new haxe_iterators_ArrayIterator(self);
};
stx_lift_ArrayLift.elide = function(self) {
	return stx_lift_ArrayLift.map(self,function(v) {
		return v;
	});
};
stx_lift_ArrayLift.prj = function(self) {
	return self;
};
var stx_nano_ClusterLift = function() { };
$hxClasses["stx.nano.ClusterLift"] = stx_nano_ClusterLift;
stx_nano_ClusterLift.__name__ = "stx.nano.ClusterLift";
stx_nano_ClusterLift.lift = function(self) {
	return stx_nano_Cluster.lift(self);
};
stx_nano_ClusterLift.fmap = function(self,fn) {
	var value = stx_nano_Cluster.toIterable(self);
	return stx_nano_Cluster.lift(fn(((value) instanceof Array) ? value : null));
};
stx_nano_ClusterLift.accs = function(self,fn) {
	var value = stx_nano_Cluster.toIterable(self);
	return fn(((value) instanceof Array) ? value : null);
};
stx_nano_ClusterLift.flatten = function(self) {
	var value = stx_nano_Cluster.toIterable(self);
	return stx_nano_Cluster.lift(stx_nano_ClusterLift._.flatten(((value) instanceof Array) ? value : null));
};
stx_nano_ClusterLift.interleave = function(self) {
	var value = stx_nano_Cluster.toIterable(self);
	return stx_nano_Cluster.lift(stx_nano_ClusterLift._.interleave(((value) instanceof Array) ? value : null));
};
stx_nano_ClusterLift.is_defined = function(self) {
	var value = stx_nano_Cluster.toIterable(self);
	return (((value) instanceof Array) ? value : null).length > 0;
};
stx_nano_ClusterLift.cons = function(self,t) {
	var t1 = t;
	var self1 = function(self) {
		return stx_nano_ClusterLift._.cons(self,t1);
	};
	var value = stx_nano_Cluster.toIterable(self);
	return stx_nano_Cluster.lift(self1(((value) instanceof Array) ? value : null));
};
stx_nano_ClusterLift.snoc = function(self,t) {
	var t1 = t;
	var self1 = function(self) {
		return stx_nano_ClusterLift._.snoc(self,t1);
	};
	var value = stx_nano_Cluster.toIterable(self);
	return stx_nano_Cluster.lift(self1(((value) instanceof Array) ? value : null));
};
stx_nano_ClusterLift.set = function(self,i,v) {
	var i1 = i;
	var v1 = v;
	var self1 = function(self) {
		var arr0 = self.slice();
		arr0[i1] = v1;
		return arr0;
	};
	var value = stx_nano_Cluster.toIterable(self);
	return stx_nano_Cluster.lift(self1(((value) instanceof Array) ? value : null));
};
stx_nano_ClusterLift.get = function(self,i) {
	var i1 = i;
	var tmp = function(self) {
		return self[i1];
	};
	var value = stx_nano_Cluster.toIterable(self);
	return tmp(((value) instanceof Array) ? value : null);
};
stx_nano_ClusterLift.head = function(self) {
	var value = stx_nano_Cluster.toIterable(self);
	return stx_nano_ClusterLift._.head(((value) instanceof Array) ? value : null);
};
stx_nano_ClusterLift.tail = function(self) {
	var value = stx_nano_Cluster.toIterable(self);
	return stx_nano_Cluster.lift(stx_nano_ClusterLift._.tail(((value) instanceof Array) ? value : null));
};
stx_nano_ClusterLift.last = function(self) {
	var value = stx_nano_Cluster.toIterable(self);
	return stx_nano_ClusterLift._.last(((value) instanceof Array) ? value : null);
};
stx_nano_ClusterLift.copy = function(self) {
	var value = stx_nano_Cluster.toIterable(self);
	return stx_nano_Cluster.lift(stx_nano_ClusterLift._.copy(((value) instanceof Array) ? value : null));
};
stx_nano_ClusterLift.concat = function(self,that) {
	var that1 = that;
	var self1 = function(self) {
		return stx_nano_ClusterLift._.concat(self,that1);
	};
	var value = stx_nano_Cluster.toIterable(self);
	return stx_nano_Cluster.lift(self1(((value) instanceof Array) ? value : null));
};
stx_nano_ClusterLift.bind_fold = function(self,pure,init,bind,fold) {
	var pure1 = pure;
	var init1 = init;
	var bind1 = bind;
	var fold1 = fold;
	var tmp = function(self) {
		return stx_nano_ClusterLift._.bind_fold(self,pure1,init1,bind1,fold1);
	};
	var value = stx_nano_Cluster.toIterable(self);
	return tmp(((value) instanceof Array) ? value : null);
};
stx_nano_ClusterLift.reduce = function(self,unit,pure,plus) {
	var unit1 = unit;
	var pure1 = pure;
	var plus1 = plus;
	var tmp = function(self) {
		return stx_nano_ClusterLift._.reduce(self,unit1,pure1,plus1);
	};
	var value = stx_nano_Cluster.toIterable(self);
	return tmp(((value) instanceof Array) ? value : null);
};
stx_nano_ClusterLift.map = function(self,fn) {
	var fn1 = fn;
	var self1 = function(self) {
		return stx_nano_ClusterLift._.map(self,fn1);
	};
	var value = stx_nano_Cluster.toIterable(self);
	return stx_nano_Cluster.lift(self1(((value) instanceof Array) ? value : null));
};
stx_nano_ClusterLift.imap = function(self,fn) {
	var fn1 = fn;
	var self1 = function(self) {
		return stx_nano_ClusterLift._.imap(self,fn1);
	};
	var value = stx_nano_Cluster.toIterable(self);
	return stx_nano_Cluster.lift(self1(((value) instanceof Array) ? value : null));
};
stx_nano_ClusterLift.flat_map = function(self,fn) {
	var fn1 = fn;
	var self1 = function(self) {
		return stx_nano_ClusterLift._.flat_map(self,fn1);
	};
	var value = stx_nano_Cluster.toIterable(self);
	return stx_nano_Cluster.lift(self1(((value) instanceof Array) ? value : null));
};
stx_nano_ClusterLift.lfold = function(self,fn,memo) {
	var fn1 = fn;
	var memo1 = memo;
	var tmp = function(self) {
		return stx_nano_ClusterLift._.lfold(self,fn1,memo1);
	};
	var value = stx_nano_Cluster.toIterable(self);
	return tmp(((value) instanceof Array) ? value : null);
};
stx_nano_ClusterLift.lfold1 = function(self,fn) {
	var fn1 = fn;
	var tmp = function(self) {
		return stx_nano_ClusterLift._.lfold1(self,fn1);
	};
	var value = stx_nano_Cluster.toIterable(self);
	return tmp(((value) instanceof Array) ? value : null);
};
stx_nano_ClusterLift.rfold = function(self,fn,z) {
	var fn1 = fn;
	var z1 = z;
	var tmp = function(self) {
		return stx_nano_ClusterLift._.rfold(self,fn1,z1);
	};
	var value = stx_nano_Cluster.toIterable(self);
	return tmp(((value) instanceof Array) ? value : null);
};
stx_nano_ClusterLift.rfold1 = function(self,fn) {
	var fn1 = fn;
	var tmp = function(self) {
		return stx_nano_ClusterLift._.rfold1(self,fn1);
	};
	var value = stx_nano_Cluster.toIterable(self);
	return tmp(((value) instanceof Array) ? value : null);
};
stx_nano_ClusterLift.lscan = function(self,f,init) {
	var f1 = f;
	var init1 = init;
	var self1 = function(self) {
		return stx_nano_ClusterLift._.lscan(self,f1,init1);
	};
	var value = stx_nano_Cluster.toIterable(self);
	return stx_nano_Cluster.lift(self1(((value) instanceof Array) ? value : null));
};
stx_nano_ClusterLift.lscan1 = function(self,f) {
	var f1 = f;
	var self1 = function(self) {
		return stx_nano_ClusterLift._.lscan1(self,f1);
	};
	var value = stx_nano_Cluster.toIterable(self);
	return stx_nano_Cluster.lift(self1(((value) instanceof Array) ? value : null));
};
stx_nano_ClusterLift.rscan = function(self,init,f) {
	var init1 = init;
	var f1 = f;
	var self1 = function(self) {
		return stx_nano_ClusterLift._.rscan(self,init1,f1);
	};
	var value = stx_nano_Cluster.toIterable(self);
	return stx_nano_Cluster.lift(self1(((value) instanceof Array) ? value : null));
};
stx_nano_ClusterLift.rscan1 = function(self,fn) {
	var f = fn;
	var self1 = function(self) {
		return stx_nano_ClusterLift._.rscan1(self,f);
	};
	var value = stx_nano_Cluster.toIterable(self);
	return stx_nano_Cluster.lift(self1(((value) instanceof Array) ? value : null));
};
stx_nano_ClusterLift.filter = function(self,fn) {
	var fn1 = fn;
	var self1 = function(self) {
		return stx_nano_ClusterLift._.filter(self,fn1);
	};
	var value = stx_nano_Cluster.toIterable(self);
	return stx_nano_Cluster.lift(self1(((value) instanceof Array) ? value : null));
};
stx_nano_ClusterLift.map_filter = function(self,fn) {
	var fn1 = fn;
	var self1 = function(self) {
		return stx_nano_ClusterLift._.map_filter(self,fn1);
	};
	var value = stx_nano_Cluster.toIterable(self);
	return stx_nano_Cluster.lift(self1(((value) instanceof Array) ? value : null));
};
stx_nano_ClusterLift.whilst = function(self,fn) {
	var fn1 = fn;
	var self1 = function(self) {
		return stx_nano_ClusterLift._.whilst(self,fn1);
	};
	var value = stx_nano_Cluster.toIterable(self);
	return stx_nano_Cluster.lift(self1(((value) instanceof Array) ? value : null));
};
stx_nano_ClusterLift.ltaken = function(self,n) {
	var n1 = n;
	var self1 = function(self) {
		return stx_nano_ClusterLift._.ltaken(self,n1);
	};
	var value = stx_nano_Cluster.toIterable(self);
	return stx_nano_Cluster.lift(self1(((value) instanceof Array) ? value : null));
};
stx_nano_ClusterLift.ldropn = function(self,n) {
	var n1 = n;
	var self1 = function(self) {
		return stx_nano_ClusterLift._.ldropn(self,n1);
	};
	var value = stx_nano_Cluster.toIterable(self);
	return stx_nano_Cluster.lift(self1(((value) instanceof Array) ? value : null));
};
stx_nano_ClusterLift.rdropn = function(self,n) {
	var n1 = n;
	var self1 = function(self) {
		return stx_nano_ClusterLift._.rdropn(self,n1);
	};
	var value = stx_nano_Cluster.toIterable(self);
	return stx_nano_Cluster.lift(self1(((value) instanceof Array) ? value : null));
};
stx_nano_ClusterLift.ldrop = function(self,p) {
	var p1 = p;
	var self1 = function(self) {
		var r = [].concat(self);
		var _g = 0;
		while(_g < self.length) {
			var e = self[_g];
			++_g;
			if(p1(e)) {
				r.shift();
			} else {
				break;
			}
		}
		return r;
	};
	var value = stx_nano_Cluster.toIterable(self);
	return stx_nano_Cluster.lift(self1(((value) instanceof Array) ? value : null));
};
stx_nano_ClusterLift.search = function(self,fn) {
	var fn1 = fn;
	var tmp = function(self) {
		return stx_nano_ClusterLift._.search(self,fn1);
	};
	var value = stx_nano_Cluster.toIterable(self);
	return tmp(((value) instanceof Array) ? value : null);
};
stx_nano_ClusterLift.all = function(self,fn) {
	var fn1 = fn;
	var tmp = function(self) {
		return stx_nano_ClusterLift._.all(self,fn1);
	};
	var value = stx_nano_Cluster.toIterable(self);
	return tmp(((value) instanceof Array) ? value : null);
};
stx_nano_ClusterLift.any = function(self,fn) {
	var fn1 = fn;
	var tmp = function(self) {
		return stx_nano_ClusterLift._.any(self,fn1);
	};
	var value = stx_nano_Cluster.toIterable(self);
	return tmp(((value) instanceof Array) ? value : null);
};
stx_nano_ClusterLift.zip_with = function(self,that,fn) {
	var that1 = that;
	var fn1 = fn;
	var self1 = function(self) {
		return stx_nano_ClusterLift._.zip_with(self,that1,fn1);
	};
	var value = stx_nano_Cluster.toIterable(self);
	return stx_nano_Cluster.lift(self1(((value) instanceof Array) ? value : null));
};
stx_nano_ClusterLift.cross_with = function(self,that,fn) {
	var that1 = that;
	var fn1 = fn;
	var self1 = function(self) {
		return stx_nano_ClusterLift._.cross_with(self,that1,fn1);
	};
	var value = stx_nano_Cluster.toIterable(self);
	return stx_nano_Cluster.lift(self1(((value) instanceof Array) ? value : null));
};
stx_nano_ClusterLift.difference_with = function(self,that,eq) {
	var that1 = that;
	var eq1 = eq;
	var self1 = function(self) {
		return stx_nano_ClusterLift._.difference_with(self,that1,eq1);
	};
	var value = stx_nano_Cluster.toIterable(self);
	return stx_nano_Cluster.lift(self1(((value) instanceof Array) ? value : null));
};
stx_nano_ClusterLift.union_with = function(self,that,eq) {
	var that1 = that;
	var eq1 = eq;
	var self1 = function(self) {
		var eq = eq1;
		var res = [];
		var _g = 0;
		while(_g < self.length) {
			var e = self[_g];
			++_g;
			res.push(e);
		}
		var _g = 0;
		while(_g < that1.length) {
			var e = [that1[_g]];
			++_g;
			if(!stx_lift_ArrayLift.any(res,(function(e) {
				return function(x) {
					return eq(x,e[0]);
				};
			})(e))) {
				res.push(e[0]);
			}
		}
		return res;
	};
	var value = stx_nano_Cluster.toIterable(self);
	return stx_nano_Cluster.lift(self1(((value) instanceof Array) ? value : null));
};
stx_nano_ClusterLift.unique_with = function(self,eq) {
	var eq1 = eq;
	var self1 = function(self) {
		return stx_nano_ClusterLift._.unique_with(self,eq1);
	};
	var value = stx_nano_Cluster.toIterable(self);
	return stx_nano_Cluster.lift(self1(((value) instanceof Array) ? value : null));
};
stx_nano_ClusterLift.nub_with = function(self,f) {
	var f1 = f;
	var self1 = function(self) {
		return stx_nano_ClusterLift._.nub_with(self,f1);
	};
	var value = stx_nano_Cluster.toIterable(self);
	return stx_nano_Cluster.lift(self1(((value) instanceof Array) ? value : null));
};
stx_nano_ClusterLift.intersect_with = function(self,that,f) {
	var that1 = that;
	var f1 = f;
	var self1 = function(self) {
		var that = that1;
		var f = f1;
		return stx_lift_ArrayLift.lfold(self,function(next,memo) {
			var _g = f;
			var a1 = next;
			var _g1 = function(a2) {
				return _g(a1,a2);
			};
			if(stx_lift_ArrayLift.any(that,_g1) == true) {
				return stx_lift_ArrayLift.snoc(memo,next);
			} else {
				return memo;
			}
		},[]);
	};
	var value = stx_nano_Cluster.toIterable(self);
	return stx_nano_Cluster.lift(self1(((value) instanceof Array) ? value : null));
};
stx_nano_ClusterLift.reversed = function(self) {
	var value = stx_nano_Cluster.toIterable(self);
	return stx_nano_Cluster.lift(stx_lift_ArrayLift.lfold(((value) instanceof Array) ? value : null,function(b,a) {
		a.unshift(b);
		return a;
	},[]));
};
stx_nano_ClusterLift.count = function(self,fn) {
	var f = fn;
	var tmp = function(self) {
		var f1 = f;
		return stx_lift_ArrayLift.lfold(self,function(b,a) {
			return a + (f1(b) ? 1 : 0);
		},0);
	};
	var value = stx_nano_Cluster.toIterable(self);
	return tmp(((value) instanceof Array) ? value : null);
};
stx_nano_ClusterLift.size = function(self) {
	var value = stx_nano_Cluster.toIterable(self);
	return (((value) instanceof Array) ? value : null).length;
};
stx_nano_ClusterLift.index_of = function(self,t) {
	var t1 = t;
	var tmp = function(self) {
		var index = 0;
		var ok = false;
		var _g = 0;
		while(_g < self.length) {
			var e = self[_g];
			++_g;
			if(t1(e)) {
				ok = true;
				break;
			}
			++index;
		}
		if(ok) {
			return index;
		} else {
			return -1;
		}
	};
	var value = stx_nano_Cluster.toIterable(self);
	return tmp(((value) instanceof Array) ? value : null);
};
stx_nano_ClusterLift.has = function(self,obj) {
	var obj1 = obj;
	var tmp = function(self) {
		var index = self.indexOf(obj1);
		if(index == -1) {
			return haxe_ds_Option.None;
		} else {
			return haxe_ds_Option.Some(index);
		}
	};
	var value = stx_nano_Cluster.toIterable(self);
	return tmp(((value) instanceof Array) ? value : null);
};
stx_nano_ClusterLift.partition = function(self,f) {
	var f1 = f;
	var tmp = function(self) {
		var f = f1;
		return stx_lift_ArrayLift.lfold(self,function(next,memo) {
			if(f(next)) {
				memo.a.push(next);
			} else {
				memo.b.push(next);
			}
			return memo;
		},{ a : [], b : []});
	};
	var value = stx_nano_Cluster.toIterable(self);
	return tmp(((value) instanceof Array) ? value : null);
};
stx_nano_ClusterLift.pad = function(self,len,val) {
	var len1 = len;
	var val1 = val;
	var self1 = function(self) {
		return stx_nano_ClusterLift._.pad(self,len1,val1);
	};
	var value = stx_nano_Cluster.toIterable(self);
	return stx_nano_Cluster.lift(self1(((value) instanceof Array) ? value : null));
};
stx_nano_ClusterLift.fill = function(self,def) {
	var def1 = def;
	var self1 = function(self) {
		var def = def1;
		var result = new Array(self.length);
		var _g = 0;
		var _g1 = self.length;
		while(_g < _g1) {
			var i = _g++;
			var x = self[i];
			result[i] = x == null ? def : x;
		}
		return result;
	};
	var value = stx_nano_Cluster.toIterable(self);
	return stx_nano_Cluster.lift(self1(((value) instanceof Array) ? value : null));
};
stx_nano_ClusterLift.toIterable = function(self) {
	var value = stx_nano_Cluster.toIterable(self);
	return stx_nano_ClusterLift._.toIterable(((value) instanceof Array) ? value : null);
};
stx_nano_ClusterLift.toMap = function(self) {
	var value = stx_nano_Cluster.toIterable(self);
	var self = ((value) instanceof Array) ? value : null;
	var mp = new haxe_ds_StringMap();
	var _g = 0;
	while(_g < self.length) {
		var tp = self[_g];
		++_g;
		var val = tp();
		mp.h[val.a] = val.b;
	}
	return mp;
};
stx_nano_ClusterLift.random = function(self) {
	var value = stx_nano_Cluster.toIterable(self);
	return stx_nano_ClusterLift._.random(((value) instanceof Array) ? value : null);
};
stx_nano_ClusterLift.shuffle = function(self) {
	var value = stx_nano_Cluster.toIterable(self);
	return stx_nano_ClusterLift._.shuffle(((value) instanceof Array) ? value : null);
};
stx_nano_ClusterLift.and_with = function(self,that,eq) {
	var that1 = that;
	var eq1 = eq;
	var tmp = function(self) {
		return stx_nano_ClusterLift._.and_with(self,that1,eq1);
	};
	var value = stx_nano_Cluster.toIterable(self);
	return tmp(((value) instanceof Array) ? value : null);
};
stx_nano_ClusterLift.rotate = function(self,i) {
	var num = i;
	var self1 = function(self) {
		return stx_nano_ClusterLift._.rotate(self,num);
	};
	var value = stx_nano_Cluster.toIterable(self);
	return stx_nano_Cluster.lift(self1(((value) instanceof Array) ? value : null));
};
stx_nano_ClusterLift.iterator = function(self) {
	var value = stx_nano_Cluster.toIterable(self);
	return $iterator(stx_nano_ClusterLift._)(((value) instanceof Array) ? value : null);
};
stx_nano_ClusterLift.elide = function(self) {
	return stx_nano_ClusterLift.map(self,function(v) {
		return v;
	});
};
stx_nano_ClusterLift.range = function(self,l,r) {
	var l1 = l;
	var r1 = r;
	var self1 = function(self) {
		return stx_nano_ClusterLift._.range(self,l1,r1);
	};
	var value = stx_nano_Cluster.toIterable(self);
	return stx_nano_Cluster.lift(self1(((value) instanceof Array) ? value : null));
};
var stx_nano_Cluster = {};
stx_nano_Cluster.ZERO = null;
stx_nano_Cluster.get_ZERO = function() {
	if(stx_nano_Cluster.ZERO == null) {
		return stx_nano_Cluster.ZERO = stx_nano_Cluster._new([]);
	} else {
		return stx_nano_Cluster.ZERO;
	}
};
stx_nano_Cluster._new = function(self) {
	var this1;
	var self1 = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,self);
	if(self1._hx_index == 0) {
		var v = self1.v;
		this1 = v;
	} else {
		this1 = [];
	}
	return this1;
};
stx_nano_Cluster.lift = function(self) {
	return stx_nano_Cluster._new(self);
};
stx_nano_Cluster.unit = function() {
	return stx_nano_Cluster.lift([]);
};
stx_nano_Cluster.pure = function(self) {
	return stx_nano_Cluster.lift([self]);
};
stx_nano_Cluster.toIterable = function(this1) {
	return this1;
};
stx_nano_Cluster.toIter = function(this1) {
	return this1;
};
stx_nano_Cluster.concat = function(this1,that) {
	var value = stx_nano_Cluster.toIterable(that);
	return stx_nano_Cluster.lift(this1.concat(((value) instanceof Array) ? value : null));
};
stx_nano_Cluster.copy = function(this1) {
	return stx_nano_Cluster.lift(this1.slice());
};
stx_nano_Cluster.get_length = function(this1) {
	return this1.length;
};
stx_nano_Cluster.prj = function(this1) {
	return this1;
};
stx_nano_Cluster.toString = function(this1) {
	return Std.string(this1);
};
var stx_nano_Field = {};
stx_nano_Field._new = function(self) {
	var this1 = self;
	return this1;
};
stx_nano_Field.lift = function(self) {
	return stx_nano_Field._new(self);
};
stx_nano_Field.fromTup = function(tp) {
	return stx_nano_Field._new({ key : stx_nano_CoupleLift.fst(tp), val : stx_nano_CoupleLift.snd(tp)});
};
stx_nano_Field.fromCouple = function(tp) {
	return stx_nano_Field._new({ key : stx_nano_CoupleLift.fst(tp), val : stx_nano_CoupleLift.snd(tp)});
};
stx_nano_Field.make = function(key,val) {
	return stx_nano_Field._new({ key : key, val : val});
};
stx_nano_Field.map = function(this1,fn) {
	return stx_nano_Field.lift(stx_nano_KVLift.map(stx_nano_KV.lift(this1),fn));
};
stx_nano_Field.into = function(this1,fn) {
	return fn(this1.key,this1.val);
};
stx_nano_Field.toCouple = function(this1) {
	return stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,this1.key,this1.val);
};
stx_nano_Field.fromKeyValue = function(self) {
	return stx_nano_Field.lift({ key : self.key, val : self.value});
};
stx_nano_Field.get_value = function(this1) {
	return this1.val;
};
var stx_bake_Baking = function(root,classpaths,args,defines,home) {
	this.root = root;
	this.classpaths = classpaths;
	this.args = args;
	var pos = { fileName : "stx/bake/Baking.hx", lineNumber : 41, className : "stx.bake.Baking", methodName : "new"};
	var str = "stx.bake.session.id";
	if(!stx_nano_Resource.exists(str)) {
		if(pos == null) {
			throw haxe_Exception.thrown("E_ResourceNotFound(" + str + ")");
		} else {
			var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,pos);
			var error = stx_fail_Refuse.make(haxe_ds_Option.Some(stx_fail_DeclineSum.INTERIOR(stx_nano_CTR.apply(function(_) {
				return stx_nano_Digests.e_resource_not_found(_,str);
			},stx_Nano.digests(stx_nano_Wildcard.__)))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1));
			throw haxe_Exception.thrown(error);
		}
	}
	var this1 = str;
	this.id = stx_nano_Resource.string(this1);
	this.defines = defines;
	this.home = home;
};
$hxClasses["stx.bake.Baking"] = stx_bake_Baking;
stx_bake_Baking.__name__ = "stx.bake.Baking";
stx_bake_Baking.instance = null;
stx_bake_Baking.prototype = {
	is_runtime: null
	,get_is_runtime: function() {
		return stx_bake_Baking.instance == null;
	}
	,root: null
	,classpaths: null
	,args: null
	,id: null
	,defines: null
	,home: null
	,publish: function(tdef) {
		haxe_Log.trace("PUBLISH!!",{ fileName : "stx/bake/Baking.hx", lineNumber : 46, className : "stx.bake.Baking", methodName : "publish"});
		stx_bake_makro_Generate.apply(this,tdef);
	}
	,target: null
	,get_target: function() {
		return stx_bake_makro_GetTarget.apply(this);
	}
	,toString: function() {
		var rt = this.get_is_runtime() ? "runtime" : "macrotime";
		var tmp = "Bake(" + this.id + " root:" + Std.string(this.root) + " ";
		var tmp1 = this.get_target();
		return tmp + (tmp1 == null ? "null" : stx_pico_Option.toString(tmp1)) + " [" + rt + "] home:" + this.home + ")";
	}
	,__class__: stx_bake_Baking
};
var stx_nano_Resource = {};
stx_nano_Resource.exists = function(str) {
	return stx_lift_ArrayLift.any(haxe_Resource.listNames(),function(x) {
		return x == str;
	});
};
stx_nano_Resource._new = function(str,pos) {
	if(!stx_nano_Resource.exists(str)) {
		if(pos == null) {
			throw haxe_Exception.thrown("E_ResourceNotFound(" + str + ")");
		} else {
			var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,pos);
			var error = stx_fail_Refuse.make(haxe_ds_Option.Some(stx_fail_DeclineSum.INTERIOR(stx_nano_CTR.apply(function(_) {
				return stx_nano_Digests.e_resource_not_found(_,str);
			},stx_Nano.digests(stx_nano_Wildcard.__)))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1));
			throw haxe_Exception.thrown(error);
		}
	}
	var this1 = str;
	return this1;
};
stx_nano_Resource.string = function(this1) {
	return haxe_Resource.getString(this1);
};
stx_nano_Resource.bytes = function(this1) {
	return haxe_Resource.getBytes(this1);
};
stx_nano_Resource.json = function(this1) {
	try {
		return JSON.parse(stx_nano_Resource.string(this1));
	} catch( _g ) {
		var e = haxe_Exception.caught(_g).unwrap();
		throw haxe_Exception.thrown("ERROR parsing " + this1 + ": " + Std.string(e));
	}
};
var stx_nano_Fault = {};
stx_nano_Fault._new = function(self) {
	var this1 = self;
	return this1;
};
stx_nano_Fault.lift = function(self) {
	return stx_nano_Fault._new(self);
};
stx_nano_Fault.of = function(this1,data) {
	return stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(data)),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1));
};
stx_nano_Fault.decline = function(this1,self) {
	return stx_fail_Refuse.make(haxe_ds_Option.Some(self),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1));
};
stx_nano_Fault.explain = function(this1,fn) {
	return stx_fail_Refuse.make(haxe_ds_Option.Some(stx_fail_DeclineSum.INTERIOR(stx_nano_CTR.apply(fn,stx_Nano.digests(stx_nano_Wildcard.__)))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1));
};
stx_nano_Fault.digest = function(this1,fn) {
	return stx_fail_Error.make(haxe_ds_Option.Some(fn(stx_Nano.digests(stx_nano_Wildcard.__))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1));
};
var stx_fail_RefuseLift = function() { };
$hxClasses["stx.fail.RefuseLift"] = stx_fail_RefuseLift;
stx_fail_RefuseLift.__name__ = "stx.fail.RefuseLift";
stx_fail_RefuseLift.usher = function(self,fn) {
	return fn(self.get_data());
};
stx_fail_RefuseLift.report = function(self) {
	return stx_nano_Report.conf(self);
};
var stx_fail_Refuse = {};
stx_fail_Refuse._new = function(self) {
	var this1 = self;
	return this1;
};
stx_fail_Refuse.lift = function(self) {
	return stx_fail_Refuse._new(self);
};
stx_fail_Refuse.unit = function() {
	return stx_fail_Refuse.lift(new stx_fail_term_Unit());
};
stx_fail_Refuse.make = function(data,next,pos) {
	return stx_fail_Refuse.lift(new stx_fail_term_Base(data,next,pos));
};
stx_fail_Refuse.pure = function(v) {
	return stx_fail_Refuse.make(haxe_ds_Option.Some(stx_fail_DeclineSum.EXTERIOR(v)),haxe_ds_Option.None,haxe_ds_Option.None);
};
stx_fail_Refuse.prj = function(this1) {
	return this1;
};
stx_fail_Refuse.get_self = function(this1) {
	return stx_fail_Refuse.lift(this1);
};
stx_fail_Refuse.fromErrorApi = function(self) {
	return stx_fail_Refuse.lift(self);
};
stx_fail_Refuse.errate = function(this1,fn) {
	var fn1 = fn;
	return new stx_fail_term_MapAnon(this1,function(self) {
		return stx_fail_Decline._.map(self,fn1);
	}).toError();
};
stx_fail_Refuse.catcher = function(self) {
	var _enum = Type.getEnum(stx_fail_DeclineSum.EXTERIOR(null));
	var _g = self.get_data();
	if(_g._hx_index == 0) {
		var x = _g.v;
		var _g = Type.typeof(x);
		if(_g._hx_index == 7) {
			var e = _g.e;
			var x = e;
			if(x == _enum) {
				return haxe_ds_Either.Right(stx_fail_Refuse.lift(self));
			} else {
				return haxe_ds_Either.Left(self.elide());
			}
		} else {
			return haxe_ds_Either.Left(self.elide());
		}
	} else {
		return haxe_ds_Either.Left(self.elide());
	}
};
stx_fail_Refuse.concat = function(this1,that) {
	return stx_fail_Refuse.lift(this1.concat(that));
};
var stx_fail_ErrorApi = function() { };
$hxClasses["stx.fail.ErrorApi"] = stx_fail_ErrorApi;
stx_fail_ErrorApi.__name__ = "stx.fail.ErrorApi";
stx_fail_ErrorApi.__isInterface__ = true;
stx_fail_ErrorApi.prototype = {
	pos: null
	,get_pos: null
	,get_stack: null
	,next: null
	,get_next: null
	,data: null
	,get_data: null
	,toError: null
	,iterator: null
	,concat: null
	,toString: null
	,is_defined: null
	,raise: null
	,elide: null
	,__class__: stx_fail_ErrorApi
};
var stx_fail_ErrorCls = function() { };
$hxClasses["stx.fail.ErrorCls"] = stx_fail_ErrorCls;
stx_fail_ErrorCls.__name__ = "stx.fail.ErrorCls";
stx_fail_ErrorCls.__interfaces__ = [stx_fail_ErrorApi];
stx_fail_ErrorCls.prototype = {
	pos: null
	,get_pos: null
	,next: null
	,get_next: null
	,data: null
	,get_data: null
	,get_stack: null
	,toError: function() {
		return this;
	}
	,concat: function(that) {
		var lhs = this.toError();
		var rhs = that.toError();
		var _g = stx_fail_Error.is_unit(lhs);
		var _g1 = stx_fail_Error.is_unit(rhs);
		if(_g) {
			if(_g1) {
				return lhs;
			} else {
				return rhs;
			}
		} else if(_g1) {
			return lhs;
		} else {
			return new stx_fail_term_ErrorConcat(haxe_ds_Option.Some(lhs),haxe_ds_Option.Some(rhs)).toError();
		}
	}
	,toString: function() {
		var f = function(x) {
			var self = stx_pico_OptionLift.map(x.get_data(),function(x) {
				return " (" + Std.string(x) + ")";
			});
			var data;
			if(self._hx_index == 0) {
				var v = self.v;
				data = v;
			} else {
				data = "";
			}
			var pos = stx_pico_OptionLift.map(stx_pico_OptionLift.map(x.get_pos(),function(x) {
				return stx_PosLift.toString(x);
			}),function(x) {
				return " at " + x;
			});
			var self = stx_pico_OptionLift.map(x.get_stack(),function(x) {
				return "\n" + (x == null ? "null" : haxe_CallStack.toString(x));
			});
			var stack;
			if(self._hx_index == 0) {
				var v = self.v;
				stack = v;
			} else {
				stack = "";
			}
			return "Error" + data + (pos == null ? "null" : stx_pico_Option.toString(pos)) + stack;
		};
		var arr = [];
		var x = this.iterator();
		while(x.hasNext()) {
			var x1 = x.next();
			arr.push(f(x1));
		}
		return arr.join("\n");
	}
	,iterator: function() {
		var self = haxe_ds_Option.Some(this.toError());
		return { hasNext : function() {
			return self != haxe_ds_Option.None;
		}, next : function() {
			var data = self;
			self = stx_pico_OptionLift.flat_map(self,function(x) {
				return x.get_next();
			});
			switch(data._hx_index) {
			case 0:
				var v = data.v;
				return v;
			case 1:
				return null;
			}
		}};
	}
	,raise: function() {
		var _g = this.get_data();
		if(_g._hx_index == 0) {
			var x = _g.v;
			throw haxe_Exception.thrown(x);
		} else {
			throw haxe_Exception.thrown("ERROR");
		}
	}
	,is_defined: function() {
		var _g = this.get_data();
		if(_g._hx_index == 0) {
			var v = _g.v;
			return true;
		} else {
			var _g = stx_pico_OptionLift.map(this.get_next(),function(x) {
				return x.is_defined();
			});
			if(_g._hx_index == 0) {
				var b = _g.v;
				return b;
			} else {
				return false;
			}
		}
	}
	,elide: function() {
		return this.toError();
	}
	,__class__: stx_fail_ErrorCls
};
var stx_fail_term_Base = function(data,next,pos) {
	this.data = data;
	this.next = next;
	this.pos = pos;
};
$hxClasses["stx.fail.term.Base"] = stx_fail_term_Base;
stx_fail_term_Base.__name__ = "stx.fail.term.Base";
stx_fail_term_Base.__super__ = stx_fail_ErrorCls;
stx_fail_term_Base.prototype = $extend(stx_fail_ErrorCls.prototype,{
	get_pos: function() {
		return this.pos;
	}
	,get_next: function() {
		return this.next;
	}
	,get_data: function() {
		return this.data;
	}
	,get_stack: function() {
		return haxe_ds_Option.None;
	}
	,__class__: stx_fail_term_Base
});
var stx_fail_DeclineSum = $hxEnums["stx.fail.DeclineSum"] = { __ename__:"stx.fail.DeclineSum",__constructs__:null
	,EXTERIOR: ($_=function(v) { return {_hx_index:0,v:v,__enum__:"stx.fail.DeclineSum",toString:$estr}; },$_._hx_name="EXTERIOR",$_.__params__ = ["v"],$_)
	,INTERIOR: ($_=function(digest) { return {_hx_index:1,digest:digest,__enum__:"stx.fail.DeclineSum",toString:$estr}; },$_._hx_name="INTERIOR",$_.__params__ = ["digest"],$_)
};
stx_fail_DeclineSum.__constructs__ = [stx_fail_DeclineSum.EXTERIOR,stx_fail_DeclineSum.INTERIOR];
var stx_nano_CTR = {};
stx_nano_CTR._new = function(self) {
	var this1 = self;
	return this1;
};
stx_nano_CTR.lift = function(self) {
	return stx_nano_CTR._new(self);
};
stx_nano_CTR.prj = function(this1) {
	return this1;
};
stx_nano_CTR.get_self = function(this1) {
	return stx_nano_CTR.lift(this1);
};
stx_nano_CTR.fromR = function(r) {
	return stx_nano_CTR.lift(function(_) {
		return r;
	});
};
stx_nano_CTR.apply = function(this1,r) {
	return this1(r);
};
stx_nano_CTR.app = function(this1,p) {
	return stx_Tup2.tuple2(this1,p);
};
var stx_nano_Digests = {};
stx_nano_Digests.e_digest_uuid_reserved = function(self,uuid) {
	return new stx_nano_digest_term_EDigestUUIDReserved(uuid);
};
stx_nano_Digests.e_resource_not_found = function(self,name) {
	return new stx_nano_digest_term_EResourceNotFound(name);
};
stx_nano_Digests.e_no_field = function(self,name) {
	return new stx_nano_digest_term_ENoField(name);
};
stx_nano_Digests.e_undefined = function(self) {
	return new stx_nano_digest_term_EUndefined();
};
stx_nano_Digests.e_tink_error = function(self,msg,code) {
	return new stx_nano_digest_term_ETinkError(msg,code);
};
stx_nano_Digests.e_unimplemented = function(self) {
	return new stx_nano_digest_term_EUnimplemented();
};
stx_nano_Digests.e_js_error = function(self,error) {
	return new stx_nano_digest_term_EJsError(error);
};
var stx_fail_DigestApi = function() { };
$hxClasses["stx.fail.DigestApi"] = stx_fail_DigestApi;
stx_fail_DigestApi.__name__ = "stx.fail.DigestApi";
stx_fail_DigestApi.__isInterface__ = true;
stx_fail_DigestApi.prototype = {
	code: null
	,uuid: null
	,detail: null
	,__class__: stx_fail_DigestApi
};
var stx_fail_Digest = function(uuid,detail,code) {
	if(code == null) {
		code = -1;
	}
	this.uuid = uuid;
	this.detail = detail;
	this.code = code;
	var _this = stx_fail_Digest.get_register();
	if(Object.prototype.hasOwnProperty.call(_this.h,uuid)) {
		var val = stx_fail_Digest.get_register().h[uuid];
		var c = js_Boot.getClass(this);
		var identifier = c.__name__;
		if(js_Boot.getClass(val) != js_Boot.getClass(this)) {
			throw haxe_Exception.thrown("Digest identifier " + uuid + " on " + identifier + " already registered for " + Std.string(val));
		}
	} else {
		stx_fail_Digest.get_register().h[uuid] = this;
	}
};
$hxClasses["stx.fail.Digest"] = stx_fail_Digest;
stx_fail_Digest.__name__ = "stx.fail.Digest";
stx_fail_Digest.__interfaces__ = [stx_fail_DigestApi];
stx_fail_Digest.register = null;
stx_fail_Digest.get_register = function() {
	if(stx_fail_Digest.register == null) {
		return stx_fail_Digest.register = new haxe_ds_StringMap();
	} else {
		return stx_fail_Digest.register;
	}
};
stx_fail_Digest.Foreign = function(detail) {
	return new stx_fail__$Digest_DigestForeign(detail);
};
stx_fail_Digest.prototype = {
	uuid: null
	,detail: null
	,code: null
	,toString: function() {
		return "(" + this.code + ",\"" + this.uuid + "\",\"" + this.detail + "\")";
	}
	,asDigest: function() {
		return this;
	}
	,__class__: stx_fail_Digest
};
var stx_nano_digest_term_EResourceNotFound = function(resource_name) {
	stx_fail_Digest.call(this,"01FRQ55MMVX2D7JEHJ6CE4X1NY","Resource \"" + resource_name + "\" not found.");
};
$hxClasses["stx.nano.digest.term.EResourceNotFound"] = stx_nano_digest_term_EResourceNotFound;
stx_nano_digest_term_EResourceNotFound.__name__ = "stx.nano.digest.term.EResourceNotFound";
stx_nano_digest_term_EResourceNotFound.__super__ = stx_fail_Digest;
stx_nano_digest_term_EResourceNotFound.prototype = $extend(stx_fail_Digest.prototype,{
	__class__: stx_nano_digest_term_EResourceNotFound
});
var stx_Nano = function() { };
$hxClasses["stx.Nano"] = stx_Nano;
stx_Nano.__name__ = "stx.Nano";
stx_Nano.stx = function(wildcard) {
	return new Stx();
};
stx_Nano.digests = function(wildcard) {
	return wildcard;
};
var stx_pico_Option = $hx_exports["stx"]["pico"]["Option"] = {};
stx_pico_Option._new = function(self) {
	var this1 = self;
	return this1;
};
stx_pico_Option.fromNullT = function(v) {
	return stx_pico_Option.make(v);
};
stx_pico_Option.unit = function() {
	return stx_pico_Option._new(haxe_ds_Option.None);
};
stx_pico_Option.pure = function(t) {
	return stx_pico_Option._new(haxe_ds_Option.Some(t));
};
stx_pico_Option.make = function(t) {
	if(t == null) {
		return stx_pico_Option.unit();
	} else {
		return stx_pico_Option.pure(t);
	}
};
stx_pico_Option.flatten = function(self) {
	var _g = stx_pico_OptionLift.prj(self);
	switch(_g._hx_index) {
	case 0:
		var next = _g.v;
		return next;
	case 1:
		return haxe_ds_Option.None;
	}
};
stx_pico_Option.toString = function(this1) {
	return stx_pico_Option.__.toString(this1);
};
var sys_io_FileOutput = function(fd) {
	this.fd = fd;
	this.pos = 0;
};
$hxClasses["sys.io.FileOutput"] = sys_io_FileOutput;
sys_io_FileOutput.__name__ = "sys.io.FileOutput";
sys_io_FileOutput.__super__ = haxe_io_Output;
sys_io_FileOutput.prototype = $extend(haxe_io_Output.prototype,{
	fd: null
	,pos: null
	,writeByte: function(b) {
		var buf = js_node_buffer_Buffer.alloc(1);
		buf[0] = b;
		js_node_Fs.writeSync(this.fd,buf,0,1,this.pos);
		this.pos++;
	}
	,writeBytes: function(s,pos,len) {
		var data = s.b;
		var buf = js_node_buffer_Buffer.from(data.buffer,data.byteOffset,s.length);
		var wrote = js_node_Fs.writeSync(this.fd,buf,pos,len,this.pos);
		this.pos += wrote;
		return wrote;
	}
	,close: function() {
		js_node_Fs.closeSync(this.fd);
	}
	,seek: function(p,pos) {
		switch(pos._hx_index) {
		case 0:
			this.pos = p;
			break;
		case 1:
			this.pos += p;
			break;
		case 2:
			this.pos = js_node_Fs.fstatSync(this.fd).size + p;
			break;
		}
	}
	,tell: function() {
		return this.pos;
	}
	,__class__: sys_io_FileOutput
});
var stx_log_logger_Custom = function(logic,format,level,verbose,reinstate) {
	stx_log_logger_Unit.call(this,logic,format,level,verbose,reinstate);
};
$hxClasses["stx.log.logger.Custom"] = stx_log_logger_Custom;
stx_log_logger_Custom.__name__ = "stx.log.logger.Custom";
stx_log_logger_Custom.__super__ = stx_log_logger_Unit;
stx_log_logger_Custom.prototype = $extend(stx_log_logger_Unit.prototype,{
	__class__: stx_log_logger_Custom
});
var stx_log_logger_File = function(archive,logic,format,level,verbose,reinstate) {
	if(reinstate == null) {
		reinstate = false;
	}
	if(verbose == null) {
		verbose = false;
	}
	if(level == null) {
		level = 2;
	}
	this.archive = archive;
	var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,format);
	var v = new stx_log_core_FormatCls();
	var tmp;
	if(self._hx_index == 0) {
		var v1 = self.v;
		tmp = v1;
	} else {
		tmp = v;
	}
	stx_log_logger_Custom.call(this,logic,tmp,level,verbose,reinstate);
};
$hxClasses["stx.log.logger.File"] = stx_log_logger_File;
stx_log_logger_File.__name__ = "stx.log.logger.File";
stx_log_logger_File.__super__ = stx_log_logger_Custom;
stx_log_logger_File.prototype = $extend(stx_log_logger_Custom.prototype,{
	archive: null
	,do_apply: function(value) {
		var _gthis = this;
		return stx_fp_Continuation.lift(function(fn) {
			var result = stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,_gthis.format.print(value) + "\n");
			return result;
		});
	}
	,render: function(v,infos) {
		this.archive.writeString("" + Std.string(v));
	}
	,__class__: stx_log_logger_File
});
var stx_log_Signal = {};
stx_log_Signal.instance = null;
stx_log_Signal.get_instance = function() {
	return stx_LiftIf.if_else(stx_log_Signal.instance == null,function() {
		return stx_log_Signal.instance = new stx_log__$Signal_SignalCls();
	},function() {
		return stx_log_Signal.instance;
	});
};
stx_log_Signal._new = function() {
	var this1 = stx_log_Signal.get_instance();
	return this1;
};
stx_log_Signal.handle = function(this1,x) {
	stx_log_Signal.has_custom = true;
	this1.handle(x);
};
stx_log_Signal.transmit = function(v) {
	stx_log_Signal.get_instance().trigger(v);
};
var stx_log_Value = function(detail,source) {
	this.detail = detail;
	this.source = source;
};
$hxClasses["stx.log.Value"] = stx_log_Value;
stx_log_Value.__name__ = "stx.log.Value";
stx_log_Value.make = function(detail,source) {
	return new stx_log_Value(detail,stx_log_LogPosition.fromPos(source));
};
stx_log_Value.prototype = {
	detail: null
	,stamp: null
	,get_stamp: function() {
		return this.source.stamp;
	}
	,source: null
	,restamp: function(fn) {
		var next = this.source.with_stamp(fn);
		return new stx_log_Value(this.detail,next);
	}
	,__class__: stx_log_Value
};
var stx_LogLift = function() { };
$hxClasses["stx.LogLift"] = stx_LogLift;
stx_LogLift.__name__ = "stx.LogLift";
stx_LogLift.Filter = function() {
	return stx_log_Filter;
};
stx_LogLift.Logic = function() {
	return stx_log_Logic._.make();
};
var stx_Log = {};
stx_Log.lift = function(self) {
	var this1 = self == null ? stx_Log.LOG : self;
	return this1;
};
stx_Log.get_global = function(this1) {
	return stx_log_logger_Global.get_ZERO();
};
stx_Log.pkg = function(pkg) {
	var self = stx_pico_OptionLift.map(stx_pkg_Pkg.source(pkg),function(scope) {
		var this1 = stx_Log.unit();
		var tag = scope.pack.join("/");
		var this2 = this1;
		var fn = function(pos) {
			return pos.with_stamp(function(stamp) {
				return stamp.tag(tag);
			});
		};
		return function(value,pos) {
			this2(value,fn(pos));
		};
	});
	if(self._hx_index == 0) {
		var v = self.v;
		return v;
	} else {
		return stx_Log.unit();
	}
};
stx_Log.LOG = function(value,pos) {
	stx_log_Signal.transmit(stx_Log.enlog(value,pos));
};
stx_Log.VOID = function(value,pos) {
};
stx_Log.unit = function() {
	var self = null;
	var this1 = self == null ? stx_Log.LOG : self;
	return this1;
};
stx_Log.void = function() {
	var self = stx_Log.VOID;
	var this1 = self == null ? stx_Log.LOG : self;
	return this1;
};
stx_Log.enlog = function(value,info) {
	var value1 = new stx_log_Value(value,info);
	return value1;
};
stx_Log.make = function(fn) {
	return function(value,pos) {
		fn(stx_Log.enlog(value,pos));
	};
};
stx_Log._new = function(self) {
	var this1 = self == null ? stx_Log.LOG : self;
	return this1;
};
stx_Log.level = function(this1,level) {
	var this2 = this1;
	var fn = function(pos) {
		return pos.with_stamp(function(stamp) {
			return stamp.relevel(level);
		});
	};
	return function(value,pos) {
		this2(value,fn(pos));
	};
};
stx_Log.blank = function(this1,v,pos) {
	var this2 = this1;
	var fn = function(pos) {
		return pos.with_stamp(function(stamp) {
			return stamp.relevel(0);
		});
	};
	(function(value,pos) {
		this2(value,fn(pos));
	})(v(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos(pos));
};
stx_Log.trace = function(this1,v,pos) {
	var this2 = this1;
	var fn = function(pos) {
		return pos.with_stamp(function(stamp) {
			return stamp.relevel(1);
		});
	};
	(function(value,pos) {
		this2(value,fn(pos));
	})(v(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos(pos));
};
stx_Log.debug = function(this1,v,pos) {
	var this2 = this1;
	var fn = function(pos) {
		return pos.with_stamp(function(stamp) {
			return stamp.relevel(2);
		});
	};
	(function(value,pos) {
		this2(value,fn(pos));
	})(v(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos(pos));
};
stx_Log.info = function(this1,v,pos) {
	var this2 = this1;
	var fn = function(pos) {
		return pos.with_stamp(function(stamp) {
			return stamp.relevel(3);
		});
	};
	(function(value,pos) {
		this2(value,fn(pos));
	})(v(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos(pos));
};
stx_Log.warn = function(this1,v,pos) {
	var this2 = this1;
	var fn = function(pos) {
		return pos.with_stamp(function(stamp) {
			return stamp.relevel(4);
		});
	};
	(function(value,pos) {
		this2(value,fn(pos));
	})(v(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos(pos));
};
stx_Log.error = function(this1,v,pos) {
	var this2 = this1;
	var fn = function(pos) {
		return pos.with_stamp(function(stamp) {
			return stamp.relevel(5);
		});
	};
	(function(value,pos) {
		this2(value,fn(pos));
	})(v(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos(pos));
};
stx_Log.fatal = function(this1,v,pos) {
	var this2 = this1;
	var fn = function(pos) {
		return pos.with_stamp(function(stamp) {
			return stamp.relevel(6);
		});
	};
	(function(value,pos) {
		this2(value,fn(pos));
	})(v(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos(pos));
};
stx_Log.mod = function(this1,fn) {
	return function(value,pos) {
		this1(value,fn(pos));
	};
};
stx_Log.tag = function(this1,tag) {
	var this2 = this1;
	var fn = function(pos) {
		return pos.with_stamp(function(stamp) {
			return stamp.tag(tag);
		});
	};
	return function(value,pos) {
		this2(value,fn(pos));
	};
};
stx_Log.close = function(this1) {
	var this2 = this1;
	var fn = function(pos) {
		return pos.with_stamp(function(stamp) {
			return stamp.hide();
		});
	};
	return function(value,pos) {
		this2(value,fn(pos));
	};
};
stx_Log.through = function(this1,ctr,pos) {
	var log_pos = stx_log_LogPosition.pure(pos);
	var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,ctr);
	if(self._hx_index == 0) {
		var v = self.v;
		ctr = v;
	} else {
		ctr = stx_log_StringCtr.unit();
	}
	return function(v) {
		this1(stx_log_StringCtr.capture(ctr,v),stx_log_LogPosition.fromPos(pos));
		return v;
	};
};
stx_Log.printer = function(this1,ctr,pos) {
	var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,ctr);
	if(self._hx_index == 0) {
		var v = self.v;
		ctr = v;
	} else {
		ctr = stx_log_StringCtr.unit();
	}
	return function(v) {
		this1(stx_log_StringCtr.capture(ctr,v),pos);
	};
};
stx_Log.attach = function(logger) {
	var this1 = stx_log_Signal.get_instance();
	this1.attach(logger);
};
stx_Log.prj = function(this1) {
	return this1;
};
var stx_Maps = function() { };
$hxClasses["stx.Maps"] = stx_Maps;
stx_Maps.__name__ = "stx.Maps";
stx_Maps.map_into = function(self,fn,memo) {
	var _g = self.keyValueIterator();
	while(_g.hasNext()) {
		var _g1 = _g.next();
		var k = _g1.key;
		var v = _g1.value;
		memo.set(k,fn(v));
	}
	return memo;
};
var stx_PicoNano = function() { };
$hxClasses["stx.PicoNano"] = stx_PicoNano;
stx_PicoNano.__name__ = "stx.PicoNano";
var stx_LiftArrayToCluster = function() { };
$hxClasses["stx.LiftArrayToCluster"] = stx_LiftArrayToCluster;
stx_LiftArrayToCluster.__name__ = "stx.LiftArrayToCluster";
stx_LiftArrayToCluster.toCluster = function(self) {
	return stx_nano_Cluster.lift(self);
};
stx_LiftArrayToCluster.imm = function(self) {
	return stx_nano_Cluster.lift(self);
};
var stx_Tup2 = $hxEnums["stx.Tup2"] = { __ename__:"stx.Tup2",__constructs__:null
	,tuple2: ($_=function(l,r) { return {_hx_index:0,l:l,r:r,__enum__:"stx.Tup2",toString:$estr}; },$_._hx_name="tuple2",$_.__params__ = ["l","r"],$_)
};
stx_Tup2.__constructs__ = [stx_Tup2.tuple2];
var stx_Tup2Lift = function() { };
$hxClasses["stx.Tup2Lift"] = stx_Tup2Lift;
stx_Tup2Lift.__name__ = "stx.Tup2Lift";
stx_Tup2Lift.cat = function(self,fn) {
	var l = self.l;
	var r = self.r;
	return fn(l,r);
};
stx_Tup2Lift.fst = function(self) {
	var l = self.l;
	var r = self.r;
	return l;
};
stx_Tup2Lift.snd = function(self) {
	var l = self.l;
	var r = self.r;
	return r;
};
var stx_Tup3 = $hxEnums["stx.Tup3"] = { __ename__:"stx.Tup3",__constructs__:null
	,tuple3: ($_=function(tI,tII,tIII) { return {_hx_index:0,tI:tI,tII:tII,tIII:tIII,__enum__:"stx.Tup3",toString:$estr}; },$_._hx_name="tuple3",$_.__params__ = ["tI","tII","tIII"],$_)
};
stx_Tup3.__constructs__ = [stx_Tup3.tuple3];
var stx_LiftPos = function() { };
$hxClasses["stx.LiftPos"] = stx_LiftPos;
stx_LiftPos.__name__ = "stx.LiftPos";
stx_LiftPos.lift = function(pos) {
	return stx_nano_Position._new(pos);
};
var stx_LiftArrayClassWithUnderscore = function() { };
$hxClasses["stx.LiftArrayClassWithUnderscore"] = stx_LiftArrayClassWithUnderscore;
stx_LiftArrayClassWithUnderscore.__name__ = "stx.LiftArrayClassWithUnderscore";
stx_LiftArrayClassWithUnderscore.graft = function(clazz) {
	return stx_lift_ArrayLift;
};
var stx_LiftFutureToSlot = function() { };
$hxClasses["stx.LiftFutureToSlot"] = stx_LiftFutureToSlot;
stx_LiftFutureToSlot.__name__ = "stx.LiftFutureToSlot";
stx_LiftFutureToSlot.toSlot = function(ft,pos) {
	return stx_nano_Slot.Guard(ft,pos);
};
var stx_LiftLazyFutureToSlot = function() { };
$hxClasses["stx.LiftLazyFutureToSlot"] = stx_LiftLazyFutureToSlot;
stx_LiftLazyFutureToSlot.__name__ = "stx.LiftLazyFutureToSlot";
stx_LiftLazyFutureToSlot.toSlot = function(fn) {
	return stx_nano_Slot.Guard(fn(),{ fileName : "stx/Nano.hx", lineNumber : 238, className : "stx.LiftLazyFutureToSlot", methodName : "toSlot"});
};
var stx_LiftEnumValue = function() { };
$hxClasses["stx.LiftEnumValue"] = stx_LiftEnumValue;
stx_LiftEnumValue.__name__ = "stx.LiftEnumValue";
stx_LiftEnumValue.lift = function(self) {
	return stx_nano_EnumValue.lift(self);
};
var stx_parse_ParserApi = function() { };
$hxClasses["stx.parse.ParserApi"] = stx_parse_ParserApi;
stx_parse_ParserApi.__name__ = "stx.parse.ParserApi";
stx_parse_ParserApi.__isInterface__ = true;
stx_parse_ParserApi.prototype = {
	tag: null
	,pos: null
	,asParser: null
	,apply: null
	,toString: null
	,__class__: stx_parse_ParserApi
};
var stx_parse_ParserCls = function(tag,pos) {
	stx_pico_Clazz.call(this);
	this.pos = pos;
	var self = stx_pico_Option.flatten(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,tag));
	var c = js_Boot.getClass(this);
	var v = stx_pico_Identifier.get_name(stx_pico_Identifier._new(c.__name__));
	var tmp;
	if(self._hx_index == 0) {
		var v1 = self.v;
		tmp = v1;
	} else {
		tmp = v;
	}
	this.tag = stx_pico_Option.fromNullT(tmp);
};
$hxClasses["stx.parse.ParserCls"] = stx_parse_ParserCls;
stx_parse_ParserCls.__name__ = "stx.parse.ParserCls";
stx_parse_ParserCls.__interfaces__ = [stx_parse_ParserApi];
stx_parse_ParserCls.__super__ = stx_pico_Clazz;
stx_parse_ParserCls.prototype = $extend(stx_pico_Clazz.prototype,{
	apply: null
	,pos: null
	,tag: null
	,asParser: function() {
		var this1 = this;
		return this1;
	}
	,toString: function() {
		var c = js_Boot.getClass(this);
		return stx_pico_Identifier.get_name(stx_pico_Identifier._new(c.__name__));
	}
	,__class__: stx_parse_ParserCls
});
var stx_parse_parser_term_Base = function(delegation,tag,pos) {
	stx_parse_ParserCls.call(this,null,pos);
	this.delegation = delegation;
};
$hxClasses["stx.parse.parser.term.Base"] = stx_parse_parser_term_Base;
stx_parse_parser_term_Base.__name__ = "stx.parse.parser.term.Base";
stx_parse_parser_term_Base.__super__ = stx_parse_ParserCls;
stx_parse_parser_term_Base.prototype = $extend(stx_parse_ParserCls.prototype,{
	delegation: null
	,check: function() {
	}
	,toString: function() {
		var c = js_Boot.getClass(this);
		return "" + stx_pico_Identifier.get_name(stx_pico_Identifier._new(c.__name__));
	}
	,__class__: stx_parse_parser_term_Base
});
var stx_parse_parser_term_SyncBase = function(delegation,tag,pos) {
	stx_parse_parser_term_Base.call(this,null,tag,pos);
	this.delegation = delegation;
};
$hxClasses["stx.parse.parser.term.SyncBase"] = stx_parse_parser_term_SyncBase;
stx_parse_parser_term_SyncBase.__name__ = "stx.parse.parser.term.SyncBase";
stx_parse_parser_term_SyncBase.__super__ = stx_parse_parser_term_Base;
stx_parse_parser_term_SyncBase.prototype = $extend(stx_parse_parser_term_Base.prototype,{
	__class__: stx_parse_parser_term_SyncBase
});
var stx_parse_parser_term_Sync = function(tag,id) {
	stx_parse_parser_term_SyncBase.call(this,null,tag,id);
};
$hxClasses["stx.parse.parser.term.Sync"] = stx_parse_parser_term_Sync;
stx_parse_parser_term_Sync.__name__ = "stx.parse.parser.term.Sync";
stx_parse_parser_term_Sync.__super__ = stx_parse_parser_term_SyncBase;
stx_parse_parser_term_Sync.prototype = $extend(stx_parse_parser_term_SyncBase.prototype,{
	__class__: stx_parse_parser_term_Sync
});
var stx_parse_parser_term_Range = function(min,max,pos) {
	stx_parse_parser_term_Sync.call(this,null,pos);
	this.min = min;
	this.max = max;
};
$hxClasses["stx.parse.parser.term.Range"] = stx_parse_parser_term_Range;
stx_parse_parser_term_Range.__name__ = "stx.parse.parser.term.Range";
stx_parse_parser_term_Range.__super__ = stx_parse_parser_term_Sync;
stx_parse_parser_term_Range.prototype = $extend(stx_parse_parser_term_Sync.prototype,{
	min: null
	,max: null
	,apply: function(ipt) {
		var _gthis = this;
		var _g = ipt.content.head();
		if(_g._hx_index == 0) {
			var s = _g.v;
			var x = s.charCodeAt(0);
			var v = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,x);
			var self = stx_pico_OptionLift.map(v,function(x) {
				return x >= _gthis.min;
			});
			var l;
			if(self._hx_index == 0) {
				var v1 = self.v;
				l = v1;
			} else {
				l = false;
			}
			var self = stx_pico_OptionLift.map(v,function(x) {
				return x <= _gthis.max;
			});
			var r;
			if(self._hx_index == 0) {
				var v = self.v;
				r = v;
			} else {
				r = false;
			}
			if(l && r) {
				return stx_LiftParse.ok(ipt.copy(ipt.content.drop(1)),s);
			} else {
				return stx_LiftParse.failure(stx_LiftParse.erration(ipt,stx_fail_ParseFailureCode.fromString("range: " + this.min + " -> " + this.max)),ipt);
			}
		} else {
			return stx_LiftParse.failure(stx_LiftParse.erration(ipt,stx_fail_ParseFailureCode.fromString("null head")),ipt);
		}
	}
	,toString: function() {
		var code = this.min;
		var l = String.fromCodePoint(code);
		var code = this.max;
		var r = String.fromCodePoint(code);
		return "Range[" + l + "..." + r + "]";
	}
	,__class__: stx_parse_parser_term_Range
});
var stx_pico_Identifier = {};
stx_pico_Identifier.fromPath = function(path) {
	var dir = haxe_io_Path.directory(path.toString());
	var ext = path.ext;
	var file = path.file;
	var name = ext == null ? file : "" + file + "." + ext;
	var sep = path.backslash ? "\\" : "/";
	var data = dir.split(sep);
	data.push(name);
	return stx_pico_Identifier.lift(data.join("."));
};
stx_pico_Identifier.lift = function(data) {
	return stx_pico_Identifier._new(data);
};
stx_pico_Identifier._new = function(data) {
	var this1 = data;
	return this1;
};
stx_pico_Identifier.get_name = function(this1) {
	var self = stx_lift_ArrayLift.last(this1.split("."));
	if(self._hx_index == 0) {
		var v = self.v;
		return v;
	} else {
		return "?";
	}
};
stx_pico_Identifier.get_pack = function(this1) {
	return stx_lift_ArrayLift.rdropn(this1.split("."),1);
};
stx_pico_Identifier.toString = function(this1) {
	return this1;
};
stx_pico_Identifier.toArray = function(this1) {
	var p = stx_pico_Identifier.get_pack(this1).slice();
	p.push(stx_pico_Identifier.get_name(this1));
	return p;
};
var stx_parse_parser_term_Or = function(lhs,rhs,pos) {
	stx_parse_ParserCls.call(this,null,pos);
	this.lhs = lhs;
	this.rhs = rhs;
	var self = stx_LiftAssert.assert(stx_nano_Wildcard.__,{ fileName : "stx/parse/parser/term/Or.hx", lineNumber : 11, className : "stx.parse.parser.term.Or", methodName : "new"}).module.exists().apply(lhs);
	if(self != null) {
		switch(self._hx_index) {
		case 0:
			var v = self.v;
			throw haxe_Exception.thrown(v);
		case 1:
			break;
		}
	}
	haxe_Log.trace(lhs,{ fileName : "stx/parse/parser/term/Or.hx", lineNumber : 12, className : "stx.parse.parser.term.Or", methodName : "new"});
	var self = stx_LiftAssert.assert(stx_nano_Wildcard.__,{ fileName : "stx/parse/parser/term/Or.hx", lineNumber : 13, className : "stx.parse.parser.term.Or", methodName : "new"}).module.exists().apply(rhs);
	if(self != null) {
		switch(self._hx_index) {
		case 0:
			var v = self.v;
			throw haxe_Exception.thrown(v);
		case 1:
			break;
		}
	}
};
$hxClasses["stx.parse.parser.term.Or"] = stx_parse_parser_term_Or;
stx_parse_parser_term_Or.__name__ = "stx.parse.parser.term.Or";
stx_parse_parser_term_Or.__super__ = stx_parse_ParserCls;
stx_parse_parser_term_Or.prototype = $extend(stx_parse_ParserCls.prototype,{
	lhs: null
	,rhs: null
	,apply: function(input) {
		var _gthis = this;
		var this1 = stx_parse_Logging.log(stx_nano_Wildcard.__);
		var fn = function(pos) {
			return pos.with_stamp(function(stamp) {
				return stamp.relevel(1);
			});
		};
		(function(value,pos) {
			this1(value,fn(pos));
		})(new stx_log_EntryCtr().thunk(function() {
			return "" + Std.string(_gthis);
		}),stx_log_LogPosition.fromPos({ fileName : "stx/parse/parser/term/Or.hx", lineNumber : 17, className : "stx.parse.parser.term.Or", methodName : "apply"}));
		var self = stx_LiftAssert.assert(stx_nano_Wildcard.__,{ fileName : "stx/parse/parser/term/Or.hx", lineNumber : 18, className : "stx.parse.parser.term.Or", methodName : "apply"}).module.exists().apply(input);
		if(self != null) {
			switch(self._hx_index) {
			case 0:
				var v = self.v;
				throw haxe_Exception.thrown(v);
			case 1:
				break;
			}
		}
		var _this = stx_LiftAssert.assert(stx_nano_Wildcard.__,{ fileName : "stx/parse/parser/term/Or.hx", lineNumber : 19, className : "stx.parse.parser.term.Or", methodName : "apply"});
		var t = this.lhs;
		var self = _this.module.exists().apply(t);
		if(self != null) {
			switch(self._hx_index) {
			case 0:
				var v = self.v;
				throw haxe_Exception.thrown(v);
			case 1:
				break;
			}
		}
		var result = this.lhs.apply(input);
		var this2 = stx_parse_Logging.log(stx_nano_Wildcard.__);
		var fn1 = function(pos) {
			return pos.with_stamp(function(stamp) {
				return stamp.relevel(1);
			});
		};
		(function(value,pos) {
			this2(value,fn1(pos));
		})(new stx_log_EntryCtr().pure("result " + Std.string(result) + " at " + result.asset.content.index + " " + Std.string(_gthis.lhs) + " = " + Std.string(result.get_error().is_defined() == false)),stx_log_LogPosition.fromPos({ fileName : "stx/parse/parser/term/Or.hx", lineNumber : 22, className : "stx.parse.parser.term.Or", methodName : "apply"}));
		if(result.get_error().is_defined() == false) {
			return result;
		} else {
			var this3 = stx_parse_Logging.log(stx_nano_Wildcard.__);
			var fn2 = function(pos) {
				return pos.with_stamp(function(stamp) {
					return stamp.relevel(1);
				});
			};
			(function(value,pos) {
				this3(value,fn2(pos));
			})(new stx_log_EntryCtr().pure("try " + Std.string(_gthis.rhs)),stx_log_LogPosition.fromPos({ fileName : "stx/parse/parser/term/Or.hx", lineNumber : 29, className : "stx.parse.parser.term.Or", methodName : "apply"}));
			var _this = stx_LiftAssert.assert(stx_nano_Wildcard.__,{ fileName : "stx/parse/parser/term/Or.hx", lineNumber : 31, className : "stx.parse.parser.term.Or", methodName : "apply"});
			var t = this.rhs;
			var self = _this.module.exists().apply(t);
			if(self != null) {
				switch(self._hx_index) {
				case 0:
					var v = self.v;
					throw haxe_Exception.thrown(v);
				case 1:
					break;
				}
			}
			return this.rhs.apply(input);
		}
	}
	,toString: function() {
		return "" + Std.string(this.lhs) + " | " + Std.string(this.rhs);
	}
	,__class__: stx_parse_parser_term_Or
});
var stx_assert_module_Crunch = function(pos) {
	stx_pico_Clazz.call(this);
	this.module = new stx_assert_Module(pos);
};
$hxClasses["stx.assert.module.Crunch"] = stx_assert_module_Crunch;
stx_assert_module_Crunch.__name__ = "stx.assert.module.Crunch";
stx_assert_module_Crunch.__super__ = stx_pico_Clazz;
stx_assert_module_Crunch.prototype = $extend(stx_pico_Clazz.prototype,{
	module: null
	,equals: function(lhs,rhs) {
		var this1 = this.module.equals().comply(lhs,rhs);
		if(this1._hx_index == 0) {
			var e = this1.v;
			throw haxe_Exception.thrown(e);
		}
	}
	,alike: function(lhs,rhs) {
		var this1 = this.module.alike().comply(lhs,rhs);
		if(this1._hx_index == 0) {
			var e = this1.v;
			throw haxe_Exception.thrown(e);
		}
	}
	,gt: function(lhs,rhs) {
		var this1 = this.module.gt().comply(lhs,rhs);
		if(this1._hx_index == 0) {
			var e = this1.v;
			throw haxe_Exception.thrown(e);
		}
	}
	,gt_eq: function(lhs,rhs) {
		var this1 = this.module.gt_eq().comply(lhs,rhs);
		if(this1._hx_index == 0) {
			var e = this1.v;
			throw haxe_Exception.thrown(e);
		}
	}
	,lt: function(lhs,rhs) {
		var this1 = this.module.lt().comply(lhs,rhs);
		if(this1._hx_index == 0) {
			var e = this1.v;
			throw haxe_Exception.thrown(e);
		}
	}
	,lt_eq: function(lhs,rhs) {
		var this1 = this.module.lt_eq().comply(lhs,rhs);
		if(this1._hx_index == 0) {
			var e = this1.v;
			throw haxe_Exception.thrown(e);
		}
	}
	,always: function(t) {
		var self = this.module.always().apply(t);
		if(self != null) {
			switch(self._hx_index) {
			case 0:
				var v = self.v;
				throw haxe_Exception.thrown(v);
			case 1:
				break;
			}
		}
	}
	,never: function(t) {
		var self = this.module.never().apply(t);
		if(self != null) {
			switch(self._hx_index) {
			case 0:
				var v = self.v;
				throw haxe_Exception.thrown(v);
			case 1:
				break;
			}
		}
	}
	,iz: function(a,clazz) {
		var self = this.module.iz(clazz).apply(a);
		if(self != null) {
			switch(self._hx_index) {
			case 0:
				var v = self.v;
				throw haxe_Exception.thrown(v);
			case 1:
				break;
			}
		}
	}
	,throws: function(fn) {
		var self = this.module.throws().apply(fn);
		if(self != null) {
			switch(self._hx_index) {
			case 0:
				var v = self.v;
				throw haxe_Exception.thrown(v);
			case 1:
				break;
			}
		}
	}
	,'void': function(t) {
		var self = this.module.void().apply(t);
		if(self != null) {
			switch(self._hx_index) {
			case 0:
				var v = self.v;
				throw haxe_Exception.thrown(v);
			case 1:
				break;
			}
		}
	}
	,exists: function(t) {
		var self = this.module.exists().apply(t);
		if(self != null) {
			switch(self._hx_index) {
			case 0:
				var v = self.v;
				throw haxe_Exception.thrown(v);
			case 1:
				break;
			}
		}
	}
	,matches: function(string,reg,opt) {
		var self = this.module.matches(reg,opt).apply(string);
		if(self != null) {
			switch(self._hx_index) {
			case 0:
				var v = self.v;
				throw haxe_Exception.thrown(v);
			case 1:
				break;
			}
		}
	}
	,__class__: stx_assert_module_Crunch
});
var stx_assert_Module = function(pos) {
	stx_pico_Clazz.call(this);
	this.pos = pos;
};
$hxClasses["stx.assert.Module"] = stx_assert_Module;
stx_assert_Module.__name__ = "stx.assert.Module";
stx_assert_Module.__super__ = stx_pico_Clazz;
stx_assert_Module.prototype = $extend(stx_pico_Clazz.prototype,{
	pos: null
	,equals: function() {
		return stx_assert_Assertion.equals(this.pos);
	}
	,alike: function() {
		return new stx_assert_assertion_term_Alike(this.pos);
	}
	,gt: function() {
		return stx_assert_Assertion.gt(this.pos);
	}
	,gt_eq: function() {
		return new stx_assert_assertion_term_GreaterThanOrEquals(this.pos);
	}
	,lt: function() {
		return new stx_assert_assertion_term_LessThan(this.pos);
	}
	,lt_eq: function() {
		return new stx_assert_assertion_term_LessThanOrEquals(this.pos);
	}
	,always: function() {
		return stx_assert_Predicate.always(this.pos);
	}
	,never: function() {
		return stx_assert_Predicate.never(this.pos);
	}
	,iz: function(clazz) {
		return new stx_assert_predicate_term_Is(clazz,this.pos);
	}
	,throws: function() {
		return new stx_assert_predicate_term_Throws(this.pos);
	}
	,'void': function() {
		return new stx_assert_predicate_term_Void(this.pos);
	}
	,exists: function() {
		return new stx_assert_predicate_term_Exists(this.pos);
	}
	,matches: function(reg,opt) {
		return new stx_assert_predicate_term_Matches(this.pos,reg,opt,{ fileName : "stx/assert/Predicate.hx", lineNumber : 47, className : "stx.assert._Predicate.Predicate_Impl_", methodName : "matches"});
	}
	,ands: function(self,rest) {
		return stx_assert_Predicate._.ands(self,rest);
	}
	,ors: function(self,rest) {
		return stx_assert_Predicate._.ors(self,rest);
	}
	,and: function(self,that) {
		return stx_assert_Predicate._.and(self,that);
	}
	,or: function(self,that) {
		return stx_assert_Predicate._.or(self,that);
	}
	,xor: function(self,that) {
		return stx_assert_Predicate._.xor(self,that);
	}
	,not: function(self) {
		return stx_assert_Predicate._.not(self);
	}
	,__class__: stx_assert_Module
});
var stx_parse_parser_ParserLift = function() { };
$hxClasses["stx.parse.parser.ParserLift"] = stx_parse_parser_ParserLift;
stx_parse_parser_ParserLift.__name__ = "stx.parse.parser.ParserLift";
stx_parse_parser_ParserLift.or = function(pI,p2) {
	var this1 = new stx_parse_parser_term_Or(pI,p2,{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
	return stx_parse_Parser.get_self(this1);
};
stx_parse_parser_ParserLift.ors = function(self,rest) {
	var self1 = stx_nano_ClusterLift.lfold1(stx_nano_Cluster.concat(stx_nano_Cluster.lift([self]),rest),function(memo,next) {
		var this1 = memo;
		var this2 = new stx_parse_parser_term_Or(this1,next,{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
		return stx_parse_Parser.get_self(this2);
	});
	if(self1._hx_index == 0) {
		var v = self1.v;
		return v;
	} else {
		return self;
	}
};
stx_parse_parser_ParserLift.then = function(p,f) {
	var this1 = new stx_parse_parser_term_AnonThen(p,f,{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
	return stx_parse_Parser.get_self(this1);
};
stx_parse_parser_ParserLift.and_then = function(p,fn) {
	var this1 = new stx_parse_parser_term_AndThen(p,fn,{ fileName : "stx/parse/Parsers.hx", lineNumber : 44, className : "stx.parse.Parsers", methodName : "AndThen"});
	return stx_parse_Parser.get_self(this1);
};
stx_parse_parser_ParserLift.many = function(pI) {
	var this1 = new stx_parse_parser_term_Many(pI,{ fileName : "stx/parse/Parsers.hx", lineNumber : 47, className : "stx.parse.Parsers", methodName : "Many"});
	return stx_parse_Parser.get_self(this1);
};
stx_parse_parser_ParserLift.one_many = function(pI) {
	var this1 = new stx_parse_parser_term_OneMany(pI,{ fileName : "stx/parse/Parsers.hx", lineNumber : 50, className : "stx.parse.Parsers", methodName : "OneMany"});
	return stx_parse_Parser.get_self(this1);
};
stx_parse_parser_ParserLift.and_ = function(pI,p2) {
	var this1 = new stx_parse_parser_term_AndL(pI,p2,{ fileName : "stx/parse/Parsers.hx", lineNumber : 113, className : "stx.parse.Parsers", methodName : "AndL"});
	return stx_parse_Parser.get_self(this1);
};
stx_parse_parser_ParserLift.and = function(pI,p2) {
	var this1 = new stx_parse_parser_term_CoupleWith(pI,p2,{ fileName : "stx/parse/Parsers.hx", lineNumber : 122, className : "stx.parse.Parsers", methodName : "CoupleWith"});
	return stx_parse_Parser.get_self(this1);
};
stx_parse_parser_ParserLift.and_seq = function(pI,p2) {
	var this1 = new stx_parse_parser_term_AnonWith(pI,p2,function(l,r) {
		return stx_pico_Option.fromNullT([l,r]);
	},{ fileName : "stx/parse/Parsers.hx", lineNumber : 119, className : "stx.parse.Parsers", methodName : "AnonWith"});
	return stx_parse_Parser.get_self(this1);
};
stx_parse_parser_ParserLift.__and = function(pI,p2) {
	var this1 = new stx_parse_parser_term_AndR(pI,p2,{ fileName : "stx/parse/Parsers.hx", lineNumber : 110, className : "stx.parse.Parsers", methodName : "AndR"});
	return stx_parse_Parser.get_self(this1);
};
stx_parse_parser_ParserLift.and_with = function(pI,p2,f) {
	var this1 = new stx_parse_parser_term_AnonWith(pI,p2,f,{ fileName : "stx/parse/Parsers.hx", lineNumber : 119, className : "stx.parse.Parsers", methodName : "AnonWith"});
	return stx_parse_Parser.get_self(this1);
};
stx_parse_parser_ParserLift.commit = function(pI) {
	var this1 = new stx_parse_parser_term_Commit(pI,null,{ fileName : "stx/parse/Parsers.hx", lineNumber : 128, className : "stx.parse.Parsers", methodName : "Commit"});
	return stx_parse_Parser.get_self(this1);
};
stx_parse_parser_ParserLift.notEmpty = function(arr) {
	return stx_nano_Cluster.get_length(arr) > 0;
};
stx_parse_parser_ParserLift.trace = function(p,f) {
	var this1 = new stx_parse_parser_term_AnonThen(p,function(x) {
		haxe_Log.trace(f(x),{ fileName : "stx/parse/parser/ParserLift.hx", lineNumber : 62, className : "stx.parse.parser.ParserLift", methodName : "trace"});
		return x;
	},{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
	return stx_parse_Parser.get_self(this1);
};
stx_parse_parser_ParserLift.rep1sep = function(pI,sep) {
	var this1 = new stx_parse_parser_term_Rep1Sep(pI,sep);
	return stx_parse_Parser.get_self(this1);
};
stx_parse_parser_ParserLift.rep1sep0 = function(pI,sep) {
	var this1 = new stx_parse_parser_term_CoupleWith(sep,pI,{ fileName : "stx/parse/Parsers.hx", lineNumber : 122, className : "stx.parse.Parsers", methodName : "CoupleWith"});
	var this2 = new stx_parse_parser_term_Many(stx_parse_Parser.get_self(this1),{ fileName : "stx/parse/Parsers.hx", lineNumber : 47, className : "stx.parse.Parsers", methodName : "Many"});
	var next = stx_parse_Parser.get_self(stx_parse_Parser.get_self(this2));
	var this1 = new stx_parse_parser_term_CoupleWith(pI,next,{ fileName : "stx/parse/Parsers.hx", lineNumber : 122, className : "stx.parse.Parsers", methodName : "CoupleWith"});
	var this2 = new stx_parse_parser_term_AnonThen(stx_parse_Parser.get_self(stx_parse_Parser.get_self(this1)),function(t) {
		var fst = stx_nano_CoupleLift.fst(t);
		var _g = [];
		var x = $getIterator(stx_nano_Cluster.toIterable(stx_nano_CoupleLift.snd(t)));
		while(x.hasNext()) {
			var x1 = x.next();
			_g.push([stx_nano_CoupleLift.fst(x1),stx_nano_CoupleLift.snd(x1)]);
		}
		var _g1 = [];
		var e = $getIterator(_g);
		while(e.hasNext()) {
			var e1 = e.next();
			var x = $getIterator(e1);
			while(x.hasNext()) {
				var x1 = x.next();
				_g1.push(x1);
			}
		}
		var snd = Lambda.array(_g1);
		var out = [stx_nano_CoupleLift.fst(t)].concat(snd);
		return out;
	},{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
	return stx_parse_Parser.get_self(stx_parse_Parser.get_self(this2));
};
stx_parse_parser_ParserLift.repsep0 = function(pI,sep) {
	var this1 = new stx_parse_parser_term_CoupleWith(sep,pI,{ fileName : "stx/parse/Parsers.hx", lineNumber : 122, className : "stx.parse.Parsers", methodName : "CoupleWith"});
	var this2 = new stx_parse_parser_term_Many(stx_parse_Parser.get_self(this1),{ fileName : "stx/parse/Parsers.hx", lineNumber : 47, className : "stx.parse.Parsers", methodName : "Many"});
	var next = stx_parse_Parser.get_self(stx_parse_Parser.get_self(this2));
	var this1 = new stx_parse_parser_term_CoupleWith(pI,next,{ fileName : "stx/parse/Parsers.hx", lineNumber : 122, className : "stx.parse.Parsers", methodName : "CoupleWith"});
	var this2 = new stx_parse_parser_term_AnonThen(stx_parse_Parser.get_self(stx_parse_Parser.get_self(this1)),function(t) {
		var fst = stx_nano_CoupleLift.fst(t);
		var _g = [];
		var x = $getIterator(stx_nano_Cluster.toIterable(stx_nano_CoupleLift.snd(t)));
		while(x.hasNext()) {
			var x1 = x.next();
			_g.push([stx_nano_CoupleLift.fst(x1),stx_nano_CoupleLift.snd(x1)]);
		}
		var _g1 = [];
		var e = $getIterator(_g);
		while(e.hasNext()) {
			var e1 = e.next();
			var x = $getIterator(e1);
			while(x.hasNext()) {
				var x1 = x.next();
				_g1.push(x1);
			}
		}
		var snd = Lambda.array(_g1);
		var out = [stx_nano_CoupleLift.fst(t)].concat(snd);
		return out;
	},{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
	var pI = stx_parse_Parser.get_self(stx_parse_Parser.get_self(this2));
	var this1 = new stx_parse_parser_term_Succeed([],{ fileName : "stx/parse/parser/ParserLift.hx", lineNumber : 88, className : "stx.parse.parser.ParserLift", methodName : "repsep0"});
	var this2 = new stx_parse_parser_term_Or(pI,this1,{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
	return stx_parse_Parser.get_self(stx_parse_Parser.get_self(this2));
};
stx_parse_parser_ParserLift.repsep = function(pI,sep) {
	var this1 = new stx_parse_parser_term_Rep1Sep(pI,sep);
	return stx_parse_Parser.get_self(this1);
};
stx_parse_parser_ParserLift.option = function(p) {
	var this1 = new stx_parse_parser_term_Option(p,{ fileName : "stx/parse/parser/ParserLift.hx", lineNumber : 94, className : "stx.parse.parser.ParserLift", methodName : "option"});
	return this1;
};
stx_parse_parser_ParserLift.inspect = function(parser,pre,post) {
	var this1 = new stx_parse_parser_term_Inspect(parser,pre,post,{ fileName : "stx/parse/parser/ParserLift.hx", lineNumber : 97, className : "stx.parse.parser.ParserLift", methodName : "inspect"});
	return stx_parse_Parser.get_self(this1);
};
stx_parse_parser_ParserLift.lookahead = function(p) {
	var this1 = new stx_parse_parser_term_Lookahead(p,null,{ fileName : "stx/parse/Parsers.hx", lineNumber : 68, className : "stx.parse.Parsers", methodName : "Lookahead"});
	return this1;
};
stx_parse_parser_ParserLift.not = function(p,pos) {
	var this1 = new stx_parse_parser_term_Not(p,pos);
	return stx_parse_Parser.get_self(this1);
};
stx_parse_parser_ParserLift.filter = function(p,fn) {
	var this1 = new stx_parse_parser_term_AndThen(p,function(o) {
		if(fn(o)) {
			var this1 = new stx_parse_parser_term_Succeed(o,{ fileName : "stx/parse/parser/ParserLift.hx", lineNumber : 112, className : "stx.parse.parser.ParserLift", methodName : "filter"});
			return this1;
		} else {
			var is_fatal = false;
			if(is_fatal == null) {
				is_fatal = false;
			}
			var this1 = new stx_parse_parser_term_Failed("filter failed",is_fatal,{ fileName : "stx/parse/parser/ParserLift.hx", lineNumber : 112, className : "stx.parse.parser.ParserLift", methodName : "filter"});
			return this1;
		}
	},{ fileName : "stx/parse/Parsers.hx", lineNumber : 44, className : "stx.parse.Parsers", methodName : "AndThen"});
	return stx_parse_Parser.get_self(this1);
};
stx_parse_parser_ParserLift.tokenize = function(p) {
	var this1 = p;
	var this2 = new stx_parse_parser_term_AnonThen(this1,function(arr) {
		var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,arr);
		var _this;
		if(self._hx_index == 0) {
			var v = self.v;
			_this = v;
		} else {
			_this = [];
		}
		return _this.join("");
	},{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
	return stx_parse_Parser.get_self(this2);
};
stx_parse_parser_ParserLift.tag_error = function(p,name,pos) {
	var this1 = new stx_parse_parser_term_TagRefuse(p,name,pos);
	return this1;
};
stx_parse_parser_ParserLift.with_tag = function(p,tag) {
	var this1 = new stx_parse_parser_term_Named(p,tag);
	return this1;
};
stx_parse_parser_ParserLift.memo = function(p) {
	var this1 = new stx_parse_parser_term_Memoise(p,{ fileName : "stx/parse/parser/ParserLift.hx", lineNumber : 131, className : "stx.parse.parser.ParserLift", methodName : "memo"});
	return this1;
};
stx_parse_parser_ParserLift.parse = function(self,input) {
	var self1 = stx_parse_ParseResult.toRes(self.apply(input));
	var self;
	switch(self1._hx_index) {
	case 0:
		var t = self1.t;
		self = stx_nano_Res.accept(t);
		break;
	case 1:
		var e = self1.e;
		var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/parse/parser/ParserLift.hx", lineNumber : 137, className : "stx.parse.parser.ParserLift", methodName : "parse"});
		self = stx_nano_Res.reject(stx_fail_Refuse.make(haxe_ds_Option.Some(stx_fail_DeclineSum.INTERIOR(stx_nano_CTR.apply(function(_) {
			return stx_parse_core_Refuses.e_parse_failure(_);
		},stx_Nano.digests(stx_nano_Wildcard.__)))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1)));
		break;
	}
	var this1 = self;
	return this1;
};
stx_parse_parser_ParserLift.match = function(self,input) {
	var self1 = stx_parse_parser_ParserLift.parse(self,input);
	switch(self1._hx_index) {
	case 0:
		var t = self1.t;
		return stx_pico_OptionLift.fudge(t);
	case 1:
		var e = self1.e;
		throw haxe_Exception.thrown(e);
	}
};
var stx_parse_Parser = {};
stx_parse_Parser._new = function(self) {
	var this1 = self;
	return this1;
};
stx_parse_Parser.fromConstructor = function(fn) {
	var this1 = new stx_parse_parser_term_LAnon(fn,{ fileName : "stx/parse/Parser.hx", lineNumber : 11, className : "stx.parse._Parser.Parser_Impl_", methodName : "fromConstructor"});
	var this2 = this1;
	return this2;
};
stx_parse_Parser.fromParserApi = function(it) {
	var this1 = it;
	return this1;
};
stx_parse_Parser.fromFunction = function(f,tag) {
	var this1 = new stx_parse_parser_term_SyncAnon(f,tag,{ fileName : "stx/parse/Parser.hx", lineNumber : 17, className : "stx.parse._Parser.Parser_Impl_", methodName : "fromFunction"});
	return stx_parse_Parser.get_self(this1);
};
stx_parse_Parser.lift = function(it) {
	var this1 = it;
	return this1;
};
stx_parse_Parser.mkHead = function(this1) {
	return { headParser : stx_parse_Parser.get_self(this1), involvedSet : stx_ds_LinkedList.unit(), evalSet : stx_ds_LinkedList.unit()};
};
stx_parse_Parser.elide = function(this1) {
	return stx_parse_Parser.get_self(this1);
};
stx_parse_Parser.get_self = function(this1) {
	var this2 = this1;
	return this2;
};
stx_parse_Parser.asParser = function(this1) {
	return stx_parse_Parser.get_self(this1);
};
stx_parse_Parser.then = function(this1,f) {
	var this2 = this1;
	var this1 = new stx_parse_parser_term_AnonThen(this2,f,{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
	return stx_parse_Parser.get_self(this1);
};
stx_parse_Parser.or = function(this1,p2) {
	var this2 = this1;
	var this1 = new stx_parse_parser_term_Or(this2,p2,{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
	return stx_parse_Parser.get_self(this1);
};
var stx_LiftParse = function() { };
$hxClasses["stx.LiftParse"] = stx_LiftParse;
stx_LiftParse.__name__ = "stx.LiftParse";
stx_LiftParse.parse = function(wildcard) {
	return new stx_parse_Module();
};
stx_LiftParse.ok = function(rest,match) {
	return stx_parse_ParseResult.make(rest,haxe_ds_Option.Some(match),null);
};
stx_LiftParse.nil = function(rest) {
	return stx_parse_ParseResult.make(rest,haxe_ds_Option.None,null);
};
stx_LiftParse.failure = function(self,rest) {
	return stx_parse_ParseResult.make(rest,haxe_ds_Option.None,self);
};
stx_LiftParse.no = function(rest,message,fatal) {
	if(fatal == null) {
		fatal = false;
	}
	return stx_parse_ParseResult.make(rest,haxe_ds_Option.None,stx_LiftParse.erration(rest,message,fatal));
};
stx_LiftParse.cache = function(parser) {
	var this1 = new stx_parse_parser_term_LAnon(parser,{ fileName : "stx/Parse.hx", lineNumber : 122, className : "stx.LiftParse", methodName : "cache"});
	return stx_parse_Parser.get_self(this1);
};
stx_LiftParse.erration = function(rest,message,fatal) {
	if(fatal == null) {
		fatal = false;
	}
	return stx_fail_Refuse.pure(stx_fail_ParseFailure.make(stx_parse_ParseInput.get_content(rest).index,message,fatal));
};
stx_LiftParse.parsify = function(regex,ipt) {
	var this1 = stx_Log.ZERO;
	var fn = function(pos) {
		return pos.with_stamp(function(stamp) {
			return stamp.relevel(1);
		});
	};
	(function(value,pos) {
		this1(value,fn(pos));
	})(new stx_log_EntryCtr().pure(stx_parse_ParseInput.get_content(ipt).data),stx_log_LogPosition.fromPos({ fileName : "stx/Parse.hx", lineNumber : 128, className : "stx.LiftParse", methodName : "parsify"}));
	var data = ipt.content.data;
	if(data == null) {
		data = "";
	}
	data = HxOverrides.substr(data,stx_parse_ParseInput.get_offset(ipt),null);
	return regex.exec(data);
};
stx_LiftParse.sub = function(p,p0) {
	var this1 = new stx_parse_parser_term_Anon(function(input) {
		var res = p.apply(input);
		if(res.get_error().is_defined() == false) {
			var out = p0(res.value);
			var reader = stx_nano_CoupleLift.fst(out);
			var parser = stx_nano_CoupleLift.snd(out);
			var resII = parser.apply(reader);
			var inner;
			if(resII.get_error().is_defined() == false) {
				var _g = resII.value;
				switch(_g._hx_index) {
				case 0:
					var ok = _g.v;
					inner = stx_LiftParse.ok(res.asset,ok);
					break;
				case 1:
					inner = stx_LiftParse.nil(res.asset);
					break;
				}
			} else {
				inner = stx_parse_ParseResult.make(input,haxe_ds_Option.None,resII.get_error());
			}
			return inner;
		} else {
			return stx_parse_ParseResult.make(res.asset,haxe_ds_Option.None,res.get_error());
		}
	},haxe_ds_Option.Some("sub"),{ fileName : "stx/Parse.hx", lineNumber : 137, className : "stx.LiftParse", methodName : "sub"});
	return this1;
};
stx_LiftParse.tagged = function(p,tag) {
	p.tag = haxe_ds_Option.Some(tag);
	var this1 = new stx_parse_parser_term_TagRefuse(p,tag,{ fileName : "stx/Parse.hx", lineNumber : 164, className : "stx.LiftParse", methodName : "tagged"});
	return this1;
};
stx_LiftParse.succeed = function(v) {
	var this1 = new stx_parse_parser_term_Succeed(v,{ fileName : "stx/Parse.hx", lineNumber : 167, className : "stx.LiftParse", methodName : "succeed"});
	return this1;
};
var stx_parse_Module = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["stx.parse.Module"] = stx_parse_Module;
stx_parse_Module.__name__ = "stx.parse.Module";
stx_parse_Module.__super__ = stx_pico_Clazz;
stx_parse_Module.prototype = $extend(stx_pico_Clazz.prototype,{
	greedy: function(prs) {
		var this1 = new stx_parse_parser_term_Many(prs,{ fileName : "stx/parse/Parsers.hx", lineNumber : 47, className : "stx.parse.Parsers", methodName : "Many"});
		var pI = stx_parse_Parser.get_self(this1);
		var this1 = new stx_parse_parser_term_Eof(null,{ fileName : "stx/parse/Parsers.hx", lineNumber : 65, className : "stx.parse.Parsers", methodName : "Eof"});
		var this2 = new stx_parse_parser_term_AndL(pI,this1,{ fileName : "stx/parse/Parsers.hx", lineNumber : 113, className : "stx.parse.Parsers", methodName : "AndL"});
		return stx_parse_Parser.get_self(this2);
	}
	,reg: function(str) {
		var this1 = new stx_parse_parser_term_Regex(str,{ fileName : "stx/parse/Parsers.hx", lineNumber : 32, className : "stx.parse.Parsers", methodName : "Regex"});
		return stx_parse_Parser.get_self(this1);
	}
	,id: function(str) {
		var this1 = new stx_parse_parser_term_Identifier(str,{ fileName : "stx/parse/Parsers.hx", lineNumber : 71, className : "stx.parse.Parsers", methodName : "Identifier"});
		return this1;
	}
	,code: function(int) {
		return stx_parse_Parsers.CharCode(int);
	}
	,range: function(start,finish) {
		var this1 = new stx_parse_parser_term_Range(start,finish,{ fileName : "stx/parse/Parsers.hx", lineNumber : 26, className : "stx.parse.Parsers", methodName : "Range"});
		return this1;
	}
	,alts: function(arr) {
		return stx_nano_ClusterLift.lfold1(arr,function(next,memo) {
			var this1 = new stx_parse_parser_term_Or(memo,next,{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
			return stx_parse_Parser.get_self(this1);
		});
	}
	,when: function(fn) {
		var this1 = new stx_parse_parser_term_When(fn,null,{ fileName : "stx/parse/Module.hx", lineNumber : 25, className : "stx.parse.Module", methodName : "when"});
		return this1;
	}
	,inspect: function(prefix,postfix,pos) {
		var this1 = new stx_parse_parser_term_Inspect(prefix,postfix,null,pos);
		return this1;
	}
	,__class__: stx_parse_Module
});
var stx_parse_parser_term_Identifier = function(stamp,id) {
	stx_parse_parser_term_Sync.call(this,null,id);
	this.stamp = stamp;
};
$hxClasses["stx.parse.parser.term.Identifier"] = stx_parse_parser_term_Identifier;
stx_parse_parser_term_Identifier.__name__ = "stx.parse.parser.term.Identifier";
stx_parse_parser_term_Identifier.__super__ = stx_parse_parser_term_Sync;
stx_parse_parser_term_Identifier.prototype = $extend(stx_parse_parser_term_Sync.prototype,{
	stamp: null
	,apply: function(ipt) {
		var len = this.stamp.length;
		var head = ipt.content.head();
		var offset = stx_parse_ParseInput.get_offset(ipt);
		var string = ipt.content.take(len);
		var this1 = stx_parse_Logging.log(stx_nano_Wildcard.__);
		var fn = function(pos) {
			return pos.with_stamp(function(stamp) {
				return stamp.relevel(1);
			});
		};
		(function(value,pos) {
			this1(value,fn(pos));
		})(stx_log_Stringify.fromString("len=" + len + " offset=" + offset + " head:\"" + Std.string(head) + "\" stamp:\"" + this.stamp + "\" string:\"" + string + "\"")(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/parse/parser/term/Identifier.hx", lineNumber : 16, className : "stx.parse.parser.term.Identifier", methodName : "apply"}));
		if(string == this.stamp) {
			var next = ipt.copy(ipt.content.drop(this.stamp.length));
			return stx_LiftParse.ok(next,this.stamp);
		} else {
			return stx_LiftParse.failure(stx_LiftParse.erration(ipt,stx_fail_ParseFailureCode.fromString("\"Identifier expected *** " + this.stamp + " *** instead found: *** " + string + " ***"),false),ipt);
		}
	}
	,toString: function() {
		return "\"" + this.stamp + "\"";
	}
	,__class__: stx_parse_parser_term_Identifier
});
var stx_parse_parser_term_Regex = function(stamp,id) {
	stx_parse_parser_term_Sync.call(this,null,id);
	this.stamp = stamp;
	this.tag = haxe_ds_Option.Some("Regex(" + stamp + ")");
};
$hxClasses["stx.parse.parser.term.Regex"] = stx_parse_parser_term_Regex;
stx_parse_parser_term_Regex.__name__ = "stx.parse.parser.term.Regex";
stx_parse_parser_term_Regex.__super__ = stx_parse_parser_term_Sync;
stx_parse_parser_term_Regex.prototype = $extend(stx_parse_parser_term_Sync.prototype,{
	stamp: null
	,apply: function(ipt) {
		var reg = new EReg(this.stamp,"g");
		var is_matched = ipt.content.match($bind(reg,reg.match));
		var this1 = stx_parse_Logging.log(stx_nano_Wildcard.__);
		var fn = function(pos) {
			return pos.with_stamp(function(stamp) {
				return stamp.relevel(2);
			});
		};
		(function(value,pos) {
			this1(value,fn(pos));
		})(stx_log_Stringify.fromString("stamp=\"" + this.stamp + "\" matching: " + Std.string(ipt.content.take(100)) + " is_matched=\"" + (is_matched == null ? "null" : "" + is_matched) + "\" ")(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/parse/parser/term/Regex.hx", lineNumber : 18, className : "stx.parse.parser.term.Regex", methodName : "apply"}));
		if(is_matched) {
			var match = reg.matched(0);
			var length = match.length;
			var next = ipt.copy(ipt.content.drop(length));
			var data = ipt.content.take(length);
			var this2 = stx_parse_Logging.log(stx_nano_Wildcard.__);
			var fn1 = function(pos) {
				return pos.with_stamp(function(stamp) {
					return stamp.relevel(2);
				});
			};
			(function(value,pos) {
				this2(value,fn1(pos));
			})(stx_log_Stringify.fromString("length " + match.length + " data " + data + " index: " + stx_parse_ParseInput.get_content(next).index)(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/parse/parser/term/Regex.hx", lineNumber : 25, className : "stx.parse.parser.term.Regex", methodName : "apply"}));
			return stx_LiftParse.ok(next,data);
		} else {
			return stx_LiftParse.failure(stx_LiftParse.erration(ipt,stx_fail_ParseFailureCode.fromString("" + this.stamp + " not matched to |||" + ipt.content.take(null) + "|||"),false),ipt);
		}
	}
	,toString: function() {
		return "~/" + this.stamp + "/";
	}
	,__class__: stx_parse_parser_term_Regex
});
var stx_parse_term_Literal = function(delegation,tag,pos) {
	stx_parse_parser_term_SyncBase.call(this,delegation,tag,pos);
};
$hxClasses["stx.parse.term.Literal"] = stx_parse_term_Literal;
stx_parse_term_Literal.__name__ = "stx.parse.term.Literal";
stx_parse_term_Literal.__super__ = stx_parse_parser_term_SyncBase;
stx_parse_term_Literal.prototype = $extend(stx_parse_parser_term_SyncBase.prototype,{
	apply: function(input) {
		var all = stx_parse_ParseInput.get_content(input).data;
		var data = HxOverrides.substr(all,stx_parse_ParseInput.get_offset(input),null);
		var code = StringTools.fastCodeAt;
		var has = stx_parse_Parsers.Range;
		var q = 34;
		var fst = code(data,0);
		if(fst == 39) {
			q = 39;
		}
		var ok = q == fst;
		var idx = 1;
		var failed = false;
		var this1 = stx_parse_Logging.log(stx_nano_Wildcard.__);
		var fn = function(pos) {
			return pos.with_stamp(function(stamp) {
				return stamp.relevel(1);
			});
		};
		(function(value,pos) {
			this1(value,fn(pos));
		})(stx_log_Stringify.fromBool(ok)(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/parse/term/Literal.hx", lineNumber : 23, className : "stx.parse.term.Literal", methodName : "apply"}));
		if(ok) {
			while(true) {
				var val = code(data,idx);
				var this2 = stx_parse_Logging.log(stx_nano_Wildcard.__);
				var v = stx_log_Stringify.fromString("" + val + " " + HxOverrides.substr(data,idx,1));
				(function(fn,this1) {
					return function(value,pos) {
						this1[0](value,fn[0](pos));
					};
				})([(function() {
					return function(pos) {
						return pos.with_stamp((function() {
							return function(stamp) {
								return stamp.relevel(1);
							};
						})());
					};
				})()],[this2])(v(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/parse/term/Literal.hx", lineNumber : 31, className : "stx.parse.term.Literal", methodName : "apply"}));
				if(val == null) {
					failed = true;
					break;
				} else if(val == 92) {
					if(code(data,idx + 1) == q) {
						var this3 = stx_parse_Logging.log(stx_nano_Wildcard.__);
						var v1 = stx_log_Stringify.fromString("step over");
						(function(fn,this1) {
							return function(value,pos) {
								this1[0](value,fn[0](pos));
							};
						})([(function() {
							return function(pos) {
								return pos.with_stamp((function() {
									return function(stamp) {
										return stamp.relevel(1);
									};
								})());
							};
						})()],[this3])(v1(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/parse/term/Literal.hx", lineNumber : 36, className : "stx.parse.term.Literal", methodName : "apply"}));
						idx += 2;
					} else {
						++idx;
					}
				} else {
					var x = val;
					if(x == q) {
						++idx;
						break;
					} else {
						++idx;
					}
				}
			}
		} else {
			failed = true;
		}
		if(failed) {
			return stx_LiftParse.failure(stx_LiftParse.erration(input,stx_fail_ParseFailureCode.fromString("Literal encountered null")),input);
		} else {
			var out = input.content.take(idx);
			out = HxOverrides.substr(out,1,out.length - 2);
			if(idx > 1) {
				return stx_LiftParse.ok(input.copy(input.content.drop(idx)),out);
			} else {
				return stx_LiftParse.failure(stx_LiftParse.erration(input,stx_fail_ParseFailureCode.fromString("Literal")),input);
			}
		}
	}
	,__class__: stx_parse_term_Literal
});
var stx_parse_parser_term_Then = function(delegation,pos) {
	stx_parse_parser_term_Base.call(this,delegation,null,pos);
	this.tag = delegation.tag;
};
$hxClasses["stx.parse.parser.term.Then"] = stx_parse_parser_term_Then;
stx_parse_parser_term_Then.__name__ = "stx.parse.parser.term.Then";
stx_parse_parser_term_Then.__super__ = stx_parse_parser_term_Base;
stx_parse_parser_term_Then.prototype = $extend(stx_parse_parser_term_Base.prototype,{
	transform: null
	,check: function() {
		var self = stx_assert_PredicateLift.errata(new stx_assert_Module(this.pos).exists(),function(e) {
			var this1 = stx_nano_lift_LiftError.fault(e);
			return stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_ParseFailureCodeSum.E_Parse_UndefinedParseDelegate)),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1));
		}).apply(this.delegation);
		if(self != null) {
			switch(self._hx_index) {
			case 0:
				var v = self.v;
				throw haxe_Exception.thrown(v);
			case 1:
				break;
			}
		}
	}
	,apply: function(input) {
		var this1 = stx_parse_Logging.log(stx_nano_Wildcard.__);
		var fn = function(pos) {
			return pos.with_stamp(function(stamp) {
				return stamp.relevel(1);
			});
		};
		(function(value,pos) {
			this1(value,fn(pos));
		})(stx_log_Stringify.fromString("" + Std.string(this.delegation) + " then")(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/parse/parser/term/Then.hx", lineNumber : 15, className : "stx.parse.parser.term.Then", methodName : "apply"}));
		var _this = stx_LiftAssert.assert(stx_nano_Wildcard.__,{ fileName : "stx/parse/parser/term/Then.hx", lineNumber : 16, className : "stx.parse.parser.term.Then", methodName : "apply"});
		var t = this.delegation;
		var self = _this.module.exists().apply(t);
		if(self != null) {
			switch(self._hx_index) {
			case 0:
				var v = self.v;
				throw haxe_Exception.thrown(v);
			case 1:
				break;
			}
		}
		var res = this.delegation.apply(input);
		if(res.get_error().is_defined() == false) {
			var this2 = stx_parse_Logging.log(stx_nano_Wildcard.__);
			var fn1 = function(pos) {
				return pos.with_stamp(function(stamp) {
					return stamp.relevel(1);
				});
			};
			(function(value,pos) {
				this2(value,fn1(pos));
			})(stx_log_Stringify.fromString("then")(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/parse/parser/term/Then.hx", lineNumber : 20, className : "stx.parse.parser.term.Then", methodName : "apply"}));
			var fn2 = $bind(this,this.transform);
			var result = stx_parse_ParseResult.fromEquity(stx_nano_Equity._.map(res.toEquity(),function(opt) {
				return stx_pico_OptionLift.map(opt,fn2);
			}));
			var this3 = stx_parse_Logging.log(stx_nano_Wildcard.__);
			var fn3 = function(pos) {
				return pos.with_stamp(function(stamp) {
					return stamp.relevel(1);
				});
			};
			(function(value,pos) {
				this3(value,fn3(pos));
			})(stx_log_Stringify.fromString("thened " + Std.string(stx_parse_ParseResult.toRes(result)))(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/parse/parser/term/Then.hx", lineNumber : 22, className : "stx.parse.parser.term.Then", methodName : "apply"}));
			return result;
		} else {
			return stx_parse_ParseResult.make(res.asset,haxe_ds_Option.None,res.get_error());
		}
	}
	,toString: function() {
		return "" + Std.string(this.delegation) + "&";
	}
	,__class__: stx_parse_parser_term_Then
});
var stx_parse_parser_term_AnonThen = function(delegation,__transform,pos) {
	stx_parse_parser_term_Then.call(this,delegation,pos);
	this.__transform = __transform;
};
$hxClasses["stx.parse.parser.term.AnonThen"] = stx_parse_parser_term_AnonThen;
stx_parse_parser_term_AnonThen.__name__ = "stx.parse.parser.term.AnonThen";
stx_parse_parser_term_AnonThen.__super__ = stx_parse_parser_term_Then;
stx_parse_parser_term_AnonThen.prototype = $extend(stx_parse_parser_term_Then.prototype,{
	__transform: function(p) {
		return null;
	}
	,transform: function(p) {
		return this.__transform(p);
	}
	,__class__: stx_parse_parser_term_AnonThen
});
var stx_parse_parser_term_When = function(delegation,tag,pos) {
	stx_parse_parser_term_SyncBase.call(this,delegation,tag,pos);
};
$hxClasses["stx.parse.parser.term.When"] = stx_parse_parser_term_When;
stx_parse_parser_term_When.__name__ = "stx.parse.parser.term.When";
stx_parse_parser_term_When.__super__ = stx_parse_parser_term_SyncBase;
stx_parse_parser_term_When.prototype = $extend(stx_parse_parser_term_SyncBase.prototype,{
	apply: function(input) {
		var _gthis = this;
		return stx_nano_ChunkLift.defv(stx_nano_ChunkLift.map(input.content.head(),function(x) {
			return stx_nano_lift_LiftNano.if_else(_gthis.delegation(x),function() {
				return stx_LiftParse.ok(input.copy(input.content.drop(1)),x);
			},function() {
				return stx_LiftParse.failure(stx_LiftParse.erration(input,stx_fail_ParseFailureCode.fromString("When")),input);
			});
		}),stx_LiftParse.failure(stx_LiftParse.erration(input,stx_fail_ParseFailureCode.fromString("When")),input));
	}
	,__class__: stx_parse_parser_term_When
});
var stx_parse_parser_term_With = function(l,r,pos) {
	var self = stx_LiftAssert.assert(stx_nano_Wildcard.__,{ fileName : "stx/parse/parser/term/With.hx", lineNumber : 8, className : "stx.parse.parser.term.With", methodName : "new"}).module.exists().apply(l);
	if(self != null) {
		switch(self._hx_index) {
		case 0:
			var v = self.v;
			throw haxe_Exception.thrown(v);
		case 1:
			break;
		}
	}
	var self = stx_LiftAssert.assert(stx_nano_Wildcard.__,{ fileName : "stx/parse/parser/term/With.hx", lineNumber : 9, className : "stx.parse.parser.term.With", methodName : "new"}).module.exists().apply(r);
	if(self != null) {
		switch(self._hx_index) {
		case 0:
			var v = self.v;
			throw haxe_Exception.thrown(v);
		case 1:
			break;
		}
	}
	stx_parse_parser_term_Base.call(this,stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,l,r),null,pos);
};
$hxClasses["stx.parse.parser.term.With"] = stx_parse_parser_term_With;
stx_parse_parser_term_With.__name__ = "stx.parse.parser.term.With";
stx_parse_parser_term_With.__super__ = stx_parse_parser_term_Base;
stx_parse_parser_term_With.prototype = $extend(stx_parse_parser_term_Base.prototype,{
	transform: null
	,check: function() {
		var self = new stx_assert_Module({ fileName : "stx/parse/parser/term/With.hx", lineNumber : 17, className : "stx.parse.parser.term.With", methodName : "check"}).exists().apply(this.delegation);
		if(self != null) {
			switch(self._hx_index) {
			case 0:
				var v = self.v;
				throw haxe_Exception.thrown(v);
			case 1:
				break;
			}
		}
	}
	,apply: function(input) {
		var _gthis = this;
		var res = stx_nano_CoupleLift.fst(this.delegation).apply(input);
		if(res.get_error().is_defined() == false) {
			var _this = stx_LiftAssert.assert(stx_nano_Wildcard.__,{ fileName : "stx/parse/parser/term/With.hx", lineNumber : 31, className : "stx.parse.parser.term.With", methodName : "apply"});
			var t = this.delegation;
			var self = _this.module.exists().apply(t);
			if(self != null) {
				switch(self._hx_index) {
				case 0:
					var v = self.v;
					throw haxe_Exception.thrown(v);
				case 1:
					break;
				}
			}
			var _this = stx_LiftAssert.assert(stx_nano_Wildcard.__,{ fileName : "stx/parse/parser/term/With.hx", lineNumber : 32, className : "stx.parse.parser.term.With", methodName : "apply"});
			var t = stx_nano_CoupleLift.snd(this.delegation);
			var self = _this.module.exists().apply(t);
			if(self != null) {
				switch(self._hx_index) {
				case 0:
					var v = self.v;
					throw haxe_Exception.thrown(v);
				case 1:
					break;
				}
			}
			var resI = stx_nano_CoupleLift.snd(this.delegation).apply(res.asset);
			var this1 = stx_parse_Logging.log(stx_nano_Wildcard.__);
			var fn = function(pos) {
				return pos.with_stamp(function(stamp) {
					return stamp.relevel(1);
				});
			};
			(function(value,pos) {
				this1(value,fn(pos));
			})(new stx_log_EntryCtr().thunk(function() {
				var parser = stx_nano_CoupleLift.snd(_gthis.delegation).toString();
				var result = stx_parse_ParseResultLift.toString(resI);
				return "rh parser: " + parser + " result: " + result + " " + Std.string(_gthis);
			}),stx_log_LogPosition.fromPos({ fileName : "stx/parse/parser/term/With.hx", lineNumber : 35, className : "stx.parse.parser.term.With", methodName : "apply"}));
			if(resI.get_error().is_defined() == false) {
				var self = res.value;
				var result;
				if(self._hx_index == 0) {
					var v = self.v;
					result = v;
				} else {
					result = null;
				}
				var self = resI.value;
				var result1;
				if(self._hx_index == 0) {
					var v = self.v;
					result1 = v;
				} else {
					result1 = null;
				}
				var result2 = this.transform(result,result1);
				var this2 = stx_parse_Logging.log(stx_nano_Wildcard.__);
				var fn1 = function(pos) {
					return pos.with_stamp(function(stamp) {
						return stamp.relevel(1);
					});
				};
				(function(value,pos) {
					this2(value,fn1(pos));
				})(new stx_log_EntryCtr().thunk(function() {
					var parsers = "" + Std.string(stx_nano_CoupleLift.tup(_gthis.delegation));
					return "parsers: " + parsers + ", result: " + (result2 == null ? "null" : stx_pico_Option.toString(result2));
				}),stx_log_LogPosition.fromPos({ fileName : "stx/parse/parser/term/With.hx", lineNumber : 47, className : "stx.parse.parser.term.With", methodName : "apply"}));
				switch(result2._hx_index) {
				case 0:
					var x = result2.v;
					return stx_LiftParse.ok(resI.asset,x);
				case 1:
					return stx_LiftParse.nil(resI.asset);
				}
			} else if(stx_nano_IterLift.lfold(stx_nano_lift_LiftIterableToIter.toIter(stx_fail_Error.toIterable(resI.get_error())),function(next,memo) {
				return stx_nano_lift_LiftNano.if_else(memo,function() {
					return true;
				},function() {
					var self = next.get_data();
					switch(self._hx_index) {
					case 0:
						var t = self.v;
						return stx_fail_DeclineLift.fold(t,function(x) {
							return x.fatal;
						},function(_) {
							return false;
						});
					case 1:
						return false;
					}
				});
			},false)) {
				return stx_parse_ParseResult.make(resI.asset,haxe_ds_Option.None,resI.get_error());
			} else {
				return stx_LiftParse.failure(stx_fail_Refuse.concat(resI.get_error(),stx_LiftParse.erration(input,stx_fail_ParseFailureCodeSum.E_Parse_ParseFailed("With lhs"))),input);
			}
		} else {
			return stx_LiftParse.failure(stx_fail_Refuse.concat(stx_LiftParse.erration(input,stx_fail_ParseFailureCodeSum.E_Parse_ParseFailed("With")),res.get_error()),input);
		}
	}
	,toString: function() {
		return "" + stx_nano_Couple.toString(this.delegation);
	}
	,__class__: stx_parse_parser_term_With
});
var stx_parse_parser_term_OneMany = function(l,pos) {
	var this1 = new stx_parse_parser_term_Many(l,{ fileName : "stx/parse/Parsers.hx", lineNumber : 47, className : "stx.parse.Parsers", methodName : "Many"});
	var this2 = new stx_parse_parser_term_Option(this1,{ fileName : "stx/parse/parser/ParserLift.hx", lineNumber : 94, className : "stx.parse.parser.ParserLift", methodName : "option"});
	stx_parse_parser_term_With.call(this,l,this2,pos);
};
$hxClasses["stx.parse.parser.term.OneMany"] = stx_parse_parser_term_OneMany;
stx_parse_parser_term_OneMany.__name__ = "stx.parse.parser.term.OneMany";
stx_parse_parser_term_OneMany.__super__ = stx_parse_parser_term_With;
stx_parse_parser_term_OneMany.prototype = $extend(stx_parse_parser_term_With.prototype,{
	transform: function(lhs,rhs) {
		var this1 = stx_parse_Logging.log(stx_nano_Wildcard.__);
		var fn = function(pos) {
			return pos.with_stamp(function(stamp) {
				return stamp.relevel(1);
			});
		};
		(function(value,pos) {
			this1(value,fn(pos));
		})(stx_log_Stringify.fromString("" + Std.string(lhs) + " " + (rhs == null ? "null" : stx_pico_Option.toString(rhs)))(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/parse/parser/term/OneMany.hx", lineNumber : 10, className : "stx.parse.parser.term.OneMany", methodName : "transform"}));
		return stx_pico_OptionLift.or(stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,lhs),function(oI) {
			var arr = [];
			arr.push(oI);
			var a = $iterator(stx_pico_OptionLift)(stx_pico_Option.flatten(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,rhs)));
			while(a.hasNext()) {
				var a1 = a.next();
				var _g = 0;
				while(_g < a1.length) {
					var v = a1[_g];
					++_g;
					var this1 = stx_parse_Logging.log(stx_nano_Wildcard.__);
					var v1 = stx_log_Stringify.fromString("" + Std.string(v));
					(function(fn,this1) {
						return function(value,pos) {
							this1[0](value,fn[0](pos));
						};
					})([(function() {
						return function(pos) {
							return pos.with_stamp((function() {
								return function(stamp) {
									return stamp.relevel(1);
								};
							})());
						};
					})()],[this1])(v1(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/parse/parser/term/OneMany.hx", lineNumber : 17, className : "stx.parse.parser.term.OneMany", methodName : "transform"}));
					arr.push(v);
				}
			}
			return arr;
		}),function() {
			return stx_pico_OptionLift.flat_map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,rhs),function(x) {
				return x;
			});
		});
	}
	,toString: function() {
		return "OneMany(" + (this.delegation == null ? "null" : stx_nano_Couple.toString(this.delegation)) + ")";
	}
	,__class__: stx_parse_parser_term_OneMany
});
var stx_parse_parser_term_Many = function(delegation,id) {
	stx_parse_parser_term_Base.call(this,delegation,null,id);
	var _g = delegation.tag;
	var tmp;
	if(_g._hx_index == 0) {
		var v = _g.v;
		tmp = haxe_ds_Option.Some("(" + v + ")*");
	} else {
		tmp = haxe_ds_Option.None;
	}
	this.tag = tmp;
};
$hxClasses["stx.parse.parser.term.Many"] = stx_parse_parser_term_Many;
stx_parse_parser_term_Many.__name__ = "stx.parse.parser.term.Many";
stx_parse_parser_term_Many.__super__ = stx_parse_parser_term_Base;
stx_parse_parser_term_Many.prototype = $extend(stx_parse_parser_term_Base.prototype,{
	check: function() {
		var self = stx_assert_PredicateLift.errata(new stx_assert_Module(this.pos).exists(),function(e) {
			var this1 = stx_nano_lift_LiftError.fault(e);
			return stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_ParseFailureCodeSum.E_Parse_UndefinedParseDelegate)),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1));
		}).apply(this.delegation);
		if(self != null) {
			switch(self._hx_index) {
			case 0:
				var v = self.v;
				throw haxe_Exception.thrown(v);
			case 1:
				break;
			}
		}
	}
	,apply: function(inputI) {
		var _gthis = this;
		var rec = null;
		rec = function(inputII,arr) {
			var res = _gthis.delegation.apply(inputII);
			var this1 = stx_parse_Logging.log(stx_nano_Wildcard.__);
			var fn = function(pos) {
				return pos.with_stamp(function(stamp) {
					return stamp.relevel(1);
				});
			};
			(function(value,pos) {
				this1(value,fn(pos));
			})(stx_log_Stringify.fromString("" + Std.string(_gthis.delegation))(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/parse/parser/term/Many.hx", lineNumber : 23, className : "stx.parse.parser.term.Many", methodName : "apply"}));
			var this2 = stx_parse_Logging.log(stx_nano_Wildcard.__);
			var fn1 = function(pos) {
				return pos.with_stamp(function(stamp) {
					return stamp.relevel(1);
				});
			};
			(function(value,pos) {
				this2(value,fn1(pos));
			})(stx_log_Stringify.fromString("" + Std.string(res.get_error()))(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/parse/parser/term/Many.hx", lineNumber : 24, className : "stx.parse.parser.term.Many", methodName : "apply"}));
			var this3 = stx_parse_Logging.log(stx_nano_Wildcard.__);
			var fn2 = function(pos) {
				return pos.with_stamp(function(stamp) {
					return stamp.relevel(1);
				});
			};
			(function(value,pos) {
				this3(value,fn2(pos));
			})(stx_log_Stringify.fromString("" + Std.string(arr))(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/parse/parser/term/Many.hx", lineNumber : 25, className : "stx.parse.parser.term.Many", methodName : "apply"}));
			if(res.get_error().is_defined() == false) {
				var this4 = stx_parse_Logging.log(stx_nano_Wildcard.__);
				var fn3 = function(pos) {
					return pos.with_stamp(function(stamp) {
						return stamp.relevel(1);
					});
				};
				(function(value,pos) {
					this4(value,fn3(pos));
				})(stx_log_Stringify.fromString("" + (res.value == null ? "null" : stx_pico_Option.toString(res.value)))(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/parse/parser/term/Many.hx", lineNumber : 29, className : "stx.parse.parser.term.Many", methodName : "apply"}));
				var _g = res.value;
				if(_g != null) {
					if(_g._hx_index == 0) {
						var x = _g.v;
						arr.push(x);
					}
				}
				return rec(res.asset,arr);
			} else if(stx_nano_IterLift.lfold(stx_nano_lift_LiftIterableToIter.toIter(stx_fail_Error.toIterable(res.get_error())),function(next,memo) {
				return stx_nano_lift_LiftNano.if_else(memo,function() {
					return true;
				},function() {
					var self = next.get_data();
					switch(self._hx_index) {
					case 0:
						var t = self.v;
						return stx_fail_DeclineLift.fold(t,function(x) {
							return x.fatal;
						},function(_) {
							return false;
						});
					case 1:
						return false;
					}
				});
			},false)) {
				return stx_LiftParse.failure(stx_fail_Refuse.concat(stx_LiftParse.erration(inputI,stx_fail_ParseFailureCode.fromString("failed many " + Std.string(_gthis.delegation)),true),res.get_error()),inputI);
			} else {
				var this5 = stx_parse_Logging.log(stx_nano_Wildcard.__);
				var fn4 = function(pos) {
					return pos.with_stamp(function(stamp) {
						return stamp.relevel(1);
					});
				};
				(function(value,pos) {
					this5(value,fn4(pos));
				})(new stx_log_EntryCtr().thunk(function() {
					return arr;
				}),stx_log_LogPosition.fromPos({ fileName : "stx/parse/parser/term/Many.hx", lineNumber : 39, className : "stx.parse.parser.term.Many", methodName : "apply"}));
				return stx_LiftParse.ok(inputII,arr);
			}
		};
		return rec(inputI,[]);
	}
	,toString: function() {
		return "Many(" + Std.string(this.delegation) + ")";
	}
	,__class__: stx_parse_parser_term_Many
});
var stx_parse_parser_term_Option = function(delegation,pos) {
	stx_parse_parser_term_Base.call(this,delegation,null,pos);
};
$hxClasses["stx.parse.parser.term.Option"] = stx_parse_parser_term_Option;
stx_parse_parser_term_Option.__name__ = "stx.parse.parser.term.Option";
stx_parse_parser_term_Option.__super__ = stx_parse_parser_term_Base;
stx_parse_parser_term_Option.prototype = $extend(stx_parse_parser_term_Base.prototype,{
	apply: function(input) {
		var result = this.delegation.apply(input);
		if(stx_nano_EquityLift.has_error(result)) {
			if(stx_nano_IterLift.lfold(stx_nano_lift_LiftIterableToIter.toIter(stx_fail_Error.toIterable(result.get_error())),function(next,memo) {
				return stx_nano_lift_LiftNano.if_else(memo,function() {
					return true;
				},function() {
					var self = next.get_data();
					switch(self._hx_index) {
					case 0:
						var t = self.v;
						return stx_fail_DeclineLift.fold(t,function(x) {
							return x.fatal;
						},function(_) {
							return false;
						});
					case 1:
						return false;
					}
				});
			},false)) {
				return stx_parse_ParseResult.fromEquity(stx_nano_Equity._.map(result.toEquity(),function(opt) {
					return stx_pico_OptionLift.map(opt,haxe_ds_Option.Some);
				}));
			} else {
				return stx_LiftParse.ok(input,haxe_ds_Option.None);
			}
		} else {
			return stx_parse_ParseResult.fromEquity(stx_nano_Equity._.map(result.toEquity(),function(opt) {
				return stx_pico_OptionLift.map(opt,haxe_ds_Option.Some);
			}));
		}
	}
	,toString: function() {
		return "" + Std.string(this.delegation) + "?";
	}
	,__class__: stx_parse_parser_term_Option
});
var stx_parse_parser_term_RefuseTransformer = function(delegation,transformer,pos) {
	stx_parse_parser_term_Base.call(this,delegation,null,pos);
	this.transformer = transformer;
};
$hxClasses["stx.parse.parser.term.RefuseTransformer"] = stx_parse_parser_term_RefuseTransformer;
stx_parse_parser_term_RefuseTransformer.__name__ = "stx.parse.parser.term.RefuseTransformer";
stx_parse_parser_term_RefuseTransformer.__super__ = stx_parse_parser_term_Base;
stx_parse_parser_term_RefuseTransformer.prototype = $extend(stx_parse_parser_term_Base.prototype,{
	transformer: null
	,apply: function(input) {
		var result = this.delegation.apply(input);
		return this.mod(result);
	}
	,mod: function(result) {
		var out = result.errata(this.transformer);
		return stx_parse_ParseResult.lift(out);
	}
	,toString: function() {
		return this.delegation.toString();
	}
	,__class__: stx_parse_parser_term_RefuseTransformer
});
var stx_parse_parser_term_TagRefuse = function(delegate,name,pos) {
	stx_parse_parser_term_RefuseTransformer.call(this,delegate,function(err) {
		return stx_fail_Refuse.errate(err,function(info) {
			return stx_fail_ParseFailure.tag(info,name);
		});
	},pos);
	this.name = name;
};
$hxClasses["stx.parse.parser.term.TagRefuse"] = stx_parse_parser_term_TagRefuse;
stx_parse_parser_term_TagRefuse.__name__ = "stx.parse.parser.term.TagRefuse";
stx_parse_parser_term_TagRefuse.__super__ = stx_parse_parser_term_RefuseTransformer;
stx_parse_parser_term_TagRefuse.prototype = $extend(stx_parse_parser_term_RefuseTransformer.prototype,{
	name: null
	,toString: function() {
		return this.name;
	}
	,__class__: stx_parse_parser_term_TagRefuse
});
var stx_fail_DeclineLift = function() { };
$hxClasses["stx.fail.DeclineLift"] = stx_fail_DeclineLift;
stx_fail_DeclineLift.__name__ = "stx.fail.DeclineLift";
stx_fail_DeclineLift.fold = function(self,val,def) {
	switch(self._hx_index) {
	case 0:
		var v = self.v;
		return val(v);
	case 1:
		var e = self.digest;
		return def(e);
	}
};
stx_fail_DeclineLift.is_exterior = function(self) {
	return stx_fail_DeclineLift.fold(self,function(_) {
		return true;
	},function(_) {
		return false;
	});
};
stx_fail_DeclineLift.exterior = function(self) {
	return stx_fail_DeclineLift.fold(self,function(v) {
		return haxe_ds_Option.Some(v);
	},function(_) {
		return haxe_ds_Option.None;
	});
};
stx_fail_DeclineLift.fold_filter = function(self,val,def) {
	return stx_fail_DeclineLift.fold(self,function(x) {
		if(val(x)) {
			return haxe_ds_Option.Some(stx_fail_DeclineSum.EXTERIOR(x));
		} else {
			return haxe_ds_Option.None;
		}
	},function(x) {
		if(def(x)) {
			return haxe_ds_Option.Some(stx_fail_DeclineSum.INTERIOR(x));
		} else {
			return haxe_ds_Option.None;
		}
	});
};
stx_fail_DeclineLift.option = function(self) {
	return stx_fail_DeclineLift.fold(self,haxe_ds_Option.Some,function(_) {
		return haxe_ds_Option.None;
	});
};
stx_fail_DeclineLift.toString = function(self) {
	return stx_fail_DeclineLift.fold(self,function(v) {
		return Std.string(v);
	},function(n) {
		return n.toString();
	});
};
stx_fail_DeclineLift.map = function(self,fn) {
	return stx_fail_Decline._new(stx_fail_DeclineLift.fold(self,function(x) {
		return stx_fail_DeclineSum.EXTERIOR(fn(x));
	},function(y) {
		return stx_fail_DeclineSum.INTERIOR(y);
	}));
};
var stx_fail_Decline = {};
stx_fail_Decline._new = function(self) {
	var this1 = self;
	return this1;
};
stx_fail_Decline.lift = function(self) {
	return stx_fail_Decline._new(self);
};
stx_fail_Decline.fromDigest = function(code) {
	return stx_fail_DeclineSum.INTERIOR(code);
};
stx_fail_Decline.fromErrOf = function(v) {
	return stx_fail_DeclineSum.EXTERIOR(v);
};
stx_fail_Decline.iterator = function(this1) {
	return { next : function() {
		if(this1._hx_index == 0) {
			var v = this1.v;
			return v;
		} else {
			return null;
		}
	}, hasNext : function() {
		if(this1._hx_index == 0) {
			var v = this1.v;
			return true;
		} else {
			return false;
		}
	}};
};
stx_fail_Decline.prj = function(this1) {
	return this1;
};
stx_fail_Decline.get_self = function(this1) {
	return stx_fail_Decline._new(this1);
};
var stx_fail_term_Map = function(delegate) {
	this.delegate = delegate;
};
$hxClasses["stx.fail.term.Map"] = stx_fail_term_Map;
stx_fail_term_Map.__name__ = "stx.fail.term.Map";
stx_fail_term_Map.__super__ = stx_fail_ErrorCls;
stx_fail_term_Map.prototype = $extend(stx_fail_ErrorCls.prototype,{
	delegate: null
	,map: null
	,get_pos: function() {
		return this.delegate.get_pos();
	}
	,get_next: function() {
		var _gthis = this;
		return stx_pico_OptionLift.map(this.delegate.get_next(),function(x) {
			return new stx_fail_term_MapAnon(x,$bind(_gthis,_gthis.map)).toError();
		});
	}
	,get_data: function() {
		var _gthis = this;
		return stx_pico_OptionLift.map(this.delegate.get_data(),function(x) {
			return _gthis.map(x);
		});
	}
	,get_stack: function() {
		return this.delegate.get_stack();
	}
	,__class__: stx_fail_term_Map
});
var stx_fail_term_MapAnon = function(delegate,_map) {
	stx_fail_term_Map.call(this,delegate);
	this._map = _map;
};
$hxClasses["stx.fail.term.MapAnon"] = stx_fail_term_MapAnon;
stx_fail_term_MapAnon.__name__ = "stx.fail.term.MapAnon";
stx_fail_term_MapAnon.__super__ = stx_fail_term_Map;
stx_fail_term_MapAnon.prototype = $extend(stx_fail_term_Map.prototype,{
	_map: null
	,map: function(e) {
		return this._map(e);
	}
	,__class__: stx_fail_term_MapAnon
});
var stx_fail_ParseFailure = {};
stx_fail_ParseFailure._new = function(self) {
	var this1 = self;
	return this1;
};
stx_fail_ParseFailure.make = function(idx,msg,fatal,label) {
	return stx_fail_ParseFailure._new({ idx : idx, msg : msg, fatal : fatal, label : label});
};
stx_fail_ParseFailure.tag = function(this1,name) {
	return stx_fail_ParseFailure.make(this1.idx,stx_fail_ParseFailureCodeSum.E_Parse_ParseFailed(name),this1.fatal);
};
stx_fail_ParseFailure.toString = function(this1) {
	return "" + Std.string(this1.msg) + "@" + this1.idx;
};
stx_fail_ParseFailure.toDefect = function(this1) {
	return stx_nano_Defect.pure(this1);
};
stx_fail_ParseFailure.toRefuse = function(this1) {
	return stx_fail_Refuse.make(haxe_ds_Option.Some(stx_fail_DeclineSum.EXTERIOR(this1)),haxe_ds_Option.None,null);
};
var stx_fail_ParseFailureCodeSum = $hxEnums["stx.fail.ParseFailureCodeSum"] = { __ename__:"stx.fail.ParseFailureCodeSum",__constructs__:null
	,E_Parse_ParseFailed: ($_=function(detail,pos) { return {_hx_index:0,detail:detail,pos:pos,__enum__:"stx.fail.ParseFailureCodeSum",toString:$estr}; },$_._hx_name="E_Parse_ParseFailed",$_.__params__ = ["detail","pos"],$_)
	,E_Parse_UndefinedParseDelegate: {_hx_name:"E_Parse_UndefinedParseDelegate",_hx_index:1,__enum__:"stx.fail.ParseFailureCodeSum",toString:$estr}
	,E_Parse_Eof: {_hx_name:"E_Parse_Eof",_hx_index:2,__enum__:"stx.fail.ParseFailureCodeSum",toString:$estr}
	,E_Parse_NotEof: {_hx_name:"E_Parse_NotEof",_hx_index:3,__enum__:"stx.fail.ParseFailureCodeSum",toString:$estr}
};
stx_fail_ParseFailureCodeSum.__constructs__ = [stx_fail_ParseFailureCodeSum.E_Parse_ParseFailed,stx_fail_ParseFailureCodeSum.E_Parse_UndefinedParseDelegate,stx_fail_ParseFailureCodeSum.E_Parse_Eof,stx_fail_ParseFailureCodeSum.E_Parse_NotEof];
var stx_parse_parser_term_BoundFun = function(parser,pos) {
	stx_parse_ParserCls.call(this,null,pos);
	this.parser = parser;
};
$hxClasses["stx.parse.parser.term.BoundFun"] = stx_parse_parser_term_BoundFun;
stx_parse_parser_term_BoundFun.__name__ = "stx.parse.parser.term.BoundFun";
stx_parse_parser_term_BoundFun.__super__ = stx_parse_ParserCls;
stx_parse_parser_term_BoundFun.prototype = $extend(stx_parse_ParserCls.prototype,{
	parser: null
	,bound: null
	,apply: function(i) {
		return this.bound(i,this.parser.apply(i));
	}
	,toString: function() {
		var c = js_Boot.getClass(this);
		var a = stx_pico_Identifier.get_name(stx_pico_Identifier._new(c.__name__));
		var b = this.parser.toString();
		return "" + a + "(" + b + ")";
	}
	,__class__: stx_parse_parser_term_BoundFun
});
var stx_parse_parser_term_Not = function(parser,pos) {
	stx_parse_parser_term_BoundFun.call(this,parser,pos);
};
$hxClasses["stx.parse.parser.term.Not"] = stx_parse_parser_term_Not;
stx_parse_parser_term_Not.__name__ = "stx.parse.parser.term.Not";
stx_parse_parser_term_Not.__super__ = stx_parse_parser_term_BoundFun;
stx_parse_parser_term_Not.prototype = $extend(stx_parse_parser_term_BoundFun.prototype,{
	bound: function(input,result) {
		var _gthis = this;
		return stx_nano_lift_LiftNano.if_else(result.get_error().is_defined() == false,function() {
			return stx_LiftParse.failure(stx_LiftParse.erration(input,stx_fail_ParseFailureCode.fromString("Parser \"" + (_gthis.parser.tag == null ? "null" : stx_pico_Option.toString(_gthis.parser.tag)) + "\" succeeded rather than failed in Not")),input);
		},function() {
			if(stx_nano_IterLift.lfold(stx_nano_lift_LiftIterableToIter.toIter(stx_fail_Error.toIterable(result.get_error())),function(next,memo) {
				return stx_nano_lift_LiftNano.if_else(memo,function() {
					return true;
				},function() {
					var self = next.get_data();
					switch(self._hx_index) {
					case 0:
						var t = self.v;
						return stx_fail_DeclineLift.fold(t,function(x) {
							return x.fatal;
						},function(_) {
							return false;
						});
					case 1:
						return false;
					}
				});
			},false)) {
				return result;
			} else {
				return stx_LiftParse.nil(input);
			}
		});
	}
	,toString: function() {
		return "NOT " + Std.string(this.parser);
	}
	,__class__: stx_parse_parser_term_Not
});
var stx_parse_parser_term_AndR = function(l,r,pos) {
	stx_parse_parser_term_With.call(this,l,r,pos);
};
$hxClasses["stx.parse.parser.term.AndR"] = stx_parse_parser_term_AndR;
stx_parse_parser_term_AndR.__name__ = "stx.parse.parser.term.AndR";
stx_parse_parser_term_AndR.__super__ = stx_parse_parser_term_With;
stx_parse_parser_term_AndR.prototype = $extend(stx_parse_parser_term_With.prototype,{
	check: function() {
		var _this = stx_LiftAssert.assert(stx_nano_Wildcard.__,{ fileName : "stx/parse/parser/term/AndR.hx", lineNumber : 12, className : "stx.parse.parser.term.AndR", methodName : "check"});
		var t = this.delegation;
		var self = _this.module.exists().apply(t);
		if(self != null) {
			switch(self._hx_index) {
			case 0:
				var v = self.v;
				throw haxe_Exception.thrown(v);
			case 1:
				break;
			}
		}
	}
	,transform: function(lhs,rhs) {
		var _gthis = this;
		var this1 = stx_parse_Logging.log(stx_nano_Wildcard.__);
		var fn = function(pos) {
			return pos.with_stamp(function(stamp) {
				return stamp.relevel(1);
			});
		};
		(function(value,pos) {
			this1(value,fn(pos));
		})(new stx_log_EntryCtr().thunk(function() {
			return "" + Std.string(stx_nano_CoupleLift.fst(_gthis.delegation)) + " " + Std.string(lhs) + " " + Std.string(stx_nano_CoupleLift.snd(_gthis.delegation)) + " " + Std.string(rhs);
		}),stx_log_LogPosition.fromPos({ fileName : "stx/parse/parser/term/AndR.hx", lineNumber : 16, className : "stx.parse.parser.term.AndR", methodName : "transform"}));
		return stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,rhs);
	}
	,__class__: stx_parse_parser_term_AndR
});
var stx_Parse = function() { };
$hxClasses["stx.Parse"] = stx_Parse;
stx_Parse.__name__ = "stx.Parse";
stx_Parse.mergeString = function(a,b) {
	return a + b;
};
stx_Parse.mergeArray = function(a,b) {
	return a.concat(b);
};
stx_Parse.mergeOption = function(a,b) {
	if(b._hx_index == 0) {
		var v = b.v;
		a += v;
		return a;
	} else {
		return "";
	}
};
stx_Parse.mergeTAndArray = function(a,b) {
	return [a].concat(b);
};
stx_Parse.mergeOptionAndArray = function(a,b) {
	var tmp;
	switch(a._hx_index) {
	case 0:
		var t = a.v;
		tmp = [t].concat(b);
		break;
	case 1:
		tmp = b;
		break;
	}
	return tmp;
};
stx_Parse.primitive = function() {
	var this1 = stx_Parse.boolean;
	var this2 = new stx_parse_parser_term_AnonThen(this1,function(x) {
		return stx_nano_PrimitiveDef.PBool(x == "true");
	},{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
	var this1 = stx_parse_Parser.get_self(this2);
	var this2 = stx_Parse.float;
	var this3 = new stx_parse_parser_term_AnonThen(this2,stx_fn_UnaryLift.then(Std.parseFloat,function(x) {
		return stx_nano_PrimitiveDef.PSprig(stx_nano_SprigSum.Byteal(stx_nano_NumericSum.NFloat(x)));
	}),{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
	var this2 = this1;
	var this1 = new stx_parse_parser_term_Or(this2,stx_parse_Parser.get_self(this3),{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
	var this2 = stx_parse_Parser.get_self(this1);
	var this1 = stx_Parse.integer;
	var this3 = new stx_parse_parser_term_AnonThen(this1,function(str) {
		var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,Std.parseInt(str));
		var _this;
		if(self._hx_index == 0) {
			var v = self.v;
			_this = v;
		} else {
			_this = 0;
		}
		return stx_nano_PrimitiveDef.PSprig(stx_nano_SprigSum.Byteal(stx_nano_NumericSum.NFloat(_this)));
	},{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
	var this1 = this2;
	var this2 = new stx_parse_parser_term_Or(this1,stx_parse_Parser.get_self(this3),{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
	var this1 = stx_parse_Parser.get_self(this2);
	var this2 = stx_Parse.literal;
	var this3 = new stx_parse_parser_term_AnonThen(this2,function(x) {
		return stx_nano_PrimitiveDef.PSprig(stx_nano_SprigSum.Textal(x));
	},{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
	var this2 = this1;
	var this1 = new stx_parse_parser_term_Or(this2,stx_parse_Parser.get_self(this3),{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
	return stx_parse_Parser.get_self(this1);
};
stx_Parse.spaced = function(p) {
	var this1 = new stx_parse_parser_term_Many(stx_Parse.gap,{ fileName : "stx/parse/Parsers.hx", lineNumber : 47, className : "stx.parse.Parsers", methodName : "Many"});
	var this2 = new stx_parse_parser_term_AndL(p,stx_parse_Parser.get_self(this1),{ fileName : "stx/parse/Parsers.hx", lineNumber : 113, className : "stx.parse.Parsers", methodName : "AndL"});
	return stx_parse_Parser.get_self(this2);
};
stx_Parse.returned = function(p) {
	var this1 = new stx_parse_parser_term_Many(stx_Parse.whitespace,{ fileName : "stx/parse/Parsers.hx", lineNumber : 47, className : "stx.parse.Parsers", methodName : "Many"});
	var this2 = new stx_parse_parser_term_AndL(p,stx_parse_Parser.get_self(this1),{ fileName : "stx/parse/Parsers.hx", lineNumber : 113, className : "stx.parse.Parsers", methodName : "AndL"});
	return stx_parse_Parser.get_self(this2);
};
stx_Parse.eq = function(v) {
	var this1 = new stx_parse_parser_term_SyncAnon(function(input) {
		var chk = input.content.head();
		switch(chk._hx_index) {
		case 0:
			var v1 = chk.v;
			if(v == v1) {
				return stx_LiftParse.ok(input.copy(input.content.drop(1)),v1);
			} else {
				return stx_LiftParse.failure(stx_LiftParse.erration(input,stx_fail_ParseFailureCode.fromString("eq")),input);
			}
			break;
		case 1:
			return stx_LiftParse.failure(stx_LiftParse.erration(input,stx_fail_ParseFailureCodeSum.E_Parse_ParseFailed("eq")),input);
		case 2:
			var e = chk.err;
			return stx_LiftParse.failure(stx_parse_lift_LiftParseFailureCodeRefuse.toParseFailure_with(e,input,false),input);
		}
	},stx_pico_Option.fromNullT("eq"),{ fileName : "stx/Parse.hx", lineNumber : 96, className : "stx.Parse", methodName : "eq"});
	return stx_parse_Parser.get_self(this1);
};
var stx_LiftParseFailure = function() { };
$hxClasses["stx.LiftParseFailure"] = stx_LiftParseFailure;
stx_LiftParseFailure.__name__ = "stx.LiftParseFailure";
stx_LiftParseFailure.is_parse_fail = function(self) {
	return stx_nano_IterLift.lfold(stx_nano_lift_LiftIterableToIter.toIter(stx_fail_Error.toIterable(self.get_error())),function(next,memo) {
		return stx_nano_lift_LiftNano.if_else(memo,function() {
			return true;
		},function() {
			var self = next.get_data();
			switch(self._hx_index) {
			case 0:
				var t = self.v;
				if(t._hx_index == 0) {
					var x = t.v;
					return x.msg != stx_fail_ParseFailureCode.fromString(stx_fail_ParseFailure.FAIL);
				} else {
					return false;
				}
				break;
			case 1:
				return false;
			}
		});
	},false);
};
stx_LiftParseFailure.is_fatal = function(self) {
	return stx_nano_IterLift.lfold(stx_nano_lift_LiftIterableToIter.toIter(stx_fail_Error.toIterable(self.get_error())),function(next,memo) {
		return stx_nano_lift_LiftNano.if_else(memo,function() {
			return true;
		},function() {
			var self = next.get_data();
			switch(self._hx_index) {
			case 0:
				var t = self.v;
				return stx_fail_DeclineLift.fold(t,function(x) {
					return x.fatal;
				},function(_) {
					return false;
				});
			case 1:
				return false;
			}
		});
	},false);
};
stx_LiftParseFailure.toString = function(self) {
	return stx_nano_IterLift.lfold1(stx_nano_IterLift.map(stx_nano_lift_LiftIterableToIter.toIter(stx_fail_Error.toIterable(stx_nano_Defect.toRefuse(self))),function(x) {
		var self = x.get_data();
		switch(self._hx_index) {
		case 0:
			var t = self.v;
			return stx_fail_DeclineLift.fold(t,function(okI) {
				if(okI == null) {
					return "null";
				} else {
					return stx_fail_ParseFailure.toString(okI);
				}
			},function(_) {
				return "";
			});
		case 1:
			return "";
		}
	}),function(n,m) {
		return "" + m + "," + n;
	});
};
var stx_Pico = $hxEnums["stx.Pico"] = { __ename__:"stx.Pico",__constructs__:null
	,Pico: {_hx_name:"Pico",_hx_index:0,__enum__:"stx.Pico",toString:$estr}
};
stx_Pico.__constructs__ = [stx_Pico.Pico];
var stx_PosLift = function() { };
$hxClasses["stx.PosLift"] = stx_PosLift;
stx_PosLift.__name__ = "stx.PosLift";
stx_PosLift.toString = function(pos) {
	if(pos == null) {
		return "<no_pos>";
	}
	var f = pos.fileName;
	var cls = pos.className;
	var fn = pos.methodName;
	var ln = pos.lineNumber;
	return "" + f + ":" + ln;
};
var stx_Tag = {};
stx_Tag.ofAny = function(t) {
	return null;
};
var stx_ExceptionApi = function() { };
$hxClasses["stx.ExceptionApi"] = stx_ExceptionApi;
stx_ExceptionApi.__name__ = "stx.ExceptionApi";
stx_ExceptionApi.__isInterface__ = true;
stx_ExceptionApi.prototype = {
	get_message: null
	,get_stack: null
	,get_native: null
	,details: null
	,__class__: stx_ExceptionApi
};
var stx_PkgLift = function() { };
$hxClasses["stx.PkgLift"] = stx_PkgLift;
stx_PkgLift.__name__ = "stx.PkgLift";
stx_PkgLift.pkg = function(_,pos) {
	var p = stx_pkg_Scope.fromPosInfos(pos);
	return stx_pkg_Pkg.fromScope(p);
};
var stx_LiftProxyCommands = function() { };
$hxClasses["stx.LiftProxyCommands"] = stx_LiftProxyCommands;
stx_LiftProxyCommands.__name__ = "stx.LiftProxyCommands";
stx_LiftProxyCommands.belay = function(wildcard,belay) {
	return stx_proxy_core_ProxySum.Defer(belay);
};
stx_LiftProxyCommands.await = function(wildcard,await,recure) {
	return stx_proxy_core_ProxySum.Await(await,recure);
};
stx_LiftProxyCommands.yield = function(wildcard,$yield,recure) {
	return stx_proxy_core_ProxySum.Yield($yield,recure);
};
stx_LiftProxyCommands.ended = function(wildcard,ended) {
	return stx_proxy_core_ProxySum.Ended(ended);
};
var stx_Show = function() { };
$hxClasses["stx.Show"] = stx_Show;
stx_Show.__name__ = "stx.Show";
stx_Show.show = function(wildcard,v) {
	return (stx_Show.make(v))(v);
};
stx_Show.__show__ = function(impl) {
	return function(v) {
		if(null == v) {
			return "null";
		} else {
			return impl(v);
		}
	};
};
stx_Show.make = function(t) {
	return stx_Show.make0(Type.typeof(t));
};
stx_Show.make0 = function(v) {
	switch(v._hx_index) {
	case 0:
		return stx__$Show_NullShow.toString;
	case 1:
		return stx_Show.__show__(stx__$Show_IntShow.toString);
	case 2:
		return stx_Show.__show__(stx__$Show_FloatShow.toString);
	case 3:
		return stx_Show.__show__(stx__$Show_BoolShow.toString);
	case 4:
		return stx_Show.__show__(stx__$Show_ObjectShow.toString);
	case 5:
		return stx_Show.__show__(function(v) {
			return "<function>";
		});
	case 6:
		var _g = v.c;
		var c = _g;
		if(c == String) {
			return stx_Show.__show__(Std.string);
		} else {
			var c = _g;
			if(c == Array) {
				return stx_Show.__show__(stx__$Show_ArrayShow.toString);
			} else {
				var c = _g;
				if(c == haxe_ds_List) {
					return stx_Show.__show__(stx__$Show_ListShow.toString);
				} else {
					var c = _g;
					if(HxOverrides.remove(Type.getInstanceFields(c),"toString")) {
						return stx_Show.__show__(function(v) {
							return Reflect.field(v,"toString").apply(v,[]);
						});
					} else {
						return stx_Show.__show__(function(v) {
							var c = js_Boot.getClass(v);
							return c.__name__;
						});
					}
				}
			}
		}
		break;
	case 7:
		var _g = v.e;
		return stx_Show.__show__(stx__$Show_EnumShow.toString);
	case 8:
		return stx_Show.__show__(function(v) {
			return "<unknown>";
		});
	}
};
var stx__$Show_ListShow = function() { };
$hxClasses["stx._Show.ListShow"] = stx__$Show_ListShow;
stx__$Show_ListShow.__name__ = "stx._Show.ListShow";
stx__$Show_ListShow.toString = function(lst) {
	return stx__$Show_IterableShow.toString(lst);
};
var stx__$Show_NullShow = function() { };
$hxClasses["stx._Show.NullShow"] = stx__$Show_NullShow;
stx__$Show_NullShow.__name__ = "stx._Show.NullShow";
stx__$Show_NullShow.toString = function(v) {
	return "null";
};
var stx__$Show_EnumShow = function() { };
$hxClasses["stx._Show.EnumShow"] = stx__$Show_EnumShow;
stx__$Show_EnumShow.__name__ = "stx._Show.EnumShow";
stx__$Show_EnumShow.toString = function(v) {
	var e = v;
	var buf = $hxEnums[e.__enum__].__constructs__[e._hx_index]._hx_name;
	var params = Type.enumParameters(v);
	if(params.length == 0) {
		return buf;
	} else {
		buf += "(";
		var _g = 0;
		var _g1 = params.length;
		while(_g < _g1) {
			var i = _g++;
			var p = params[i];
			buf += (stx_Show.make(p))(p);
			if(i < params.length - 1) {
				buf += ", ";
			}
		}
		buf += ")";
		return buf;
	}
};
var stx__$Show_ObjectShow = function() { };
$hxClasses["stx._Show.ObjectShow"] = stx__$Show_ObjectShow;
stx__$Show_ObjectShow.__name__ = "stx._Show.ObjectShow";
stx__$Show_ObjectShow.toString = function(v) {
	if(Reflect.fields(v).length == 0) {
		return Std.string(v);
	}
	var buf = [];
	var _g = 0;
	var _g1 = Reflect.fields(v);
	while(_g < _g1.length) {
		var k = _g1[_g];
		++_g;
		var i = Reflect.field(v,k);
		buf.push(k + ":" + (stx_Show.make(i))(i));
	}
	return "{" + buf.join(",") + "}";
};
var stx__$Show_ArrayShow = function() { };
$hxClasses["stx._Show.ArrayShow"] = stx__$Show_ArrayShow;
stx__$Show_ArrayShow.__name__ = "stx._Show.ArrayShow";
stx__$Show_ArrayShow.toString = function(v) {
	return stx__$Show_ArrayShow.toStringWith(v,stx_Show.make(v[0]));
};
stx__$Show_ArrayShow.toStringWith = function(v,show) {
	var result = new Array(v.length);
	var _g = 0;
	var _g1 = v.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = show(v[i]);
	}
	return "[" + result.join(", ") + "]";
};
stx__$Show_ArrayShow.mkString = function(arr,sep,show) {
	if(sep == null) {
		sep = ", ";
	}
	var isFirst = true;
	return Lambda.fold(arr,function(b,a) {
		var prefix;
		if(isFirst) {
			isFirst = false;
			prefix = "";
		} else {
			prefix = sep;
		}
		if(null == show) {
			show = stx_Show.make(b);
		}
		return a + prefix + show(b);
	},"");
};
var stx__$Show_IterableShow = function() { };
$hxClasses["stx._Show.IterableShow"] = stx__$Show_IterableShow;
stx__$Show_IterableShow.__name__ = "stx._Show.IterableShow";
stx__$Show_IterableShow.toString = function(i,show,prefix,suffix,sep) {
	if(sep == null) {
		sep = ", ";
	}
	if(suffix == null) {
		suffix = ")";
	}
	if(prefix == null) {
		prefix = "(";
	}
	return stx__$Show_IterableShow.mkString(i,show,prefix,suffix,sep);
};
stx__$Show_IterableShow.mkString = function(i,show,prefix,suffix,sep) {
	if(sep == null) {
		sep = ", ";
	}
	if(suffix == null) {
		suffix = ")";
	}
	if(prefix == null) {
		prefix = "(";
	}
	if(show == null) {
		show = Std.string;
	}
	var s = prefix;
	var isFirst = true;
	var t = $getIterator(i);
	while(t.hasNext()) {
		var t1 = t.next();
		if(isFirst) {
			isFirst = false;
		} else {
			s += sep;
		}
		s += show(t1);
	}
	return s + suffix;
};
var stx__$Show_IntShow = function() { };
$hxClasses["stx._Show.IntShow"] = stx__$Show_IntShow;
stx__$Show_IntShow.__name__ = "stx._Show.IntShow";
stx__$Show_IntShow.toString = function(v) {
	return "" + v;
};
var stx__$Show_FloatShow = function() { };
$hxClasses["stx._Show.FloatShow"] = stx__$Show_FloatShow;
stx__$Show_FloatShow.__name__ = "stx._Show.FloatShow";
stx__$Show_FloatShow.toString = function(v) {
	return "" + v;
};
var stx__$Show_StackItemShow = function() { };
$hxClasses["stx._Show.StackItemShow"] = stx__$Show_StackItemShow;
stx__$Show_StackItemShow.__name__ = "stx._Show.StackItemShow";
stx__$Show_StackItemShow.toString = function(s) {
	switch(s._hx_index) {
	case 0:
		return "function";
	case 1:
		var m = s.m;
		return m;
	case 2:
		var _g = s.file;
		var _g = s.column;
		var si = s.s;
		var line = s.line;
		return stx__$Show_StackItemShow.toString(si) + (":" + line);
	case 3:
		var classname = s.classname;
		var method = s.method;
		return "" + classname + "." + method;
	case 4:
		var v = s.v;
		return "@" + v;
	}
};
var stx__$Show_BoolShow = function() { };
$hxClasses["stx._Show.BoolShow"] = stx__$Show_BoolShow;
stx__$Show_BoolShow.__name__ = "stx._Show.BoolShow";
stx__$Show_BoolShow.toString = function(v) {
	if(v) {
		return "true";
	} else {
		return "false";
	}
};
var stx_Stream = {};
stx_Stream._new = function(self) {
	var this1 = self;
	return this1;
};
stx_Stream.lift = function(self) {
	return stx_Stream._new(self);
};
stx_Stream.fromArray = function(self) {
	var f = stx_nano_ChunkSum.Val;
	var result = new Array(self.length);
	var _g = 0;
	var _g1 = self.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = f(self[i]);
	}
	return stx_Stream.lift(stx_nano_Signal.fromArray(stx_lift_ArrayLift.snoc(result,stx_nano_ChunkSum.End())));
};
stx_Stream.fromCluster = function(self) {
	return stx_Stream.lift(stx_nano_Signal.fromArray(stx_nano_Cluster.prj(stx_nano_ClusterLift.snoc(stx_nano_ClusterLift.map(self,stx_nano_ChunkSum.Val),stx_nano_ChunkSum.End()))));
};
stx_Stream.fromFuture = function(self) {
	var self1 = function() {
		return self;
	};
	return stx_Stream.lift(stx_nano_Signal.make(function(cb) {
		return self1().handle(function(x) {
			cb(stx_nano_ChunkSum.Val(x));
			cb(stx_nano_ChunkSum.End());
		});
	}));
};
stx_Stream.window = function(this1,buffer) {
	return stx_Stream.lift(stx_stream_Window.toSignal(stx_stream_Window.make(this1,buffer)));
};
stx_Stream.fromThunkFuture = function(self) {
	return stx_Stream.lift(stx_nano_Signal.make(function(cb) {
		return self().handle(function(x) {
			cb(stx_nano_ChunkSum.Val(x));
			cb(stx_nano_ChunkSum.End());
		});
	}));
};
stx_Stream.pure = function(self) {
	return stx_Stream.lift(stx_nano_Signal.make(function(cb) {
		cb(stx_nano_ChunkSum.Val(self));
		cb(stx_nano_ChunkSum.End());
		var this1 = new tink_core_SimpleLink(function() {
		});
		return this1;
	}));
};
stx_Stream.effect = function(self) {
	return stx_Stream.lift(stx_nano_Signal.make(function(cb) {
		self();
		cb(stx_nano_ChunkSum.End());
		var this1 = new tink_core_SimpleLink(function() {
		});
		return this1;
	}));
};
stx_Stream.unit = function() {
	return stx_Stream.lift(stx_nano_Signal.make(function(cb) {
		cb(stx_nano_ChunkSum.End());
		var this1 = new tink_core_SimpleLink(function() {
		});
		return this1;
	}));
};
stx_Stream.make = function(f,init) {
	var this1 = new tink_core__$Signal_Suspendable(f,init);
	return stx_Stream.lift(this1);
};
stx_Stream.map = function(this1,fn) {
	return stx_nano_Signal.map(this1,function(chunk) {
		return stx_nano_ChunkLift.map(chunk,fn);
	});
};
stx_Stream.prj = function(this1) {
	return this1;
};
stx_Stream.get_self = function(this1) {
	return stx_Stream.lift(this1);
};
var stx_StreamLift = function() { };
$hxClasses["stx.StreamLift"] = stx_StreamLift;
stx_StreamLift.__name__ = "stx.StreamLift";
stx_StreamLift.lift = function(self) {
	return stx_Stream.lift(self);
};
stx_StreamLift.seq = function(self,that) {
	var id = stx_nano_lift_LiftNano.uuid(stx_nano_Wildcard.__,"xxxx");
	var ended = false;
	return stx_StreamLift.lift(stx_nano_Signal.make(function(cb) {
		var cbII = null;
		var cbI = self.listen(function(chunk) {
			switch(chunk._hx_index) {
			case 0:
				var v = chunk.v;
				cb(stx_nano_ChunkSum.Val(v));
				break;
			case 1:
				break;
			case 2:
				var e = chunk.err;
				var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,e);
				switch(self._hx_index) {
				case 0:
					var t = self.v;
					cb(stx_nano_ChunkSum.End(t));
					break;
				case 1:
					cbII = that.listen(function(chunk) {
						switch(chunk._hx_index) {
						case 0:
							var v = chunk.v;
							if(!ended) {
								cb(stx_nano_ChunkSum.Val(v));
							} else {
								var cb1 = cb;
								var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/Stream.hx", lineNumber : 127, className : "stx.StreamLift", methodName : "seq"});
								cb1(stx_nano_ChunkSum.End(stx_fail_Refuse.make(haxe_ds_Option.Some(stx_fail_DeclineSum.INTERIOR(stx_nano_CTR.apply(function(_) {
									return stx_stream_core_Errors.e_end_called_twice(_);
								},stx_Nano.digests(stx_nano_Wildcard.__)))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1))));
							}
							break;
						case 1:
							break;
						case 2:
							var e = chunk.err;
							ended = true;
							cb(stx_nano_ChunkSum.End(e));
							break;
						}
					});
					break;
				}
				break;
			}
		});
		var this1 = new tink_core_SimpleLink(function() {
			var link = $iterator(stx_pico_OptionLift)(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,cbI));
			while(link.hasNext()) {
				var link1 = link.next();
				if(link1 != null) {
					link1.cancel();
				}
			}
			var link = $iterator(stx_pico_OptionLift)(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,cbII));
			while(link.hasNext()) {
				var link1 = link.next();
				if(link1 != null) {
					link1.cancel();
				}
			}
		});
		return this1;
	}));
};
stx_StreamLift.flat_map = function(self,fn) {
	var cancelled = false;
	var streams = [];
	var id = Math.random();
	var this1 = new tink_core__$Signal_Suspendable(function(cb) {
		var callbackI = null;
		var callback = self.listen(function(chunk) {
			switch(chunk._hx_index) {
			case 0:
				var v = chunk.v;
				var val = v;
				if(!cancelled) {
					var this1 = stx_stream_Logging.log(stx_nano_Wildcard.__);
					var fn1 = function(pos) {
						return pos.with_stamp(function(stamp) {
							return stamp.relevel(1);
						});
					};
					(function(value,pos) {
						this1(value,fn1(pos));
					})(new stx_log_EntryCtr().thunk(function() {
						return "" + Std.string(val);
					}),stx_log_LogPosition.fromPos({ fileName : "stx/Stream.hx", lineNumber : 172, className : "stx.StreamLift", methodName : "flat_map"}));
					streams.push(fn(val));
				}
				break;
			case 1:
				break;
			case 2:
				var e = chunk.err;
				var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,e);
				switch(self._hx_index) {
				case 0:
					var t = self.v;
					cancelled = true;
					streams = [];
					cb(stx_nano_ChunkSum.End(t));
					break;
				case 1:
					var self = stx_lift_ArrayLift.lfold1(streams,stx_StreamLift.seq);
					var v = stx_Stream.unit();
					var this2;
					if(self._hx_index == 0) {
						var v1 = self.v;
						this2 = v1;
					} else {
						this2 = v;
					}
					callbackI = this2.listen(function(chunk) {
						cb(chunk);
					});
					break;
				}
				break;
			}
		});
		var this1 = new tink_core_SimpleLink(function() {
			var link = $iterator(stx_pico_OptionLift)(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,callback));
			while(link.hasNext()) {
				var link1 = link.next();
				if(link1 != null) {
					link1.cancel();
				}
			}
			var link = $iterator(stx_pico_OptionLift)(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,callbackI));
			while(link.hasNext()) {
				var link1 = link.next();
				if(link1 != null) {
					link1.cancel();
				}
			}
		});
		return this1;
	},null);
	return stx_StreamLift.lift(this1);
};
stx_StreamLift.next = function(self) {
	return tink_core_Signal.nextTime(stx_Stream.prj(self));
};
stx_StreamLift.errata = function(self,fn) {
	return stx_StreamLift.lift(stx_nano_Signal.map(stx_Stream.prj(self),function(chk) {
		return stx_nano_ChunkLift.errata(chk,fn);
	}));
};
stx_StreamLift.errate = function(self,fn) {
	return stx_StreamLift.lift(stx_nano_Signal.map(stx_Stream.prj(self),function(chk) {
		return stx_nano_ChunkLift.errate(chk,fn);
	}));
};
var stx_System = function() { };
$hxClasses["stx.System"] = stx_System;
stx_System.__name__ = "stx.System";
stx_System.sys = function(wildcard) {
	return new stx_Module();
};
var stx_Module = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["stx.Module"] = stx_Module;
stx_Module.__name__ = "stx.Module";
stx_Module.__super__ = stx_pico_Clazz;
stx_Module.prototype = $extend(stx_pico_Clazz.prototype,{
	fs: function() {
		return new stx__$System_Fs();
	}
	,dir: function() {
		return new stx__$System_Dir();
	}
	,env: function(key) {
		return stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,process.env[key]);
	}
	,args: function() {
		return process.argv.slice(2);
	}
	,cwd: function() {
		return { get : function() {
			return haxe_io_Path.addTrailingSlash(process.cwd());
		}, put : function(str) {
			process.chdir(str);
		}};
	}
	,println: function(str) {
		process.stdout.write(Std.string(str));
		process.stdout.write("\n");
	}
	,print: function(str) {
		process.stdout.write(Std.string(str));
	}
	,exit: function(code) {
		process.exit(code);
	}
	,__class__: stx_Module
});
var stx__$System_Fs = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["stx._System.Fs"] = stx__$System_Fs;
stx__$System_Fs.__name__ = "stx._System.Fs";
stx__$System_Fs.__super__ = stx_pico_Clazz;
stx__$System_Fs.prototype = $extend(stx_pico_Clazz.prototype,{
	exists: function(str) {
		return sys_FileSystem.exists(str);
	}
	,get: function(str) {
		return js_node_Fs.readFileSync(str,{ encoding : "utf8"});
	}
	,set: function(key,val) {
		js_node_Fs.writeFileSync(key,val);
	}
	,__class__: stx__$System_Fs
});
var stx__$System_Dir = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["stx._System.Dir"] = stx__$System_Dir;
stx__$System_Dir.__name__ = "stx._System.Dir";
stx__$System_Dir.__super__ = stx_pico_Clazz;
stx__$System_Dir.prototype = $extend(stx_pico_Clazz.prototype,{
	put: function(path) {
		sys_FileSystem.createDirectory(path);
	}
	,__class__: stx__$System_Dir
});
var stx_Test = function() { };
$hxClasses["stx.Test"] = stx_Test;
stx_Test.__name__ = "stx.Test";
stx_Test.poke = function(wildcard,arr) {
	var this1 = stx_test_Logging.log(stx_nano_Wildcard.__);
	var fn = function(pos) {
		return pos.with_stamp(function(stamp) {
			return stamp.relevel(2);
		});
	};
	var _g = arr;
	var f = function(t) {
		return stx_nano_lift_LiftNano.definition(stx_nano_Wildcard.__,t);
	};
	var tmp = function() {
		var result = new Array(_g.length);
		var _g1 = 0;
		var _g2 = _g.length;
		while(_g1 < _g2) {
			var i = _g1++;
			result[i] = f(_g[i]);
		}
		return result;
	};
	(function(value,pos) {
		this1(value,fn(pos));
	})(new stx_log_EntryCtr().thunk(tmp),stx_log_LogPosition.fromPos({ fileName : "stx/Test.hx", lineNumber : 5, className : "stx.Test", methodName : "poke"}));
	var f1 = ($_=new stx_assert_Module({ fileName : "stx/Test.hx", lineNumber : 6, className : "stx.Test", methodName : "poke"}),$bind($_,$_.iz));
	var result = new Array(arr.length);
	var _g1 = 0;
	var _g2 = arr.length;
	while(_g1 < _g2) {
		var i = _g1++;
		result[i] = f1(arr[i]);
	}
	var self = stx_lift_ArrayLift.lfold1(result,($_=new stx_assert_Module({ fileName : "stx/Test.hx", lineNumber : 7, className : "stx.Test", methodName : "poke"}),$bind($_,$_.or)));
	var v = new stx_assert_Module({ fileName : "stx/Test.hx", lineNumber : 8, className : "stx.Test", methodName : "poke"}).never();
	var tmp;
	if(self._hx_index == 0) {
		var v1 = self.v;
		tmp = v1;
	} else {
		tmp = v;
	}
	return stx_assert_Predicate.check(tmp);
};
stx_Test.test = function(wildcard) {
	return new stx_test_Module();
};
stx_Test.explain = function(wildcard,val,ctr) {
	return new stx_Explain(val,ctr);
};
var stx_Explain = function(val,ctr) {
	this.val = val;
	var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,ctr);
	var tmp;
	if(self._hx_index == 0) {
		var v = self.v;
		tmp = v;
	} else {
		tmp = Std.string;
	}
	this.ctr = tmp;
};
$hxClasses["stx.Explain"] = stx_Explain;
stx_Explain.__name__ = "stx.Explain";
stx_Explain.prototype = {
	val: null
	,ctr: null
	,should: function() {
		return new stx_Explainers(this);
	}
	,match: function(sentence,args) {
		var arr = [this.ctr(this.val)];
		var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,args);
		var tmp;
		if(self._hx_index == 0) {
			var v = self.v;
			tmp = v;
		} else {
			tmp = [];
		}
		return new stx_Explained(sentence,arr.concat(tmp));
	}
	,__class__: stx_Explain
};
var stx_Explainers = function(explain) {
	this.explain = explain;
};
$hxClasses["stx.Explainers"] = stx_Explainers;
stx_Explainers.__name__ = "stx.Explainers";
stx_Explainers.prototype = {
	explain: null
	,go: function(rest,args) {
		return this.explain.match("%s should " + rest,args);
	}
	,be_like: function(v) {
		return this.go("be like %s.",[v]);
	}
	,be: function(v,words) {
		if(words == null) {
			words = "";
		}
		var s = words == "" ? "be %s" : "be " + words + " %s";
		return this.go("" + s,[v]);
	}
	,be_equal_to: function(v) {
		return this.go("be equal to %s",[v]);
	}
	,contain: function(v) {
		return this.go("contain %s",[v]);
	}
	,exist: function() {
		return this.go("should exist.");
	}
	,raises: function(e) {
		return this.go("raise error: %s",[e]);
	}
	,__class__: stx_Explainers
};
var stx_Explained = function(sentence,values) {
	this.sentence = sentence;
	this.values = values;
};
$hxClasses["stx.Explained"] = stx_Explained;
stx_Explained.__name__ = "stx.Explained";
stx_Explained.prototype = {
	sentence: null
	,values: null
	,toString: function() {
		var tmp = this.sentence;
		var _this = this.values;
		var result = new Array(_this.length);
		var _g = 0;
		var _g1 = _this.length;
		while(_g < _g1) {
			var i = _g++;
			result[i] = "" + _this[i];
		}
		return Printf.format(tmp,result);
	}
	,__class__: stx_Explained
};
var stx_assert_AssertionApi = function() { };
$hxClasses["stx.assert.AssertionApi"] = stx_assert_AssertionApi;
stx_assert_AssertionApi.__name__ = "stx.assert.AssertionApi";
stx_assert_AssertionApi.__isInterface__ = true;
stx_assert_AssertionApi.prototype = {
	comply: null
	,asAssertionApi: null
	,__class__: stx_assert_AssertionApi
};
var stx_assert_Assertion = {};
stx_assert_Assertion.bindI = function(this1,l) {
	return new stx_assert_predicate_term_AssertionPredicate(this1,l);
};
stx_assert_Assertion.equals = function(pos) {
	return new stx_assert_assertion_term_Equals(pos);
};
stx_assert_Assertion.alike = function(pos) {
	return new stx_assert_assertion_term_Alike(pos);
};
stx_assert_Assertion.gt = function(pos) {
	return new stx_assert_assertion_term_GreaterThan(pos);
};
stx_assert_Assertion.gt_eq = function(pos) {
	return new stx_assert_assertion_term_GreaterThanOrEquals(pos);
};
stx_assert_Assertion.lt = function(pos) {
	return new stx_assert_assertion_term_LessThan(pos);
};
stx_assert_Assertion.lt_eq = function(pos) {
	return new stx_assert_assertion_term_LessThanOrEquals(pos);
};
stx_assert_Assertion.Anon = function(fn) {
	return new stx_assert_assertion_term_Anon(fn,{ fileName : "stx/assert/Assertion.hx", lineNumber : 38, className : "stx.assert._Assertion.Assertion_Impl_", methodName : "Anon"});
};
stx_assert_Assertion.Errata = function(self,fn) {
	return new stx_assert_assertion_term_Errata(self.asAssertionApi(),fn,{ fileName : "stx/assert/Assertion.hx", lineNumber : 41, className : "stx.assert._Assertion.Assertion_Impl_", methodName : "Errata"});
};
var stx_assert_OrderableApi = function() { };
$hxClasses["stx.assert.OrderableApi"] = stx_assert_OrderableApi;
stx_assert_OrderableApi.__name__ = "stx.assert.OrderableApi";
stx_assert_OrderableApi.__isInterface__ = true;
stx_assert_OrderableApi.prototype = {
	lt: null
	,__class__: stx_assert_OrderableApi
};
var stx_assert_EqualableApi = function() { };
$hxClasses["stx.assert.EqualableApi"] = stx_assert_EqualableApi;
stx_assert_EqualableApi.__name__ = "stx.assert.EqualableApi";
stx_assert_EqualableApi.__isInterface__ = true;
stx_assert_EqualableApi.prototype = {
	eq: null
	,__class__: stx_assert_EqualableApi
};
var stx_assert_ComparableApi = function() { };
$hxClasses["stx.assert.ComparableApi"] = stx_assert_ComparableApi;
stx_assert_ComparableApi.__name__ = "stx.assert.ComparableApi";
stx_assert_ComparableApi.__isInterface__ = true;
stx_assert_ComparableApi.__interfaces__ = [stx_assert_OrderableApi,stx_assert_EqualableApi];
stx_assert_ComparableApi.prototype = {
	toComparable: null
	,__class__: stx_assert_ComparableApi
};
var stx_assert_ComparableCls = function() { };
$hxClasses["stx.assert.ComparableCls"] = stx_assert_ComparableCls;
stx_assert_ComparableCls.__name__ = "stx.assert.ComparableCls";
stx_assert_ComparableCls.__interfaces__ = [stx_assert_ComparableApi];
stx_assert_ComparableCls.prototype = {
	eq: null
	,lt: null
	,toComparable: function() {
		return this;
	}
	,__class__: stx_assert_ComparableCls
};
var stx_assert_Comparable = {};
stx_assert_Comparable._new = function(self) {
	var this1 = self;
	return this1;
};
stx_assert_Comparable.Register = function() {
	return new stx_assert_comparable_term_Register();
};
stx_assert_Comparable.Int = function() {
	return new stx_assert_comparable_term_Int();
};
stx_assert_Comparable.String = function() {
	return new stx_assert_comparable_term_String();
};
stx_assert_Comparable.Couple = function(l,r) {
	return new stx_assert_comparable_term_Couple(l,r);
};
stx_assert_Comparable.Primitive = function() {
	return new stx_assert_comparable_term_Primitive();
};
stx_assert_Comparable.Anon = function(eq,lt) {
	return new stx_assert_comparable_term_Anon(eq,lt);
};
stx_assert_Comparable.Cluster = function(inner) {
	return new stx_assert_comparable_term_Cluster(inner);
};
stx_assert_Comparable.Lazy = function(eq,lt) {
	return new stx_assert_comparable_term_Lazy(eq,lt);
};
stx_assert_Comparable.KV = function(K,V) {
	return new stx_assert_comparable_term_KV(K,V);
};
stx_assert_Comparable.copy = function(this1,eq,lt) {
	var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,eq);
	var v = this1.eq();
	var tmp;
	if(self._hx_index == 0) {
		var v1 = self.v;
		tmp = v1;
	} else {
		tmp = v;
	}
	var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,lt);
	var v = this1.lt();
	var tmp1;
	if(self._hx_index == 0) {
		var v1 = self.v;
		tmp1 = v1;
	} else {
		tmp1 = v;
	}
	return stx_assert_Comparable.Anon(tmp,tmp1);
};
stx_assert_Comparable.is_greater_or_equal = function(this1,self,that) {
	return stx_LiftIf.if_else(stx_assert_EqualedSum.is_equal(this1.eq().comply(self,that)),function() {
		return true;
	},function() {
		return stx_assert_OrderedLift.is_less_than(this1.lt().comply(that,self));
	});
};
var stx_assert_ComparativeSum = $hxEnums["stx.assert.ComparativeSum"] = { __ename__:"stx.assert.ComparativeSum",__constructs__:null
	,GT: {_hx_name:"GT",_hx_index:0,__enum__:"stx.assert.ComparativeSum",toString:$estr}
	,GTEQ: {_hx_name:"GTEQ",_hx_index:1,__enum__:"stx.assert.ComparativeSum",toString:$estr}
	,LT: {_hx_name:"LT",_hx_index:2,__enum__:"stx.assert.ComparativeSum",toString:$estr}
	,LTEQ: {_hx_name:"LTEQ",_hx_index:3,__enum__:"stx.assert.ComparativeSum",toString:$estr}
	,EQ: {_hx_name:"EQ",_hx_index:4,__enum__:"stx.assert.ComparativeSum",toString:$estr}
};
stx_assert_ComparativeSum.__constructs__ = [stx_assert_ComparativeSum.GT,stx_assert_ComparativeSum.GTEQ,stx_assert_ComparativeSum.LT,stx_assert_ComparativeSum.LTEQ,stx_assert_ComparativeSum.EQ];
var stx_assert_Comparative = {};
stx_assert_Comparative._new = function(self) {
	var this1 = self;
	return this1;
};
stx_assert_Comparative.toString = function(this1) {
	switch(this1._hx_index) {
	case 0:
		return ">";
	case 1:
		return ">=";
	case 2:
		return "<";
	case 3:
		return "<=";
	case 4:
		return "==";
	}
};
var stx_assert_Compare = {};
stx_assert_Compare._new = function(self) {
	var this1 = self;
	return this1;
};
stx_assert_Compare.pure = function(v) {
	return stx_assert__$Compare_CompareSum.Value(v);
};
stx_assert_Compare.and = function(this1,that) {
	return stx_assert__$Compare_CompareSum.And(this1,that);
};
stx_assert_Compare.or = function(this1,that) {
	return stx_assert__$Compare_CompareSum.Or(this1,that);
};
stx_assert_Compare.not = function(this1) {
	return stx_assert__$Compare_CompareSum.Not(this1);
};
stx_assert_Compare.gt = function(this1,that) {
	return stx_assert__$Compare_CompareSum.Binop(this1,stx_assert_ComparativeSum.GT,that);
};
stx_assert_Compare.gtEq = function(this1,that) {
	return stx_assert__$Compare_CompareSum.Binop(this1,stx_assert_ComparativeSum.GTEQ,that);
};
stx_assert_Compare.lt = function(this1,that) {
	return stx_assert__$Compare_CompareSum.Binop(this1,stx_assert_ComparativeSum.LT,that);
};
stx_assert_Compare.ltEq = function(this1,that) {
	return stx_assert__$Compare_CompareSum.Binop(this1,stx_assert_ComparativeSum.LTEQ,that);
};
stx_assert_Compare.eq = function(this1,that) {
	return stx_assert__$Compare_CompareSum.Binop(this1,stx_assert_ComparativeSum.EQ,that);
};
stx_assert_Compare.nEq = function(this1,that) {
	return stx_assert__$Compare_CompareSum.Not(stx_assert__$Compare_CompareSum.Binop(this1,stx_assert_ComparativeSum.GTEQ,that));
};
stx_assert_Compare.get_self = function(this1) {
	return this1;
};
var stx_assert__$Compare_CompareSum = $hxEnums["stx.assert._Compare.CompareSum"] = { __ename__:"stx.assert._Compare.CompareSum",__constructs__:null
	,Value: ($_=function(v) { return {_hx_index:0,v:v,__enum__:"stx.assert._Compare.CompareSum",toString:$estr}; },$_._hx_name="Value",$_.__params__ = ["v"],$_)
	,And: ($_=function(l,r) { return {_hx_index:1,l:l,r:r,__enum__:"stx.assert._Compare.CompareSum",toString:$estr}; },$_._hx_name="And",$_.__params__ = ["l","r"],$_)
	,Or: ($_=function(l,r) { return {_hx_index:2,l:l,r:r,__enum__:"stx.assert._Compare.CompareSum",toString:$estr}; },$_._hx_name="Or",$_.__params__ = ["l","r"],$_)
	,Not: ($_=function(e) { return {_hx_index:3,e:e,__enum__:"stx.assert._Compare.CompareSum",toString:$estr}; },$_._hx_name="Not",$_.__params__ = ["e"],$_)
	,Binop: ($_=function(l,op,r) { return {_hx_index:4,l:l,op:op,r:r,__enum__:"stx.assert._Compare.CompareSum",toString:$estr}; },$_._hx_name="Binop",$_.__params__ = ["l","op","r"],$_)
};
stx_assert__$Compare_CompareSum.__constructs__ = [stx_assert__$Compare_CompareSum.Value,stx_assert__$Compare_CompareSum.And,stx_assert__$Compare_CompareSum.Or,stx_assert__$Compare_CompareSum.Not,stx_assert__$Compare_CompareSum.Binop];
var stx_assert_EqApi = function() { };
$hxClasses["stx.assert.EqApi"] = stx_assert_EqApi;
stx_assert_EqApi.__name__ = "stx.assert.EqApi";
stx_assert_EqApi.__isInterface__ = true;
stx_assert_EqApi.prototype = {
	comply: null
	,__class__: stx_assert_EqApi
};
var stx_assert_EqCls = function() { };
$hxClasses["stx.assert.EqCls"] = stx_assert_EqCls;
stx_assert_EqCls.__name__ = "stx.assert.EqCls";
stx_assert_EqCls.__interfaces__ = [stx_assert_EqApi];
stx_assert_EqCls.prototype = {
	comply: null
	,__class__: stx_assert_EqCls
};
var stx_assert_EqCtr = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["stx.assert.EqCtr"] = stx_assert_EqCtr;
stx_assert_EqCtr.__name__ = "stx.assert.EqCtr";
stx_assert_EqCtr.__super__ = stx_pico_Clazz;
stx_assert_EqCtr.prototype = $extend(stx_pico_Clazz.prototype,{
	__class__: stx_assert_EqCtr
});
var stx_assert_Eq = {};
stx_assert_Eq._new = function(self) {
	var this1 = self;
	return this1;
};
stx_assert_Eq.lift = function(self) {
	var this1 = self;
	return this1;
};
stx_assert_Eq.toAssertion = function(this1,pos) {
	return new stx_assert_eq_term_EqAssertion(this1,pos);
};
stx_assert_Eq.Int = function() {
	return new stx_assert_eq_term_Int();
};
stx_assert_Eq.Int64 = function() {
	return new stx_assert_eq_term_Int64();
};
stx_assert_Eq.String = function() {
	return new stx_assert_eq_term_String();
};
stx_assert_Eq.Couple = function(l,r) {
	return new stx_assert_eq_term_Couple(l,r);
};
stx_assert_Eq.KV = function(l,r) {
	return new stx_assert_eq_term_KV(l,r);
};
stx_assert_Eq.Anon = function(fn) {
	return new stx_assert_eq_term_Anon(fn);
};
stx_assert_Eq.Noise = function() {
	var this1 = new stx_assert_eq_term_Noise();
	return this1;
};
stx_assert_Eq.Bool = function() {
	return stx_assert_Eq.Anon(function(l,r) {
		if(l == r) {
			return true;
		} else {
			return false;
		}
	});
};
stx_assert_Eq.Float = function() {
	return stx_assert_Eq.Anon(function(l,r) {
		if(l == r) {
			return true;
		} else {
			return false;
		}
	});
};
stx_assert_Eq.Array = function(inner) {
	return new stx_assert_eq_term_Array(inner);
};
stx_assert_Eq.Record = function(inner) {
	return new stx_assert_eq_term_Record(inner);
};
stx_assert_Eq.Cluster = function(inner) {
	return new stx_assert_eq_term_Cluster(inner);
};
stx_assert_Eq.Primitive = function() {
	return new stx_assert_eq_term_Primitive();
};
stx_assert_Eq.Option = function(inner) {
	return new stx_assert_eq_term_Option(inner);
};
stx_assert_Eq.EnumValueIndex = function() {
	return new stx_assert_eq_term_EnumValueIndex();
};
stx_assert_Eq.NullOr = function(inner) {
	return new stx_assert_eq_term_NullOr(inner);
};
stx_assert_Eq.Ident = function() {
	return new stx_assert_eq_term_Ident();
};
stx_assert_Eq.Register = function() {
	return new stx_assert_eq_term_Register();
};
stx_assert_Eq.Tup2 = function(l,r) {
	return new stx_assert_eq_term_Tup2(l,r);
};
var stx_assert_Equal = function() { };
$hxClasses["stx.assert.Equal"] = stx_assert_Equal;
stx_assert_Equal.__name__ = "stx.assert.Equal";
stx_assert_Equal.getEqualFor = function(v) {
	return stx_assert_Equal.getEqualForType(Type.typeof(v));
};
stx_assert_Equal.getEqualForType = function(v) {
	var tmp;
	switch(v._hx_index) {
	case 0:
		tmp = new stx_assert_eq_term_Null();
		break;
	case 1:
		tmp = new stx_assert_eq_term_Int();
		break;
	case 2:
		tmp = new stx_assert_eq_term_Float();
		break;
	case 3:
		tmp = new stx_assert_eq_term_Bool();
		break;
	case 4:
		tmp = new stx_assert_eq_term_Object();
		break;
	case 5:
		tmp = new stx_assert_eq_term_Function();
		break;
	case 6:
		var _g = v.c;
		var c = _g;
		if(c == haxe_ds_StringMap) {
			tmp = new stx_assert_eq_term_Map(new stx_assert_eq_term_Deferred());
		} else {
			var c = _g;
			if(c == stx_assert_eq_term_Array) {
				tmp = new stx_assert_eq_term_Array(new stx_assert_eq_term_Deferred());
			} else {
				var c = _g;
				if(c == stx_assert_eq_term_Date) {
					tmp = new stx_assert_eq_term_Date();
				} else {
					var c = _g;
					if(c == stx_assert_eq_term_String) {
						tmp = new stx_assert_eq_term_String();
					} else {
						var c = _g;
						tmp = HxOverrides.remove(Type.getInstanceFields(c),"equals") ? new stx_assert_eq_term_HasFunction().elide() : new stx_assert_eq_term_UnsupportedClass();
					}
				}
			}
		}
		break;
	case 7:
		var _g = v.e;
		tmp = new stx_assert_eq_term_Enum();
		break;
	case 8:
		tmp = new stx_assert_eq_term_Unknown();
		break;
	}
	return new stx_assert_eq_term_NotNull(tmp);
};
var stx_assert_Equalable = {};
stx_assert_Equalable._new = function(self) {
	var this1 = self;
	return this1;
};
var stx_assert_EqualedSum = {};
stx_assert_EqualedSum.is_ok = function(this1) {
	return this1;
};
stx_assert_EqualedSum.is_equal = function(this1) {
	return this1;
};
stx_assert_EqualedSum.are_equal = function(this1) {
	return this1;
};
stx_assert_EqualedSum.is_not_equal = function(this1) {
	return !this1;
};
stx_assert_EqualedSum.and = function(this1,that) {
	return stx_assert_Equaled.fromBool(this1 && stx_assert_EqualedSum.is_ok(that));
};
var stx_assert_Equaled = {};
stx_assert_Equaled.fromBool = function(b) {
	if(b) {
		return stx_assert_Equaled.AreEqual;
	} else {
		return stx_assert_Equaled.NotEqual;
	}
};
stx_assert_Equaled.and = function(this1,that) {
	return stx_assert_Equaled.fromBool(stx_assert_Equaled.toBool(this1) && stx_assert_Equaled.toBool(that));
};
stx_assert_Equaled.toBool = function(this1) {
	if(this1) {
		return true;
	} else {
		return false;
	}
};
stx_assert_Equaled.or = function(this1,that) {
	return stx_assert_Equaled.fromBool(stx_assert_Equaled.toBool(this1) || stx_assert_Equaled.toBool(that));
};
stx_assert_Equaled.not = function(this1) {
	if(this1) {
		return false;
	} else {
		return true;
	}
};
var stx_assert_OrdApi = function() { };
$hxClasses["stx.assert.OrdApi"] = stx_assert_OrdApi;
stx_assert_OrdApi.__name__ = "stx.assert.OrdApi";
stx_assert_OrdApi.__isInterface__ = true;
stx_assert_OrdApi.prototype = {
	comply: null
	,toOrdApi: null
	,__class__: stx_assert_OrdApi
};
var stx_assert_OrdCls = function() { };
$hxClasses["stx.assert.OrdCls"] = stx_assert_OrdCls;
stx_assert_OrdCls.__name__ = "stx.assert.OrdCls";
stx_assert_OrdCls.__interfaces__ = [stx_assert_OrdApi];
stx_assert_OrdCls.prototype = {
	comply: null
	,toOrdApi: function() {
		return this;
	}
	,__class__: stx_assert_OrdCls
};
var stx_assert_Ord = {};
stx_assert_Ord._new = function(self) {
	var this1 = self;
	return this1;
};
stx_assert_Ord.lift = function(self) {
	var this1 = self;
	return this1;
};
stx_assert_Ord.toAssertion = function(this1) {
	return new stx_assert_ord_term_OrdAssertion(this1,{ fileName : "stx/assert/Ord.hx", lineNumber : 37, className : "stx.assert._Ord.Ord_Impl_", methodName : "toAssertion"}).asAssertionApi();
};
stx_assert_Ord.Int = function() {
	return new stx_assert_ord_term_Int();
};
stx_assert_Ord.Int64 = function() {
	return new stx_assert_ord_term_Int64();
};
stx_assert_Ord.Float = function() {
	return new stx_assert_ord_term_Float();
};
stx_assert_Ord.String = function() {
	return new stx_assert_ord_term_String();
};
stx_assert_Ord.Couple = function(l,r) {
	return new stx_assert_ord_term_Couple(l,r);
};
stx_assert_Ord.KV = function(l,r) {
	return new stx_assert_ord_term_KV(l,r);
};
stx_assert_Ord.Anon = function(fn) {
	return new stx_assert_ord_term_Anon(fn);
};
stx_assert_Ord.Bool = function() {
	return stx_assert_Ord.Anon(function(lhs,rhs) {
		if(lhs == rhs) {
			return false;
		} else if(lhs == false) {
			return true;
		} else {
			return false;
		}
	});
};
stx_assert_Ord.Primitive = function() {
	return new stx_assert_ord_term_Primitive();
};
stx_assert_Ord.Array = function(inner) {
	return new stx_assert_ord_term_Array(inner);
};
stx_assert_Ord.Record = function(inner) {
	return new stx_assert_ord_term_Record(inner);
};
stx_assert_Ord.Cluster = function(inner) {
	return new stx_assert_ord_term_Cluster(inner);
};
stx_assert_Ord.Option = function(inner) {
	return new stx_assert_ord_term_Option(inner);
};
stx_assert_Ord.NullOr = function(inner) {
	return new stx_assert_ord_term_NullOr(inner).toOrdApi();
};
stx_assert_Ord.EnumValueIndex = function() {
	return new stx_assert_ord_term_EnumValueIndex();
};
stx_assert_Ord.Ident = function() {
	return new stx_assert_ord_term_Ident();
};
stx_assert_Ord.Register = function() {
	return new stx_assert_ord_term_Register();
};
stx_assert_Ord.Exists = function() {
	return new stx_assert_ord_term_Exists();
};
var stx_assert_Orderable = {};
stx_assert_Orderable._new = function(self) {
	var this1 = self;
	return this1;
};
stx_assert_Orderable.Anon = function(self) {
	return new stx_assert_orderable_term_Anon(stx_assert_Ord.Anon(self));
};
var stx_assert_OrderedSum = {};
stx_assert_OrderedSum.is_ok = function(this1) {
	return this1;
};
var stx_assert_Ordered = {};
stx_assert_Ordered._new = function(self) {
	var this1 = self;
	return this1;
};
stx_assert_Ordered.fromBool = function(b) {
	if(b) {
		return true;
	} else {
		return false;
	}
};
stx_assert_Ordered.toBool = function(this1) {
	if(this1) {
		return true;
	} else {
		return false;
	}
};
stx_assert_Ordered.or = function(this1,that) {
	return stx_assert_Ordered.fromBool(stx_assert_Ordered.toBool(this1) || stx_assert_Ordered.toBool(that));
};
stx_assert_Ordered.not = function(this1) {
	if(this1) {
		return false;
	} else {
		return true;
	}
};
stx_assert_Ordered.and = function(this1,that) {
	return stx_assert_Ordered.fromBool(stx_assert_Ordered.toBool(this1) && stx_assert_Ordered.toBool(that));
};
var stx_assert_OrderedLift = function() { };
$hxClasses["stx.assert.OrderedLift"] = stx_assert_OrderedLift;
stx_assert_OrderedLift.__name__ = "stx.assert.OrderedLift";
stx_assert_OrderedLift.is_not_less_than = function(self) {
	if(self == false) {
		return true;
	} else {
		return false;
	}
};
stx_assert_OrderedLift.is_less_than = function(self) {
	if(self == false) {
		return false;
	} else {
		return true;
	}
};
var stx_assert_PartialOrdered = {};
stx_assert_PartialOrdered._new = function(self) {
	var this1 = self;
	return this1;
};
stx_assert_PartialOrdered.lift = function(self) {
	return stx_assert_PartialOrdered._new(self);
};
stx_assert_PartialOrdered.unorderable = function() {
	return stx_assert_PartialOrdered.lift(null);
};
stx_assert_PartialOrdered.prj = function(this1) {
	return this1;
};
stx_assert_PartialOrdered.get_self = function(this1) {
	return stx_assert_PartialOrdered.lift(this1);
};
var stx_assert_PartialOrdApi = function() { };
$hxClasses["stx.assert.PartialOrdApi"] = stx_assert_PartialOrdApi;
stx_assert_PartialOrdApi.__name__ = "stx.assert.PartialOrdApi";
stx_assert_PartialOrdApi.__isInterface__ = true;
stx_assert_PartialOrdApi.prototype = {
	comply: null
	,__class__: stx_assert_PartialOrdApi
};
var stx_assert_PartialOrderableApi = function() { };
$hxClasses["stx.assert.PartialOrderableApi"] = stx_assert_PartialOrderableApi;
stx_assert_PartialOrderableApi.__name__ = "stx.assert.PartialOrderableApi";
stx_assert_PartialOrderableApi.__isInterface__ = true;
stx_assert_PartialOrderableApi.prototype = {
	lt: null
	,__class__: stx_assert_PartialOrderableApi
};
var stx_assert_PartialComparableApi = function() { };
$hxClasses["stx.assert.PartialComparableApi"] = stx_assert_PartialComparableApi;
stx_assert_PartialComparableApi.__name__ = "stx.assert.PartialComparableApi";
stx_assert_PartialComparableApi.__isInterface__ = true;
stx_assert_PartialComparableApi.__interfaces__ = [stx_assert_PartialOrderableApi,stx_assert_EqualableApi];
var stx_assert_PredicateLift = function() { };
$hxClasses["stx.assert.PredicateLift"] = stx_assert_PredicateLift;
stx_assert_PredicateLift.__name__ = "stx.assert.PredicateLift";
stx_assert_PredicateLift.ands = function(self,rest) {
	return Lambda.fold(rest,function(next,memo) {
		return new stx_assert_predicate_term_And(memo,next,{ fileName : "stx/assert/Predicate.hx", lineNumber : 78, className : "stx.assert.PredicateLift", methodName : "ands"});
	},self);
};
stx_assert_PredicateLift.ors = function(self,rest) {
	return Lambda.fold(rest,function(next,memo) {
		return new stx_assert_predicate_term_Or(memo,next,{ fileName : "stx/assert/Predicate.hx", lineNumber : 87, className : "stx.assert.PredicateLift", methodName : "ors"});
	},self);
};
stx_assert_PredicateLift.and = function(self,that) {
	return new stx_assert_predicate_term_And(self,that,{ fileName : "stx/assert/Predicate.hx", lineNumber : 95, className : "stx.assert.PredicateLift", methodName : "and"});
};
stx_assert_PredicateLift.or = function(self,that) {
	return new stx_assert_predicate_term_Or(self,that,{ fileName : "stx/assert/Predicate.hx", lineNumber : 102, className : "stx.assert.PredicateLift", methodName : "or"});
};
stx_assert_PredicateLift.xor = function(self,that) {
	return new stx_assert_predicate_term_XOr(self,that,{ fileName : "stx/assert/Predicate.hx", lineNumber : 108, className : "stx.assert.PredicateLift", methodName : "xor"});
};
stx_assert_PredicateLift.not = function(self) {
	return new stx_assert_predicate_term_Not(self,{ fileName : "stx/assert/Predicate.hx", lineNumber : 114, className : "stx.assert.PredicateLift", methodName : "not"});
};
stx_assert_PredicateLift.errata = function(self,fn) {
	return new stx_assert_predicate_term_Transform(self,fn,{ fileName : "stx/assert/Predicate.hx", lineNumber : 118, className : "stx.assert.PredicateLift", methodName : "errata"});
};
stx_assert_PredicateLift.errate = function(self,fn) {
	return stx_assert_PredicateLift.errata(self,function(err) {
		return stx_fail_Refuse.errate(err,fn);
	});
};
stx_assert_PredicateLift.map_i = function(self,fn) {
	return stx_assert_Predicate.Anon(function(v) {
		return self.apply(fn(v));
	});
};
var stx_assert_Predicate = {};
stx_assert_Predicate._new = function(v) {
	var this1 = v;
	return this1;
};
stx_assert_Predicate.Natural = function(method,pos) {
	return new stx_assert_predicate_term_Natural(method,pos);
};
stx_assert_Predicate.NaturalReport = function(method,e,pos) {
	return new stx_assert_predicate_term_NaturalReport(method,e,pos);
};
stx_assert_Predicate.Anon = function(method) {
	return new stx_assert_predicate_term_Anon(method);
};
stx_assert_Predicate.unit = function() {
	return new stx_assert_predicate_term_Always({ fileName : "stx/assert/Predicate.hx", lineNumber : 25, className : "stx.assert._Predicate.Predicate_Impl_", methodName : "unit"});
};
stx_assert_Predicate.always = function(pos) {
	return new stx_assert_predicate_term_Always({ fileName : "stx/assert/Predicate.hx", lineNumber : 29, className : "stx.assert._Predicate.Predicate_Impl_", methodName : "always"});
};
stx_assert_Predicate.never = function(pos) {
	return new stx_assert_predicate_term_Never(pos);
};
stx_assert_Predicate.iz = function(pos,clazz) {
	return new stx_assert_predicate_term_Is(clazz,pos);
};
stx_assert_Predicate.throws = function(pos) {
	return new stx_assert_predicate_term_Throws(pos);
};
stx_assert_Predicate.void = function(pos) {
	return new stx_assert_predicate_term_Void(pos);
};
stx_assert_Predicate.exists = function(pos) {
	return new stx_assert_predicate_term_Exists(pos);
};
stx_assert_Predicate.matches = function(pos,reg,opt) {
	return new stx_assert_predicate_term_Matches(pos,reg,opt,{ fileName : "stx/assert/Predicate.hx", lineNumber : 47, className : "stx.assert._Predicate.Predicate_Impl_", methodName : "matches"});
};
stx_assert_Predicate.ordef = function(this1,l,r) {
	if(stx_nano_ReportLift.is_defined(this1.apply(l))) {
		return r;
	} else {
		return l;
	}
};
stx_assert_Predicate.fudge = function(this1,v) {
	var self = this1.apply(v);
	if(self == null) {
		return v;
	} else {
		switch(self._hx_index) {
		case 0:
			var v1 = self.v;
			throw haxe_Exception.thrown(v1);
		case 1:
			return v;
		}
	}
};
stx_assert_Predicate.bindI = function(this1,v) {
	var _g = this1;
	var p = v;
	return function() {
		return _g.apply(p);
	};
};
stx_assert_Predicate.check = function(this1) {
	return function(x) {
		return this1.apply(x) == stx_nano_Report.fromStdOption(haxe_ds_Option.None);
	};
};
stx_assert_Predicate.crunch = function(this1,v) {
	var self = this1.apply(v);
	if(self != null) {
		switch(self._hx_index) {
		case 0:
			var v = self.v;
			throw haxe_Exception.thrown(v);
		case 1:
			break;
		}
	}
};
var stx_assert_assertion_term_Base = function(pos) {
	stx_pico_Clazz.call(this);
	this.pos = pos;
};
$hxClasses["stx.assert.assertion.term.Base"] = stx_assert_assertion_term_Base;
stx_assert_assertion_term_Base.__name__ = "stx.assert.assertion.term.Base";
stx_assert_assertion_term_Base.__interfaces__ = [stx_assert_AssertionApi];
stx_assert_assertion_term_Base.__super__ = stx_pico_Clazz;
stx_assert_assertion_term_Base.prototype = $extend(stx_pico_Clazz.prototype,{
	pos: null
	,comply: function(a,b) {
		return stx_nano_Report.unit();
	}
	,error: function(l,r,pos) {
		var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,pos);
		return stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_AssertFailure.PredicateFailed(js_Boot.getClass(this),l,r))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1));
	}
	,asAssertionApi: function() {
		return this;
	}
	,__class__: stx_assert_assertion_term_Base
});
var stx_assert_assertion_term_Alike = function(pos) {
	stx_assert_assertion_term_Base.call(this,pos);
};
$hxClasses["stx.assert.assertion.term.Alike"] = stx_assert_assertion_term_Alike;
stx_assert_assertion_term_Alike.__name__ = "stx.assert.assertion.term.Alike";
stx_assert_assertion_term_Alike.__super__ = stx_assert_assertion_term_Base;
stx_assert_assertion_term_Alike.prototype = $extend(stx_assert_assertion_term_Base.prototype,{
	comply: function(a,b) {
		return stx_LiftAssert.expect(a._hx_index == b._hx_index,this.error(null,null,{ fileName : "stx/assert/assertion/term/Alike.hx", lineNumber : 8, className : "stx.assert.assertion.term.Alike", methodName : "comply"}));
	}
	,__class__: stx_assert_assertion_term_Alike
});
var stx_assert_assertion_term_Anon = function(delegate,pos) {
	this.delegate = delegate;
	this.pos = pos;
};
$hxClasses["stx.assert.assertion.term.Anon"] = stx_assert_assertion_term_Anon;
stx_assert_assertion_term_Anon.__name__ = "stx.assert.assertion.term.Anon";
stx_assert_assertion_term_Anon.__interfaces__ = [stx_assert_AssertionApi];
stx_assert_assertion_term_Anon.prototype = {
	pos: null
	,delegate: function(a,b) {
		var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/assert/assertion/term/Anon.hx", lineNumber : 10, className : "stx.assert.assertion.term.Anon", methodName : "delegate"});
		return stx_nano_Report.pure(stx_fail_Refuse.make(haxe_ds_Option.Some(stx_fail_DeclineSum.INTERIOR(stx_nano_CTR.apply(function(_) {
			return stx_nano_Digests.e_unimplemented(_);
		},stx_Nano.digests(stx_nano_Wildcard.__)))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1)));
	}
	,comply: function(a,b) {
		return this.delegate(a,b);
	}
	,asAssertionApi: function() {
		return this;
	}
	,__class__: stx_assert_assertion_term_Anon
};
var stx_assert_assertion_term_Equals = function(pos) {
	stx_assert_assertion_term_Base.call(this,pos);
};
$hxClasses["stx.assert.assertion.term.Equals"] = stx_assert_assertion_term_Equals;
stx_assert_assertion_term_Equals.__name__ = "stx.assert.assertion.term.Equals";
stx_assert_assertion_term_Equals.__super__ = stx_assert_assertion_term_Base;
stx_assert_assertion_term_Equals.prototype = $extend(stx_assert_assertion_term_Base.prototype,{
	comply: function(a,b) {
		return stx_LiftAssert.expect(a == b,this.error(null,null,{ fileName : "stx/assert/assertion/term/Equals.hx", lineNumber : 9, className : "stx.assert.assertion.term.Equals", methodName : "comply"}));
	}
	,__class__: stx_assert_assertion_term_Equals
});
var stx_assert_assertion_term_Errata = function(delegate,errata,pos) {
	this.delegate = delegate;
	this.errata = errata;
	this.pos = pos;
};
$hxClasses["stx.assert.assertion.term.Errata"] = stx_assert_assertion_term_Errata;
stx_assert_assertion_term_Errata.__name__ = "stx.assert.assertion.term.Errata";
stx_assert_assertion_term_Errata.__interfaces__ = [stx_assert_AssertionApi];
stx_assert_assertion_term_Errata.prototype = {
	delegate: null
	,errata: null
	,pos: null
	,comply: function(lhs,rhs) {
		return stx_nano_Report.errata(this.delegate.comply(lhs,rhs),this.errata);
	}
	,asAssertionApi: function() {
		return this;
	}
	,__class__: stx_assert_assertion_term_Errata
};
var stx_assert_assertion_term_GreaterThan = function(pos) {
	stx_assert_assertion_term_Base.call(this,pos);
};
$hxClasses["stx.assert.assertion.term.GreaterThan"] = stx_assert_assertion_term_GreaterThan;
stx_assert_assertion_term_GreaterThan.__name__ = "stx.assert.assertion.term.GreaterThan";
stx_assert_assertion_term_GreaterThan.__super__ = stx_assert_assertion_term_Base;
stx_assert_assertion_term_GreaterThan.prototype = $extend(stx_assert_assertion_term_Base.prototype,{
	comply: function(a,b) {
		var l = a;
		var r = b;
		return stx_LiftAssert.expect(l > r,this.error(null,null,{ fileName : "stx/assert/assertion/term/GreaterThan.hx", lineNumber : 11, className : "stx.assert.assertion.term.GreaterThan", methodName : "comply"}));
	}
	,__class__: stx_assert_assertion_term_GreaterThan
});
var stx_assert_assertion_term_GreaterThanOrEquals = function(pos) {
	stx_assert_assertion_term_Base.call(this,pos);
};
$hxClasses["stx.assert.assertion.term.GreaterThanOrEquals"] = stx_assert_assertion_term_GreaterThanOrEquals;
stx_assert_assertion_term_GreaterThanOrEquals.__name__ = "stx.assert.assertion.term.GreaterThanOrEquals";
stx_assert_assertion_term_GreaterThanOrEquals.__super__ = stx_assert_assertion_term_Base;
stx_assert_assertion_term_GreaterThanOrEquals.prototype = $extend(stx_assert_assertion_term_Base.prototype,{
	comply: function(a,b) {
		var l = a;
		var r = b;
		return stx_LiftAssert.expect(l >= r,this.error(null,null,{ fileName : "stx/assert/assertion/term/GreaterThanOrEquals.hx", lineNumber : 11, className : "stx.assert.assertion.term.GreaterThanOrEquals", methodName : "comply"}));
	}
	,__class__: stx_assert_assertion_term_GreaterThanOrEquals
});
var stx_assert_assertion_term_LessThan = function(pos) {
	stx_assert_assertion_term_Base.call(this,pos);
};
$hxClasses["stx.assert.assertion.term.LessThan"] = stx_assert_assertion_term_LessThan;
stx_assert_assertion_term_LessThan.__name__ = "stx.assert.assertion.term.LessThan";
stx_assert_assertion_term_LessThan.__super__ = stx_assert_assertion_term_Base;
stx_assert_assertion_term_LessThan.prototype = $extend(stx_assert_assertion_term_Base.prototype,{
	comply: function(a,b) {
		var l = a;
		var r = b;
		return stx_LiftAssert.expect(l < r,this.error(null,null,{ fileName : "stx/assert/assertion/term/LessThan.hx", lineNumber : 10, className : "stx.assert.assertion.term.LessThan", methodName : "comply"}));
	}
	,__class__: stx_assert_assertion_term_LessThan
});
var stx_assert_assertion_term_LessThanOrEquals = function(pos) {
	stx_assert_assertion_term_Base.call(this,pos);
};
$hxClasses["stx.assert.assertion.term.LessThanOrEquals"] = stx_assert_assertion_term_LessThanOrEquals;
stx_assert_assertion_term_LessThanOrEquals.__name__ = "stx.assert.assertion.term.LessThanOrEquals";
stx_assert_assertion_term_LessThanOrEquals.__super__ = stx_assert_assertion_term_Base;
stx_assert_assertion_term_LessThanOrEquals.prototype = $extend(stx_assert_assertion_term_Base.prototype,{
	comply: function(a,b) {
		var l = a;
		var r = b;
		return stx_LiftAssert.expect(l <= r,this.error(null,null,{ fileName : "stx/assert/assertion/term/LessThanOrEquals.hx", lineNumber : 10, className : "stx.assert.assertion.term.LessThanOrEquals", methodName : "comply"}));
	}
	,__class__: stx_assert_assertion_term_LessThanOrEquals
});
var stx_assert_comparable_term_Anon = function(_eq,_lt) {
	this._eq = _eq;
	this._lt = _lt;
};
$hxClasses["stx.assert.comparable.term.Anon"] = stx_assert_comparable_term_Anon;
stx_assert_comparable_term_Anon.__name__ = "stx.assert.comparable.term.Anon";
stx_assert_comparable_term_Anon.__super__ = stx_assert_ComparableCls;
stx_assert_comparable_term_Anon.prototype = $extend(stx_assert_ComparableCls.prototype,{
	_eq: null
	,_lt: null
	,eq: function() {
		return this._eq;
	}
	,lt: function() {
		return this._lt;
	}
	,__class__: stx_assert_comparable_term_Anon
});
var stx_assert_comparable_term_Base = function(_eq,_ord) {
	this._eq = _eq;
	this._lt = _ord;
};
$hxClasses["stx.assert.comparable.term.Base"] = stx_assert_comparable_term_Base;
stx_assert_comparable_term_Base.__name__ = "stx.assert.comparable.term.Base";
stx_assert_comparable_term_Base.__super__ = stx_assert_ComparableCls;
stx_assert_comparable_term_Base.prototype = $extend(stx_assert_ComparableCls.prototype,{
	_eq: null
	,_lt: null
	,eq: function() {
		return this._eq;
	}
	,lt: function() {
		return this._lt;
	}
	,__class__: stx_assert_comparable_term_Base
});
var stx_assert_comparable_term_Cluster = function(delegate) {
	this.delegate = delegate;
};
$hxClasses["stx.assert.comparable.term.Cluster"] = stx_assert_comparable_term_Cluster;
stx_assert_comparable_term_Cluster.__name__ = "stx.assert.comparable.term.Cluster";
stx_assert_comparable_term_Cluster.__super__ = stx_assert_ComparableCls;
stx_assert_comparable_term_Cluster.prototype = $extend(stx_assert_ComparableCls.prototype,{
	delegate: null
	,eq: function() {
		return stx_assert_Eq.Cluster(this.delegate.eq());
	}
	,lt: function() {
		return stx_assert_Ord.Cluster(this.delegate.lt());
	}
	,__class__: stx_assert_comparable_term_Cluster
});
var stx_assert_comparable_term_Couple = function(l,r) {
	this.l = l;
	this.r = r;
};
$hxClasses["stx.assert.comparable.term.Couple"] = stx_assert_comparable_term_Couple;
stx_assert_comparable_term_Couple.__name__ = "stx.assert.comparable.term.Couple";
stx_assert_comparable_term_Couple.__super__ = stx_assert_ComparableCls;
stx_assert_comparable_term_Couple.prototype = $extend(stx_assert_ComparableCls.prototype,{
	l: null
	,r: null
	,eq: function() {
		return stx_assert_Eq.Couple(this.l.eq(),this.r.eq());
	}
	,lt: function() {
		return stx_assert_Ord.Couple(this.l.lt(),this.r.lt());
	}
	,__class__: stx_assert_comparable_term_Couple
});
var stx_assert_comparable_term_Int = function() {
};
$hxClasses["stx.assert.comparable.term.Int"] = stx_assert_comparable_term_Int;
stx_assert_comparable_term_Int.__name__ = "stx.assert.comparable.term.Int";
stx_assert_comparable_term_Int.__super__ = stx_assert_ComparableCls;
stx_assert_comparable_term_Int.prototype = $extend(stx_assert_ComparableCls.prototype,{
	eq: function() {
		return stx_assert_Eq.Int();
	}
	,lt: function() {
		return stx_assert_Ord.Int();
	}
	,__class__: stx_assert_comparable_term_Int
});
var stx_assert_comparable_term_KV = function(l,r) {
	this.l = l;
	this.r = r;
};
$hxClasses["stx.assert.comparable.term.KV"] = stx_assert_comparable_term_KV;
stx_assert_comparable_term_KV.__name__ = "stx.assert.comparable.term.KV";
stx_assert_comparable_term_KV.__super__ = stx_assert_ComparableCls;
stx_assert_comparable_term_KV.prototype = $extend(stx_assert_ComparableCls.prototype,{
	l: null
	,r: null
	,eq: function() {
		return stx_assert_Eq.KV(this.l.eq(),this.r.eq());
	}
	,lt: function() {
		return stx_assert_Ord.KV(this.l.lt(),this.r.lt());
	}
	,__class__: stx_assert_comparable_term_KV
});
var stx_assert_comparable_term_Lazy = function(_eq,_lt) {
	this._eq = _eq;
	this._lt = _lt;
};
$hxClasses["stx.assert.comparable.term.Lazy"] = stx_assert_comparable_term_Lazy;
stx_assert_comparable_term_Lazy.__name__ = "stx.assert.comparable.term.Lazy";
stx_assert_comparable_term_Lazy.__super__ = stx_assert_ComparableCls;
stx_assert_comparable_term_Lazy.prototype = $extend(stx_assert_ComparableCls.prototype,{
	_eq: null
	,_lt: null
	,eq: function() {
		return this._eq;
	}
	,lt: function() {
		return this._lt;
	}
	,__class__: stx_assert_comparable_term_Lazy
});
var stx_assert_comparable_term_Primitive = function() {
};
$hxClasses["stx.assert.comparable.term.Primitive"] = stx_assert_comparable_term_Primitive;
stx_assert_comparable_term_Primitive.__name__ = "stx.assert.comparable.term.Primitive";
stx_assert_comparable_term_Primitive.__super__ = stx_assert_ComparableCls;
stx_assert_comparable_term_Primitive.prototype = $extend(stx_assert_ComparableCls.prototype,{
	eq: function() {
		return stx_assert_Eq.Primitive();
	}
	,lt: function() {
		return stx_assert_Ord.Primitive();
	}
	,__class__: stx_assert_comparable_term_Primitive
});
var stx_assert_comparable_term_Register = function() {
};
$hxClasses["stx.assert.comparable.term.Register"] = stx_assert_comparable_term_Register;
stx_assert_comparable_term_Register.__name__ = "stx.assert.comparable.term.Register";
stx_assert_comparable_term_Register.__super__ = stx_assert_ComparableCls;
stx_assert_comparable_term_Register.prototype = $extend(stx_assert_ComparableCls.prototype,{
	eq: function() {
		return stx_assert_Eq.Register();
	}
	,lt: function() {
		return stx_assert_Ord.Register();
	}
	,__class__: stx_assert_comparable_term_Register
});
var stx_assert_comparable_term_String = function() {
};
$hxClasses["stx.assert.comparable.term.String"] = stx_assert_comparable_term_String;
stx_assert_comparable_term_String.__name__ = "stx.assert.comparable.term.String";
stx_assert_comparable_term_String.__super__ = stx_assert_ComparableCls;
stx_assert_comparable_term_String.prototype = $extend(stx_assert_ComparableCls.prototype,{
	eq: function() {
		return stx_assert_Eq.String();
	}
	,lt: function() {
		return stx_assert_Ord.String();
	}
	,__class__: stx_assert_comparable_term_String
});
var stx_assert_eq_term_Anon = function(self) {
	this.delegate = self;
};
$hxClasses["stx.assert.eq.term.Anon"] = stx_assert_eq_term_Anon;
stx_assert_eq_term_Anon.__name__ = "stx.assert.eq.term.Anon";
stx_assert_eq_term_Anon.__interfaces__ = [stx_assert_EqApi];
stx_assert_eq_term_Anon.prototype = {
	delegate: null
	,comply: function(lhs,rhs) {
		return this.delegate(lhs,rhs);
	}
	,__class__: stx_assert_eq_term_Anon
};
var stx_assert_eq_term_Array = function(inner) {
	this.inner = inner;
};
$hxClasses["stx.assert.eq.term.Array"] = stx_assert_eq_term_Array;
stx_assert_eq_term_Array.__name__ = "stx.assert.eq.term.Array";
stx_assert_eq_term_Array.__interfaces__ = [stx_assert_EqApi];
stx_assert_eq_term_Array.prototype = {
	inner: null
	,comply: function(a,b) {
		var ok = true;
		if(a.length != b.length) {
			return false;
		}
		var _g = 0;
		var _g1 = a.length - 1;
		while(_g < _g1) {
			var i = _g++;
			var lhs = a[i];
			var rhs = b[i];
			ok = this.inner.comply(lhs,rhs);
			if(!stx_assert_EqualedSum.is_ok(ok)) {
				break;
			}
		}
		return ok;
	}
	,__class__: stx_assert_eq_term_Array
};
var stx_assert_eq_term_Bool = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["stx.assert.eq.term.Bool"] = stx_assert_eq_term_Bool;
stx_assert_eq_term_Bool.__name__ = "stx.assert.eq.term.Bool";
stx_assert_eq_term_Bool.__interfaces__ = [stx_assert_EqApi];
stx_assert_eq_term_Bool.__super__ = stx_pico_Clazz;
stx_assert_eq_term_Bool.prototype = $extend(stx_pico_Clazz.prototype,{
	comply: function(a,b) {
		if(a == b) {
			return true;
		} else {
			return false;
		}
	}
	,__class__: stx_assert_eq_term_Bool
});
var stx_assert_eq_term_Cluster = function(inner) {
	this.inner = inner;
};
$hxClasses["stx.assert.eq.term.Cluster"] = stx_assert_eq_term_Cluster;
stx_assert_eq_term_Cluster.__name__ = "stx.assert.eq.term.Cluster";
stx_assert_eq_term_Cluster.__interfaces__ = [stx_assert_EqApi];
stx_assert_eq_term_Cluster.prototype = {
	inner: null
	,comply: function(lhs,rhs) {
		if(stx_nano_Cluster.get_length(lhs) != stx_nano_Cluster.get_length(rhs)) {
			return false;
		} else {
			var same = true;
			var _g = 0;
			var _g1 = stx_nano_Cluster.get_length(lhs);
			while(_g < _g1) {
				var i = _g++;
				same = this.inner.comply(lhs[i],rhs[i]);
				if(!stx_assert_EqualedSum.is_ok(same)) {
					break;
				}
			}
			return same;
		}
	}
	,__class__: stx_assert_eq_term_Cluster
};
var stx_assert_eq_term_Couple = function(l,r) {
	this.l = l;
	this.r = r;
};
$hxClasses["stx.assert.eq.term.Couple"] = stx_assert_eq_term_Couple;
stx_assert_eq_term_Couple.__name__ = "stx.assert.eq.term.Couple";
stx_assert_eq_term_Couple.__interfaces__ = [stx_assert_EqApi];
stx_assert_eq_term_Couple.prototype = {
	l: null
	,r: null
	,comply: function(a,b) {
		var _gthis = this;
		return stx_nano_CoupleLift.decouple(a,function(l0,r0) {
			return stx_nano_CoupleLift.decouple(b,function(l1,r1) {
				return stx_assert_Equaled.and(_gthis.l.comply(l0,l1),_gthis.r.comply(r0,r1));
			});
		});
	}
	,__class__: stx_assert_eq_term_Couple
};
var stx_assert_eq_term_Date = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["stx.assert.eq.term.Date"] = stx_assert_eq_term_Date;
stx_assert_eq_term_Date.__name__ = "stx.assert.eq.term.Date";
stx_assert_eq_term_Date.__interfaces__ = [stx_assert_EqApi];
stx_assert_eq_term_Date.__super__ = stx_pico_Clazz;
stx_assert_eq_term_Date.prototype = $extend(stx_pico_Clazz.prototype,{
	comply: function(a,b) {
		if(a.getTime() == b.getTime()) {
			return true;
		} else {
			return false;
		}
	}
	,__class__: stx_assert_eq_term_Date
});
var stx_assert_eq_term_Deferred = function() {
};
$hxClasses["stx.assert.eq.term.Deferred"] = stx_assert_eq_term_Deferred;
stx_assert_eq_term_Deferred.__name__ = "stx.assert.eq.term.Deferred";
stx_assert_eq_term_Deferred.__interfaces__ = [stx_assert_EqApi];
stx_assert_eq_term_Deferred.prototype = {
	eq: null
	,comply: function(a,b) {
		if(this.eq == null) {
			if(a == null) {
				this.eq = stx_assert_Equal.getEqualFor(a);
			} else {
				this.eq = stx_assert_Equal.getEqualFor(b);
			}
		}
		return this.eq.comply(a,b);
	}
	,__class__: stx_assert_eq_term_Deferred
};
var stx_assert_eq_term_Enum = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["stx.assert.eq.term.Enum"] = stx_assert_eq_term_Enum;
stx_assert_eq_term_Enum.__name__ = "stx.assert.eq.term.Enum";
stx_assert_eq_term_Enum.__interfaces__ = [stx_assert_EqApi];
stx_assert_eq_term_Enum.__super__ = stx_pico_Clazz;
stx_assert_eq_term_Enum.prototype = $extend(stx_pico_Clazz.prototype,{
	comply: function(a,b) {
		if(0 != a._hx_index - b._hx_index) {
			return false;
		} else {
			var pa = Type.enumParameters(a);
			var pb = Type.enumParameters(b);
			var b = true;
			var _g = 0;
			var _g1 = pa.length;
			while(_g < _g1) {
				var i = _g++;
				if(!stx_assert_EqualedSum.is_ok(stx_assert_Equal.getEqualFor(pa[i]).comply(a[i],pb[i]))) {
					b = false;
					break;
				}
			}
			return b;
		}
	}
	,__class__: stx_assert_eq_term_Enum
});
var stx_assert_eq_term_EnumValueIndex = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["stx.assert.eq.term.EnumValueIndex"] = stx_assert_eq_term_EnumValueIndex;
stx_assert_eq_term_EnumValueIndex.__name__ = "stx.assert.eq.term.EnumValueIndex";
stx_assert_eq_term_EnumValueIndex.__interfaces__ = [stx_assert_EqApi];
stx_assert_eq_term_EnumValueIndex.__super__ = stx_pico_Clazz;
stx_assert_eq_term_EnumValueIndex.prototype = $extend(stx_pico_Clazz.prototype,{
	comply: function(lhs,rhs) {
		var l = stx_LiftEnumValue.lift(lhs);
		var r = stx_LiftEnumValue.lift(rhs);
		if(stx_nano_EnumValue.get_index(l) == stx_nano_EnumValue.get_index(r)) {
			return true;
		} else {
			return false;
		}
	}
	,__class__: stx_assert_eq_term_EnumValueIndex
});
var stx_assert_eq_term_EqAssertion = function(eq,pos) {
	stx_assert_assertion_term_Base.call(this,pos);
	this.eq = eq;
};
$hxClasses["stx.assert.eq.term.EqAssertion"] = stx_assert_eq_term_EqAssertion;
stx_assert_eq_term_EqAssertion.__name__ = "stx.assert.eq.term.EqAssertion";
stx_assert_eq_term_EqAssertion.__super__ = stx_assert_assertion_term_Base;
stx_assert_eq_term_EqAssertion.prototype = $extend(stx_assert_assertion_term_Base.prototype,{
	eq: null
	,comply: function(a,b) {
		var tmp = stx_assert_Equaled.toBool(this.eq.comply(a,b));
		var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,this.pos);
		return stx_LiftAssert.expect(tmp,stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_AssertFailure.PredicateFailed(js_Boot.getClass(this),a,b))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1)));
	}
	,__class__: stx_assert_eq_term_EqAssertion
});
var stx_assert_eq_term_Float = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["stx.assert.eq.term.Float"] = stx_assert_eq_term_Float;
stx_assert_eq_term_Float.__name__ = "stx.assert.eq.term.Float";
stx_assert_eq_term_Float.__interfaces__ = [stx_assert_EqApi];
stx_assert_eq_term_Float.__super__ = stx_pico_Clazz;
stx_assert_eq_term_Float.prototype = $extend(stx_pico_Clazz.prototype,{
	comply: function(a,b) {
		if(a == b) {
			return true;
		} else {
			return false;
		}
	}
	,__class__: stx_assert_eq_term_Float
});
var stx_assert_eq_term_Function = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["stx.assert.eq.term.Function"] = stx_assert_eq_term_Function;
stx_assert_eq_term_Function.__name__ = "stx.assert.eq.term.Function";
stx_assert_eq_term_Function.__interfaces__ = [stx_assert_EqApi];
stx_assert_eq_term_Function.__super__ = stx_pico_Clazz;
stx_assert_eq_term_Function.prototype = $extend(stx_pico_Clazz.prototype,{
	comply: function(a,b) {
		if(a == b) {
			return true;
		} else {
			return false;
		}
	}
	,__class__: stx_assert_eq_term_Function
});
var stx_assert_eq_term_HasFunction = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["stx.assert.eq.term.HasFunction"] = stx_assert_eq_term_HasFunction;
stx_assert_eq_term_HasFunction.__name__ = "stx.assert.eq.term.HasFunction";
stx_assert_eq_term_HasFunction.__interfaces__ = [stx_assert_EqApi];
stx_assert_eq_term_HasFunction.__super__ = stx_pico_Clazz;
stx_assert_eq_term_HasFunction.prototype = $extend(stx_pico_Clazz.prototype,{
	comply: function(a,b) {
		if(a.equals(b)) {
			return true;
		} else {
			return false;
		}
	}
	,elide: function() {
		return this;
	}
	,__class__: stx_assert_eq_term_HasFunction
});
var stx_assert_eq_term_Ident = function() {
};
$hxClasses["stx.assert.eq.term.Ident"] = stx_assert_eq_term_Ident;
stx_assert_eq_term_Ident.__name__ = "stx.assert.eq.term.Ident";
stx_assert_eq_term_Ident.__super__ = stx_assert_EqCls;
stx_assert_eq_term_Ident.prototype = $extend(stx_assert_EqCls.prototype,{
	comply: function(lhs,rhs) {
		var eq = stx_assert_Eq.String().comply(lhs.name,rhs.name);
		if(stx_assert_EqualedSum.is_ok(eq)) {
			var _g = lhs.pack;
			var _g1 = rhs.pack;
			if(_g == null) {
				if(_g1 == null) {
					eq = true;
				} else {
					var x = _g1;
					var value = stx_nano_Cluster.toIterable(x);
					eq = (((value) instanceof Array) ? value : null).length <= 0 ? true : stx_assert_Eq.NullOr(stx_assert_Eq.Cluster(stx_assert_Eq.String())).comply(lhs.pack,rhs.pack);
				}
			} else if(_g1 == null) {
				var x = _g;
				var value = stx_nano_Cluster.toIterable(x);
				eq = (((value) instanceof Array) ? value : null).length <= 0 ? true : stx_assert_Eq.NullOr(stx_assert_Eq.Cluster(stx_assert_Eq.String())).comply(lhs.pack,rhs.pack);
			} else {
				eq = stx_assert_Eq.NullOr(stx_assert_Eq.Cluster(stx_assert_Eq.String())).comply(lhs.pack,rhs.pack);
			}
		}
		return eq;
	}
	,__class__: stx_assert_eq_term_Ident
});
var stx_assert_eq_term_Int = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["stx.assert.eq.term.Int"] = stx_assert_eq_term_Int;
stx_assert_eq_term_Int.__name__ = "stx.assert.eq.term.Int";
stx_assert_eq_term_Int.__interfaces__ = [stx_assert_EqApi];
stx_assert_eq_term_Int.__super__ = stx_pico_Clazz;
stx_assert_eq_term_Int.prototype = $extend(stx_pico_Clazz.prototype,{
	comply: function(a,b) {
		if(a == b) {
			return true;
		} else {
			return false;
		}
	}
	,__class__: stx_assert_eq_term_Int
});
var stx_assert_eq_term_Int64 = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["stx.assert.eq.term.Int64"] = stx_assert_eq_term_Int64;
stx_assert_eq_term_Int64.__name__ = "stx.assert.eq.term.Int64";
stx_assert_eq_term_Int64.__interfaces__ = [stx_assert_EqApi];
stx_assert_eq_term_Int64.__super__ = stx_pico_Clazz;
stx_assert_eq_term_Int64.prototype = $extend(stx_pico_Clazz.prototype,{
	comply: function(a,b) {
		if(a.high == b.high && a.low == b.low) {
			return true;
		} else {
			return false;
		}
	}
	,__class__: stx_assert_eq_term_Int64
});
var stx_assert_eq_term_KV = function(key,val) {
	this.key = key;
	this.val = val;
};
$hxClasses["stx.assert.eq.term.KV"] = stx_assert_eq_term_KV;
stx_assert_eq_term_KV.__name__ = "stx.assert.eq.term.KV";
stx_assert_eq_term_KV.__super__ = stx_assert_EqCls;
stx_assert_eq_term_KV.prototype = $extend(stx_assert_EqCls.prototype,{
	key: null
	,val: null
	,comply: function(a,b) {
		var ord = this.key.comply(a.key,b.key);
		if(stx_assert_EqualedSum.is_equal(ord)) {
			ord = this.val.comply(a.val,b.val);
		}
		return ord;
	}
	,__class__: stx_assert_eq_term_KV
});
var stx_assert_eq_term_Map = function(eq) {
	this.eq = eq;
};
$hxClasses["stx.assert.eq.term.Map"] = stx_assert_eq_term_Map;
stx_assert_eq_term_Map.__name__ = "stx.assert.eq.term.Map";
stx_assert_eq_term_Map.__interfaces__ = [stx_assert_EqApi];
stx_assert_eq_term_Map.prototype = {
	eq: null
	,comply: function(a,b) {
		var ok = true;
		var _g = a.keyValueIterator();
		while(_g.hasNext()) {
			var _g1 = _g.next();
			var key = _g1.key;
			var val = _g1.value;
			if(!b.exists(key)) {
				break;
			}
			ok = stx_assert_Equaled.toBool(this.eq.comply(val,b.get(key)));
			if(!ok) {
				break;
			}
		}
		var _g = b.keyValueIterator();
		while(_g.hasNext()) {
			var _g1 = _g.next();
			var key = _g1.key;
			var val = _g1.value;
			if(!a.exists(key)) {
				break;
			}
		}
		if(ok) {
			return true;
		} else {
			return false;
		}
	}
	,__class__: stx_assert_eq_term_Map
};
var stx_assert_eq_term_Noise = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["stx.assert.eq.term.Noise"] = stx_assert_eq_term_Noise;
stx_assert_eq_term_Noise.__name__ = "stx.assert.eq.term.Noise";
stx_assert_eq_term_Noise.__interfaces__ = [stx_assert_EqApi];
stx_assert_eq_term_Noise.__super__ = stx_pico_Clazz;
stx_assert_eq_term_Noise.prototype = $extend(stx_pico_Clazz.prototype,{
	comply: function(a,b) {
		return stx_assert_Equaled.AreEqual;
	}
	,__class__: stx_assert_eq_term_Noise
});
var stx_assert_eq_term_NotNull = function(eq) {
	this.eq = eq;
};
$hxClasses["stx.assert.eq.term.NotNull"] = stx_assert_eq_term_NotNull;
stx_assert_eq_term_NotNull.__name__ = "stx.assert.eq.term.NotNull";
stx_assert_eq_term_NotNull.__interfaces__ = [stx_assert_EqApi];
stx_assert_eq_term_NotNull.prototype = {
	eq: null
	,comply: function(a,b) {
		if(a == null) {
			if(b == null) {
				return true;
			} else {
				return false;
			}
		} else if(b == null) {
			return false;
		} else {
			return this.eq.comply(a,b);
		}
	}
	,__class__: stx_assert_eq_term_NotNull
};
var stx_assert_eq_term_Null = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["stx.assert.eq.term.Null"] = stx_assert_eq_term_Null;
stx_assert_eq_term_Null.__name__ = "stx.assert.eq.term.Null";
stx_assert_eq_term_Null.__interfaces__ = [stx_assert_EqApi];
stx_assert_eq_term_Null.__super__ = stx_pico_Clazz;
stx_assert_eq_term_Null.prototype = $extend(stx_pico_Clazz.prototype,{
	comply: function(a,b) {
		if(a == null && b == null) {
			return true;
		} else {
			return false;
		}
	}
	,__class__: stx_assert_eq_term_Null
});
var stx_assert_eq_term_NullOr = function(inner) {
	this.inner = inner;
};
$hxClasses["stx.assert.eq.term.NullOr"] = stx_assert_eq_term_NullOr;
stx_assert_eq_term_NullOr.__name__ = "stx.assert.eq.term.NullOr";
stx_assert_eq_term_NullOr.__interfaces__ = [stx_assert_EqApi];
stx_assert_eq_term_NullOr.prototype = {
	inner: null
	,comply: function(lhs,rhs) {
		if(lhs == null && rhs == null) {
			return true;
		} else if(lhs == null || rhs == null) {
			return false;
		} else {
			return this.inner.comply(lhs,rhs);
		}
	}
	,__class__: stx_assert_eq_term_NullOr
};
var stx_assert_eq_term_Object = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["stx.assert.eq.term.Object"] = stx_assert_eq_term_Object;
stx_assert_eq_term_Object.__name__ = "stx.assert.eq.term.Object";
stx_assert_eq_term_Object.__interfaces__ = [stx_assert_EqApi];
stx_assert_eq_term_Object.__super__ = stx_pico_Clazz;
stx_assert_eq_term_Object.prototype = $extend(stx_pico_Clazz.prototype,{
	comply: function(a,b) {
		var o = true;
		var _g = 0;
		var _g1 = Reflect.fields(a);
		while(_g < _g1.length) {
			var key = _g1[_g];
			++_g;
			var va = Reflect.field(a,key);
			if(!stx_assert_EqualedSum.is_ok(stx_assert_Equal.getEqualFor(va).comply(va,Reflect.field(b,key)))) {
				o = false;
				break;
			}
		}
		return o;
	}
	,__class__: stx_assert_eq_term_Object
});
var stx_assert_eq_term_Option = function(eq) {
	this.eq = eq;
};
$hxClasses["stx.assert.eq.term.Option"] = stx_assert_eq_term_Option;
stx_assert_eq_term_Option.__name__ = "stx.assert.eq.term.Option";
stx_assert_eq_term_Option.__interfaces__ = [stx_assert_EqApi];
stx_assert_eq_term_Option.prototype = {
	eq: null
	,comply: function(a,b) {
		if(a._hx_index == 0) {
			if(b._hx_index == 0) {
				var r = b.v;
				var l = a.v;
				return this.eq.comply(l,r);
			} else {
				return stx_assert_Equaled.fromBool(false);
			}
		} else {
			return stx_assert_Equaled.fromBool(false);
		}
	}
	,__class__: stx_assert_eq_term_Option
};
var stx_assert_eq_term_Primitive = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["stx.assert.eq.term.Primitive"] = stx_assert_eq_term_Primitive;
stx_assert_eq_term_Primitive.__name__ = "stx.assert.eq.term.Primitive";
stx_assert_eq_term_Primitive.__interfaces__ = [stx_assert_EqApi];
stx_assert_eq_term_Primitive.__super__ = stx_pico_Clazz;
stx_assert_eq_term_Primitive.prototype = $extend(stx_pico_Clazz.prototype,{
	comply: function(lhs,rhs) {
		switch(lhs._hx_index) {
		case 0:
			if(rhs._hx_index == 0) {
				return true;
			} else if(lhs._hx_index == rhs._hx_index) {
				return true;
			} else {
				return false;
			}
			break;
		case 1:
			if(rhs._hx_index == 1) {
				var rhs1 = rhs.b;
				var lhs1 = lhs.b;
				return stx_assert_Eq.Bool().comply(lhs1,rhs1);
			} else if(lhs._hx_index == rhs._hx_index) {
				return true;
			} else {
				return false;
			}
			break;
		case 2:
			var _g = lhs.sprig;
			switch(_g._hx_index) {
			case 0:
				if(rhs._hx_index == 2) {
					var _g1 = rhs.sprig;
					if(_g1._hx_index == 0) {
						var rhs1 = _g1.str;
						var lhs1 = _g.str;
						return stx_assert_Eq.String().comply(lhs1,rhs1);
					} else if(lhs._hx_index == rhs._hx_index) {
						return true;
					} else {
						return false;
					}
				} else if(lhs._hx_index == rhs._hx_index) {
					return true;
				} else {
					return false;
				}
				break;
			case 1:
				var _g1 = _g.byte;
				switch(_g1._hx_index) {
				case 0:
					if(rhs._hx_index == 2) {
						var _g = rhs.sprig;
						if(_g._hx_index == 1) {
							var _g2 = _g.byte;
							if(_g2._hx_index == 0) {
								var rhs1 = _g2.int;
								var lhs1 = _g1.int;
								return stx_assert_Eq.Int().comply(lhs1,rhs1);
							} else if(lhs._hx_index == rhs._hx_index) {
								return true;
							} else {
								return false;
							}
						} else if(lhs._hx_index == rhs._hx_index) {
							return true;
						} else {
							return false;
						}
					} else if(lhs._hx_index == rhs._hx_index) {
						return true;
					} else {
						return false;
					}
					break;
				case 1:
					if(rhs._hx_index == 2) {
						var _g = rhs.sprig;
						if(_g._hx_index == 1) {
							var _g2 = _g.byte;
							if(_g2._hx_index == 1) {
								var rhs1 = _g2.int;
								var lhs1 = _g1.int;
								return stx_assert_Eq.Int64().comply(lhs1,rhs1);
							} else if(lhs._hx_index == rhs._hx_index) {
								return true;
							} else {
								return false;
							}
						} else if(lhs._hx_index == rhs._hx_index) {
							return true;
						} else {
							return false;
						}
					} else if(lhs._hx_index == rhs._hx_index) {
						return true;
					} else {
						return false;
					}
					break;
				case 2:
					if(rhs._hx_index == 2) {
						var _g = rhs.sprig;
						if(_g._hx_index == 1) {
							var _g2 = _g.byte;
							if(_g2._hx_index == 2) {
								var rhs1 = _g2.f;
								var lhs1 = _g1.f;
								return stx_assert_Eq.Float().comply(lhs1,rhs1);
							} else if(lhs._hx_index == rhs._hx_index) {
								return true;
							} else {
								return false;
							}
						} else if(lhs._hx_index == rhs._hx_index) {
							return true;
						} else {
							return false;
						}
					} else if(lhs._hx_index == rhs._hx_index) {
						return true;
					} else {
						return false;
					}
					break;
				}
				break;
			}
			break;
		}
	}
	,__class__: stx_assert_eq_term_Primitive
});
var stx_assert_eq_term_Record = function(inner) {
	stx_pico_Clazz.call(this);
	this.inner = inner;
};
$hxClasses["stx.assert.eq.term.Record"] = stx_assert_eq_term_Record;
stx_assert_eq_term_Record.__name__ = "stx.assert.eq.term.Record";
stx_assert_eq_term_Record.__interfaces__ = [stx_assert_EqApi];
stx_assert_eq_term_Record.__super__ = stx_pico_Clazz;
stx_assert_eq_term_Record.prototype = $extend(stx_pico_Clazz.prototype,{
	inner: null
	,comply: function(a,b) {
		var _gthis = this;
		return stx_assert_Eq.Cluster(stx_assert_Eq.Anon(function(lhs,rhs) {
			return stx_assert_Equaled.and(stx_assert_Eq.String().comply(stx_nano_KVLift.fst(lhs),stx_nano_KVLift.fst(rhs)),_gthis.inner.comply((stx_nano_KVLift.snd(lhs))(),(stx_nano_KVLift.snd(rhs))()));
		})).comply(stx_nano_Record.prj(a),stx_nano_Record.prj(b));
	}
	,__class__: stx_assert_eq_term_Record
});
var stx_assert_eq_term_Register = function() {
};
$hxClasses["stx.assert.eq.term.Register"] = stx_assert_eq_term_Register;
stx_assert_eq_term_Register.__name__ = "stx.assert.eq.term.Register";
stx_assert_eq_term_Register.__super__ = stx_assert_EqCls;
stx_assert_eq_term_Register.prototype = $extend(stx_assert_EqCls.prototype,{
	comply: function(lhs,rhs) {
		if(stx_nano_Register.equals(lhs,rhs)) {
			return true;
		} else {
			return false;
		}
	}
	,__class__: stx_assert_eq_term_Register
});
var stx_assert_eq_term_String = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["stx.assert.eq.term.String"] = stx_assert_eq_term_String;
stx_assert_eq_term_String.__name__ = "stx.assert.eq.term.String";
stx_assert_eq_term_String.__interfaces__ = [stx_assert_EqApi];
stx_assert_eq_term_String.__super__ = stx_pico_Clazz;
stx_assert_eq_term_String.prototype = $extend(stx_pico_Clazz.prototype,{
	comply: function(a,b) {
		if(a == b) {
			return true;
		} else {
			return false;
		}
	}
	,__class__: stx_assert_eq_term_String
});
var stx_assert_eq_term_Tup2 = function(l,r) {
	this.l = l;
	this.r = r;
};
$hxClasses["stx.assert.eq.term.Tup2"] = stx_assert_eq_term_Tup2;
stx_assert_eq_term_Tup2.__name__ = "stx.assert.eq.term.Tup2";
stx_assert_eq_term_Tup2.__interfaces__ = [stx_assert_EqApi];
stx_assert_eq_term_Tup2.prototype = {
	l: null
	,r: null
	,comply: function(a,b) {
		var lII = b.l;
		var rII = b.r;
		var rI = a.r;
		var lI = a.l;
		return stx_assert_Equaled.and(this.l.comply(lI,lII),this.r.comply(rI,rII));
	}
	,__class__: stx_assert_eq_term_Tup2
};
var stx_assert_eq_term_Unknown = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["stx.assert.eq.term.Unknown"] = stx_assert_eq_term_Unknown;
stx_assert_eq_term_Unknown.__name__ = "stx.assert.eq.term.Unknown";
stx_assert_eq_term_Unknown.__interfaces__ = [stx_assert_EqApi];
stx_assert_eq_term_Unknown.__super__ = stx_pico_Clazz;
stx_assert_eq_term_Unknown.prototype = $extend(stx_pico_Clazz.prototype,{
	comply: function(a,b) {
		if(Object.prototype.hasOwnProperty.call(a,"equals")) {
			return new stx_assert_eq_term_HasFunction().comply(a,b);
		} else {
			return new stx_assert_eq_term_Object().comply(a,b);
		}
	}
	,__class__: stx_assert_eq_term_Unknown
});
var stx_assert_eq_term_UnsupportedClass = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["stx.assert.eq.term.UnsupportedClass"] = stx_assert_eq_term_UnsupportedClass;
stx_assert_eq_term_UnsupportedClass.__name__ = "stx.assert.eq.term.UnsupportedClass";
stx_assert_eq_term_UnsupportedClass.__interfaces__ = [stx_assert_EqApi];
stx_assert_eq_term_UnsupportedClass.__super__ = stx_pico_Clazz;
stx_assert_eq_term_UnsupportedClass.prototype = $extend(stx_pico_Clazz.prototype,{
	comply: function(a,b) {
		return stx_assert_Equaled.and(new stx_assert_eq_term_Object().comply(a,b),js_Boot.getClass(a) == js_Boot.getClass(b) && true);
	}
	,__class__: stx_assert_eq_term_UnsupportedClass
});
var stx_assert_eq_term_fs_path_Directory = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["stx.assert.eq.term.fs.path.Directory"] = stx_assert_eq_term_fs_path_Directory;
stx_assert_eq_term_fs_path_Directory.__name__ = "stx.assert.eq.term.fs.path.Directory";
stx_assert_eq_term_fs_path_Directory.__interfaces__ = [stx_assert_EqApi];
stx_assert_eq_term_fs_path_Directory.__super__ = stx_pico_Clazz;
stx_assert_eq_term_fs_path_Directory.prototype = $extend(stx_pico_Clazz.prototype,{
	comply: function(lhs,rhs) {
		var drive_equal = new stx_assert_eq_term_fs_path_Drive().comply(lhs.drive,rhs.drive);
		return stx_LiftIf.if_else(stx_assert_EqualedSum.is_ok(drive_equal),function() {
			return new stx_assert_eq_term_fs_path_Track().comply(lhs.track,rhs.track);
		},function() {
			return drive_equal;
		});
	}
	,__class__: stx_assert_eq_term_fs_path_Directory
});
var stx_assert_eq_term_fs_path_Drive = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["stx.assert.eq.term.fs.path.Drive"] = stx_assert_eq_term_fs_path_Drive;
stx_assert_eq_term_fs_path_Drive.__name__ = "stx.assert.eq.term.fs.path.Drive";
stx_assert_eq_term_fs_path_Drive.__interfaces__ = [stx_assert_EqApi];
stx_assert_eq_term_fs_path_Drive.__super__ = stx_pico_Clazz;
stx_assert_eq_term_fs_path_Drive.prototype = $extend(stx_pico_Clazz.prototype,{
	comply: function(lhs,rhs) {
		return stx_assert_Eq.Option(stx_assert_Eq.String()).comply(lhs,rhs);
	}
	,__class__: stx_assert_eq_term_fs_path_Drive
});
var stx_assert_eq_term_fs_path_Track = function() {
	stx_pico_Clazz.call(this);
	this.inner = stx_assert_Eq.String();
};
$hxClasses["stx.assert.eq.term.fs.path.Track"] = stx_assert_eq_term_fs_path_Track;
stx_assert_eq_term_fs_path_Track.__name__ = "stx.assert.eq.term.fs.path.Track";
stx_assert_eq_term_fs_path_Track.__interfaces__ = [stx_assert_EqApi];
stx_assert_eq_term_fs_path_Track.__super__ = stx_pico_Clazz;
stx_assert_eq_term_fs_path_Track.prototype = $extend(stx_pico_Clazz.prototype,{
	inner: null
	,comply: function(lhs,rhs) {
		return stx_assert_Eq.Cluster(this.inner).comply(lhs,rhs);
	}
	,__class__: stx_assert_eq_term_fs_path_Track
});
var stx_assert_ord_term_Anon = function(delegate) {
	this.delegate = delegate;
};
$hxClasses["stx.assert.ord.term.Anon"] = stx_assert_ord_term_Anon;
stx_assert_ord_term_Anon.__name__ = "stx.assert.ord.term.Anon";
stx_assert_ord_term_Anon.__super__ = stx_assert_OrdCls;
stx_assert_ord_term_Anon.prototype = $extend(stx_assert_OrdCls.prototype,{
	delegate: null
	,comply: function(lhs,rhs) {
		return this.delegate(lhs,rhs);
	}
	,__class__: stx_assert_ord_term_Anon
});
var stx_assert_ord_term_Array = function(inner) {
	this.inner = inner;
};
$hxClasses["stx.assert.ord.term.Array"] = stx_assert_ord_term_Array;
stx_assert_ord_term_Array.__name__ = "stx.assert.ord.term.Array";
stx_assert_ord_term_Array.__super__ = stx_assert_OrdCls;
stx_assert_ord_term_Array.prototype = $extend(stx_assert_OrdCls.prototype,{
	inner: null
	,comply: function(v1,v2) {
		var n = v1.length - v2.length;
		if(n != 0) {
			if(n > 0) {
				return false;
			} else {
				return true;
			}
		} else if(v1.length == 0) {
			return false;
		} else {
			var v = false;
			var _g = 0;
			var _g1 = v1.length;
			while(_g < _g1) {
				var i = _g++;
				v = this.inner.comply(v1[i],v2[i]);
				if(v == true) {
					break;
				}
			}
			return v;
		}
	}
	,__class__: stx_assert_ord_term_Array
});
var stx_assert_ord_term_Cluster = function(inner) {
	this.inner = inner;
};
$hxClasses["stx.assert.ord.term.Cluster"] = stx_assert_ord_term_Cluster;
stx_assert_ord_term_Cluster.__name__ = "stx.assert.ord.term.Cluster";
stx_assert_ord_term_Cluster.__super__ = stx_assert_OrdCls;
stx_assert_ord_term_Cluster.prototype = $extend(stx_assert_OrdCls.prototype,{
	inner: null
	,comply: function(v1,v2) {
		var n = stx_nano_Cluster.get_length(v1) - stx_nano_Cluster.get_length(v2);
		if(n != 0) {
			if(n > 0) {
				return false;
			} else {
				return true;
			}
		} else if(stx_nano_Cluster.get_length(v1) == 0) {
			return false;
		} else {
			var v = false;
			var _g = 0;
			var _g1 = stx_nano_Cluster.get_length(v1);
			while(_g < _g1) {
				var i = _g++;
				v = this.inner.comply(v1[i],v2[i]);
				if(v == true) {
					break;
				}
			}
			return v;
		}
	}
	,__class__: stx_assert_ord_term_Cluster
});
var stx_assert_ord_term_Couple = function(l,r) {
	this.l = l;
	this.r = r;
};
$hxClasses["stx.assert.ord.term.Couple"] = stx_assert_ord_term_Couple;
stx_assert_ord_term_Couple.__name__ = "stx.assert.ord.term.Couple";
stx_assert_ord_term_Couple.__super__ = stx_assert_OrdCls;
stx_assert_ord_term_Couple.prototype = $extend(stx_assert_OrdCls.prototype,{
	l: null
	,r: null
	,comply: function(a,b) {
		var _gthis = this;
		return stx_nano_CoupleLift.decouple(a,function(l0,r0) {
			return stx_nano_CoupleLift.decouple(b,function(l1,r1) {
				return stx_assert_Ordered.or(_gthis.l.comply(l0,l1),_gthis.r.comply(r0,r1));
			});
		});
	}
	,__class__: stx_assert_ord_term_Couple
});
var stx_assert_ord_term_EnumValueIndex = function() {
};
$hxClasses["stx.assert.ord.term.EnumValueIndex"] = stx_assert_ord_term_EnumValueIndex;
stx_assert_ord_term_EnumValueIndex.__name__ = "stx.assert.ord.term.EnumValueIndex";
stx_assert_ord_term_EnumValueIndex.__super__ = stx_assert_OrdCls;
stx_assert_ord_term_EnumValueIndex.prototype = $extend(stx_assert_OrdCls.prototype,{
	comply: function(lhs,rhs) {
		var l = stx_LiftEnumValue.lift(lhs);
		var r = stx_LiftEnumValue.lift(rhs);
		if(stx_nano_EnumValue.get_index(l) < stx_nano_EnumValue.get_index(r)) {
			return true;
		} else {
			return false;
		}
	}
	,__class__: stx_assert_ord_term_EnumValueIndex
});
var stx_assert_ord_term_Exists = function() {
};
$hxClasses["stx.assert.ord.term.Exists"] = stx_assert_ord_term_Exists;
stx_assert_ord_term_Exists.__name__ = "stx.assert.ord.term.Exists";
stx_assert_ord_term_Exists.__super__ = stx_assert_OrdCls;
stx_assert_ord_term_Exists.prototype = $extend(stx_assert_OrdCls.prototype,{
	comply: function(lhs,rhs) {
		if(lhs == null) {
			if(rhs == null) {
				return false;
			} else {
				var x = rhs;
				return true;
			}
		} else {
			return false;
		}
	}
	,__class__: stx_assert_ord_term_Exists
});
var stx_assert_ord_term_Float = function() {
};
$hxClasses["stx.assert.ord.term.Float"] = stx_assert_ord_term_Float;
stx_assert_ord_term_Float.__name__ = "stx.assert.ord.term.Float";
stx_assert_ord_term_Float.__super__ = stx_assert_OrdCls;
stx_assert_ord_term_Float.prototype = $extend(stx_assert_OrdCls.prototype,{
	comply: function(a,b) {
		if(a < b) {
			return true;
		} else {
			return false;
		}
	}
	,__class__: stx_assert_ord_term_Float
});
var stx_assert_ord_term_Ident = function() {
};
$hxClasses["stx.assert.ord.term.Ident"] = stx_assert_ord_term_Ident;
stx_assert_ord_term_Ident.__name__ = "stx.assert.ord.term.Ident";
stx_assert_ord_term_Ident.__super__ = stx_assert_OrdCls;
stx_assert_ord_term_Ident.prototype = $extend(stx_assert_OrdCls.prototype,{
	comply: function(thiz,that) {
		var ord = stx_assert_Ord.String().comply(thiz.name,that.name);
		if(stx_assert_OrderedLift.is_not_less_than(ord)) {
			ord = stx_assert_Ord.NullOr(stx_assert_Ord.Cluster(stx_assert_Ord.String())).comply(thiz.pack,that.pack);
		}
		return ord;
	}
	,__class__: stx_assert_ord_term_Ident
});
var stx_assert_ord_term_Int = function() {
};
$hxClasses["stx.assert.ord.term.Int"] = stx_assert_ord_term_Int;
stx_assert_ord_term_Int.__name__ = "stx.assert.ord.term.Int";
stx_assert_ord_term_Int.__super__ = stx_assert_OrdCls;
stx_assert_ord_term_Int.prototype = $extend(stx_assert_OrdCls.prototype,{
	comply: function(a,b) {
		if(a < b) {
			return true;
		} else {
			return false;
		}
	}
	,__class__: stx_assert_ord_term_Int
});
var stx_assert_ord_term_Int64 = function() {
};
$hxClasses["stx.assert.ord.term.Int64"] = stx_assert_ord_term_Int64;
stx_assert_ord_term_Int64.__name__ = "stx.assert.ord.term.Int64";
stx_assert_ord_term_Int64.__super__ = stx_assert_OrdCls;
stx_assert_ord_term_Int64.prototype = $extend(stx_assert_OrdCls.prototype,{
	comply: function(a,b) {
		var v = a.high - b.high | 0;
		if(v == 0) {
			v = haxe_Int32.ucompare(a.low,b.low);
		}
		if((a.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) < 0) {
			return true;
		} else {
			return false;
		}
	}
	,__class__: stx_assert_ord_term_Int64
});
var stx_assert_ord_term_KV = function(key,val) {
	this.key = key;
	this.val = val;
};
$hxClasses["stx.assert.ord.term.KV"] = stx_assert_ord_term_KV;
stx_assert_ord_term_KV.__name__ = "stx.assert.ord.term.KV";
stx_assert_ord_term_KV.__super__ = stx_assert_OrdCls;
stx_assert_ord_term_KV.prototype = $extend(stx_assert_OrdCls.prototype,{
	key: null
	,val: null
	,comply: function(a,b) {
		return stx_assert_Ordered.and(this.key.comply(a.key,b.key),this.val.comply(a.val,b.val));
	}
	,__class__: stx_assert_ord_term_KV
});
var stx_assert_ord_term_NullOr = function(inner) {
	this.inner = inner;
};
$hxClasses["stx.assert.ord.term.NullOr"] = stx_assert_ord_term_NullOr;
stx_assert_ord_term_NullOr.__name__ = "stx.assert.ord.term.NullOr";
stx_assert_ord_term_NullOr.__super__ = stx_assert_OrdCls;
stx_assert_ord_term_NullOr.prototype = $extend(stx_assert_OrdCls.prototype,{
	inner: null
	,comply: function(lhs,rhs) {
		if(lhs == null) {
			if(rhs == null) {
				return false;
			} else {
				var x = rhs;
				return true;
			}
		} else if(rhs == null) {
			var x = lhs;
			return false;
		} else {
			var x = lhs;
			var y = rhs;
			return this.inner.comply(x,y);
		}
	}
	,__class__: stx_assert_ord_term_NullOr
});
var stx_assert_ord_term_Option = function(inner) {
	this.inner = inner;
};
$hxClasses["stx.assert.ord.term.Option"] = stx_assert_ord_term_Option;
stx_assert_ord_term_Option.__name__ = "stx.assert.ord.term.Option";
stx_assert_ord_term_Option.__super__ = stx_assert_OrdCls;
stx_assert_ord_term_Option.prototype = $extend(stx_assert_OrdCls.prototype,{
	inner: null
	,comply: function(lhs,rhs) {
		var _gthis = this;
		var self = stx_pico_OptionLift.map(stx_nano_lift_LiftOptionNano.zip(lhs,rhs),stx_nano_lift_LiftNano.decouple(stx_nano_Wildcard.__,function(l,r) {
			return _gthis.inner.comply(l,r);
		}));
		if(self._hx_index == 0) {
			var v = self.v;
			return v;
		} else {
			return false;
		}
	}
	,__class__: stx_assert_ord_term_Option
});
var stx_assert_ord_term_OrdAssertion = function(ord,pos) {
	stx_assert_assertion_term_Base.call(this,pos);
	this.ord = ord;
};
$hxClasses["stx.assert.ord.term.OrdAssertion"] = stx_assert_ord_term_OrdAssertion;
stx_assert_ord_term_OrdAssertion.__name__ = "stx.assert.ord.term.OrdAssertion";
stx_assert_ord_term_OrdAssertion.__super__ = stx_assert_assertion_term_Base;
stx_assert_ord_term_OrdAssertion.prototype = $extend(stx_assert_assertion_term_Base.prototype,{
	ord: null
	,comply: function(a,b) {
		var tmp = stx_assert_Ordered.toBool(this.ord.comply(a,b));
		var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,this.pos);
		return stx_LiftAssert.expect(tmp,stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_AssertFailure.PredicateFailed(js_Boot.getClass(this),a,b))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1)));
	}
	,__class__: stx_assert_ord_term_OrdAssertion
});
var stx_assert_ord_term_Primitive = function() {
};
$hxClasses["stx.assert.ord.term.Primitive"] = stx_assert_ord_term_Primitive;
stx_assert_ord_term_Primitive.__name__ = "stx.assert.ord.term.Primitive";
stx_assert_ord_term_Primitive.__super__ = stx_assert_OrdCls;
stx_assert_ord_term_Primitive.prototype = $extend(stx_assert_OrdCls.prototype,{
	comply: function(lhs,rhs) {
		switch(lhs._hx_index) {
		case 0:
			if(rhs._hx_index == 0) {
				return false;
			} else if(lhs._hx_index < rhs._hx_index) {
				return true;
			} else {
				return false;
			}
			break;
		case 1:
			if(rhs._hx_index == 1) {
				var rhs1 = rhs.b;
				var lhs1 = lhs.b;
				return stx_assert_Ord.Bool().comply(lhs1,rhs1);
			} else if(lhs._hx_index < rhs._hx_index) {
				return true;
			} else {
				return false;
			}
			break;
		case 2:
			var _g = lhs.sprig;
			switch(_g._hx_index) {
			case 0:
				if(rhs._hx_index == 2) {
					var _g1 = rhs.sprig;
					if(_g1._hx_index == 0) {
						var rhs1 = _g1.str;
						var lhs1 = _g.str;
						return stx_assert_Ord.String().comply(lhs1,rhs1);
					} else if(lhs._hx_index < rhs._hx_index) {
						return true;
					} else {
						return false;
					}
				} else if(lhs._hx_index < rhs._hx_index) {
					return true;
				} else {
					return false;
				}
				break;
			case 1:
				var _g1 = _g.byte;
				switch(_g1._hx_index) {
				case 0:
					if(rhs._hx_index == 2) {
						var _g = rhs.sprig;
						if(_g._hx_index == 1) {
							var _g2 = _g.byte;
							if(_g2._hx_index == 0) {
								var rhs1 = _g2.int;
								var lhs1 = _g1.int;
								return stx_assert_Ord.Int().comply(lhs1,rhs1);
							} else if(lhs._hx_index < rhs._hx_index) {
								return true;
							} else {
								return false;
							}
						} else if(lhs._hx_index < rhs._hx_index) {
							return true;
						} else {
							return false;
						}
					} else if(lhs._hx_index < rhs._hx_index) {
						return true;
					} else {
						return false;
					}
					break;
				case 1:
					if(rhs._hx_index == 2) {
						var _g = rhs.sprig;
						if(_g._hx_index == 1) {
							var _g2 = _g.byte;
							if(_g2._hx_index == 1) {
								var rhs1 = _g2.int;
								var lhs1 = _g1.int;
								return stx_assert_Ord.Int64().comply(lhs1,rhs1);
							} else if(lhs._hx_index < rhs._hx_index) {
								return true;
							} else {
								return false;
							}
						} else if(lhs._hx_index < rhs._hx_index) {
							return true;
						} else {
							return false;
						}
					} else if(lhs._hx_index < rhs._hx_index) {
						return true;
					} else {
						return false;
					}
					break;
				case 2:
					if(rhs._hx_index == 2) {
						var _g = rhs.sprig;
						if(_g._hx_index == 1) {
							var _g2 = _g.byte;
							if(_g2._hx_index == 2) {
								var rhs1 = _g2.f;
								var lhs1 = _g1.f;
								return stx_assert_Ord.Float().comply(lhs1,rhs1);
							} else if(lhs._hx_index < rhs._hx_index) {
								return true;
							} else {
								return false;
							}
						} else if(lhs._hx_index < rhs._hx_index) {
							return true;
						} else {
							return false;
						}
					} else if(lhs._hx_index < rhs._hx_index) {
						return true;
					} else {
						return false;
					}
					break;
				}
				break;
			}
			break;
		}
	}
	,__class__: stx_assert_ord_term_Primitive
});
var stx_assert_ord_term_Record = function(delegate) {
	this.delegate = delegate;
};
$hxClasses["stx.assert.ord.term.Record"] = stx_assert_ord_term_Record;
stx_assert_ord_term_Record.__name__ = "stx.assert.ord.term.Record";
stx_assert_ord_term_Record.__super__ = stx_assert_OrdCls;
stx_assert_ord_term_Record.prototype = $extend(stx_assert_OrdCls.prototype,{
	delegate: null
	,comply: function(lhs,rhs) {
		var _gthis = this;
		var delegate_delegate = stx_assert_Ord.Anon(function(lhs,rhs) {
			return stx_assert_Ordered.and(stx_assert_Ord.String().comply(stx_nano_KVLift.fst(lhs),stx_nano_KVLift.fst(rhs)),_gthis.delegate.comply((stx_nano_KVLift.snd(lhs))(),(stx_nano_KVLift.snd(rhs))()));
		});
		return stx_assert_Ord.Cluster(delegate_delegate).comply(stx_nano_Record.prj(lhs),stx_nano_Record.prj(rhs));
	}
	,__class__: stx_assert_ord_term_Record
});
var stx_assert_ord_term_Register = function() {
};
$hxClasses["stx.assert.ord.term.Register"] = stx_assert_ord_term_Register;
stx_assert_ord_term_Register.__name__ = "stx.assert.ord.term.Register";
stx_assert_ord_term_Register.__super__ = stx_assert_OrdCls;
stx_assert_ord_term_Register.prototype = $extend(stx_assert_OrdCls.prototype,{
	comply: function(lhs,rhs) {
		if(stx_nano_Register.less_than(lhs,rhs)) {
			return true;
		} else {
			return false;
		}
	}
	,__class__: stx_assert_ord_term_Register
});
var stx_assert_ord_term_String = function() {
};
$hxClasses["stx.assert.ord.term.String"] = stx_assert_ord_term_String;
stx_assert_ord_term_String.__name__ = "stx.assert.ord.term.String";
stx_assert_ord_term_String.__super__ = stx_assert_OrdCls;
stx_assert_ord_term_String.prototype = $extend(stx_assert_OrdCls.prototype,{
	comply: function(a,b) {
		if(a < b) {
			return true;
		} else {
			return false;
		}
	}
	,__class__: stx_assert_ord_term_String
});
var stx_assert_orderable_term_Anon = function(delegate) {
};
$hxClasses["stx.assert.orderable.term.Anon"] = stx_assert_orderable_term_Anon;
stx_assert_orderable_term_Anon.__name__ = "stx.assert.orderable.term.Anon";
stx_assert_orderable_term_Anon.__interfaces__ = [stx_assert_OrderableApi];
stx_assert_orderable_term_Anon.prototype = {
	delegate: null
	,lt: function() {
		return this.delegate;
	}
	,__class__: stx_assert_orderable_term_Anon
};
var stx_assert_pml_comparable_PExpr = function(inner) {
	this.inner = inner;
};
$hxClasses["stx.assert.pml.comparable.PExpr"] = stx_assert_pml_comparable_PExpr;
stx_assert_pml_comparable_PExpr.__name__ = "stx.assert.pml.comparable.PExpr";
stx_assert_pml_comparable_PExpr.__super__ = stx_assert_ComparableCls;
stx_assert_pml_comparable_PExpr.prototype = $extend(stx_assert_ComparableCls.prototype,{
	inner: null
	,eq: function() {
		return new stx_assert_pml_eq_PExpr(this.inner.eq());
	}
	,lt: function() {
		return new stx_assert_pml_ord_PExpr(this.inner.lt());
	}
	,__class__: stx_assert_pml_comparable_PExpr
});
var stx_assert_pml_eq_PExpr = function(inner) {
	this.inner = inner;
};
$hxClasses["stx.assert.pml.eq.PExpr"] = stx_assert_pml_eq_PExpr;
stx_assert_pml_eq_PExpr.__name__ = "stx.assert.pml.eq.PExpr";
stx_assert_pml_eq_PExpr.__interfaces__ = [stx_assert_EqApi];
stx_assert_pml_eq_PExpr.prototype = {
	inner: null
	,comply: function(lhs,rhs) {
		var _gthis = this;
		if(lhs == null) {
			if(rhs == null) {
				return true;
			} else {
				return false;
			}
		} else {
			switch(lhs._hx_index) {
			case 0:
				if(rhs == null) {
					return false;
				} else if(rhs._hx_index == 0) {
					var rhs1 = rhs.name;
					var lhs1 = lhs.name;
					return stx_assert_Eq.String().comply(lhs1,rhs1);
				} else {
					return false;
				}
				break;
			case 1:
				if(rhs == null) {
					return false;
				} else if(rhs._hx_index == 1) {
					var rhs1 = rhs.list;
					var lhs1 = lhs.list;
					return stx_ds_LinkedList.lfold(stx_ds_LinkedList.zip(lhs1,stx_ds_LinkedList.toIterable(rhs1)),function(tp,m) {
						if(m == false) {
							return false;
						} else {
							return _gthis.comply(stx_nano_CoupleLift.fst(tp),stx_nano_CoupleLift.snd(tp));
						}
					},true);
				} else {
					return false;
				}
				break;
			case 2:
				if(rhs == null) {
					return false;
				} else if(rhs._hx_index == 2) {
					var rhs1 = rhs.value;
					var lhs1 = lhs.value;
					return this.inner.comply(lhs1,rhs1);
				} else {
					return false;
				}
				break;
			case 3:
				if(rhs == null) {
					return false;
				} else if(rhs._hx_index == 3) {
					return true;
				} else {
					return false;
				}
				break;
			}
		}
	}
	,__class__: stx_assert_pml_eq_PExpr
};
var stx_assert_pml_ord_PExpr = function(inner) {
	this.inner = inner;
};
$hxClasses["stx.assert.pml.ord.PExpr"] = stx_assert_pml_ord_PExpr;
stx_assert_pml_ord_PExpr.__name__ = "stx.assert.pml.ord.PExpr";
stx_assert_pml_ord_PExpr.__super__ = stx_assert_OrdCls;
stx_assert_pml_ord_PExpr.prototype = $extend(stx_assert_OrdCls.prototype,{
	inner: null
	,comply: function(lhs,rhs) {
		var _gthis = this;
		if(lhs == null) {
			if(rhs == null) {
				return false;
			} else {
				return true;
			}
		} else {
			switch(lhs._hx_index) {
			case 0:
				if(rhs == null) {
					return false;
				} else if(rhs._hx_index == 0) {
					var rhs1 = rhs.name;
					var lhs1 = lhs.name;
					return stx_assert_Ord.String().comply(lhs1,rhs1);
				} else if(stx_nano_EnumValue.get_index(stx_nano_EnumValue.pure(lhs)) < stx_nano_EnumValue.get_index(stx_nano_EnumValue.pure(rhs))) {
					return true;
				} else {
					return false;
				}
				break;
			case 1:
				if(rhs == null) {
					return false;
				} else if(rhs._hx_index == 1) {
					var rhs1 = rhs.list;
					var lhs1 = lhs.list;
					return stx_ds_LinkedList.lfold(stx_ds_LinkedList.zip(lhs1,stx_ds_LinkedList.toIterable(rhs1)),function(tp,m) {
						if(m == true) {
							return true;
						} else {
							return _gthis.comply(stx_nano_CoupleLift.fst(tp),stx_nano_CoupleLift.snd(tp));
						}
					},false);
				} else if(stx_nano_EnumValue.get_index(stx_nano_EnumValue.pure(lhs)) < stx_nano_EnumValue.get_index(stx_nano_EnumValue.pure(rhs))) {
					return true;
				} else {
					return false;
				}
				break;
			case 2:
				if(rhs == null) {
					return false;
				} else if(rhs._hx_index == 2) {
					var rhs1 = rhs.value;
					var lhs1 = lhs.value;
					return this.inner.comply(lhs1,rhs1);
				} else if(stx_nano_EnumValue.get_index(stx_nano_EnumValue.pure(lhs)) < stx_nano_EnumValue.get_index(stx_nano_EnumValue.pure(rhs))) {
					return true;
				} else {
					return false;
				}
				break;
			case 3:
				if(rhs == null) {
					return false;
				} else if(rhs._hx_index == 3) {
					return false;
				} else if(stx_nano_EnumValue.get_index(stx_nano_EnumValue.pure(lhs)) < stx_nano_EnumValue.get_index(stx_nano_EnumValue.pure(rhs))) {
					return true;
				} else {
					return false;
				}
				break;
			}
		}
	}
	,__class__: stx_assert_pml_ord_PExpr
});
var stx_assert_predicate_term_Open = function(pos) {
	this.pos = pos;
};
$hxClasses["stx.assert.predicate.term.Open"] = stx_assert_predicate_term_Open;
stx_assert_predicate_term_Open.__name__ = "stx.assert.predicate.term.Open";
stx_assert_predicate_term_Open.__interfaces__ = [stx_assert_PredicateApi];
stx_assert_predicate_term_Open.prototype = {
	pos: null
	,get_pos: function() {
		return this.pos;
	}
	,apply: function(v) {
		return stx_nano_Report.unit();
	}
	,error: function() {
		var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,this.get_pos());
		return stx_fail_Refuse.make(haxe_ds_Option.Some(stx_fail_DeclineSum.INTERIOR(stx_nano_CTR.apply(function(_) {
			return stx_nano_Digests.e_undefined(_);
		},stx_Nano.digests(stx_nano_Wildcard.__)))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1));
	}
	,__class__: stx_assert_predicate_term_Open
};
var stx_assert_predicate_term_Always = function(pos) {
	stx_assert_predicate_term_Open.call(this,pos);
};
$hxClasses["stx.assert.predicate.term.Always"] = stx_assert_predicate_term_Always;
stx_assert_predicate_term_Always.__name__ = "stx.assert.predicate.term.Always";
stx_assert_predicate_term_Always.__super__ = stx_assert_predicate_term_Open;
stx_assert_predicate_term_Always.prototype = $extend(stx_assert_predicate_term_Open.prototype,{
	apply: function(v) {
		return stx_nano_Report.unit();
	}
	,__class__: stx_assert_predicate_term_Always
});
var stx_assert_predicate_term_And = function(l,r,pos) {
	stx_assert_predicate_term_Open.call(this,pos);
	this.l = l;
	this.r = r;
};
$hxClasses["stx.assert.predicate.term.And"] = stx_assert_predicate_term_And;
stx_assert_predicate_term_And.__name__ = "stx.assert.predicate.term.And";
stx_assert_predicate_term_And.__super__ = stx_assert_predicate_term_Open;
stx_assert_predicate_term_And.prototype = $extend(stx_assert_predicate_term_Open.prototype,{
	l: null
	,r: null
	,apply: function(v) {
		var lr = this.l.apply(v);
		var rr = stx_nano_Report.unit();
		if(!stx_nano_ReportLift.is_defined(lr)) {
			rr = this.r.apply(v);
		}
		return stx_nano_ReportLift.concat(lr,rr);
	}
	,__class__: stx_assert_predicate_term_And
});
var stx_assert_predicate_term_Anon = function(delegate) {
	this.delegate = delegate;
};
$hxClasses["stx.assert.predicate.term.Anon"] = stx_assert_predicate_term_Anon;
stx_assert_predicate_term_Anon.__name__ = "stx.assert.predicate.term.Anon";
stx_assert_predicate_term_Anon.__interfaces__ = [stx_assert_PredicateApi];
stx_assert_predicate_term_Anon.prototype = {
	delegate: null
	,apply: function(p) {
		return this.delegate(p);
	}
	,__class__: stx_assert_predicate_term_Anon
};
var stx_assert_predicate_term_AssertionPredicate = function(delegate,data) {
	this.delegate = delegate;
	this.data = data;
};
$hxClasses["stx.assert.predicate.term.AssertionPredicate"] = stx_assert_predicate_term_AssertionPredicate;
stx_assert_predicate_term_AssertionPredicate.__name__ = "stx.assert.predicate.term.AssertionPredicate";
stx_assert_predicate_term_AssertionPredicate.__interfaces__ = [stx_assert_PredicateApi];
stx_assert_predicate_term_AssertionPredicate.prototype = {
	delegate: null
	,data: null
	,apply: function(v) {
		return stx_nano_Report.errata(this.delegate.comply(this.data,v),function(x) {
			return x;
		});
	}
	,__class__: stx_assert_predicate_term_AssertionPredicate
};
var stx_assert_predicate_term_Base = function(pos) {
	stx_pico_Clazz.call(this);
	this.pos = pos;
};
$hxClasses["stx.assert.predicate.term.Base"] = stx_assert_predicate_term_Base;
stx_assert_predicate_term_Base.__name__ = "stx.assert.predicate.term.Base";
stx_assert_predicate_term_Base.__interfaces__ = [stx_assert_PredicateApi];
stx_assert_predicate_term_Base.__super__ = stx_pico_Clazz;
stx_assert_predicate_term_Base.prototype = $extend(stx_pico_Clazz.prototype,{
	pos: null
	,apply: function(v) {
		return stx_nano_Report.fromStdOption(haxe_ds_Option.None);
	}
	,error: function(l,r) {
		var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,this.pos);
		return stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_AssertFailure.PredicateFailed(js_Boot.getClass(this),l,r))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1));
	}
	,__class__: stx_assert_predicate_term_Base
});
var stx_assert_predicate_term_Exists = function(pos) {
	stx_assert_predicate_term_Base.call(this,pos);
};
$hxClasses["stx.assert.predicate.term.Exists"] = stx_assert_predicate_term_Exists;
stx_assert_predicate_term_Exists.__name__ = "stx.assert.predicate.term.Exists";
stx_assert_predicate_term_Exists.__super__ = stx_assert_predicate_term_Base;
stx_assert_predicate_term_Exists.prototype = $extend(stx_assert_predicate_term_Base.prototype,{
	apply: function(v) {
		var self = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,v),function(_) {
			return true;
		});
		var bool;
		if(self._hx_index == 0) {
			var v = self.v;
			bool = v;
		} else {
			bool = false;
		}
		return stx_LiftAssert.expect(bool,this.error());
	}
	,__class__: stx_assert_predicate_term_Exists
});
var stx_assert_predicate_term_Is = function(type,pos) {
	stx_assert_predicate_term_Base.call(this,pos);
	this.type = type;
};
$hxClasses["stx.assert.predicate.term.Is"] = stx_assert_predicate_term_Is;
stx_assert_predicate_term_Is.__name__ = "stx.assert.predicate.term.Is";
stx_assert_predicate_term_Is.__super__ = stx_assert_predicate_term_Base;
stx_assert_predicate_term_Is.prototype = $extend(stx_assert_predicate_term_Base.prototype,{
	type: null
	,apply: function(v) {
		var bool = js_Boot.__instanceof(v,this.type);
		var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/assert/predicate/term/Is.hx", lineNumber : 12, className : "stx.assert.predicate.term.Is", methodName : "apply"});
		var err = stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_AssertFailure.PredicateFailed(js_Boot.getClass(this),v))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1));
		return stx_LiftAssert.expect(bool,err);
	}
	,__class__: stx_assert_predicate_term_Is
});
var stx_assert_predicate_term_Matches = function(fault,match,opt,pos) {
	if(opt == null) {
		opt = "g";
	}
	stx_assert_predicate_term_Base.call(this,pos);
	this.fault = fault;
	this.match = match;
	this.opt = opt;
};
$hxClasses["stx.assert.predicate.term.Matches"] = stx_assert_predicate_term_Matches;
stx_assert_predicate_term_Matches.__name__ = "stx.assert.predicate.term.Matches";
stx_assert_predicate_term_Matches.__super__ = stx_assert_predicate_term_Base;
stx_assert_predicate_term_Matches.prototype = $extend(stx_assert_predicate_term_Base.prototype,{
	fault: null
	,match: null
	,opt: null
	,apply: function(v) {
		var err = this.error("~/" + this.match + "/" + this.opt,v);
		var ereg = new EReg(this.match,this.opt);
		ereg.match(v);
		var bool = ereg.matched(0) == null;
		return stx_LiftAssert.expect(bool,err);
	}
	,__class__: stx_assert_predicate_term_Matches
});
var stx_assert_predicate_term_Natural = function(method,pos) {
	this.method = method;
	stx_assert_predicate_term_Base.call(this,pos);
};
$hxClasses["stx.assert.predicate.term.Natural"] = stx_assert_predicate_term_Natural;
stx_assert_predicate_term_Natural.__name__ = "stx.assert.predicate.term.Natural";
stx_assert_predicate_term_Natural.__super__ = stx_assert_predicate_term_Base;
stx_assert_predicate_term_Natural.prototype = $extend(stx_assert_predicate_term_Base.prototype,{
	method: null
	,apply: function(v) {
		if(this.method(v)) {
			return stx_nano_Report.unit();
		} else {
			return stx_nano_Report.pure(this.error());
		}
	}
	,__class__: stx_assert_predicate_term_Natural
});
var stx_assert_predicate_term_NaturalReport = function(delegate,report,pos) {
	this.delegate = delegate;
	this.report = report;
	this.pos = pos;
};
$hxClasses["stx.assert.predicate.term.NaturalReport"] = stx_assert_predicate_term_NaturalReport;
stx_assert_predicate_term_NaturalReport.__name__ = "stx.assert.predicate.term.NaturalReport";
stx_assert_predicate_term_NaturalReport.__interfaces__ = [stx_assert_PredicateApi];
stx_assert_predicate_term_NaturalReport.prototype = {
	pos: null
	,report: null
	,delegate: null
	,apply: function(p) {
		var _gthis = this;
		return stx_LiftIf.if_else(this.delegate(p),stx_nano_Report.unit,function() {
			var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,_gthis.pos);
			return stx_fail_RefuseLift.report(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(_gthis.report)),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1)));
		});
	}
	,__class__: stx_assert_predicate_term_NaturalReport
};
var stx_assert_predicate_term_Never = function(pos) {
	stx_assert_predicate_term_Open.call(this,pos);
};
$hxClasses["stx.assert.predicate.term.Never"] = stx_assert_predicate_term_Never;
stx_assert_predicate_term_Never.__name__ = "stx.assert.predicate.term.Never";
stx_assert_predicate_term_Never.__super__ = stx_assert_predicate_term_Open;
stx_assert_predicate_term_Never.prototype = $extend(stx_assert_predicate_term_Open.prototype,{
	apply: function(v) {
		return stx_nano_Report.pure(this.error());
	}
	,__class__: stx_assert_predicate_term_Never
});
var stx_assert_predicate_term_Not = function(predicate,pos) {
	stx_assert_predicate_term_Open.call(this,pos);
	this.predicate = predicate;
};
$hxClasses["stx.assert.predicate.term.Not"] = stx_assert_predicate_term_Not;
stx_assert_predicate_term_Not.__name__ = "stx.assert.predicate.term.Not";
stx_assert_predicate_term_Not.__super__ = stx_assert_predicate_term_Open;
stx_assert_predicate_term_Not.prototype = $extend(stx_assert_predicate_term_Open.prototype,{
	predicate: null
	,apply: function(v) {
		var self = this.predicate.apply(v);
		var bool;
		if(self == null) {
			bool = false;
		} else {
			switch(self._hx_index) {
			case 0:
				var v = self.v;
				bool = true;
				break;
			case 1:
				bool = false;
				break;
			}
		}
		return stx_LiftAssert.expect(bool,this.error());
	}
	,__class__: stx_assert_predicate_term_Not
});
var stx_assert_predicate_term_Or = function(l,r,pos) {
	stx_assert_predicate_term_Open.call(this,pos);
	this.l = l;
	this.r = r;
};
$hxClasses["stx.assert.predicate.term.Or"] = stx_assert_predicate_term_Or;
stx_assert_predicate_term_Or.__name__ = "stx.assert.predicate.term.Or";
stx_assert_predicate_term_Or.__super__ = stx_assert_predicate_term_Open;
stx_assert_predicate_term_Or.prototype = $extend(stx_assert_predicate_term_Open.prototype,{
	l: null
	,r: null
	,apply: function(v) {
		var resI = this.l.apply(v);
		var resII = this.r.apply(v);
		if(stx_nano_ReportLift.is_defined(resI) && stx_nano_ReportLift.is_defined(resII)) {
			return stx_nano_ReportLift.concat(resI,resII);
		} else {
			return stx_nano_Report.unit();
		}
	}
	,__class__: stx_assert_predicate_term_Or
});
var stx_assert_predicate_term_Throws = function(pos) {
	stx_assert_predicate_term_Base.call(this,pos);
};
$hxClasses["stx.assert.predicate.term.Throws"] = stx_assert_predicate_term_Throws;
stx_assert_predicate_term_Throws.__name__ = "stx.assert.predicate.term.Throws";
stx_assert_predicate_term_Throws.__super__ = stx_assert_predicate_term_Base;
stx_assert_predicate_term_Throws.prototype = $extend(stx_assert_predicate_term_Base.prototype,{
	apply: function(block) {
		try {
			block();
		} catch( _g ) {
			return stx_nano_Report.unit();
		}
		return stx_nano_Report.pure(this.error());
	}
	,__class__: stx_assert_predicate_term_Throws
});
var stx_assert_predicate_term_Transform = function(delegate,transform,pos) {
	stx_assert_predicate_term_Open.call(this,pos);
	this.transform = transform;
	this.delegate = delegate;
};
$hxClasses["stx.assert.predicate.term.Transform"] = stx_assert_predicate_term_Transform;
stx_assert_predicate_term_Transform.__name__ = "stx.assert.predicate.term.Transform";
stx_assert_predicate_term_Transform.__super__ = stx_assert_predicate_term_Open;
stx_assert_predicate_term_Transform.prototype = $extend(stx_assert_predicate_term_Open.prototype,{
	transform: null
	,delegate: null
	,apply: function(v) {
		return stx_nano_Report.errata(this.delegate.apply(v),this.transform);
	}
	,__class__: stx_assert_predicate_term_Transform
});
var stx_assert_predicate_term_Void = function(pos) {
	stx_assert_predicate_term_Base.call(this,pos);
};
$hxClasses["stx.assert.predicate.term.Void"] = stx_assert_predicate_term_Void;
stx_assert_predicate_term_Void.__name__ = "stx.assert.predicate.term.Void";
stx_assert_predicate_term_Void.__super__ = stx_assert_predicate_term_Base;
stx_assert_predicate_term_Void.prototype = $extend(stx_assert_predicate_term_Base.prototype,{
	apply: function(v) {
		return stx_LiftAssert.expect(v == null,this.error());
	}
	,__class__: stx_assert_predicate_term_Void
});
var stx_assert_predicate_term_XOr = function(l,r,pos) {
	stx_assert_predicate_term_Open.call(this,pos);
	this.l = l;
	this.r = r;
};
$hxClasses["stx.assert.predicate.term.XOr"] = stx_assert_predicate_term_XOr;
stx_assert_predicate_term_XOr.__name__ = "stx.assert.predicate.term.XOr";
stx_assert_predicate_term_XOr.__super__ = stx_assert_predicate_term_Open;
stx_assert_predicate_term_XOr.prototype = $extend(stx_assert_predicate_term_Open.prototype,{
	l: null
	,r: null
	,apply: function(v) {
		var lr = this.l.apply(v);
		var rr = this.r.apply(v);
		return stx_LiftAssert.expect(!stx_nano_ReportLift.is_defined(lr) && !stx_nano_ReportLift.is_defined(rr),this.error());
	}
	,__class__: stx_assert_predicate_term_XOr
});
var stx_assert_stub_Comparable = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["stx.assert.stub.Comparable"] = stx_assert_stub_Comparable;
stx_assert_stub_Comparable.__name__ = "stx.assert.stub.Comparable";
stx_assert_stub_Comparable.__super__ = stx_pico_Clazz;
stx_assert_stub_Comparable.prototype = $extend(stx_pico_Clazz.prototype,{
	__class__: stx_assert_stub_Comparable
});
var stx_asys_ASysApi = function() { };
$hxClasses["stx.asys.ASysApi"] = stx_asys_ASysApi;
stx_asys_ASysApi.__name__ = "stx.asys.ASysApi";
stx_asys_ASysApi.__isInterface__ = true;
stx_asys_ASysApi.prototype = {
	local: null
	,sleep: null
	,user: null
	,stderr: null
	,stdout: null
	,stdin: null
	,__class__: stx_asys_ASysApi
};
var stx_asys_ASys = function() {
};
$hxClasses["stx.asys.ASys"] = stx_asys_ASys;
stx_asys_ASys.__name__ = "stx.asys.ASys";
stx_asys_ASys.__interfaces__ = [stx_asys_ASysApi];
stx_asys_ASys.prototype = {
	sleep: function(t) {
		return tink_core_Future.irreversible(function(cb) {
			Sys.sleep(t);
			cb(null);
		});
	}
	,stderr: function() {
		return stx_io_Output._new(new _$Sys_FileOutput(2));
	}
	,stdout: function() {
		return stx_io_Output._new(new _$Sys_FileOutput(1));
	}
	,stdin: function() {
		return stx_io_Input.make0(new _$Sys_FileInput(0));
	}
	,local: function() {
		return { device : stx_asys_Device.make0(stx_asys_Distro._new())};
	}
	,user: function() {
		return new stx_asys_User(this.local().device);
	}
	,__class__: stx_asys_ASys
};
var stx_asys_Blot = function() { };
$hxClasses["stx.asys.Blot"] = stx_asys_Blot;
stx_asys_Blot.__name__ = "stx.asys.Blot";
var stx_asys_CharKind = $hxEnums["stx.asys.CharKind"] = { __ename__:"stx.asys.CharKind",__constructs__:null
	,ASCII: {_hx_name:"ASCII",_hx_index:0,__enum__:"stx.asys.CharKind",toString:$estr}
	,UNICODE: {_hx_name:"UNICODE",_hx_index:1,__enum__:"stx.asys.CharKind",toString:$estr}
	,UTF16: {_hx_name:"UTF16",_hx_index:2,__enum__:"stx.asys.CharKind",toString:$estr}
	,BYTES: {_hx_name:"BYTES",_hx_index:3,__enum__:"stx.asys.CharKind",toString:$estr}
};
stx_asys_CharKind.__constructs__ = [stx_asys_CharKind.ASCII,stx_asys_CharKind.UNICODE,stx_asys_CharKind.UTF16,stx_asys_CharKind.BYTES];
var stx_asys_CwdApi = function() { };
$hxClasses["stx.asys.CwdApi"] = stx_asys_CwdApi;
stx_asys_CwdApi.__name__ = "stx.asys.CwdApi";
stx_asys_CwdApi.__isInterface__ = true;
stx_asys_CwdApi.prototype = {
	pop: null
	,put: null
	,__class__: stx_asys_CwdApi
};
var stx_asys_Cwd = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["stx.asys.Cwd"] = stx_asys_Cwd;
stx_asys_Cwd.__name__ = "stx.asys.Cwd";
stx_asys_Cwd.__interfaces__ = [stx_asys_CwdApi];
stx_asys_Cwd.__super__ = stx_pico_Clazz;
stx_asys_Cwd.prototype = $extend(stx_pico_Clazz.prototype,{
	pop: function() {
		var this1 = stx_asys_Logging.log(stx_nano_Wildcard.__);
		var fn = function(pos) {
			return pos.with_stamp(function(stamp) {
				return stamp.relevel(2);
			});
		};
		(function(value,pos) {
			this1(value,fn(pos));
		})(stx_log_Stringify.fromString(stx_System.sys(stx_nano_Wildcard.__).cwd().get())(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/asys/Cwd.hx", lineNumber : 12, className : "stx.asys.Cwd", methodName : "pop"}));
		return eu_ohmrun_fletcher_AttemptLift.errate(eu_ohmrun_fletcher_AttemptLift.attempt(stx_fs_Path.parse(stx_System.sys(stx_nano_Wildcard.__).cwd().get()),eu_ohmrun_fletcher_Attempt.fromFun1Produce(stx_fs_path_Raw._.toDirectory)),stx_fail_FsFailureSum.E_Fs_Path);
	}
	,put: function(dir) {
		return eu_ohmrun_fletcher_Command.fromFun1Report(function(env) {
			var val = stx_nano_Report.unit();
			try {
				var tmp = stx_System.sys(stx_nano_Wildcard.__).cwd();
				var tmp1 = stx_fs_path_Directory.canonical(dir,env.device.sep);
				tmp.put(tmp1);
			} catch( _g ) {
				var e = haxe_Exception.caught(_g).unwrap();
				var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/asys/Cwd.hx", lineNumber : 25, className : "stx.asys.Cwd", methodName : "put"});
				val = stx_nano_Report.pure(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_FsFailureSum.E_Fs_CannotSetWorkingDirectory(stx_fs_path_Directory.canonical(dir,env.device.sep),e))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1)));
			}
			return val;
		});
	}
	,__class__: stx_asys_Cwd
});
var stx_asys_DeviceApi = function() { };
$hxClasses["stx.asys.DeviceApi"] = stx_asys_DeviceApi;
stx_asys_DeviceApi.__name__ = "stx.asys.DeviceApi";
stx_asys_DeviceApi.__isInterface__ = true;
stx_asys_DeviceApi.prototype = {
	distro: null
	,sep: null
	,volume: null
	,shell: null
	,env: null
	,__class__: stx_asys_DeviceApi
};
var stx_asys_Device = function(distro,sep,volume,shell,env) {
	this.distro = distro;
	this.sep = sep;
	this.volume = volume;
	this.shell = shell;
	this.env = env;
};
$hxClasses["stx.asys.Device"] = stx_asys_Device;
stx_asys_Device.__name__ = "stx.asys.Device";
stx_asys_Device.__interfaces__ = [stx_asys_DeviceApi];
stx_asys_Device.make = function(distro,sep,volume,shell,env) {
	return new stx_asys_Device(distro,sep,volume,shell,env);
};
stx_asys_Device.make0 = function(distro) {
	var sep = stx_asys_Distro.is_windows(distro) ? "\\\\" : "/";
	return stx_asys_Device.make(distro,sep,new stx_fs_pack_Volume(sep),new stx_asys_Shell(),new stx_asys_Env());
};
stx_asys_Device.make1 = function(distro,sep,volume,shell,env) {
	var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,distro);
	var v = stx_asys_Distro._new();
	var distro;
	if(self._hx_index == 0) {
		var v1 = self.v;
		distro = v1;
	} else {
		distro = v;
	}
	var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,sep);
	var v = stx_asys_Distro.is_windows(distro) ? "\\\\" : "/";
	var sep;
	if(self._hx_index == 0) {
		var v1 = self.v;
		sep = v1;
	} else {
		sep = v;
	}
	var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,volume);
	var tmp;
	if(self._hx_index == 0) {
		var v = self.v;
		tmp = v;
	} else {
		tmp = volume;
	}
	var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,shell);
	var v = new stx_asys_Shell();
	var tmp1;
	if(self._hx_index == 0) {
		var v1 = self.v;
		tmp1 = v1;
	} else {
		tmp1 = v;
	}
	var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,env);
	var v = new stx_asys_Env();
	var tmp2;
	if(self._hx_index == 0) {
		var v1 = self.v;
		tmp2 = v1;
	} else {
		tmp2 = v;
	}
	return stx_asys_Device.make(distro,sep,tmp,tmp1,tmp2);
};
stx_asys_Device.unit = function() {
	return stx_asys_Device.make0(stx_asys_Distro._new());
};
stx_asys_Device.local = function() {
	return { device : stx_asys_Device.make0(stx_asys_Distro._new())};
};
stx_asys_Device.windows = function() {
	return { device : stx_asys_Device.make0("Windows")};
};
stx_asys_Device.linux = function() {
	return { device : stx_asys_Device.make0("Linux")};
};
stx_asys_Device.prototype = {
	distro: null
	,sep: null
	,volume: null
	,shell: null
	,env: null
	,toHasDevice: function() {
		return { device : this};
	}
	,__class__: stx_asys_Device
};
var stx_asys_Distro = {};
stx_asys_Distro.unit = function() {
	return stx_asys_Distro._new();
};
stx_asys_Distro._new = function() {
	var this1;
	var _g = Sys.systemName();
	switch(_g) {
	case "BSD":
		this1 = "BSD";
		break;
	case "Linux":
		this1 = "Linux";
		break;
	case "Mac":
		this1 = "Mac";
		break;
	case "Windows":
		this1 = "Windows";
		break;
	default:
		var x = _g;
		var this2 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/asys/Distro.hx", lineNumber : 18, className : "stx.asys._Distro.Distro_Impl_", methodName : "_new"});
		throw haxe_Exception.thrown(stx_fail_Refuse.make(haxe_ds_Option.Some(stx_fail_DeclineSum.INTERIOR(stx_nano_CTR.apply(function(_) {
			return stx_asys_core_Errors.e_unknown_distro(_,x);
		},stx_Nano.digests(stx_nano_Wildcard.__)))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this2)));
	}
	return this1;
};
stx_asys_Distro.is_windows = function(this1) {
	return this1 == "Windows";
};
var stx_asys_EnvApi = function() { };
$hxClasses["stx.asys.EnvApi"] = stx_asys_EnvApi;
stx_asys_EnvApi.__name__ = "stx.asys.EnvApi";
stx_asys_EnvApi.__isInterface__ = true;
stx_asys_EnvApi.prototype = {
	get: null
	,toEnv: null
	,__class__: stx_asys_EnvApi
};
var stx_asys_Env = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["stx.asys.Env"] = stx_asys_Env;
stx_asys_Env.__name__ = "stx.asys.Env";
stx_asys_Env.__interfaces__ = [stx_asys_EnvApi];
stx_asys_Env.Shim = function(map) {
	return new stx_asys_env_term_Shim(map);
};
stx_asys_Env.__super__ = stx_pico_Clazz;
stx_asys_Env.prototype = $extend(stx_pico_Clazz.prototype,{
	get: function(str) {
		return eu_ohmrun_fletcher_Produce.fromFunXRes(function() {
			try {
				return stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,stx_System.sys(stx_nano_Wildcard.__).env(str));
			} catch( _g ) {
				var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/asys/Env.hx", lineNumber : 14, className : "stx.asys.Env", methodName : "get"});
				return stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_ASysFailureSum.E_ASys_EnvironmentVariablesInaccessible(str))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1))),{ fileName : "stx/asys/Env.hx", lineNumber : 14, className : "stx.asys.Env", methodName : "get"});
			}
		});
	}
	,toEnv: function() {
		return this;
	}
	,__class__: stx_asys_Env
});
var stx_asys_HasDeviceApi = function() { };
$hxClasses["stx.asys.HasDeviceApi"] = stx_asys_HasDeviceApi;
stx_asys_HasDeviceApi.__name__ = "stx.asys.HasDeviceApi";
stx_asys_HasDeviceApi.__isInterface__ = true;
stx_asys_HasDeviceApi.prototype = {
	device: null
	,__class__: stx_asys_HasDeviceApi
};
var stx_asys_LocalHost = {};
stx_asys_LocalHost._new = function() {
	var this1 = stx_asys_Device.make0(stx_asys_Distro._new());
	return this1;
};
stx_asys_LocalHost.unit = function() {
	return stx_asys_LocalHost._new();
};
var stx_asys_Logging = function() { };
$hxClasses["stx.asys.Logging"] = stx_asys_Logging;
stx_asys_Logging.__name__ = "stx.asys.Logging";
stx_asys_Logging.log = function(wildcard) {
	var self = stx_pico_OptionLift.map(stx_pkg_Pkg.source(stx_PkgLift.pkg(stx_nano_Wildcard.__,{ fileName : "stx/asys/Logging.hx", lineNumber : 9, className : "stx.asys.Logging", methodName : "log"})),function(scope) {
		var this1 = stx_Log.unit();
		var tag = scope.pack.join("/");
		var this2 = this1;
		var fn = function(pos) {
			return pos.with_stamp(function(stamp) {
				return stamp.tag(tag);
			});
		};
		return function(value,pos) {
			this2(value,fn(pos));
		};
	});
	if(self._hx_index == 0) {
		var v = self.v;
		return v;
	} else {
		return stx_Log.unit();
	}
};
var stx_asys_Packet = {};
stx_asys_Packet.make = function(data,type) {
	return { data : data, type : type};
};
stx_asys_Packet.fromString = function(str) {
	return { data : stx_nano_SprigSum.Textal(str), type : "ln"};
};
stx_asys_Packet.toBytes = function(this1) {
	var self = stx_nano_ByteSize.get_width(this1.type);
	var length;
	if(self._hx_index == 0) {
		var v = self.v;
		length = v;
	} else {
		length = stx_nano_Sprig.fold(this1.data,function(s) {
			return s.length;
		},function(n) {
			return stx_nano_Numeric.get_width(n);
		});
	}
	var bytes = new haxe_io_Bytes(new ArrayBuffer(length));
	var _g = this1.data;
	switch(_g._hx_index) {
	case 0:
		var t = _g.str;
		bytes = haxe_io_Bytes.ofString(t);
		break;
	case 1:
		var _g1 = _g.byte;
		switch(_g1._hx_index) {
		case 0:
			var int = _g1.int;
			bytes.setInt32(0,int);
			break;
		case 1:
			var int = _g1.int;
			bytes.setInt64(0,int);
			break;
		case 2:
			var f = _g1.f;
			bytes.setDouble(0,f);
			break;
		}
		break;
	}
	return bytes;
};
var stx_asys_ShellApi = function() { };
$hxClasses["stx.asys.ShellApi"] = stx_asys_ShellApi;
stx_asys_ShellApi.__name__ = "stx.asys.ShellApi";
stx_asys_ShellApi.__isInterface__ = true;
stx_asys_ShellApi.prototype = {
	print: null
	,println: null
	,stdin: null
	,stderr: null
	,stdout: null
	,cwd: null
	,byte: null
	,__class__: stx_asys_ShellApi
};
var stx_asys_Shell = function() {
	stx_pico_Clazz.call(this);
	this.cwd = new stx_asys_Cwd();
};
$hxClasses["stx.asys.Shell"] = stx_asys_Shell;
stx_asys_Shell.__name__ = "stx.asys.Shell";
stx_asys_Shell.__interfaces__ = [stx_asys_ShellApi];
stx_asys_Shell.unit = function() {
	return new stx_asys_Shell();
};
stx_asys_Shell.__super__ = stx_pico_Clazz;
stx_asys_Shell.prototype = $extend(stx_pico_Clazz.prototype,{
	cwd: null
	,print: function(v) {
		return tink_core_Future.irreversible(function(cb) {
			process.stdout.write(Std.string(v));
			cb(null);
		});
	}
	,println: function(v) {
		return tink_core_Future.irreversible(function(cb) {
			process.stdout.write(Std.string(v));
			process.stdout.write("\n");
			cb(null);
		});
	}
	,stdin: function() {
		return stx_io_Input.make0(stx_io_StdIn._new(new _$Sys_FileInput(0)));
	}
	,stdout: function() {
		return stx_io_Output._new(stx_io_StdOut._new(new _$Sys_FileOutput(1)));
	}
	,stderr: function() {
		return stx_io_Output._new(stx_io_StdOut._new(new _$Sys_FileOutput(2)));
	}
	,byte: function() {
		var echo = false;
		return eu_ohmrun_fletcher_Produce.fromFunXR(function() {
			return Sys.getChar(echo);
		});
	}
	,__class__: stx_asys_Shell
});
var stx_asys_UserApi = function() { };
$hxClasses["stx.asys.UserApi"] = stx_asys_UserApi;
stx_asys_UserApi.__name__ = "stx.asys.UserApi";
stx_asys_UserApi.__isInterface__ = true;
stx_asys_UserApi.prototype = {
	home: null
	,__class__: stx_asys_UserApi
};
var stx_asys_User = function(device) {
	stx_pico_Clazz.call(this);
	this.device = device;
};
$hxClasses["stx.asys.User"] = stx_asys_User;
stx_asys_User.__name__ = "stx.asys.User";
stx_asys_User.__interfaces__ = [stx_asys_UserApi];
stx_asys_User.__super__ = stx_pico_Clazz;
stx_asys_User.prototype = $extend(stx_pico_Clazz.prototype,{
	device: null
	,home: function() {
		var _gthis = this;
		var home = null;
		var parser = function(str) {
			return eu_ohmrun_fletcher_ProduceLift.errate(eu_ohmrun_fletcher_Produce.flat_map(eu_ohmrun_fletcher_AttemptLift.provide(stx_fs_Path.parse(str),_gthis),stx_fs_path_Raw._.toDirectory),function(x) {
				return stx_fail_ASysFailureSum.E_ASys_Fs(stx_fail_FsFailureSum.E_Fs_Path(x));
			});
		};
		if(stx_asys_Distro.is_windows(this.device.distro)) {
			home = process.env["USERPROFILE"];
			if(home == null) {
				var drive = process.env["HOMEDRIVE"];
				var path = process.env["HOMEPATH"];
				if(drive != null && path != null) {
					home = drive + path;
				}
			}
			if(home == null) {
				var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/asys/User.hx", lineNumber : 30, className : "stx.asys.User", methodName : "home"});
				return eu_ohmrun_fletcher_Produce.fromRes(stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_ASysFailureSum.E_ASys_UndefinedHomePath)),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1))),{ fileName : "stx/asys/User.hx", lineNumber : 30, className : "stx.asys.User", methodName : "home"}));
			} else {
				return parser(home);
			}
		} else {
			home = process.env["HOME"];
			if(home == null) {
				var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/asys/User.hx", lineNumber : 36, className : "stx.asys.User", methodName : "home"});
				return eu_ohmrun_fletcher_Produce.fromRes(stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_ASysFailureSum.E_ASys_UndefinedHomePath)),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1))),{ fileName : "stx/asys/User.hx", lineNumber : 36, className : "stx.asys.User", methodName : "home"}));
			} else {
				return parser(home);
			}
		}
	}
	,__class__: stx_asys_User
});
var stx_asys_WorkingDirectory = {};
stx_asys_WorkingDirectory._new = function(self) {
	var this1 = self;
	return this1;
};
var stx_asys_core_EUnknownDistro = function(name) {
	stx_fail_Digest.call(this,"01FRQ6VSNTCEKZYDAZG4G560KP","No distro named " + name);
};
$hxClasses["stx.asys.core.EUnknownDistro"] = stx_asys_core_EUnknownDistro;
stx_asys_core_EUnknownDistro.__name__ = "stx.asys.core.EUnknownDistro";
stx_asys_core_EUnknownDistro.__super__ = stx_fail_Digest;
stx_asys_core_EUnknownDistro.prototype = $extend(stx_fail_Digest.prototype,{
	__class__: stx_asys_core_EUnknownDistro
});
var stx_asys_core_EInputParserWaitingOnAnUninitializedProcess = function() {
	stx_fail_Digest.call(this,"01FS6V9R64369F8T5WFZ3S7VRS","Process is unitialized and the Input Parser has requested no input");
};
$hxClasses["stx.asys.core.EInputParserWaitingOnAnUninitializedProcess"] = stx_asys_core_EInputParserWaitingOnAnUninitializedProcess;
stx_asys_core_EInputParserWaitingOnAnUninitializedProcess.__name__ = "stx.asys.core.EInputParserWaitingOnAnUninitializedProcess";
stx_asys_core_EInputParserWaitingOnAnUninitializedProcess.__super__ = stx_fail_Digest;
stx_asys_core_EInputParserWaitingOnAnUninitializedProcess.prototype = $extend(stx_fail_Digest.prototype,{
	__class__: stx_asys_core_EInputParserWaitingOnAnUninitializedProcess
});
var stx_asys_core_EInputUnexpectedEnd = function() {
	stx_fail_Digest.call(this,"01FS95PFFZX8Y6MX1J0JEXAT4Y","Input ended unexpectedly");
};
$hxClasses["stx.asys.core.EInputUnexpectedEnd"] = stx_asys_core_EInputUnexpectedEnd;
stx_asys_core_EInputUnexpectedEnd.__name__ = "stx.asys.core.EInputUnexpectedEnd";
stx_asys_core_EInputUnexpectedEnd.__super__ = stx_fail_Digest;
stx_asys_core_EInputUnexpectedEnd.prototype = $extend(stx_fail_Digest.prototype,{
	__class__: stx_asys_core_EInputUnexpectedEnd
});
var stx_asys_core_EInputUnexpectedResponse = function() {
	stx_fail_Digest.call(this,"01FS95TMG8KDWWA98MEVW74C37","Input ended unexpectedly");
};
$hxClasses["stx.asys.core.EInputUnexpectedResponse"] = stx_asys_core_EInputUnexpectedResponse;
stx_asys_core_EInputUnexpectedResponse.__name__ = "stx.asys.core.EInputUnexpectedResponse";
stx_asys_core_EInputUnexpectedResponse.__super__ = stx_fail_Digest;
stx_asys_core_EInputUnexpectedResponse.prototype = $extend(stx_fail_Digest.prototype,{
	__class__: stx_asys_core_EInputUnexpectedResponse
});
var stx_asys_core_Errors = function() { };
$hxClasses["stx.asys.core.Errors"] = stx_asys_core_Errors;
stx_asys_core_Errors.__name__ = "stx.asys.core.Errors";
stx_asys_core_Errors.e_unknown_distro = function(digests,name) {
	return new stx_asys_core_EUnknownDistro(name);
};
stx_asys_core_Errors.e_input_parser_waiting_on_an_unitialized_process = function(digests) {
	return new stx_asys_core_EInputParserWaitingOnAnUninitializedProcess();
};
stx_asys_core_Errors.e_input_unexpected_end = function(digests) {
	return new stx_asys_core_EInputUnexpectedEnd();
};
stx_asys_core_Errors.e_input_unexpected_response = function(digests) {
	return new stx_asys_core_EInputUnexpectedResponse();
};
var stx_asys_env_term_Shim = function(map) {
	stx_asys_Env.call(this);
	this.map = map;
};
$hxClasses["stx.asys.env.term.Shim"] = stx_asys_env_term_Shim;
stx_asys_env_term_Shim.__name__ = "stx.asys.env.term.Shim";
stx_asys_env_term_Shim.__super__ = stx_asys_Env;
stx_asys_env_term_Shim.prototype = $extend(stx_asys_Env.prototype,{
	map: null
	,get: function(string) {
		return eu_ohmrun_fletcher_Produce.pure(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,this.map.h[string]));
	}
	,__class__: stx_asys_env_term_Shim
});
var stx_bake_BakingLift = function() { };
$hxClasses["stx.bake.BakingLift"] = stx_bake_BakingLift;
stx_bake_BakingLift.__name__ = "stx.bake.BakingLift";
stx_bake_BakingLift.get_build_location = function(self) {
	var this1 = stx_bake_Logging.log(stx_nano_Wildcard.__);
	var fn = function(pos) {
		return pos.with_stamp(function(stamp) {
			return stamp.relevel(2);
		});
	};
	(function(value,pos) {
		this1(value,fn(pos));
	})(new stx_log_EntryCtr().pure(self.get_target()),stx_log_LogPosition.fromPos({ fileName : "stx/bake/Baking.hx", lineNumber : 61, className : "stx.bake.BakingLift", methodName : "get_build_location"}));
	return stx_pico_OptionLift.flat_map(stx_pico_OptionLift.flat_map(self.get_target(),function(target) {
		var _g = function(tI,tII) {
			return stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,tI,tII);
		};
		var tI = target;
		var tmp = function(tII) {
			return _g(tI,tII);
		};
		return stx_pico_OptionLift.map(stx_nano_CompilerTargetLift.toBuildDirective(target),tmp);
	}),stx_nano_lift_LiftNano.decouple(stx_nano_Wildcard.__,function(target,id) {
		var this1 = stx_bake_Logging.log(stx_nano_Wildcard.__);
		var fn = function(pos) {
			return pos.with_stamp(function(stamp) {
				return stamp.relevel(1);
			});
		};
		(function(value,pos) {
			this1(value,fn(pos));
		})(new stx_log_EntryCtr().pure(id),stx_log_LogPosition.fromPos({ fileName : "stx/bake/Baking.hx", lineNumber : 66, className : "stx.bake.BakingLift", methodName : "get_build_location"}));
		var arr = ["--" + id,"-" + id];
		var idx = stx_lift_ArrayLift.lfold(arr,function(n,m) {
			var idx;
			switch(m._hx_index) {
			case 0:
				var t = m.v;
				idx = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,t);
				break;
			case 1:
				var t = function(x) {
					return n == x;
				};
				var i = function(self) {
					var index = 0;
					var ok = false;
					var _g = 0;
					while(_g < self.length) {
						var e = self[_g];
						++_g;
						if(t(e)) {
							ok = true;
							break;
						}
						++index;
					}
					if(ok) {
						return index;
					} else {
						return -1;
					}
				};
				var value = stx_nano_Cluster.toIterable(self.args);
				var i1 = i(((value) instanceof Array) ? value : null);
				idx = i1 == -1 ? haxe_ds_Option.None : haxe_ds_Option.Some(i1);
				break;
			}
			return idx;
		},haxe_ds_Option.None);
		return stx_pico_OptionLift.map(stx_pico_OptionLift.flat_map(idx,function(i) {
			if(target._hx_index == 11) {
				return haxe_ds_Option.None;
			} else {
				return haxe_ds_Option.Some(self.args[i + 1]);
			}
		}),function(tail) {
			return haxe_io_Path.addTrailingSlash(self.root.toString()) + tail;
		});
	}));
};
stx_bake_BakingLift.get_build_directory = function(self) {
	return stx_pico_OptionLift.flat_map(stx_bake_BakingLift.get_build_location(self),function(string) {
		return stx_pico_OptionLift.map(self.get_target(),function(target) {
			return stx_nano_lift_LiftNano.if_else(stx_nano_CompilerTargetLift.uses_file(target),function() {
				return haxe_io_Path.directory(string);
			},function() {
				return string;
			});
		});
	});
};
stx_bake_BakingLift.get_main = function(baking) {
	var result = stx_nano_ClusterLift.lfold(baking.args,function(n,m) {
		var _g = m.data;
		if(m.done) {
			return m;
		} else {
			return stx_nano_lift_LiftNano.if_else(stx_lift_ArrayLift.any(["-main","--main"],function(str) {
				return str == m.data;
			}),function() {
				return { done : true, data : n};
			},function() {
				return { done : false, data : n};
			});
		}
	},{ done : false, data : null});
	if(result.done == true) {
		return stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,result.data);
	} else {
		return stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,null);
	}
};
var stx_bake_Logging = function() { };
$hxClasses["stx.bake.Logging"] = stx_bake_Logging;
stx_bake_Logging.__name__ = "stx.bake.Logging";
stx_bake_Logging.log = function(wildcard) {
	var pkg = stx_PkgLift.pkg(stx_nano_Wildcard.__,{ fileName : "stx/bake/Logging.hx", lineNumber : 9, className : "stx.bake.Logging", methodName : "log"});
	var self = stx_pico_OptionLift.map(stx_pkg_Pkg.source(pkg),function(scope) {
		var this1 = stx_Log.unit();
		var tag = scope.pack.join("/");
		var this2 = this1;
		var fn = function(pos) {
			return pos.with_stamp(function(stamp) {
				return stamp.tag(tag);
			});
		};
		return function(value,pos) {
			this2(value,fn(pos));
		};
	});
	if(self._hx_index == 0) {
		var v = self.v;
		return v;
	} else {
		return stx_Log.unit();
	}
};
var stx_bake_makro_Generate = function() { };
$hxClasses["stx.bake.makro.Generate"] = stx_bake_makro_Generate;
stx_bake_makro_Generate.__name__ = "stx.bake.makro.Generate";
stx_bake_makro_Generate.apply = function(self,tdef) {
	var printer = new haxe_macro_Printer();
	var to_disk = printer.printTypeDefinition(tdef);
	var gen = "src.gen.haxe".split(".");
	var name = tdef.name;
	var classes = stx_nano_lift_LiftPath.into(self.root,stx_nano_OneOrMany.fromArray(gen));
	var str = stx_nano_lift_LiftPath.into(stx_nano_lift_LiftPath.into(classes,stx_nano_OneOrMany.fromArray(tdef.pack)),stx_nano_OneOrMany.fromT("" + name + ".hx"));
	var this1 = stx_bake_Logging.log(stx_nano_Wildcard.__);
	var fn = function(pos) {
		return pos.with_stamp(function(stamp) {
			return stamp.relevel(3);
		});
	};
	(function(value,pos) {
		this1(value,fn(pos));
	})(stx_log_Stringify.fromString("building: " + Std.string(classes) + " " + Std.string(str))(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/bake/makro/Generate.hx", lineNumber : 11, className : "stx.bake.makro.Generate", methodName : "apply"}));
	try {
		sys_FileSystem.createDirectory(stx_nano_lift_LiftPath.into(classes,stx_nano_OneOrMany.fromArray(tdef.pack)).toString());
		js_node_Fs.writeFileSync(str.toString(),to_disk);
	} catch( _g ) {
		var e = haxe_Exception.caught(_g);
		var this2 = stx_bake_Logging.log(stx_nano_Wildcard.__);
		var fn1 = function(pos) {
			return pos.with_stamp(function(stamp) {
				return stamp.relevel(6);
			});
		};
		(function(value,pos) {
			this2(value,fn1(pos));
		})(stx_log_Stringify.fromString(e.toString())(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/bake/makro/Generate.hx", lineNumber : 18, className : "stx.bake.makro.Generate", methodName : "apply"}));
		throw haxe_Exception.thrown(e);
	}
};
var stx_bake_makro_GetTarget = function() { };
$hxClasses["stx.bake.makro.GetTarget"] = stx_bake_makro_GetTarget;
stx_bake_makro_GetTarget.__name__ = "stx.bake.makro.GetTarget";
stx_bake_makro_GetTarget.apply = function(build) {
	var enm = stx_nano_Enum._new(stx_nano_CompilerTargetSum);
	var _this = stx_nano_Enum.constructs(enm);
	var f = haxe_ds_Either.Right;
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = f(_this[i]);
	}
	var _this = result;
	var _e = enm;
	var _g = function(cons,args) {
		return stx_nano_Enum.construct(_e,cons,args);
	};
	var args = [];
	var f = function(cons) {
		return _g(cons,args);
	};
	var result = new Array(_this.length);
	var _g1 = 0;
	var _g2 = _this.length;
	while(_g1 < _g2) {
		var i = _g1++;
		result[i] = f(_this[i]);
	}
	var types = result;
	var result = new Array(types.length);
	var _g1 = 0;
	var _g2 = types.length;
	while(_g1 < _g2) {
		var i = _g1++;
		result[i] = stx_pico_OptionLift.map(types[i],stx_fn_UnaryLift.broach(stx_nano_CompilerTarget._.toBuildDirective));
	}
	var exprs = result;
	var target = haxe_ds_Option.None;
	var _g1 = 0;
	while(_g1 < exprs.length) {
		var expr = exprs[_g1];
		++_g1;
		var opt = $iterator(stx_pico_OptionLift)(expr);
		while(opt.hasNext()) {
			var opt1 = opt.next();
			var str = $iterator(stx_pico_OptionLift)(stx_nano_CoupleLift.snd(opt1));
			while(str.hasNext()) {
				var str1 = [str.next()];
				var self = build.args;
				var idx = (function(t) {
					return function(self) {
						var index = 0;
						var ok = false;
						var _g = 0;
						while(_g < self.length) {
							var e = self[_g];
							++_g;
							if(t[0](e)) {
								ok = true;
								break;
							}
							++index;
						}
						if(ok) {
							return index;
						} else {
							return -1;
						}
					};
				})([(function(str) {
					return function(x) {
						if(x != "-" + str[0]) {
							return x == "--" + str[0];
						} else {
							return true;
						}
					};
				})(str1)]);
				var value = stx_nano_Cluster.toIterable(self);
				var idx1 = idx(((value) instanceof Array) ? value : null);
				if(idx1 != -1) {
					target = haxe_ds_Option.Some(stx_nano_CoupleLift.fst(opt1));
					break;
				}
			}
		}
	}
	return target;
};
var stx_config_Logging = function() { };
$hxClasses["stx.config.Logging"] = stx_config_Logging;
stx_config_Logging.__name__ = "stx.config.Logging";
stx_config_Logging.log = function(wildcard) {
	var self = stx_pico_OptionLift.map(stx_pkg_Pkg.source(stx_PkgLift.pkg(stx_nano_Wildcard.__,{ fileName : "stx/config/Logging.hx", lineNumber : 9, className : "stx.config.Logging", methodName : "log"})),function(scope) {
		var this1 = stx_Log.unit();
		var tag = scope.pack.join("/");
		var this2 = this1;
		var fn = function(pos) {
			return pos.with_stamp(function(stamp) {
				return stamp.tag(tag);
			});
		};
		return function(value,pos) {
			this2(value,fn(pos));
		};
	});
	if(self._hx_index == 0) {
		var v = self.v;
		return v;
	} else {
		return stx_Log.unit();
	}
};
var stx_config_core_Module = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["stx.config.core.Module"] = stx_config_core_Module;
stx_config_core_Module.__name__ = "stx.config.core.Module";
stx_config_core_Module.__super__ = stx_pico_Clazz;
stx_config_core_Module.prototype = $extend(stx_pico_Clazz.prototype,{
	Directory: function() {
		return stx_config_term_Directory.unit();
	}
	,File: function() {
		return stx_config_term_File.unit();
	}
	,Resource: function() {
		return stx_config_term_Resource.unit();
	}
	,__class__: stx_config_core_Module
});
var stx_config_term_Directory = {};
stx_config_term_Directory._new = function() {
	var self = eu_ohmrun_fletcher_AttemptArg.fromArgFun1Produce(function(state) {
		var bake = stx_Bake.bake(stx_nano_Wildcard.__);
		var this1 = stx_config_Logging.log(stx_nano_Wildcard.__);
		var fn = function(pos) {
			return pos.with_stamp(function(stamp) {
				return stamp.relevel(2);
			});
		};
		(function(value,pos) {
			this1(value,fn(pos));
		})(new stx_log_EntryCtr().pure(bake.defines),stx_log_LogPosition.fromPos({ fileName : "stx/config/term/Directory.hx", lineNumber : 9, className : "stx.config.term._Directory.Directory_Impl_", methodName : "_new"}));
		var dir = stx_nano_ClusterLift.map_filter(bake.defines,function(x) {
			if(x.key == "stx.config.Directory") {
				return haxe_ds_Option.Some(x.val);
			} else {
				return haxe_ds_Option.None;
			}
		});
		return eu_ohmrun_fletcher_Produce.bind_fold(stx_nano_Cluster.toIter(stx_nano_ClusterLift.map(dir,function(name) {
			var _g = function(tI,tII) {
				return stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,tI,tII);
			};
			var tI = name;
			var self = function(tII) {
				return _g(tI,tII);
			};
			return eu_ohmrun_fletcher_ProduceLift.map((stx_fn_UnaryLift.then(stx_Fn.f(stx_nano_Wildcard.__,stx_fn_F.fromF1R(stx_fs_Path.parse)),function(x) {
				return eu_ohmrun_fletcher_ProduceLift.errate(eu_ohmrun_fletcher_AttemptLift.produce(x,state),function(e) {
					return stx_fail_FsFailure.fromPathFailure(e);
				});
			}))(name),self);
		})),function(next,memo) {
			return eu_ohmrun_fletcher_ProduceLift.attempt(next,eu_ohmrun_fletcher_Attempt.fromFun1Produce(function(couple) {
				var that = eu_ohmrun_fletcher_AttemptLift.produce(eu_ohmrun_fletcher_AttemptLift.map(eu_ohmrun_fletcher_AttemptLift.map(eu_ohmrun_fletcher_AttemptLift.command(stx_fs_path_RawLift.absolutize(stx_nano_CoupleLift.snd(couple)),eu_ohmrun_fletcher_CommandArg.toCommand(eu_ohmrun_fletcher_CommandArg.fromCommandFun1Execute(function(address) {
					return eu_ohmrun_fletcher_ProduceLift.point(eu_ohmrun_fletcher_AttemptLift.produce(stx_fs_path_AddressLift.is_directory(address),state),function(b) {
						return stx_LiftIf.if_else(b,function() {
							var this1 = eu_ohmrun_Fletcher.pure(stx_nano_Report.unit());
							return this1;
						},function() {
							var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/config/term/Directory.hx", lineNumber : 27, className : "stx.config.term._Directory.Directory_Impl_", methodName : "_new"});
							var this2 = eu_ohmrun_Fletcher.pure(stx_nano_Report.pure(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_PathFailureSum.E_Path_ExpectedDirectory)),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1))));
							return eu_ohmrun_fletcher_ExecuteLift.errate(this2,function(e) {
								return stx_fail_FsFailure.fromPathFailure(e);
							});
						});
					});
				}))),function(address) {
					return stx_fs_path_AddressLift.toDirectory(address);
				}),function(directory) {
					return stx_nano_ClusterLift.snoc(memo,stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,stx_nano_CoupleLift.fst(couple),directory));
				}),state);
				return that;
			}));
		},stx_nano_Cluster.unit());
	});
	var self1 = stx_LiftAssert.assert(stx_nano_Wildcard.__,{ fileName : "eu/ohmrun/fletcher/Attempt.hx", lineNumber : 48, className : "eu.ohmrun.fletcher._Attempt.Attempt_Impl_", methodName : "bump"}).module.exists().apply(self);
	if(self1 != null) {
		switch(self1._hx_index) {
		case 0:
			var v = self1.v;
			throw haxe_Exception.thrown(v);
		case 1:
			break;
		}
	}
	var this1;
	switch(self._hx_index) {
	case 0:
		var r = self.r;
		this1 = eu_ohmrun_fletcher_Attempt.pure(r);
		break;
	case 1:
		var res = self.res;
		this1 = eu_ohmrun_fletcher_Attempt.fromRes(res);
		break;
	case 2:
		var fn = self.fn;
		this1 = eu_ohmrun_fletcher_Attempt.fromFun1Res(fn);
		break;
	case 3:
		var fn = self.fn;
		this1 = eu_ohmrun_fletcher_Attempt.fromFun1Produce(fn);
		break;
	case 4:
		var fn = self.fn;
		this1 = eu_ohmrun_fletcher_Attempt.fromUnary1Produce(fn);
		break;
	case 5:
		var fn = self.fn;
		this1 = eu_ohmrun_fletcher_Attempt.fromFun1Provide(fn);
		break;
	}
	var this2 = eu_ohmrun_fletcher_AttemptLift.map(eu_ohmrun_fletcher_AttemptLift.errate(this1,function(e) {
		return stx_fail_ConfigFailure.fromFsFailure(e);
	}),function(cluster) {
		return stx_nano_Ensemble.fromClusterCouple(cluster);
	});
	return this2;
};
stx_config_term_Directory.unit = function() {
	return stx_config_term_Directory._new();
};
var stx_config_term_File = {};
stx_config_term_File._new = function() {
	var this1;
	var self = eu_ohmrun_fletcher_AttemptArg.fromArgFun1Produce(function(state) {
		var bake = stx_Bake.bake(stx_nano_Wildcard.__);
		var this1 = stx_config_Logging.log(stx_nano_Wildcard.__);
		var fn = function(pos) {
			return pos.with_stamp(function(stamp) {
				return stamp.relevel(2);
			});
		};
		(function(value,pos) {
			this1(value,fn(pos));
		})(new stx_log_EntryCtr().pure(bake.defines),stx_log_LogPosition.fromPos({ fileName : "stx/config/term/File.hx", lineNumber : 9, className : "stx.config.term._File.File_Impl_", methodName : "_new"}));
		var file = stx_nano_ClusterLift.map_filter(bake.defines,function(x) {
			if(x.key == "stx.config.File") {
				return haxe_ds_Option.Some(x.val);
			} else {
				return haxe_ds_Option.None;
			}
		});
		var self = eu_ohmrun_fletcher_Produce.bind_fold(stx_nano_Cluster.toIter(stx_nano_ClusterLift.map(file,function(name) {
			var _g = function(tI,tII) {
				return stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,tI,tII);
			};
			var tI = name;
			var self = function(tII) {
				return _g(tI,tII);
			};
			return eu_ohmrun_fletcher_ProduceLift.map((stx_fn_UnaryLift.then(stx_Fn.f(stx_nano_Wildcard.__,stx_fn_F.fromF1R(stx_fs_Path.parse)),function(x) {
				return eu_ohmrun_fletcher_ProduceLift.errate(eu_ohmrun_fletcher_AttemptLift.produce(x,state),function(e) {
					return stx_fail_FsFailure.fromPathFailure(e);
				});
			}))(name),self);
		})),function(next,memo) {
			return eu_ohmrun_fletcher_ProduceLift.map(eu_ohmrun_fletcher_ProduceLift.attempt(next,eu_ohmrun_fletcher_Attempt.fromFun1Produce(function(couple) {
				var kind = stx_fs_path_RawLift.kind(stx_nano_CoupleLift.snd(couple));
				var self = stx_LiftIf.if_else(kind.absolute,function() {
					return eu_ohmrun_fletcher_ProduceLift.errate(eu_ohmrun_fletcher_Produce.fromRes(stx_fs_path_RawLift.toArchive(stx_nano_CoupleLift.snd(couple))),function(e) {
						return stx_fail_FsFailure.fromPathFailure(e);
					});
				},function() {
					return eu_ohmrun_fletcher_ProduceLift.adjust(eu_ohmrun_fletcher_ProduceLift.adjust(eu_ohmrun_fletcher_ProduceLift.errate(eu_ohmrun_fletcher_AttemptLift.produce(state.device.shell.cwd.pop(),state),function(e) {
						return e;
					}),function(dir) {
						var self = stx_fs_path_RawLift.toAttachment(stx_nano_CoupleLift.snd(couple));
						var _g = function(tI,tII) {
							return stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,tI,tII);
						};
						var tI = dir;
						var fn = function(tII) {
							return _g(tI,tII);
						};
						var self1;
						switch(self._hx_index) {
						case 0:
							var t = self.t;
							self1 = stx_nano_ResSum.Accept(fn(t));
							break;
						case 1:
							var e = self.e;
							self1 = stx_nano_ResSum.Reject(e);
							break;
						}
						var this1 = self1;
						var self = this1;
						var fn = function(e) {
							return stx_fail_FsFailure.fromPathFailure(e);
						};
						var self1;
						switch(self._hx_index) {
						case 0:
							var t = self.t;
							self1 = stx_nano_Res.accept(t);
							break;
						case 1:
							var e = self.e;
							self1 = stx_nano_Res.reject(stx_fail_Refuse.errate(e,fn));
							break;
						}
						var this1 = self1;
						return this1;
					}),stx_nano_lift_LiftNano.decouple(stx_nano_Wildcard.__,function(dir,attachment) {
						return stx_fs_path_DirectoryLift.archive(dir,attachment);
					}));
				});
				var _g = function(tI,tII) {
					return stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,tI,tII);
				};
				var tI = stx_nano_CoupleLift.fst(couple);
				return eu_ohmrun_fletcher_ProduceLift.map(self,function(tII) {
					return _g(tI,tII);
				});
			})),function(couple) {
				return stx_nano_ClusterLift.snoc(memo,couple);
			});
		},stx_nano_Cluster.unit());
		var self1 = eu_ohmrun_fletcher_AttemptArg.fromArgFun1Produce(function(cluster) {
			return eu_ohmrun_fletcher_Produce.bind_fold(stx_nano_Cluster.toIter(cluster),function(next,memo) {
				return eu_ohmrun_fletcher_ProduceLift.map(state.device.volume.read(stx_nano_CoupleLift.snd(next)),function(x) {
					return stx_nano_ClusterLift.snoc(memo,stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,stx_nano_CoupleLift.fst(next),x.readAll().toString()));
				});
			},stx_nano_Cluster.unit());
		});
		var self2 = stx_LiftAssert.assert(stx_nano_Wildcard.__,{ fileName : "eu/ohmrun/fletcher/Attempt.hx", lineNumber : 48, className : "eu.ohmrun.fletcher._Attempt.Attempt_Impl_", methodName : "bump"}).module.exists().apply(self1);
		if(self2 != null) {
			switch(self2._hx_index) {
			case 0:
				var v = self2.v;
				throw haxe_Exception.thrown(v);
			case 1:
				break;
			}
		}
		var self2;
		switch(self1._hx_index) {
		case 0:
			var r = self1.r;
			self2 = eu_ohmrun_fletcher_Attempt.pure(r);
			break;
		case 1:
			var res = self1.res;
			self2 = eu_ohmrun_fletcher_Attempt.fromRes(res);
			break;
		case 2:
			var fn1 = self1.fn;
			self2 = eu_ohmrun_fletcher_Attempt.fromFun1Res(fn1);
			break;
		case 3:
			var fn1 = self1.fn;
			self2 = eu_ohmrun_fletcher_Attempt.fromFun1Produce(fn1);
			break;
		case 4:
			var fn1 = self1.fn;
			self2 = eu_ohmrun_fletcher_Attempt.fromUnary1Produce(fn1);
			break;
		case 5:
			var fn1 = self1.fn;
			self2 = eu_ohmrun_fletcher_Attempt.fromFun1Provide(fn1);
			break;
		}
		return eu_ohmrun_fletcher_ProduceLift.map(eu_ohmrun_fletcher_ProduceLift.errate(eu_ohmrun_fletcher_ProduceLift.attempt(self,self2),function(e) {
			return stx_fail_ConfigFailure.fromFsFailure(e);
		}),function(cluster) {
			return stx_nano_ClusterLift.lfold(cluster,function(next,memo) {
				return stx_nano_Ensemble.set(memo,stx_nano_CoupleLift.fst(next),stx_nano_CoupleLift.snd(next));
			},stx_nano_Ensemble.unit());
		});
	});
	var self1 = stx_LiftAssert.assert(stx_nano_Wildcard.__,{ fileName : "eu/ohmrun/fletcher/Attempt.hx", lineNumber : 48, className : "eu.ohmrun.fletcher._Attempt.Attempt_Impl_", methodName : "bump"}).module.exists().apply(self);
	if(self1 != null) {
		switch(self1._hx_index) {
		case 0:
			var v = self1.v;
			throw haxe_Exception.thrown(v);
		case 1:
			break;
		}
	}
	switch(self._hx_index) {
	case 0:
		var r = self.r;
		this1 = eu_ohmrun_fletcher_Attempt.pure(r);
		break;
	case 1:
		var res = self.res;
		this1 = eu_ohmrun_fletcher_Attempt.fromRes(res);
		break;
	case 2:
		var fn = self.fn;
		this1 = eu_ohmrun_fletcher_Attempt.fromFun1Res(fn);
		break;
	case 3:
		var fn = self.fn;
		this1 = eu_ohmrun_fletcher_Attempt.fromFun1Produce(fn);
		break;
	case 4:
		var fn = self.fn;
		this1 = eu_ohmrun_fletcher_Attempt.fromUnary1Produce(fn);
		break;
	case 5:
		var fn = self.fn;
		this1 = eu_ohmrun_fletcher_Attempt.fromFun1Provide(fn);
		break;
	}
	return this1;
};
stx_config_term_File.unit = function() {
	return stx_config_term_File._new();
};
var stx_config_term_Resource = {};
stx_config_term_Resource.unit = function() {
	return stx_config_term_Resource._new();
};
stx_config_term_Resource._new = function() {
	var bake = stx_Bake.bake(stx_nano_Wildcard.__);
	var resource = stx_nano_Ensemble.fromClusterCouple(stx_nano_ClusterLift.map(stx_nano_ClusterLift.map_filter(bake.defines,function(x) {
		if(x.key == "stx.config.Resource") {
			var pos = { fileName : "stx/config/term/Resource.hx", lineNumber : 12, className : "stx.config.term._Resource.Resource_Impl_", methodName : "_new"};
			return haxe_ds_Option.Some((function(t) {
				haxe_Log.trace(t,pos);
				return t;
			})(x.val));
		} else {
			return haxe_ds_Option.None;
		}
	}),function(x) {
		var pos = stx_nano_lift_LiftNano.here(stx_nano_Wildcard.__,{ fileName : "stx/config/term/Resource.hx", lineNumber : 14, className : "stx.config.term._Resource.Resource_Impl_", methodName : "_new"});
		var str = x;
		if(!stx_nano_Resource.exists(str)) {
			if(pos == null) {
				throw haxe_Exception.thrown("E_ResourceNotFound(" + str + ")");
			} else {
				var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,pos);
				var error = stx_fail_Refuse.make(haxe_ds_Option.Some(stx_fail_DeclineSum.INTERIOR(stx_nano_CTR.apply(function(_) {
					return stx_nano_Digests.e_resource_not_found(_,str);
				},stx_Nano.digests(stx_nano_Wildcard.__)))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1));
				throw haxe_Exception.thrown(error);
			}
		}
		var this1 = str;
		return stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,x,stx_nano_Resource.string(this1));
	}));
	var this1 = eu_ohmrun_fletcher_Produce.pure(resource);
	return this1;
};
var stx_coroutine_Failure = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["stx.coroutine.Failure"] = stx_coroutine_Failure;
stx_coroutine_Failure.__name__ = "stx.coroutine.Failure";
stx_coroutine_Failure.__super__ = stx_pico_Clazz;
stx_coroutine_Failure.prototype = $extend(stx_pico_Clazz.prototype,{
	__class__: stx_coroutine_Failure
});
var stx_coroutine_Logging = function() { };
$hxClasses["stx.coroutine.Logging"] = stx_coroutine_Logging;
stx_coroutine_Logging.__name__ = "stx.coroutine.Logging";
stx_coroutine_Logging.log = function(wildcard) {
	var self = stx_pico_OptionLift.map(stx_pkg_Pkg.source(stx_PkgLift.pkg(stx_nano_Wildcard.__,{ fileName : "stx/coroutine/Logging.hx", lineNumber : 5, className : "stx.coroutine.Logging", methodName : "log"})),function(scope) {
		var this1 = stx_Log.unit();
		var tag = scope.pack.join("/");
		var this2 = this1;
		var fn = function(pos) {
			return pos.with_stamp(function(stamp) {
				return stamp.tag(tag);
			});
		};
		return function(value,pos) {
			this2(value,fn(pos));
		};
	});
	if(self._hx_index == 0) {
		var v = self.v;
		return v;
	} else {
		return stx_Log.unit();
	}
};
var stx_coroutine_Module = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["stx.coroutine.Module"] = stx_coroutine_Module;
stx_coroutine_Module.__name__ = "stx.coroutine.Module";
stx_coroutine_Module.__super__ = stx_pico_Clazz;
stx_coroutine_Module.prototype = $extend(stx_pico_Clazz.prototype,{
	failure: function() {
		return new stx_coroutine_Failure();
	}
	,__class__: stx_coroutine_Module
});
var stx_coroutine_core_CauseSum = $hxEnums["stx.coroutine.core.CauseSum"] = { __ename__:"stx.coroutine.core.CauseSum",__constructs__:null
	,Stop: {_hx_name:"Stop",_hx_index:0,__enum__:"stx.coroutine.core.CauseSum",toString:$estr}
	,Exit: ($_=function(err) { return {_hx_index:1,err:err,__enum__:"stx.coroutine.core.CauseSum",toString:$estr}; },$_._hx_name="Exit",$_.__params__ = ["err"],$_)
};
stx_coroutine_core_CauseSum.__constructs__ = [stx_coroutine_core_CauseSum.Stop,stx_coroutine_core_CauseSum.Exit];
var stx_coroutine_core_Cause = {};
stx_coroutine_core_Cause._new = function(self) {
	var this1 = self;
	return this1;
};
stx_coroutine_core_Cause.fromRefuse = function(e) {
	return stx_coroutine_core_CauseSum.Exit(e);
};
stx_coroutine_core_Cause.early = function(e) {
	return stx_coroutine_core_CauseSum.Exit(e);
};
var stx_coroutine_core_CauseLift = function() { };
$hxClasses["stx.coroutine.core.CauseLift"] = stx_coroutine_core_CauseLift;
stx_coroutine_core_CauseLift.__name__ = "stx.coroutine.core.CauseLift";
stx_coroutine_core_CauseLift.toOption = function(self) {
	switch(self._hx_index) {
	case 0:
		var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/coroutine/core/Cause.hx", lineNumber : 30, className : "stx.coroutine.core.CauseLift", methodName : "toOption"});
		return haxe_ds_Option.Some(stx_fail_Refuse.make(haxe_ds_Option.Some(stx_fail_DeclineSum.INTERIOR(stx_nano_CTR.apply(function(_) {
			return stx_coroutine_core_Errors.e_coroutine_stop(_);
		},stx_Nano.digests(stx_nano_Wildcard.__)))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1)));
	case 1:
		var err = self.err;
		return haxe_ds_Option.Some(err);
	}
};
stx_coroutine_core_CauseLift.next = function(thiz,that) {
	switch(thiz._hx_index) {
	case 0:
		switch(that._hx_index) {
		case 0:
			return stx_coroutine_core_CauseSum.Stop;
		case 1:
			var err = that.err;
			return stx_coroutine_core_CauseSum.Exit(err);
		}
		break;
	case 1:
		var _g = thiz.err;
		if(that._hx_index == 1) {
			var e1 = that.err;
			var e0 = _g;
			return stx_coroutine_core_CauseSum.Exit(stx_fail_Refuse.concat(e0,e1));
		} else {
			var err = _g;
			return stx_coroutine_core_CauseSum.Exit(err);
		}
		break;
	}
};
var stx_coroutine_core_ControlSum = $hxEnums["stx.coroutine.core.ControlSum"] = { __ename__:"stx.coroutine.core.ControlSum",__constructs__:null
	,Push: ($_=function(v) { return {_hx_index:0,v:v,__enum__:"stx.coroutine.core.ControlSum",toString:$estr}; },$_._hx_name="Push",$_.__params__ = ["v"],$_)
	,Quit: ($_=function(v) { return {_hx_index:1,v:v,__enum__:"stx.coroutine.core.ControlSum",toString:$estr}; },$_._hx_name="Quit",$_.__params__ = ["v"],$_)
};
stx_coroutine_core_ControlSum.__constructs__ = [stx_coroutine_core_ControlSum.Push,stx_coroutine_core_ControlSum.Quit];
var stx_coroutine_core_Control = {};
stx_coroutine_core_Control.lift = function(self) {
	return stx_coroutine_core_Control._new(self);
};
stx_coroutine_core_Control._new = function(self) {
	var this1 = self;
	return this1;
};
stx_coroutine_core_Control.unit = function() {
	return stx_coroutine_core_Control.lift(stx_coroutine_core_ControlSum.Quit(haxe_ds_Option.None));
};
stx_coroutine_core_Control.fromError = function(c) {
	return stx_coroutine_core_ControlSum.Quit(haxe_ds_Option.Some(c));
};
stx_coroutine_core_Control.quit = function(c) {
	return stx_coroutine_core_Control.lift(stx_coroutine_core_ControlSum.Quit(c));
};
stx_coroutine_core_Control.push = function(v) {
	return stx_coroutine_core_Control.lift(stx_coroutine_core_ControlSum.Push(v));
};
var stx_coroutine_core_ControlLift = function() { };
$hxClasses["stx.coroutine.core.ControlLift"] = stx_coroutine_core_ControlLift;
stx_coroutine_core_ControlLift.__name__ = "stx.coroutine.core.ControlLift";
stx_coroutine_core_ControlLift.map = function(self,fn) {
	switch(self._hx_index) {
	case 0:
		var v = self.v;
		return stx_coroutine_core_ControlSum.Push(fn(v));
	case 1:
		var v = self.v;
		return stx_coroutine_core_ControlSum.Quit(v);
	}
};
stx_coroutine_core_ControlLift.fold = function(self,push,quit,none) {
	switch(self._hx_index) {
	case 0:
		var v = self.v;
		return push(v);
	case 1:
		var _g = self.v;
		switch(_g._hx_index) {
		case 0:
			var v = _g.v;
			return quit(v);
		case 1:
			return none();
		}
		break;
	}
};
var stx_coroutine_core_CoroutineSum = $hxEnums["stx.coroutine.core.CoroutineSum"] = { __ename__:"stx.coroutine.core.CoroutineSum",__constructs__:null
	,Emit: ($_=function(o,next) { return {_hx_index:0,o:o,next:next,__enum__:"stx.coroutine.core.CoroutineSum",toString:$estr}; },$_._hx_name="Emit",$_.__params__ = ["o","next"],$_)
	,Wait: ($_=function(tran) { return {_hx_index:1,tran:tran,__enum__:"stx.coroutine.core.CoroutineSum",toString:$estr}; },$_._hx_name="Wait",$_.__params__ = ["tran"],$_)
	,Hold: ($_=function(held) { return {_hx_index:2,held:held,__enum__:"stx.coroutine.core.CoroutineSum",toString:$estr}; },$_._hx_name="Hold",$_.__params__ = ["held"],$_)
	,Halt: ($_=function(r) { return {_hx_index:3,r:r,__enum__:"stx.coroutine.core.CoroutineSum",toString:$estr}; },$_._hx_name="Halt",$_.__params__ = ["r"],$_)
};
stx_coroutine_core_CoroutineSum.__constructs__ = [stx_coroutine_core_CoroutineSum.Emit,stx_coroutine_core_CoroutineSum.Wait,stx_coroutine_core_CoroutineSum.Hold,stx_coroutine_core_CoroutineSum.Halt];
var stx_coroutine_core_ReturnSum = $hxEnums["stx.coroutine.core.ReturnSum"] = { __ename__:"stx.coroutine.core.ReturnSum",__constructs__:null
	,Terminated: ($_=function(c) { return {_hx_index:0,c:c,__enum__:"stx.coroutine.core.ReturnSum",toString:$estr}; },$_._hx_name="Terminated",$_.__params__ = ["c"],$_)
	,Production: ($_=function(v) { return {_hx_index:1,v:v,__enum__:"stx.coroutine.core.ReturnSum",toString:$estr}; },$_._hx_name="Production",$_.__params__ = ["v"],$_)
};
stx_coroutine_core_ReturnSum.__constructs__ = [stx_coroutine_core_ReturnSum.Terminated,stx_coroutine_core_ReturnSum.Production];
var stx_coroutine_core_CoroutineLift = function() { };
$hxClasses["stx.coroutine.core.CoroutineLift"] = stx_coroutine_core_CoroutineLift;
stx_coroutine_core_CoroutineLift.__name__ = "stx.coroutine.core.CoroutineLift";
stx_coroutine_core_CoroutineLift.append = function(prc0,prc1) {
	switch(prc0._hx_index) {
	case 0:
		var head = prc0.o;
		var tail = prc0.next;
		return stx_coroutine_core_CoroutineSum.Emit(head,stx_coroutine_core_CoroutineLift.append(tail,prc1));
	case 1:
		var arw = prc0.tran;
		var prc11 = prc1;
		return stx_coroutine_core_CoroutineSum.Wait(stx_coroutine_core_TransmissionLift.mod(arw,function(prc0) {
			return stx_coroutine_core_CoroutineLift.append(prc0,prc11);
		}));
	case 2:
		var ft = prc0.held;
		var prc12 = prc1;
		return stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held._new(eu_ohmrun_fletcher_Provide._.convert(ft,eu_ohmrun_fletcher_Convert.Fun(function(prc0) {
			return stx_coroutine_core_CoroutineLift.append(prc0,prc12);
		}))));
	case 3:
		var _g = prc0.r;
		if(_g._hx_index == 0) {
			var _g1 = _g.c;
			if(_g1._hx_index == 0) {
				return prc1();
			} else {
				var cause = _g1;
				return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(cause));
			}
		} else {
			var e = _g;
			return stx_coroutine_core_CoroutineSum.Halt(e);
		}
		break;
	}
};
stx_coroutine_core_CoroutineLift.frame = function(self,that) {
	switch(self._hx_index) {
	case 0:
		var head = self.o;
		var rest = self.next;
		return stx_coroutine_core_CoroutineSum.Emit(head,stx_coroutine_core_CoroutineLift.frame(rest,that));
	case 1:
		var fn = self.tran;
		return stx_coroutine_core_CoroutineLift.append(stx_coroutine_pack_Tunnel.toCoroutineStop(that),function() {
			return self;
		});
	case 2:
		var held = self.held;
		var that1 = that;
		return stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held._new(eu_ohmrun_fletcher_Provide._.convert(held,eu_ohmrun_fletcher_Convert.Fun(function(self) {
			return stx_coroutine_core_CoroutineLift.frame(self,that1);
		}))));
	case 3:
		var halt = self.r;
		return stx_coroutine_core_CoroutineLift.append(stx_coroutine_pack_Tunnel.toCoroutineStop(that),function() {
			return self;
		});
	}
};
stx_coroutine_core_CoroutineLift.cons = function(spx,o) {
	return stx_coroutine_core_CoroutineSum.Emit(o,spx);
};
stx_coroutine_core_CoroutineLift.provide = function(self,i) {
	var i1 = i;
	var f = function(self) {
		return stx_coroutine_core_CoroutineLift.provide(self,i1);
	};
	switch(self._hx_index) {
	case 0:
		var head = self.o;
		var rest = self.next;
		return stx_coroutine_core_CoroutineSum.Emit(head,f(rest));
	case 1:
		var arw = self.tran;
		return arw(stx_coroutine_core_ControlSum.Push(i));
	case 2:
		var h = self.held;
		return stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held._new(eu_ohmrun_fletcher_Provide._.convert(h,eu_ohmrun_fletcher_Convert.Fun(f))));
	case 3:
		var _g = self.r;
		switch(_g._hx_index) {
		case 0:
			var _g1 = _g.c;
			switch(_g1._hx_index) {
			case 0:
				var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/coroutine/core/Coroutine.hx", lineNumber : 69, className : "stx.coroutine.core.CoroutineLift", methodName : "provide"});
				return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Exit(stx_fail_Refuse.make(haxe_ds_Option.Some(stx_fail_DeclineSum.INTERIOR(stx_nano_CTR.apply(function(_) {
					return stx_coroutine_core_Errors.e_coroutine_provided_value_to_stopped_coroutine(_);
				},stx_Nano.digests(stx_nano_Wildcard.__)))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1)))));
			case 1:
				var e = _g1.err;
				var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/coroutine/core/Coroutine.hx", lineNumber : 70, className : "stx.coroutine.core.CoroutineLift", methodName : "provide"});
				return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Exit(stx_fail_Refuse.concat(e,stx_fail_Refuse.make(haxe_ds_Option.Some(stx_fail_DeclineSum.INTERIOR(stx_nano_CTR.apply(function(_) {
					return stx_coroutine_core_Errors.e_coroutine_provided_value_to_stopped_coroutine(_);
				},stx_Nano.digests(stx_nano_Wildcard.__)))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1))))));
			}
			break;
		case 1:
			var v = _g.v;
			var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/coroutine/core/Coroutine.hx", lineNumber : 68, className : "stx.coroutine.core.CoroutineLift", methodName : "provide"});
			return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Exit(stx_fail_Refuse.make(haxe_ds_Option.Some(stx_fail_DeclineSum.INTERIOR(stx_nano_CTR.apply(function(_) {
				return stx_coroutine_core_Errors.e_coroutine_provided_value_to_stopped_coroutine(_);
			},stx_Nano.digests(stx_nano_Wildcard.__)))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1)))));
		}
		break;
	}
};
stx_coroutine_core_CoroutineLift.map = function(self,fn) {
	var fn1 = fn;
	var f = function(self) {
		return stx_coroutine_core_CoroutineLift.map(self,fn1);
	};
	switch(self._hx_index) {
	case 0:
		var head = self.o;
		var rest = self.next;
		return stx_coroutine_core_CoroutineSum.Emit(fn(head),f(rest));
	case 1:
		var arw = self.tran;
		return stx_coroutine_core_CoroutineSum.Wait(stx_coroutine_core_TransmissionLift.mod(arw,f));
	case 2:
		var h = self.held;
		return stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held._new(eu_ohmrun_fletcher_Provide._.convert(h,eu_ohmrun_fletcher_Convert.Fun(f))));
	case 3:
		var r = self.r;
		return stx_coroutine_core_CoroutineSum.Halt(r);
	}
};
stx_coroutine_core_CoroutineLift.map_i = function(self,fn) {
	switch(self._hx_index) {
	case 0:
		var o = self.o;
		var next = self.next;
		return stx_coroutine_core_CoroutineSum.Emit(o,stx_coroutine_core_CoroutineLift.map_i(next,fn));
	case 1:
		var tran = self.tran;
		return stx_coroutine_core_CoroutineSum.Wait(function(i) {
			return stx_coroutine_core_CoroutineLift.map_i(tran(stx_coroutine_core_ControlLift.map(i,fn)),fn);
		});
	case 2:
		var held = self.held;
		var fn1 = fn;
		return stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held._new(eu_ohmrun_fletcher_Provide._.convert(held,eu_ohmrun_fletcher_Convert.Fun(function(self) {
			return stx_coroutine_core_CoroutineLift.map_i(self,fn1);
		}))));
	case 3:
		var r = self.r;
		return stx_coroutine_core_CoroutineSum.Halt(r);
	}
};
stx_coroutine_core_CoroutineLift.errata = function(prc,fn) {
	var fn1 = fn;
	var f = function(prc) {
		return stx_coroutine_core_CoroutineLift.errata(prc,fn1);
	};
	switch(prc._hx_index) {
	case 0:
		var o = prc.o;
		var next = prc.next;
		return stx_coroutine_core_CoroutineSum.Emit(o,f(next));
	case 1:
		var fn2 = prc.tran;
		return stx_coroutine_core_CoroutineSum.Wait(function(ctl) {
			return stx_coroutine_core_ControlLift.fold(ctl,function(v) {
				return f(fn2(stx_coroutine_core_ControlSum.Push(v)));
			},function(e) {
				return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Exit(stx_nano_lift_LiftErrorDigestToRefuse.toRefuse(e))));
			},function() {
				return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Stop));
			});
		});
	case 2:
		var ft = prc.held;
		return stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held.lift(eu_ohmrun_FletcherLift.map(ft,function(v) {
			return f(v);
		})));
	case 3:
		var _g = prc.r;
		switch(_g._hx_index) {
		case 0:
			var _g1 = _g.c;
			switch(_g1._hx_index) {
			case 0:
				return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Stop));
			case 1:
				var e = _g1.err;
				return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Exit(fn(e))));
			}
			break;
		case 1:
			var r = _g.v;
			return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Production(r));
		}
		break;
	}
};
stx_coroutine_core_CoroutineLift.map_r = function(self,fn) {
	var fn1 = fn;
	var f = function(self) {
		return stx_coroutine_core_CoroutineLift.map_r(self,fn1);
	};
	switch(self._hx_index) {
	case 0:
		var head = self.o;
		var rest = self.next;
		return stx_coroutine_core_CoroutineSum.Emit(head,f(rest));
	case 1:
		var arw = self.tran;
		return stx_coroutine_core_CoroutineSum.Wait(stx_coroutine_core_TransmissionLift.mod(arw,f));
	case 2:
		var h = self.held;
		return stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held._new(eu_ohmrun_fletcher_Provide._.convert(h,eu_ohmrun_fletcher_Convert.Fun(f))));
	case 3:
		var _g = self.r;
		switch(_g._hx_index) {
		case 0:
			var e = _g.c;
			return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(e));
		case 1:
			var r = _g.v;
			return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Production(fn(r)));
		}
		break;
	}
};
stx_coroutine_core_CoroutineLift.map_or_halt = function(self,fn) {
	var fn1 = fn;
	var f = function(self) {
		return stx_coroutine_core_CoroutineLift.map_or_halt(self,fn1);
	};
	switch(self._hx_index) {
	case 0:
		var head = self.o;
		var rest = self.next;
		return stx_pico_EitherLift.fold(fn(head),function(l) {
			return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(l));
		},function(r) {
			return stx_coroutine_core_CoroutineSum.Emit(r,f(rest));
		});
	case 1:
		var arw = self.tran;
		return stx_coroutine_core_CoroutineSum.Wait(stx_coroutine_core_TransmissionLift.mod(arw,f));
	case 2:
		var h = self.held;
		return stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held._new(eu_ohmrun_fletcher_Provide._.convert(h,eu_ohmrun_fletcher_Convert.Fun(f))));
	case 3:
		var _g = self.r;
		switch(_g._hx_index) {
		case 0:
			var e = _g.c;
			return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(e));
		case 1:
			var r = _g.v;
			return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Production(r));
		}
		break;
	}
};
stx_coroutine_core_CoroutineLift.relate = function(self,fn) {
	var rec = null;
	rec = function(self) {
		switch(self._hx_index) {
		case 0:
			var o = self.o;
			var next = self.next;
			var self1 = fn(o);
			if(self1 == null) {
				return rec(next);
			} else {
				switch(self1._hx_index) {
				case 0:
					var v = self1.v;
					return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Exit(v)));
				case 1:
					return rec(next);
				}
			}
			break;
		case 1:
			var fn1 = self.tran;
			return stx_coroutine_core_CoroutineSum.Wait(stx_coroutine_core_TransmissionLift.mod(fn1,rec));
		case 2:
			var ft = self.held;
			return stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held._new(eu_ohmrun_fletcher_Provide._.convert(ft,eu_ohmrun_fletcher_Convert.Fun(rec))));
		case 3:
			var e = self.r;
			return stx_coroutine_core_CoroutineSum.Halt(e);
		}
	};
	return stx_coroutine_pack_Relate.lift(rec(self));
};
stx_coroutine_core_CoroutineLift.filter = function(self,fn) {
	var rec = null;
	rec = function(self) {
		switch(self._hx_index) {
		case 0:
			var o = self.o;
			var next = self.next;
			return stx_LiftIf.if_else(fn(o),function() {
				return stx_coroutine_core_CoroutineSum.Emit(o,rec(next));
			},function() {
				return rec(next);
			});
		case 1:
			var fn1 = self.tran;
			return stx_coroutine_core_CoroutineSum.Wait(stx_coroutine_core_TransmissionLift.mod(fn1,rec));
		case 2:
			var ft = self.held;
			return stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held._new(eu_ohmrun_fletcher_Provide._.convert(ft,eu_ohmrun_fletcher_Convert.Fun(rec))));
		case 3:
			var e = self.r;
			return stx_coroutine_core_CoroutineSum.Halt(e);
		}
	};
	return rec(self);
};
stx_coroutine_core_CoroutineLift.map_filter = function(self,fn) {
	var rec = null;
	rec = function(self) {
		switch(self._hx_index) {
		case 0:
			var o = self.o;
			var next = self.next;
			var self1 = fn(o);
			switch(self1._hx_index) {
			case 0:
				var t = self1.v;
				return stx_coroutine_core_CoroutineSum.Emit(t,rec(next));
			case 1:
				return rec(next);
			}
			break;
		case 1:
			var fn1 = self.tran;
			return stx_coroutine_core_CoroutineSum.Wait(stx_coroutine_core_TransmissionLift.mod(fn1,rec));
		case 2:
			var ft = self.held;
			return stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held._new(eu_ohmrun_fletcher_Provide._.convert(ft,eu_ohmrun_fletcher_Convert.Fun(rec))));
		case 3:
			var e = self.r;
			return stx_coroutine_core_CoroutineSum.Halt(e);
		}
	};
	return rec(self);
};
stx_coroutine_core_CoroutineLift.partial = function(self,capture) {
	return stx_coroutine_core_CoroutineLift.map_filter(self,function(o) {
		var self = capture(o);
		switch(self._hx_index) {
		case 0:
			var t = self.v;
			t(o);
			return stx_pico_Option.unit();
		case 1:
			return stx_pico_Option.pure(o);
		}
	});
};
stx_coroutine_core_CoroutineLift.window = function(self,capture) {
	var stage = 0;
	return stx_coroutine_core_CoroutineLift.map_filter(self,function(o) {
		switch(stage) {
		case 0:
			var self = capture(o);
			switch(self._hx_index) {
			case 0:
				var t = self.v;
				stage = 1;
				t(o);
				return haxe_ds_Option.None;
			case 1:
				return haxe_ds_Option.Some(o);
			}
			break;
		case 1:
			var self = capture(o);
			switch(self._hx_index) {
			case 0:
				var t = self.v;
				t(o);
				return haxe_ds_Option.None;
			case 1:
				stage = 2;
				return haxe_ds_Option.Some(o);
			}
			break;
		default:
			return haxe_ds_Option.Some(o);
		}
	});
};
stx_coroutine_core_CoroutineLift.immediate = function(self,effect) {
	var fn = function() {
		return self;
	};
	var this1 = eu_ohmrun_Fletcher.Anon(function(_,cont) {
		var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,fn());
		var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
			trg.trigger(value);
			return trg;
		}));
		return eu_ohmrun_fletcher_Receiver.reply(this1);
	});
	return stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held.lift(eu_ohmrun_fletcher_FiberLift.then(effect,this1)));
};
stx_coroutine_core_CoroutineLift.flat_map_r = function(self,fn) {
	var fn1 = fn;
	var f = function(self) {
		return stx_coroutine_core_CoroutineLift.flat_map_r(self,fn1);
	};
	switch(self._hx_index) {
	case 0:
		var head = self.o;
		var rest = self.next;
		return stx_coroutine_core_CoroutineSum.Emit(head,f(rest));
	case 1:
		var arw = self.tran;
		return stx_coroutine_core_CoroutineSum.Wait(stx_coroutine_core_TransmissionLift.mod(arw,f));
	case 2:
		var h = self.held;
		return stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held._new(eu_ohmrun_fletcher_Provide._.convert(h,eu_ohmrun_fletcher_Convert.Fun(f))));
	case 3:
		var _g = self.r;
		switch(_g._hx_index) {
		case 0:
			var e = _g.c;
			return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(e));
		case 1:
			var r = _g.v;
			return fn(r);
		}
		break;
	}
};
stx_coroutine_core_CoroutineLift.one = function(v) {
	return stx_coroutine_core_CoroutineSum.Emit(v,stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Stop)));
};
stx_coroutine_core_CoroutineLift.mod = function(self,fn) {
	switch(self._hx_index) {
	case 1:
		var arw = self.tran;
		return stx_coroutine_core_CoroutineSum.Wait(stx_coroutine_core_TransmissionLift.mod(arw,fn));
	case 2:
		var slot = self.held;
		return stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held.fromProvide(stx_coroutine_core_Held.convert(slot,eu_ohmrun_fletcher_Convert.Fun(fn))));
	default:
		return fn(self);
	}
};
stx_coroutine_core_CoroutineLift.toString = function(self) {
	var recurse = null;
	recurse = function(self) {
		switch(self._hx_index) {
		case 0:
			var head = self.o;
			var rest = self.next;
			return "!<" + Std.string(head) + ">" + recurse(rest);
		case 1:
			var arw = self.tran;
			return "->";
		case 2:
			var h = self.held;
			return "[?]";
		case 3:
			var _g = self.r;
			if(_g._hx_index == 0) {
				if(_g.c._hx_index == 0) {
					return "#.";
				} else {
					var e = _g;
					return "#" + Std.string(e);
				}
			} else {
				var e = _g;
				return "#" + Std.string(e);
			}
			break;
		}
	};
	return recurse(self);
};
stx_coroutine_core_CoroutineLift.escape = function(self) {
	switch(self._hx_index) {
	case 0:
		var head = self.o;
		var rest = self.next;
		return stx_coroutine_core_CoroutineLift.mod(rest,stx_coroutine_core_CoroutineLift.escape);
	case 1:
		var arw = self.tran;
		return stx_coroutine_core_CoroutineLift.mod(arw(stx_coroutine_core_ControlSum.Quit(haxe_ds_Option.None)),stx_coroutine_core_CoroutineLift.escape);
	case 2:
		var h = self.held;
		return stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held._new(eu_ohmrun_fletcher_Provide._.convert(h,eu_ohmrun_fletcher_Convert.Fun(stx_coroutine_core_CoroutineLift.escape))));
	case 3:
		var e = self.r;
		return stx_coroutine_core_CoroutineSum.Halt(e);
	}
};
stx_coroutine_core_CoroutineLift.touch = function(self,before,after) {
	switch(self._hx_index) {
	case 1:
		var arw = self.tran;
		return stx_coroutine_core_CoroutineSum.Wait(stx_coroutine_core_Transmission.touch(arw,before,after));
	case 2:
		var h = self.held;
		return stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held.touch(h,before,after));
	default:
		return self;
	}
};
stx_coroutine_core_CoroutineLift.on_return = function(self,fn) {
	var fn1 = fn;
	var f = function(self) {
		return stx_coroutine_core_CoroutineLift.on_return(self,fn1);
	};
	switch(self._hx_index) {
	case 0:
		var head = self.o;
		var tail = self.next;
		return stx_coroutine_core_CoroutineSum.Emit(head,stx_coroutine_core_CoroutineLift.mod(tail,f));
	case 1:
		var arw = self.tran;
		return stx_coroutine_core_CoroutineSum.Wait(stx_coroutine_core_TransmissionLift.mod(arw,f));
	case 2:
		var ft = self.held;
		return stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held._new(eu_ohmrun_fletcher_Provide._.convert(ft,eu_ohmrun_fletcher_Convert.Fun(f))));
	case 3:
		var ret = self.r;
		fn(ret);
		return stx_coroutine_core_CoroutineSum.Halt(ret);
	}
};
stx_coroutine_core_CoroutineLift.tap = function(self,fn) {
	var fn1 = fn;
	var f = function(self) {
		return stx_coroutine_core_CoroutineLift.tap(self,fn1);
	};
	switch(self._hx_index) {
	case 0:
		var o = self.o;
		var next = self.next;
		fn(stx_coroutine_core_Phase.Opt(o));
		return stx_coroutine_core_CoroutineSum.Emit(o,f(next));
	case 1:
		var tran = self.tran;
		return stx_coroutine_core_CoroutineSum.Wait(function(ctrl) {
			fn(stx_coroutine_core_Phase.Ipt(ctrl));
			return f(tran(ctrl));
		});
	case 2:
		var held = self.held;
		return stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held._new(eu_ohmrun_fletcher_Provide._.convert(held,eu_ohmrun_fletcher_Convert.Fun(f))));
	case 3:
		var r = self.r;
		fn(stx_coroutine_core_Phase.Rtn(r));
		return stx_coroutine_core_CoroutineSum.Halt(r);
	}
};
stx_coroutine_core_CoroutineLift.hook = function(self,fn) {
	var self1 = fn;
	return stx_coroutine_core_CoroutineLift.map(self,function(p) {
		self1(p);
		return p;
	});
};
stx_coroutine_core_CoroutineLift.once = function(self,fn) {
	var done = false;
	return stx_coroutine_core_CoroutineLift.hook(self,function(o) {
		stx_LiftIf.if_else(done,function() {
			return;
		},function() {
			done = true;
			fn(o);
		});
	});
};
stx_coroutine_core_CoroutineLift.until = function(self,fn) {
	var cont = true;
	return stx_coroutine_core_CoroutineLift.hook(self,function(o) {
		if(cont) {
			cont = fn(o);
		}
	});
};
stx_coroutine_core_CoroutineLift.pause = function(self,ft) {
	var future = tink_core_Future.map(ft,function(_) {
		return self;
	});
	var this1 = eu_ohmrun_Fletcher.Anon(function(_,cont) {
		var self = cont;
		var self1 = cont;
		var ft = tink_core_Future.map(future,function(t) {
			return stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,t);
		});
		var this1 = eu_ohmrun_fletcher_core_Cont.lift(new eu_ohmrun_fletcher_core_cont_term_Anon(function(r_ipt) {
			var next = new tink_core_FutureTrigger();
			var fst = self1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(t_ipt) {
				ft.handle(function(res) {
					t_ipt.trigger(res);
					next.trigger(res);
				});
				var this1 = null;
				return this1;
			})));
			var snd = r_ipt.apply(next);
			return stx_stream_WorkLift.seq(fst,snd);
		}));
		return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	});
	return stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held.fromProvide(this1));
};
stx_coroutine_core_CoroutineLift.source = function(self,sig) {
	var tmp;
	switch(self._hx_index) {
	case 0:
		var o = self.o;
		var next = self.next;
		tmp = stx_coroutine_core_CoroutineSum.Emit(o,stx_coroutine_core_CoroutineLift.source(next,sig));
		break;
	case 1:
		var arw = self.tran;
		tmp = stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held.Guard(tink_core_Future.map(sig(),function(either) {
			return stx_pico_EitherLift.fold(either,function(l) {
				return stx_coroutine_core_CoroutineLift.source(arw(stx_coroutine_core_Control.push(l)),sig);
			},function(r) {
				return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(r));
			});
		}),{ fileName : "stx/coroutine/core/Coroutine.hx", lineNumber : 344, className : "stx.coroutine.core.CoroutineLift", methodName : "source"}));
		break;
	case 2:
		var ft = self.held;
		tmp = stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held._new(eu_ohmrun_fletcher_Provide._.convert(ft,eu_ohmrun_fletcher_Convert.Fun(function(x) {
			return stx_coroutine_core_CoroutineLift.source(x,sig);
		}))));
		break;
	case 3:
		var done = self.r;
		tmp = stx_coroutine_core_CoroutineSum.Halt(done);
		break;
	}
	return stx_coroutine_pack_Source.lift(tmp);
};
stx_coroutine_core_CoroutineLift.errate = function(self,fn) {
	var fn1 = fn;
	var f = function(self) {
		return stx_coroutine_core_CoroutineLift.errate(self,fn1);
	};
	switch(self._hx_index) {
	case 0:
		var o = self.o;
		var next = self.next;
		return stx_coroutine_core_CoroutineSum.Emit(o,f(next));
	case 1:
		var tran = self.tran;
		return stx_coroutine_core_CoroutineSum.Wait(stx_coroutine_core_Transmission.lift(function(ctrl) {
			return stx_coroutine_core_ControlLift.fold(ctrl,function(ok) {
				return f(tran(stx_coroutine_core_ControlSum.Push(ok)));
			},function(no) {
				return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Exit(stx_nano_lift_LiftErrorDigestToRefuse.toRefuse(no))));
			},function() {
				return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Stop));
			});
		}));
	case 2:
		var held = self.held;
		return stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held._new(eu_ohmrun_fletcher_Provide._.convert(held,eu_ohmrun_fletcher_Convert.Fun(f))));
	case 3:
		var _g = self.r;
		switch(_g._hx_index) {
		case 0:
			var _g1 = _g.c;
			switch(_g1._hx_index) {
			case 0:
				return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Stop));
			case 1:
				var r = _g1.err;
				return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Exit(stx_fail_Refuse.errate(r,fn))));
			}
			break;
		case 1:
			var r = _g.v;
			return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Production(r));
		}
		break;
	}
};
stx_coroutine_core_CoroutineLift.mod_r = function(self,fn) {
	var f = null;
	f = function(self) {
		switch(self._hx_index) {
		case 0:
			var o = self.o;
			var next = self.next;
			return stx_coroutine_core_CoroutineSum.Emit(o,f(next));
		case 1:
			var tran = self.tran;
			return stx_coroutine_core_CoroutineSum.Wait(stx_coroutine_core_TransmissionLift.mod(tran,f));
		case 2:
			var held = self.held;
			return stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held._new(eu_ohmrun_fletcher_Provide._.convert(held,eu_ohmrun_fletcher_Convert.Fun(f))));
		case 3:
			var _g = self.r;
			switch(_g._hx_index) {
			case 0:
				var e = _g.c;
				return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(e));
			case 1:
				var r = _g.v;
				var this1 = eu_ohmrun_FletcherLift.map(eu_ohmrun_fletcher_Produce.prj(eu_ohmrun_fletcher_ModulateLift.produce(fn,stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,r))),function(res) {
					var self;
					switch(res._hx_index) {
					case 0:
						var t = res.t;
						self = stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Production(t));
						break;
					case 1:
						var e = res.e;
						var _g = e.get_data();
						switch(_g._hx_index) {
						case 0:
							var _g1 = _g.v;
							switch(_g1._hx_index) {
							case 0:
								var _g = _g1.v;
								switch(_g._hx_index) {
								case 0:
									self = stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Stop));
									break;
								case 1:
									var rejection = _g.err;
									self = stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Exit(rejection)));
									break;
								}
								break;
							case 1:
								var code = _g1.digest;
								var self1 = e.get_pos();
								var this1;
								if(self1._hx_index == 0) {
									var v = self1.v;
									this1 = v;
								} else {
									this1 = null;
								}
								var this2 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,this1);
								self = stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_Cause.fromRefuse(stx_fail_Refuse.make(haxe_ds_Option.Some(stx_fail_DeclineSum.INTERIOR(stx_nano_CTR.apply(function(_) {
									return code;
								},stx_Nano.digests(stx_nano_Wildcard.__)))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this2)))));
								break;
							}
							break;
						case 1:
							self = stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Stop));
							break;
						}
						break;
					}
					return self;
				});
				var result = this1;
				return stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held.fromProvide(result));
			}
			break;
		}
	};
	return stx_coroutine_core_Coroutine.lift(f(self));
};
var stx_coroutine_core_Coroutine = {};
stx_coroutine_core_Coroutine.lift = function(self) {
	return stx_coroutine_core_Coroutine._new(self);
};
stx_coroutine_core_Coroutine._new = function(self) {
	var this1 = self;
	return this1;
};
stx_coroutine_core_Coroutine.held = function(this1) {
	if(this1._hx_index == 2) {
		var _g = this1.held;
		return true;
	} else {
		return false;
	}
};
stx_coroutine_core_Coroutine.prj = function(this1) {
	return this1;
};
stx_coroutine_core_Coroutine.provide = function(this1,v) {
	return stx_coroutine_core_Coroutine.lift(stx_coroutine_core_Coroutine._.provide(this1,v));
};
var stx_coroutine_core_Digest = function(note) {
	stx_fail_Digest.call(this,"d905e32c-edd4-4e2b-b044-fb3d643cab57","" + this.detail);
};
$hxClasses["stx.coroutine.core.Digest"] = stx_coroutine_core_Digest;
stx_coroutine_core_Digest.__name__ = "stx.coroutine.core.Digest";
stx_coroutine_core_Digest.__super__ = stx_fail_Digest;
stx_coroutine_core_Digest.prototype = $extend(stx_fail_Digest.prototype,{
	__class__: stx_coroutine_core_Digest
});
var stx_coroutine_core_ECoroutineStop = function() {
	stx_fail_Digest.call(this,"01FRQ77KZBWH5B94085CX40Y02","Coroutine stopped.");
};
$hxClasses["stx.coroutine.core.ECoroutineStop"] = stx_coroutine_core_ECoroutineStop;
stx_coroutine_core_ECoroutineStop.__name__ = "stx.coroutine.core.ECoroutineStop";
stx_coroutine_core_ECoroutineStop.__super__ = stx_fail_Digest;
stx_coroutine_core_ECoroutineStop.prototype = $extend(stx_fail_Digest.prototype,{
	__class__: stx_coroutine_core_ECoroutineStop
});
var stx_coroutine_core_ECoroutineInputHung = function() {
	stx_fail_Digest.call(this,"01FRSGYFNGNMAKJT12C1GSM2Y4","Input hung");
};
$hxClasses["stx.coroutine.core.ECoroutineInputHung"] = stx_coroutine_core_ECoroutineInputHung;
stx_coroutine_core_ECoroutineInputHung.__name__ = "stx.coroutine.core.ECoroutineInputHung";
stx_coroutine_core_ECoroutineInputHung.__super__ = stx_fail_Digest;
stx_coroutine_core_ECoroutineInputHung.prototype = $extend(stx_fail_Digest.prototype,{
	__class__: stx_coroutine_core_ECoroutineInputHung
});
var stx_coroutine_core_ECoroutineProvidedValueToStoppedCoroutine = function() {
	stx_fail_Digest.call(this,"01FRSHA2FF3J3MEE5AF9RJ5YE7","Provided value to stopped coroutine");
};
$hxClasses["stx.coroutine.core.ECoroutineProvidedValueToStoppedCoroutine"] = stx_coroutine_core_ECoroutineProvidedValueToStoppedCoroutine;
stx_coroutine_core_ECoroutineProvidedValueToStoppedCoroutine.__name__ = "stx.coroutine.core.ECoroutineProvidedValueToStoppedCoroutine";
stx_coroutine_core_ECoroutineProvidedValueToStoppedCoroutine.__super__ = stx_fail_Digest;
stx_coroutine_core_ECoroutineProvidedValueToStoppedCoroutine.prototype = $extend(stx_fail_Digest.prototype,{
	__class__: stx_coroutine_core_ECoroutineProvidedValueToStoppedCoroutine
});
var stx_coroutine_core_Errors = function() { };
$hxClasses["stx.coroutine.core.Errors"] = stx_coroutine_core_Errors;
stx_coroutine_core_Errors.__name__ = "stx.coroutine.core.Errors";
stx_coroutine_core_Errors.e_coroutine_stop = function(digests) {
	return new stx_coroutine_core_ECoroutineStop();
};
stx_coroutine_core_Errors.e_coroutine_provided_value_to_stopped_coroutine = function(digests) {
	return new stx_coroutine_core_ECoroutineProvidedValueToStoppedCoroutine();
};
var stx_coroutine_core_Held = {};
stx_coroutine_core_Held._new = function(self) {
	var this1 = self;
	return this1;
};
stx_coroutine_core_Held.fromProvide = function(self) {
	return stx_coroutine_core_Held.lift(self);
};
stx_coroutine_core_Held.fromProduce = function(self) {
	var fn = function(res) {
		switch(res._hx_index) {
		case 0:
			var t = res.t;
			return t;
		case 1:
			var e = res.e;
			return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Exit(e)));
		}
	};
	return stx_coroutine_core_Held.lift(eu_ohmrun_Fletcher._.then(self,eu_ohmrun_Fletcher.Anon(function(p,cont) {
		var res = fn(p);
		var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,res);
		var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
			trg.trigger(value);
			return trg;
		}));
		var resI = this1;
		var self = cont;
		return resI.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	})));
};
stx_coroutine_core_Held.fromProduceI = function(self) {
	var this1 = eu_ohmrun_Fletcher.Anon(function(ipt,cont) {
		var self1 = cont;
		return eu_ohmrun_fletcher_ReceiverLift.fold_mapp(eu_ohmrun_Fletcher.forward(self,null),function(ok) {
			var result;
			switch(ok._hx_index) {
			case 0:
				var t = ok.t;
				var f = null;
				f = function(self) {
					switch(self._hx_index) {
					case 0:
						var o = self.o;
						var next = self.next;
						var self1 = next;
						return stx_coroutine_core_CoroutineSum.Emit(o,stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held.Pause(function() {
							return f(self1);
						})));
					case 1:
						var tran = self.tran;
						return stx_coroutine_core_CoroutineSum.Wait(function(ctrl) {
							switch(ctrl._hx_index) {
							case 0:
								var i = ctrl.v;
								return f(tran(stx_coroutine_core_Control.push(i)));
							case 1:
								var _g = ctrl.v;
								switch(_g._hx_index) {
								case 0:
									var e = _g.v;
									return f(tran(stx_coroutine_core_Control.quit(stx_pico_Option.fromNullT(e))));
								case 1:
									return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Stop));
								}
								break;
							}
						});
					case 2:
						var held = self.held;
						var result = stx_coroutine_core_Held.convert(held,eu_ohmrun_fletcher_Convert.Fun(f));
						return stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held.fromProvide(result));
					case 3:
						var _g = self.r;
						switch(_g._hx_index) {
						case 0:
							var _g1 = _g.c;
							switch(_g1._hx_index) {
							case 0:
								return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Stop));
							case 1:
								var rejection = _g1.err;
								var result = stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Exit(rejection)));
								return result;
							}
							break;
						case 1:
							var r = _g.v;
							return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Production(r));
						}
						break;
					}
				};
				var result1 = f(t);
				result = result1;
				break;
			case 1:
				var e = ok.e;
				var this1 = stx_nano_lift_LiftError.fault(e);
				var result1 = stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Exit(stx_fail_Refuse.make(haxe_ds_Option.Some(stx_fail_DeclineSum.INTERIOR(stx_nano_CTR.apply(function(_) {
					return stx_nano_Digests.e_undefined(_);
				},stx_Nano.digests(stx_nano_Wildcard.__)))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1)))));
				result = result1;
				break;
			}
			return stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,result);
		},function(no) {
			return stx_nano_lift_LiftNano.failure(stx_nano_Wildcard.__,no);
		}).apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self1;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	});
	return stx_coroutine_core_Held._new(this1);
};
stx_coroutine_core_Held.Ready = function(data,pos) {
	var v = data;
	var this1 = eu_ohmrun_Fletcher.Anon(function(_,cont) {
		var self = cont;
		var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,v);
		var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
			trg.trigger(value);
			return trg;
		}));
		return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	});
	return this1;
};
stx_coroutine_core_Held.Guard = function(guard,pos) {
	var future = guard;
	var this1 = eu_ohmrun_Fletcher.Anon(function(_,cont) {
		var self = cont;
		var self1 = cont;
		var ft = tink_core_Future.map(future,function(t) {
			return stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,t);
		});
		var this1 = eu_ohmrun_fletcher_core_Cont.lift(new eu_ohmrun_fletcher_core_cont_term_Anon(function(r_ipt) {
			var next = new tink_core_FutureTrigger();
			var fst = self1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(t_ipt) {
				ft.handle(function(res) {
					t_ipt.trigger(res);
					next.trigger(res);
				});
				var this1 = null;
				return this1;
			})));
			var snd = r_ipt.apply(next);
			return stx_stream_WorkLift.seq(fst,snd);
		}));
		return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	});
	return stx_coroutine_core_Held.lift(this1);
};
stx_coroutine_core_Held.Pause = function(self) {
	var fn = self;
	var this1 = eu_ohmrun_Fletcher.Anon(function(_,cont) {
		var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,fn());
		var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
			trg.trigger(value);
			return trg;
		}));
		return eu_ohmrun_fletcher_Receiver.reply(this1);
	});
	return stx_coroutine_core_Held.lift(this1);
};
stx_coroutine_core_Held.lift = function(fn) {
	return stx_coroutine_core_Held._new(fn);
};
stx_coroutine_core_Held.toCoroutine = function(this1) {
	return stx_coroutine_core_CoroutineSum.Hold(this1);
};
stx_coroutine_core_Held.pure = function(spx) {
	var v = spx;
	var this1 = eu_ohmrun_Fletcher.Anon(function(_,cont) {
		var self = cont;
		var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,v);
		var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
			trg.trigger(value);
			return trg;
		}));
		return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	});
	return stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held.lift(this1));
};
stx_coroutine_core_Held.lazy = function(spx) {
	var fn = stx_fn_Thunk.prj(spx);
	var this1 = eu_ohmrun_Fletcher.Anon(function(_,cont) {
		var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,fn());
		var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
			trg.trigger(value);
			return trg;
		}));
		return eu_ohmrun_fletcher_Receiver.reply(this1);
	});
	return stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held.lift(this1));
};
stx_coroutine_core_Held.mod = function(this1,fn) {
	return stx_coroutine_core_Held._new(eu_ohmrun_fletcher_Provide._.convert(this1,eu_ohmrun_fletcher_Convert.Fun(fn)));
};
stx_coroutine_core_Held.touch = function(this1,before,after) {
	var self = function(_) {
		before();
	};
	var self1 = function(_) {
		after();
	};
	var tmp = function(p) {
		self1(p);
		return p;
	};
	return stx_coroutine_core_Held.lift(eu_ohmrun_FletcherLift.map(eu_ohmrun_Fletcher._.mapi(this1,function(p) {
		self(p);
		return p;
	}),tmp));
};
stx_coroutine_core_Held.environment = function(this1,handler) {
	var handler1 = handler;
	return eu_ohmrun_Fletcher._.environment(this1,null,function(o) {
		handler1(o);
	},function(e) {
		var this1 = eu_ohmrun_fletcher_Logging.log(stx_nano_Wildcard.__);
		var fn = function(pos) {
			return pos.with_stamp(function(stamp) {
				return stamp.relevel(6);
			});
		};
		(function(value,pos) {
			this1(value,fn(pos));
		})(new stx_log_EntryCtr().pure(e),stx_log_LogPosition.fromPos({ fileName : "eu/ohmrun/fletcher/Provide.hx", lineNumber : 75, className : "eu.ohmrun.fletcher.ProvideLift", methodName : "environment"}));
		throw haxe_Exception.thrown(e);
	});
};
stx_coroutine_core_Held.convert = function(this1,that) {
	return eu_ohmrun_fletcher_Provide._.convert(this1,that);
};
stx_coroutine_core_Held.toString = function(this1) {
	return "HELD";
};
var stx_coroutine_core_HeldLift = function() { };
$hxClasses["stx.coroutine.core.HeldLift"] = stx_coroutine_core_HeldLift;
stx_coroutine_core_HeldLift.__name__ = "stx.coroutine.core.HeldLift";
var stx_coroutine_core_Phase = $hxEnums["stx.coroutine.core.Phase"] = { __ename__:"stx.coroutine.core.Phase",__constructs__:null
	,Ipt: ($_=function(i) { return {_hx_index:0,i:i,__enum__:"stx.coroutine.core.Phase",toString:$estr}; },$_._hx_name="Ipt",$_.__params__ = ["i"],$_)
	,Opt: ($_=function(o) { return {_hx_index:1,o:o,__enum__:"stx.coroutine.core.Phase",toString:$estr}; },$_._hx_name="Opt",$_.__params__ = ["o"],$_)
	,Rtn: ($_=function(o) { return {_hx_index:2,o:o,__enum__:"stx.coroutine.core.Phase",toString:$estr}; },$_._hx_name="Rtn",$_.__params__ = ["o"],$_)
};
stx_coroutine_core_Phase.__constructs__ = [stx_coroutine_core_Phase.Ipt,stx_coroutine_core_Phase.Opt,stx_coroutine_core_Phase.Rtn];
var stx_coroutine_core_Return = {};
stx_coroutine_core_Return.lift = function(self) {
	return stx_coroutine_core_Return._new(self);
};
stx_coroutine_core_Return._new = function(self) {
	var this1 = self;
	return this1;
};
stx_coroutine_core_Return.fromRefuse = function(e) {
	return stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Exit(e));
};
stx_coroutine_core_Return.fromCause = function(c) {
	return stx_coroutine_core_ReturnSum.Terminated(c);
};
stx_coroutine_core_Return.fromT = function(v) {
	return stx_coroutine_core_ReturnSum.Production(v);
};
stx_coroutine_core_Return.toCoroutine = function(this1) {
	return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_Return.lift(this1));
};
stx_coroutine_core_Return.toOptionRes = function(this1) {
	switch(this1._hx_index) {
	case 0:
		var _g = this1.c;
		switch(_g._hx_index) {
		case 0:
			return haxe_ds_Option.None;
		case 1:
			var err = _g.err;
			return haxe_ds_Option.Some(stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(err),{ fileName : "stx/coroutine/core/Return.hx", lineNumber : 31, className : "stx.coroutine.core._Return.Return_Impl_", methodName : "toOptionRes"}));
		}
		break;
	case 1:
		var v = this1.v;
		return haxe_ds_Option.Some(stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,v));
	}
};
stx_coroutine_core_Return.prj = function(this1) {
	return this1;
};
var stx_coroutine_core_ReturnLift = function() { };
$hxClasses["stx.coroutine.core.ReturnLift"] = stx_coroutine_core_ReturnLift;
stx_coroutine_core_ReturnLift.__name__ = "stx.coroutine.core.ReturnLift";
stx_coroutine_core_ReturnLift.map = function(self,fn) {
	switch(self._hx_index) {
	case 0:
		var c = self.c;
		return stx_coroutine_core_ReturnSum.Terminated(c);
	case 1:
		var v = self.v;
		return stx_coroutine_core_ReturnSum.Production(fn(v));
	}
};
var stx_coroutine_core_Status = $hxEnums["stx.coroutine.core.Status"] = { __ename__:"stx.coroutine.core.Status",__constructs__:null
	,Emitting: {_hx_name:"Emitting",_hx_index:0,__enum__:"stx.coroutine.core.Status",toString:$estr}
	,Holding: {_hx_name:"Holding",_hx_index:1,__enum__:"stx.coroutine.core.Status",toString:$estr}
	,Awaiting: {_hx_name:"Awaiting",_hx_index:2,__enum__:"stx.coroutine.core.Status",toString:$estr}
	,Halted: {_hx_name:"Halted",_hx_index:3,__enum__:"stx.coroutine.core.Status",toString:$estr}
};
stx_coroutine_core_Status.__constructs__ = [stx_coroutine_core_Status.Emitting,stx_coroutine_core_Status.Holding,stx_coroutine_core_Status.Awaiting,stx_coroutine_core_Status.Halted];
var stx_coroutine_core_Transmission = {};
stx_coroutine_core_Transmission._new = function(self) {
	var this1 = self;
	return this1;
};
stx_coroutine_core_Transmission.lift = function(self) {
	return stx_coroutine_core_Transmission._new(self);
};
stx_coroutine_core_Transmission.fromFun1R = function(fn) {
	return stx_coroutine_core_Transmission.lift(function(control) {
		return stx_coroutine_core_ControlLift.fold(control,fn,function(e) {
			return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_Cause.fromRefuse(stx_nano_lift_LiftErrorDigestToRefuse.toRefuse(e))));
		},function() {
			return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Stop));
		});
	});
};
stx_coroutine_core_Transmission.touch = function(this1,before,after) {
	return stx_coroutine_core_Transmission.lift(function(control) {
		before();
		var value = this1(control);
		after();
		return value;
	});
};
stx_coroutine_core_Transmission.into = function(fn) {
	return fn;
};
stx_coroutine_core_Transmission.prj = function(this1) {
	return this1;
};
stx_coroutine_core_Transmission.get_self = function(this1) {
	return stx_coroutine_core_Transmission.lift(this1);
};
var stx_coroutine_core_TransmissionLift = function() { };
$hxClasses["stx.coroutine.core.TransmissionLift"] = stx_coroutine_core_TransmissionLift;
stx_coroutine_core_TransmissionLift.__name__ = "stx.coroutine.core.TransmissionLift";
stx_coroutine_core_TransmissionLift.mod = function(self,fn) {
	return stx_coroutine_core_Transmission.lift(stx_fn_UnaryLift.then(self,fn));
};
stx_coroutine_core_TransmissionLift.imply = function(self,input) {
	return self(stx_coroutine_core_ControlSum.Push(input));
};
var stx_coroutine_lift_LiftArrowlet = function() { };
$hxClasses["stx.coroutine.lift.LiftArrowlet"] = stx_coroutine_lift_LiftArrowlet;
stx_coroutine_lift_LiftArrowlet.__name__ = "stx.coroutine.lift.LiftArrowlet";
var stx_coroutine_lift_LiftFun = function() { };
$hxClasses["stx.coroutine.lift.LiftFun"] = stx_coroutine_lift_LiftFun;
stx_coroutine_lift_LiftFun.__name__ = "stx.coroutine.lift.LiftFun";
stx_coroutine_lift_LiftFun.asTunnel = function(fn) {
	return stx_coroutine_pack_Tunnel.fromFunction(fn);
};
stx_coroutine_lift_LiftFun.asRelate = function(fn) {
	return stx_coroutine_pack_Relate.fromFun1R(fn);
};
var stx_coroutine_lift_LiftIterable = function() { };
$hxClasses["stx.coroutine.lift.LiftIterable"] = stx_coroutine_lift_LiftIterable;
stx_coroutine_lift_LiftIterable.__name__ = "stx.coroutine.lift.LiftIterable";
stx_coroutine_lift_LiftIterable.asEmiter = function(itr) {
	return stx_coroutine_pack_Emiter.fromIterator(itr);
};
var stx_coroutine_lift_LiftOption = function() { };
$hxClasses["stx.coroutine.lift.LiftOption"] = stx_coroutine_lift_LiftOption;
stx_coroutine_lift_LiftOption.__name__ = "stx.coroutine.lift.LiftOption";
stx_coroutine_lift_LiftOption.asEmiter = function(opt) {
	return stx_coroutine_pack_Emiter.fromOption(opt);
};
var stx_coroutine_pack_DeriveLift = function() { };
$hxClasses["stx.coroutine.pack.DeriveLift"] = stx_coroutine_pack_DeriveLift;
stx_coroutine_pack_DeriveLift.__name__ = "stx.coroutine.pack.DeriveLift";
stx_coroutine_pack_DeriveLift.toSource = function(self) {
	var recurse = null;
	recurse = function(self) {
		switch(self._hx_index) {
		case 0:
			if(self.o == null) {
				var next = self.next;
				return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Stop));
			} else {
				throw haxe_Exception.thrown("This is a regression");
			}
			break;
		case 1:
			var arw = self.tran;
			return stx_coroutine_core_CoroutineSum.Wait(stx_coroutine_core_TransmissionLift.mod(arw,recurse));
		case 2:
			var ft = self.held;
			return stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held._new(eu_ohmrun_fletcher_Provide._.convert(ft,eu_ohmrun_fletcher_Convert.Fun(recurse))));
		case 3:
			var _g = self.r;
			switch(_g._hx_index) {
			case 0:
				var cause = _g.c;
				return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(cause));
			case 1:
				var ret = _g.v;
				return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Production(ret));
			}
			break;
		}
	};
	return stx_coroutine_pack_Source.fromCoroutine(recurse(self));
};
stx_coroutine_pack_DeriveLift.complete = function(self,cb) {
	var recurse = null;
	recurse = function(self) {
		switch(self._hx_index) {
		case 0:
			var head = self.o;
			var rest = self.next;
			return stx_coroutine_core_CoroutineSum.Emit(head,stx_coroutine_pack_DeriveLift.complete(rest,cb));
		case 1:
			var arw = self.tran;
			return stx_coroutine_core_CoroutineSum.Wait(stx_coroutine_core_TransmissionLift.mod(arw,recurse));
		case 2:
			var ft = self.held;
			return stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held._new(eu_ohmrun_fletcher_Provide._.convert(ft,eu_ohmrun_fletcher_Convert.Fun(recurse))));
		case 3:
			var _g = self.r;
			switch(_g._hx_index) {
			case 0:
				var cause = _g.c;
				return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(cause));
			case 1:
				var ret = _g.v;
				cb(ret);
				return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Stop));
			}
			break;
		}
	};
	return stx_coroutine_pack_Effect.lift(recurse(self));
};
stx_coroutine_pack_DeriveLift.zip = function(self,that) {
	var f = null;
	f = function(self,that) {
		switch(self._hx_index) {
		case 0:
			var _g = self.o;
			var _g = self.next;
			switch(that._hx_index) {
			case 0:
				var _g1 = that.o;
				var nII = that.next;
				var nI = _g;
				var self1 = nI;
				var that1 = nII;
				return stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held.Pause(function() {
					return f(self1,that1);
				}));
			case 1:
				var fn = that.tran;
				var nI = _g;
				var self2 = nI;
				var that2 = fn(stx_coroutine_core_ControlSum.Push(null));
				return stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held.Pause(function() {
					return f(self2,that2);
				}));
			case 2:
				var ft = that.held;
				var nI = _g;
				var self3 = nI;
				return stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held._new(eu_ohmrun_fletcher_Provide._.convert(ft,eu_ohmrun_fletcher_Convert.Fun(function(that) {
					return f(self3,that);
				}))));
			case 3:
				var _g1 = that.r;
				switch(_g1._hx_index) {
				case 0:
					var _g2 = _g1.c;
					switch(_g2._hx_index) {
					case 0:
						return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Stop));
					case 1:
						var e = _g2.err;
						return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Exit(e)));
					}
					break;
				case 1:
					var r = _g1.v;
					var nI = _g;
					var self4 = nI;
					var that3 = stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Production(r));
					return stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held.Pause(function() {
						return f(self4,that3);
					}));
				}
				break;
			}
			break;
		case 1:
			var _g = self.tran;
			switch(that._hx_index) {
			case 0:
				var _g1 = that.o;
				var nII = that.next;
				var fn = _g;
				var self5 = fn(stx_coroutine_core_ControlSum.Push(null));
				var that4 = nII;
				return stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held.Pause(function() {
					return f(self5,that4);
				}));
			case 1:
				var r = that.tran;
				var l = _g;
				var self6 = l(stx_coroutine_core_ControlSum.Push(null));
				var that5 = r(stx_coroutine_core_ControlSum.Push(null));
				return stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held.Pause(function() {
					return f(self6,that5);
				}));
			case 2:
				var ft = that.held;
				var fn = _g;
				var self7 = fn(stx_coroutine_core_ControlSum.Push(null));
				return stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held._new(eu_ohmrun_fletcher_Provide._.convert(ft,eu_ohmrun_fletcher_Convert.Fun(function(that) {
					return f(self7,that);
				}))));
			case 3:
				var _g1 = that.r;
				switch(_g1._hx_index) {
				case 0:
					var _g2 = _g1.c;
					switch(_g2._hx_index) {
					case 0:
						return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Stop));
					case 1:
						var e = _g2.err;
						return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Exit(e)));
					}
					break;
				case 1:
					var r = _g1.v;
					var fn = _g;
					var self8 = fn(stx_coroutine_core_ControlSum.Push(null));
					var that6 = stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Production(r));
					return stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held.Pause(function() {
						return f(self8,that6);
					}));
				}
				break;
			}
			break;
		case 2:
			var l = self.held;
			var r = that;
			var that7 = r;
			return stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held._new(eu_ohmrun_fletcher_Provide._.convert(l,eu_ohmrun_fletcher_Convert.Fun(function(self) {
				return f(self,that7);
			}))));
		case 3:
			var _g = self.r;
			switch(_g._hx_index) {
			case 0:
				var _g1 = _g.c;
				switch(_g1._hx_index) {
				case 0:
					if(that._hx_index == 3) {
						var _g2 = that.r;
						if(_g2._hx_index == 0) {
							var _g3 = _g2.c;
							switch(_g3._hx_index) {
							case 0:
								return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Stop));
							case 1:
								var e1 = _g3.err;
								return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Exit(e1)));
							}
						} else {
							return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Stop));
						}
					} else {
						return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Stop));
					}
					break;
				case 1:
					var _g2 = _g1.err;
					if(that._hx_index == 3) {
						var _g1 = that.r;
						if(_g1._hx_index == 0) {
							var _g3 = _g1.c;
							switch(_g3._hx_index) {
							case 0:
								var e = _g2;
								return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Exit(e)));
							case 1:
								var e1 = _g3.err;
								var e0 = _g2;
								return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Exit(stx_fail_Refuse.concat(e0,e1))));
							}
						} else {
							var l = _g;
							var r = that;
							var self = stx_coroutine_core_CoroutineSum.Halt(l);
							var that8 = r;
							return stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held.Pause(function() {
								return f(self,that8);
							}));
						}
					} else {
						var l = _g;
						var r = that;
						var self9 = stx_coroutine_core_CoroutineSum.Halt(l);
						var that9 = r;
						return stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held.Pause(function() {
							return f(self9,that9);
						}));
					}
					break;
				}
				break;
			case 1:
				var _g1 = _g.v;
				if(that._hx_index == 3) {
					var _g2 = that.r;
					switch(_g2._hx_index) {
					case 0:
						var _g3 = _g2.c;
						switch(_g3._hx_index) {
						case 0:
							return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Stop));
						case 1:
							var e = _g3.err;
							return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Exit(e)));
						}
						break;
					case 1:
						var r = _g2.v;
						var l = _g1;
						return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Production(stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,l,r)));
					}
				} else {
					var l = _g;
					var r = that;
					var self10 = stx_coroutine_core_CoroutineSum.Halt(l);
					var that = r;
					return stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held.Pause(function() {
						return f(self10,that);
					}));
				}
				break;
			}
			break;
		}
	};
	return stx_coroutine_pack_Derive.lift(f(self,that));
};
stx_coroutine_pack_DeriveLift.secure = function(self,that) {
	var f = null;
	f = function(self) {
		switch(self._hx_index) {
		case 0:
			var o = self.o;
			var next = self.next;
			return stx_coroutine_core_CoroutineSum.Emit(o,f(next));
		case 1:
			var tran = self.tran;
			return stx_coroutine_core_CoroutineSum.Wait(stx_coroutine_core_TransmissionLift.mod(tran,f));
		case 2:
			var held = self.held;
			return stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held._new(eu_ohmrun_fletcher_Provide._.convert(held,eu_ohmrun_fletcher_Convert.Fun(f))));
		case 3:
			var _g = self.r;
			switch(_g._hx_index) {
			case 0:
				var e = _g.c;
				return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(e));
			case 1:
				var r = _g.v;
				return stx_coroutine_pack_SecureLift.close(stx_coroutine_pack_Secure.provide(that,r));
			}
			break;
		}
	};
	return stx_coroutine_pack_Effect.lift(f(self));
};
stx_coroutine_pack_DeriveLift.map = function(self,fn) {
	var f = null;
	f = function(self) {
		switch(self._hx_index) {
		case 0:
			var o = self.o;
			var next = self.next;
			return stx_coroutine_core_CoroutineSum.Emit(o,f(next));
		case 1:
			var tran = self.tran;
			return stx_coroutine_core_CoroutineSum.Wait(stx_coroutine_core_TransmissionLift.mod(tran,f));
		case 2:
			var held = self.held;
			return stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held._new(eu_ohmrun_fletcher_Provide._.convert(held,eu_ohmrun_fletcher_Convert.Fun(f))));
		case 3:
			var _g = self.r;
			switch(_g._hx_index) {
			case 0:
				var e = _g.c;
				return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(e));
			case 1:
				var r = _g.v;
				return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Production(fn(r)));
			}
			break;
		}
	};
	return stx_coroutine_pack_Derive.lift(f(self));
};
stx_coroutine_pack_DeriveLift.produce = function(self) {
	return eu_ohmrun_fletcher_Produce.fromPledge(stx_nano_Pledge.lift(tink_core_Future.map(stx_coroutine_pack_DeriveLift.run(self),function(outcome) {
		var tmp;
		switch(outcome._hx_index) {
		case 0:
			var t = outcome.t;
			tmp = stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,t);
			break;
		case 1:
			var e = outcome.e;
			switch(e._hx_index) {
			case 0:
				var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/coroutine/pack/Derive.hx", lineNumber : 158, className : "stx.coroutine.pack.DeriveLift", methodName : "produce"});
				tmp = stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.make(haxe_ds_Option.Some(stx_fail_DeclineSum.INTERIOR(stx_nano_CTR.apply(function(_) {
					return stx_coroutine_core_Errors.e_coroutine_stop(_);
				},stx_Nano.digests(stx_nano_Wildcard.__)))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1))),{ fileName : "stx/coroutine/pack/Derive.hx", lineNumber : 158, className : "stx.coroutine.pack.DeriveLift", methodName : "produce"});
				break;
			case 1:
				var e1 = e.err;
				tmp = stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(e1),{ fileName : "stx/coroutine/pack/Derive.hx", lineNumber : 159, className : "stx.coroutine.pack.DeriveLift", methodName : "produce"});
				break;
			}
			break;
		}
		return tmp;
	})));
};
stx_coroutine_pack_DeriveLift.run = function(eff) {
	var this1 = stx_coroutine_Logging.log(stx_nano_Wildcard.__);
	var fn = function(pos) {
		return pos.with_stamp(function(stamp) {
			return stamp.relevel(3);
		});
	};
	(function(value,pos) {
		this1(value,fn(pos));
	})(stx_log_Stringify.fromString("run " + Std.string(eff))(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/coroutine/pack/Derive.hx", lineNumber : 170, className : "stx.coroutine.pack.DeriveLift", methodName : "run"}));
	var t = new tink_core_FutureTrigger();
	stx_coroutine_pack_DeriveLift.loop(eff,t);
	return t;
};
stx_coroutine_pack_DeriveLift.loop = function(eff,f) {
	var this1 = stx_coroutine_Logging.log(stx_nano_Wildcard.__);
	var fn = function(pos) {
		return pos.with_stamp(function(stamp) {
			return stamp.relevel(2);
		});
	};
	(function(value,pos) {
		this1(value,fn(pos));
	})(stx_log_Stringify.fromString("loop " + Std.string(eff))(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/coroutine/pack/Derive.hx", lineNumber : 176, className : "stx.coroutine.pack.DeriveLift", methodName : "loop"}));
	var now = eff;
	_hx_loop1: while(true) switch(now._hx_index) {
	case 0:
		var _g = now.o;
		var nxt = now.next;
		now = nxt;
		break;
	case 1:
		var fn1 = now.tran;
		now = fn1(stx_coroutine_core_ControlSum.Push(null));
		break;
	case 2:
		var ft = now.held;
		var this2 = stx_coroutine_Logging.log(stx_nano_Wildcard.__);
		var v = stx_log_Stringify.fromString("hold");
		(function(fn,this1) {
			return function(value,pos) {
				this1[0](value,fn[0](pos));
			};
		})([(function() {
			return function(pos) {
				return pos.with_stamp((function() {
					return function(stamp) {
						return stamp.relevel(2);
					};
				})());
			};
		})()],[this2])(v(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/coroutine/pack/Derive.hx", lineNumber : 187, className : "stx.coroutine.pack.DeriveLift", methodName : "loop"}));
		var this3 = stx_coroutine_core_Held.environment(ft,(function() {
			return function(x) {
				var this1 = stx_coroutine_Logging.log(stx_nano_Wildcard.__);
				var v = stx_log_Stringify.fromString("hold:release");
				var this2 = this1;
				var fn = (function() {
					return function(pos) {
						return pos.with_stamp((function() {
							return function(stamp) {
								return stamp.relevel(2);
							};
						})());
					};
				})();
				(function() {
					return function(value,pos) {
						this2(value,fn(pos));
					};
				})()(v(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/coroutine/pack/Derive.hx", lineNumber : 190, className : "stx.coroutine.pack.DeriveLift", methodName : "loop"}));
				stx_coroutine_pack_DeriveLift.loop(x,f);
			};
		})());
		var this4 = eu_ohmrun_fletcher_core_Cont.lift(new eu_ohmrun_fletcher_core_cont_term_AnonAnon((function() {
			return function(fn) {
				return fn(new tink_core_FutureTrigger());
			};
		})()));
		stx_stream_CycleLift.submit(stx_stream_Work.toCycle(this3.defer(null,this4)),{ fileName : "eu/ohmrun/fletcher/Fiber.hx", lineNumber : 21, className : "eu.ohmrun.fletcher._Fiber.Fiber_Impl_", methodName : "submit"});
		break _hx_loop1;
	case 3:
		var h = now.r;
		switch(h._hx_index) {
		case 0:
			var cause = h.c;
			f.trigger(stx_nano_lift_LiftNano.failure(stx_nano_Wildcard.__,cause));
			break;
		case 1:
			var value = h.v;
			f.trigger(stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,value));
			break;
		}
		break _hx_loop1;
	}
};
var stx_coroutine_pack_Derive = {};
stx_coroutine_pack_Derive._new = function(self) {
	var this1 = self;
	return this1;
};
stx_coroutine_pack_Derive.lift = function(self) {
	return stx_coroutine_pack_Derive._new(self);
};
stx_coroutine_pack_Derive.fromCoroutine = function(spx) {
	return stx_coroutine_pack_Derive._new(spx);
};
stx_coroutine_pack_Derive.fromThunk = function(thk) {
	return stx_coroutine_pack_Derive.lift(stx_coroutine_core_Held.lazy(function() {
		return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Production(thk()));
	}));
};
stx_coroutine_pack_Derive.toCoroutine = function(this1) {
	return this1;
};
var stx_coroutine_pack_EffectLift = function() { };
$hxClasses["stx.coroutine.pack.EffectLift"] = stx_coroutine_pack_EffectLift;
stx_coroutine_pack_EffectLift.__name__ = "stx.coroutine.pack.EffectLift";
stx_coroutine_pack_EffectLift.run = function(self) {
	return tink_core_Future.map(stx_coroutine_pack_Derive._.run(stx_coroutine_pack_Effect.prj(self)),function(outcome) {
		var tmp;
		switch(outcome._hx_index) {
		case 0:
			var t = outcome.t;
			tmp = haxe_ds_Option.None;
			break;
		case 1:
			var e = outcome.e;
			tmp = haxe_ds_Option.Some(e);
			break;
		}
		return tmp;
	});
};
stx_coroutine_pack_EffectLift.submit = function(eff) {
	stx_coroutine_pack_Derive._.run(stx_coroutine_pack_Effect.prj(eff)).handle(function(res) {
		switch(res._hx_index) {
		case 0:
			var t = res.t;
			break;
		case 1:
			var e = res.e;
			if(e._hx_index == 1) {
				var e1 = e.err;
				var this1 = stx_Log.ZERO;
				var fn = function(pos) {
					return pos.with_stamp(function(stamp) {
						return stamp.relevel(6);
					});
				};
				(function(value,pos) {
					this1(value,fn(pos));
				})(new stx_log_EntryCtr().pure(e1),stx_log_LogPosition.fromPos({ fileName : "stx/coroutine/pack/Effect.hx", lineNumber : 36, className : "stx.coroutine.pack.EffectLift", methodName : "submit"}));
				throw haxe_Exception.thrown(e1);
			}
			break;
		}
	});
};
stx_coroutine_pack_EffectLift.cause_later = function(e,c) {
	var f = function(e) {
		return stx_coroutine_pack_EffectLift.cause_later(e,c);
	};
	var tmp;
	switch(e._hx_index) {
	case 0:
		var head = e.o;
		var rest = e.next;
		tmp = f(rest);
		break;
	case 1:
		var fn = e.tran;
		tmp = stx_coroutine_core_CoroutineSum.Wait(stx_coroutine_core_TransmissionLift.mod(fn,f));
		break;
	case 2:
		var pull = e.held;
		tmp = stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held._new(eu_ohmrun_fletcher_Provide._.convert(pull,eu_ohmrun_fletcher_Convert.Fun(f))));
		break;
	case 3:
		var _g = e.r;
		switch(_g._hx_index) {
		case 0:
			var cause = _g.c;
			tmp = stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseLift.next(cause,c)));
			break;
		case 1:
			if(_g.v == null) {
				tmp = stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(c));
			} else {
				var e = _g;
				tmp = stx_coroutine_core_CoroutineSum.Halt(e);
			}
			break;
		}
		break;
	}
	return stx_coroutine_pack_Effect.lift(tmp);
};
stx_coroutine_pack_EffectLift.toExecute = function(self) {
	var this1 = eu_ohmrun_Fletcher.fromApi(new stx_coroutine_pack_EffectExecute(self));
	return this1;
};
stx_coroutine_pack_EffectLift.next = function(self,that) {
	var f = null;
	f = function(self) {
		switch(self._hx_index) {
		case 0:
			var o = self.o;
			var next = self.next;
			var self1 = stx_coroutine_pack_Effect.fromCoroutine(next);
			return stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held.Pause(function() {
				return f(self1);
			}));
		case 1:
			var tran = self.tran;
			var fn = function(i) {
				var self = stx_coroutine_pack_Effect.fromCoroutine(tran(stx_coroutine_core_ControlSum.Push(null)));
				return stx_coroutine_core_Coroutine.provide(stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held.Pause(function() {
					return f(self);
				})),i);
			};
			return stx_coroutine_core_CoroutineSum.Wait(stx_coroutine_core_Transmission.lift(function(control) {
				return stx_coroutine_core_ControlLift.fold(control,fn,function(e) {
					return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_Cause.fromRefuse(stx_nano_lift_LiftErrorDigestToRefuse.toRefuse(e))));
				},function() {
					return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Stop));
				});
			}));
		case 2:
			var held = self.held;
			return stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held.fromProvide(stx_coroutine_core_Held.convert(held,eu_ohmrun_fletcher_Convert.Fun(function(self) {
				return f(self);
			}))));
		case 3:
			var _g = self.r;
			switch(_g._hx_index) {
			case 0:
				var c = _g.c;
				return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(c));
			case 1:
				var _g1 = _g.v;
				return that;
			}
			break;
		}
	};
	return f(self);
};
var stx_coroutine_pack_Effect = {};
stx_coroutine_pack_Effect.lift = function(self) {
	return stx_coroutine_pack_Effect._new(self);
};
stx_coroutine_pack_Effect._new = function(self) {
	var this1 = self;
	return this1;
};
stx_coroutine_pack_Effect.toCoroutine = function(this1) {
	return this1;
};
stx_coroutine_pack_Effect.fromCoroutine = function(self) {
	return stx_coroutine_pack_Effect.lift(self);
};
stx_coroutine_pack_Effect.prj = function(this1) {
	return this1;
};
var stx_coroutine_pack_EffectExecute = function(effect) {
	eu_ohmrun_FletcherCls.call(this);
	this.effect = effect;
};
$hxClasses["stx.coroutine.pack.EffectExecute"] = stx_coroutine_pack_EffectExecute;
stx_coroutine_pack_EffectExecute.__name__ = "stx.coroutine.pack.EffectExecute";
stx_coroutine_pack_EffectExecute.crunch1 = function(eff) {
	stx_coroutine_pack_Derive._.run(stx_coroutine_pack_Effect.prj(eff)).handle(function(res) {
		switch(res._hx_index) {
		case 0:
			var t = res.t;
			break;
		case 1:
			var e = res.e;
			throw haxe_Exception.thrown(e);
		}
	});
};
stx_coroutine_pack_EffectExecute.crunch = function(eff) {
	var cursor = eff;
	var suspended = false;
	var done = false;
	var handler = function() {
		switch(cursor._hx_index) {
		case 0:
			var _g = cursor.o;
			var tail = cursor.next;
			cursor = stx_coroutine_pack_Effect.fromCoroutine(tail);
			break;
		case 1:
			var fn = cursor.tran;
			cursor = stx_coroutine_pack_Effect.fromCoroutine(fn(stx_coroutine_core_Control.push(null)));
			break;
		case 2:
			var held = cursor.held;
			suspended = true;
			var this1 = stx_coroutine_core_Held.environment(held,function(eff) {
				cursor = stx_coroutine_pack_Effect.fromCoroutine(eff);
				suspended = false;
			});
			var this2 = eu_ohmrun_fletcher_core_Cont.lift(new eu_ohmrun_fletcher_core_cont_term_AnonAnon(function(fn) {
				return fn(new tink_core_FutureTrigger());
			}));
			stx_stream_CycleLift.submit(stx_stream_Work.toCycle(this1.defer(null,this2)),{ fileName : "eu/ohmrun/fletcher/Fiber.hx", lineNumber : 21, className : "eu.ohmrun.fletcher._Fiber.Fiber_Impl_", methodName : "submit"});
			break;
		case 3:
			var h = cursor.r;
			if(h._hx_index == 0) {
				var _g = h.c;
				if(_g._hx_index == 1) {
					var error = _g.err;
					throw haxe_Exception.thrown(error);
				}
			}
			done = true;
			break;
		}
	};
	while(!done) if(!suspended) {
		handler();
	}
};
stx_coroutine_pack_EffectExecute.__super__ = eu_ohmrun_FletcherCls;
stx_coroutine_pack_EffectExecute.prototype = $extend(eu_ohmrun_FletcherCls.prototype,{
	effect: null
	,defer: function(_,cont) {
		var _gthis = this;
		var this1 = stx_stream_Cycler.toCycle(stx_stream_Cycler._new(new stx_stream_PureCyclerCls(tink_core_Future.irreversible(function(cb) {
			cb(_gthis.handler(_gthis.effect,function(report) {
				var self = cont;
				var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,report);
				var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
					trg.trigger(value);
					return trg;
				}));
				this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
					var this1 = self;
					return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
						oc.handle(function(out) {
							ip.trigger(out);
						});
						var this1 = null;
						return this1;
					})));
				})));
			}));
		}))));
		return this1;
	}
	,handler: function(self,cont) {
		var _g = this;
		var cont1 = cont;
		var f = function(self) {
			return _g.handler(self,cont1);
		};
		switch(self._hx_index) {
		case 0:
			var _g1 = self.o;
			var next = self.next;
			return stx_stream_Cycle._new(stx_stream_Cycler._new(new stx_stream_PureCyclerCls(tink_core_Future.irreversible(function(cb) {
				cb(f(next));
			}))));
		case 1:
			var tran = self.tran;
			return stx_stream_Cycle._new(stx_stream_Cycler._new(new stx_stream_PureCyclerCls(tink_core_Future.irreversible(function(cb) {
				cb(f(tran(stx_coroutine_core_ControlSum.Push(null))));
			}))));
		case 2:
			var held = self.held;
			var this1 = eu_ohmrun_FletcherLift.map(held,f);
			var provide = this1;
			var this1 = eu_ohmrun_Fletcher._.environment(eu_ohmrun_fletcher_ProvideLift.then(provide,eu_ohmrun_Fletcher.Anon(function(inpt,cont) {
				var this1 = inpt;
				var self = cont;
				var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,null);
				var this2 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
					trg.trigger(value);
					return trg;
				}));
				return stx_stream_WorkLift.seq(this1,this2.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
					var this1 = self;
					return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
						oc.handle(function(out) {
							ip.trigger(out);
						});
						var this1 = null;
						return this1;
					})));
				}))));
			})),null,function(o) {
			},function(e) {
				var this1 = eu_ohmrun_fletcher_Logging.log(stx_nano_Wildcard.__);
				var fn = function(pos) {
					return pos.with_stamp(function(stamp) {
						return stamp.relevel(6);
					});
				};
				(function(value,pos) {
					this1(value,fn(pos));
				})(new stx_log_EntryCtr().pure(e),stx_log_LogPosition.fromPos({ fileName : "eu/ohmrun/fletcher/Provide.hx", lineNumber : 75, className : "eu.ohmrun.fletcher.ProvideLift", methodName : "environment"}));
				throw haxe_Exception.thrown(e);
			});
			var this2 = eu_ohmrun_fletcher_core_Cont.lift(new eu_ohmrun_fletcher_core_cont_term_AnonAnon(function(fn) {
				return fn(new tink_core_FutureTrigger());
			}));
			return stx_stream_Work.toCycle(this1.defer(null,this2));
		case 3:
			var _g1 = self.r;
			switch(_g1._hx_index) {
			case 0:
				var _g2 = _g1.c;
				switch(_g2._hx_index) {
				case 0:
					var f1 = null;
					cont(f1 == null ? stx_nano_Report.unit() : stx_nano_Report.pure(f1(stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/coroutine/pack/Effect.hx", lineNumber : 114, className : "stx.coroutine.pack.EffectExecute", methodName : "handler"}))));
					return stx_stream_Cycle._new(stx_stream_Cycler._new(new stx_stream_UnitCyclerCls()));
				case 1:
					var rejection = _g2.err;
					var _ = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/coroutine/pack/Effect.hx", lineNumber : 117, className : "stx.coroutine.pack.EffectExecute", methodName : "handler"});
					cont(stx_nano_Report.pure(rejection));
					return stx_stream_Cycle._new(stx_stream_Cycler._new(new stx_stream_UnitCyclerCls()));
				}
				break;
			case 1:
				var _g2 = _g1.v;
				var f1 = null;
				cont(f1 == null ? stx_nano_Report.unit() : stx_nano_Report.pure(f1(stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/coroutine/pack/Effect.hx", lineNumber : 111, className : "stx.coroutine.pack.EffectExecute", methodName : "handler"}))));
				return stx_stream_Cycle._new(stx_stream_Cycler._new(new stx_stream_UnitCyclerCls()));
			}
			break;
		}
	}
	,__class__: stx_coroutine_pack_EffectExecute
});
var stx_coroutine_pack_EmiterLift = function() { };
$hxClasses["stx.coroutine.pack.EmiterLift"] = stx_coroutine_pack_EmiterLift;
stx_coroutine_pack_EmiterLift.__name__ = "stx.coroutine.pack.EmiterLift";
stx_coroutine_pack_EmiterLift.lift = function(self) {
	return stx_coroutine_pack_Emiter.lift(self);
};
stx_coroutine_pack_EmiterLift.reduce = function(source,fn,memo) {
	var f = function(source,memo) {
		return stx_coroutine_pack_EmiterLift.reduce(source,fn,memo);
	};
	var c = function(memo) {
		var memo1 = memo;
		return function(source) {
			return f(source,memo1);
		};
	};
	var tmp;
	switch(source._hx_index) {
	case 0:
		var head = source.o;
		var rest = source.next;
		tmp = stx_coroutine_core_CoroutineLift.mod(rest,function(spx) {
			return stx_coroutine_pack_Derive.toCoroutine(f(stx_coroutine_pack_Emiter.fromCoroutine(spx),fn(head,memo)));
		});
		break;
	case 1:
		var arw = source.tran;
		tmp = stx_coroutine_core_CoroutineSum.Wait(stx_coroutine_core_TransmissionLift.mod(arw,c(memo)));
		break;
	case 2:
		var ft = source.held;
		tmp = stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held._new(eu_ohmrun_fletcher_Provide._.convert(ft,eu_ohmrun_fletcher_Convert.Fun(c(memo)))));
		break;
	case 3:
		var _g = source.r;
		switch(_g._hx_index) {
		case 0:
			var cause = _g.c;
			tmp = stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(cause));
			break;
		case 1:
			if(_g.v == null) {
				tmp = stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Production(memo));
			} else {
				throw haxe_Exception.thrown("Pattern match regression 062020");
			}
			break;
		}
		break;
	}
	return stx_coroutine_pack_Derive.lift(tmp);
};
stx_coroutine_pack_EmiterLift.toArray = function(emt) {
	return stx_coroutine_pack_EmiterLift.reduce(emt,function(next,memo) {
		return memo.concat([next]);
	},[]);
};
stx_coroutine_pack_EmiterLift.append = function(prc0,prc1) {
	var prc11 = prc1;
	var f = function(prc0) {
		return stx_coroutine_pack_EmiterLift.append(prc0,prc11);
	};
	switch(prc0._hx_index) {
	case 0:
		var head = prc0.o;
		var rest = prc0.next;
		return stx_coroutine_pack_Emiter.fromCoroutine(stx_coroutine_core_CoroutineSum.Emit(head,stx_coroutine_core_CoroutineLift.mod(rest,f)));
	case 1:
		var arw = prc0.tran;
		return stx_coroutine_pack_Emiter.fromCoroutine(stx_coroutine_core_CoroutineSum.Wait(stx_coroutine_core_TransmissionLift.mod(arw,f)));
	case 2:
		var ft = prc0.held;
		return stx_coroutine_pack_Emiter.fromCoroutine(stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held._new(eu_ohmrun_fletcher_Provide._.convert(ft,eu_ohmrun_fletcher_Convert.Fun(f)))));
	case 3:
		var _g = prc0.r;
		switch(_g._hx_index) {
		case 0:
			var cause = _g.c;
			return stx_coroutine_pack_Emiter.fromCoroutine(stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(cause)));
		case 1:
			if(_g.v == null) {
				return prc1();
			} else {
				throw haxe_Exception.thrown("Pattern match regression 30/06/2020");
			}
			break;
		}
		break;
	}
};
stx_coroutine_pack_EmiterLift.flat_map = function(prc,fn) {
	var fn1 = fn;
	var f = function(prc) {
		return stx_coroutine_pack_EmiterLift.flat_map(prc,fn1);
	};
	switch(prc._hx_index) {
	case 0:
		var head = prc.o;
		var rest = prc.next;
		var tmp = fn(head);
		var _g = f;
		var prc1 = stx_coroutine_pack_Emiter.fromCoroutine(rest);
		return stx_coroutine_pack_EmiterLift.append(tmp,function() {
			return _g(prc1);
		});
	case 1:
		var arw = prc.tran;
		return stx_coroutine_pack_Emiter.fromCoroutine(stx_coroutine_core_CoroutineSum.Wait(stx_coroutine_core_TransmissionLift.mod(arw,f)));
	case 2:
		var ft = prc.held;
		return stx_coroutine_pack_Emiter.fromCoroutine(stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held._new(eu_ohmrun_fletcher_Provide._.convert(ft,eu_ohmrun_fletcher_Convert.Fun(f)))));
	case 3:
		var e = prc.r;
		return stx_coroutine_pack_Emiter.fromCoroutine(stx_coroutine_core_CoroutineSum.Halt(e));
	}
};
stx_coroutine_pack_EmiterLift.search = function(self,prd) {
	var f = function(self) {
		return stx_coroutine_pack_EmiterLift.search(self,prd);
	};
	switch(self._hx_index) {
	case 0:
		var _g = self.o;
		var _g1 = self.next;
		var head = _g;
		var rest = _g1;
		if(prd(head)) {
			return stx_coroutine_pack_Derive.fromCoroutine(stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Production(haxe_ds_Option.Some(head))));
		} else {
			var head = _g;
			var rest = _g1;
			var prd1 = prd;
			return stx_coroutine_pack_Derive.fromCoroutine(stx_coroutine_core_CoroutineLift.mod(rest,function(self) {
				return stx_coroutine_pack_EmiterLift.search(self,prd1);
			}));
		}
		break;
	case 1:
		var fn = self.tran;
		return stx_coroutine_pack_Derive.fromCoroutine(stx_coroutine_core_CoroutineSum.Wait(stx_coroutine_core_TransmissionLift.mod(fn,f)));
	case 2:
		var ft = self.held;
		return stx_coroutine_pack_Derive.fromCoroutine(stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held._new(eu_ohmrun_fletcher_Provide._.convert(ft,eu_ohmrun_fletcher_Convert.Fun(f)))));
	case 3:
		var _g = self.r;
		switch(_g._hx_index) {
		case 0:
			var cause = _g.c;
			return stx_coroutine_pack_Derive.fromCoroutine(stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(cause)));
		case 1:
			var v = _g.v;
			return stx_coroutine_pack_Derive.fromCoroutine(stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Production(haxe_ds_Option.None)));
		}
		break;
	}
};
stx_coroutine_pack_EmiterLift.first = function(self) {
	return stx_coroutine_pack_EmiterLift.search(self,function(v) {
		return true;
	});
};
stx_coroutine_pack_EmiterLift.last = function(self) {
	var recurse = null;
	recurse = function(self,lst) {
		var lst1 = lst;
		var f = function(self) {
			return recurse(self,lst1);
		};
		switch(self._hx_index) {
		case 0:
			var head = self.o;
			var rest = self.next;
			var lst2 = haxe_ds_Option.Some(head);
			return stx_coroutine_pack_Derive.fromCoroutine(stx_coroutine_core_CoroutineLift.mod(rest,function(self) {
				return recurse(self,lst2);
			}));
		case 1:
			var fn = self.tran;
			return stx_coroutine_pack_Derive.fromCoroutine(stx_coroutine_core_CoroutineSum.Wait(stx_coroutine_core_TransmissionLift.mod(fn,f)));
		case 2:
			var ft = self.held;
			return stx_coroutine_pack_Derive.fromCoroutine(stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held._new(eu_ohmrun_fletcher_Provide._.convert(ft,eu_ohmrun_fletcher_Convert.Fun(f)))));
		case 3:
			var _g = self.r;
			switch(_g._hx_index) {
			case 0:
				var cause = _g.c;
				return stx_coroutine_pack_Derive.fromCoroutine(stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(cause)));
			case 1:
				if(_g.v == null) {
					var v = lst;
					return stx_coroutine_pack_Derive.fromCoroutine(stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Production(v)));
				} else {
					var v = lst;
					return stx_coroutine_pack_Derive.fromCoroutine(stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Production(v)));
				}
				break;
			}
			break;
		}
	};
	return recurse(self,haxe_ds_Option.None);
};
stx_coroutine_pack_EmiterLift.at = function(self,index) {
	var recurse = null;
	recurse = function(self,count) {
		if(count == null) {
			count = 0;
		}
		var f = function(int) {
			var count = int;
			return function(self) {
				return recurse(self,count);
			};
		};
		var c = f(count);
		switch(self._hx_index) {
		case 0:
			var _g = self.o;
			var _g1 = self.next;
			var head = _g;
			var tail = _g1;
			if(index == count) {
				return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Production(haxe_ds_Option.Some(head)));
			} else {
				var head = _g;
				var tail = _g1;
				return stx_coroutine_core_CoroutineLift.mod(tail,f(count + 1));
			}
			break;
		case 1:
			var fn = self.tran;
			return stx_coroutine_core_CoroutineSum.Wait(stx_coroutine_core_TransmissionLift.mod(fn,c));
		case 2:
			var ft = self.held;
			return stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held._new(eu_ohmrun_fletcher_Provide._.convert(ft,eu_ohmrun_fletcher_Convert.Fun(c))));
		case 3:
			var _g = self.r;
			switch(_g._hx_index) {
			case 0:
				var cause = _g.c;
				return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(cause));
			case 1:
				var _g1 = _g.v;
				return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Production(haxe_ds_Option.None));
			}
			break;
		}
	};
	return recurse(self);
};
stx_coroutine_pack_EmiterLift.count = function(self) {
	return stx_coroutine_pack_EmiterLift.reduce(self,function(next,memo) {
		return memo++;
	},0);
};
stx_coroutine_pack_EmiterLift.until = function(self,prd) {
	var recurse = null;
	recurse = function(self,cont) {
		var cont1 = cont;
		var f = function(self) {
			return recurse(self,cont1);
		};
		if(cont) {
			switch(self._hx_index) {
			case 0:
				var head = self.o;
				var tail = self.next;
				return stx_coroutine_core_CoroutineLift.mod(tail,function(self) {
					return recurse(self,!prd(head));
				});
			case 1:
				var fn = self.tran;
				return stx_coroutine_core_CoroutineSum.Wait(stx_coroutine_core_TransmissionLift.mod(fn,f));
			case 2:
				var ft = self.held;
				return stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held._new(eu_ohmrun_fletcher_Provide._.convert(ft,eu_ohmrun_fletcher_Convert.Fun(f))));
			case 3:
				var v = self.r;
				return stx_coroutine_core_CoroutineSum.Halt(v);
			}
		} else {
			return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Production(null));
		}
	};
	return recurse(self,true);
};
stx_coroutine_pack_EmiterLift.take = function(self,max) {
	var recurse = null;
	recurse = function(self,n) {
		var f = function(n) {
			var n1 = n;
			return function(self) {
				return recurse(self,n1);
			};
		};
		if(n >= max) {
			return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Production(null));
		} else {
			switch(self._hx_index) {
			case 0:
				var head = self.o;
				var tail = self.next;
				return stx_coroutine_core_CoroutineSum.Emit(head,(f(n++))(tail));
			case 1:
				var fn = self.tran;
				return stx_coroutine_core_CoroutineSum.Wait(stx_coroutine_core_TransmissionLift.mod(fn,f(n)));
			case 2:
				var ft = self.held;
				return stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held._new(eu_ohmrun_fletcher_Provide._.convert(ft,eu_ohmrun_fletcher_Convert.Fun(f(n)))));
			case 3:
				var out = self.r;
				return stx_coroutine_core_CoroutineSum.Halt(out);
			}
		}
	};
	return recurse(self,1);
};
stx_coroutine_pack_EmiterLift.cons = function(self,v) {
	return stx_coroutine_pack_Emiter.fromCoroutine(stx_coroutine_core_CoroutineSum.Emit(v,self));
};
stx_coroutine_pack_EmiterLift.snoc = function(self,o) {
	var o1 = o;
	var f = function(self) {
		return stx_coroutine_pack_EmiterLift.snoc(self,o1);
	};
	switch(self._hx_index) {
	case 0:
		var head = self.o;
		var rest = self.next;
		return stx_coroutine_pack_Emiter.fromCoroutine(stx_coroutine_core_CoroutineSum.Emit(head,stx_coroutine_core_CoroutineLift.mod(rest,f)));
	case 1:
		var fn = self.tran;
		return stx_coroutine_pack_Emiter.fromCoroutine(stx_coroutine_core_CoroutineSum.Wait(stx_coroutine_core_TransmissionLift.mod(fn,f)));
	case 2:
		var ft = self.held;
		return stx_coroutine_pack_Emiter.fromCoroutine(stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held._new(eu_ohmrun_fletcher_Provide._.convert(ft,eu_ohmrun_fletcher_Convert.Fun(f)))));
	case 3:
		var _g = self.r;
		switch(_g._hx_index) {
		case 0:
			var cause = _g.c;
			return self;
		case 1:
			if(_g.v == null) {
				return stx_coroutine_pack_EmiterLift.cons(self,o);
			} else {
				return stx_coroutine_pack_Emiter.fromCoroutine(stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Stop)));
			}
			break;
		}
		break;
	}
};
stx_coroutine_pack_EmiterLift.span = function(last,start) {
	if(start == null) {
		start = 0;
	}
	var val = start;
	var recurse = null;
	recurse = function(_) {
		if(val == last) {
			return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Production(null));
		} else {
			val += 1;
			return stx_coroutine_core_CoroutineSum.Emit(val - 1,stx_coroutine_core_CoroutineSum.Wait(recurse));
		}
	};
	return stx_coroutine_core_CoroutineSum.Wait(recurse);
};
stx_coroutine_pack_EmiterLift.filter = function(self,prd) {
	return stx_coroutine_pack_Emiter.lift(stx_coroutine_pack_Source._.filter(stx_coroutine_pack_Source.lift(self),prd));
};
stx_coroutine_pack_EmiterLift.secure = function(self,next) {
	var recurse = null;
	recurse = function(self,next) {
		var next1 = next;
		var fl = function(self) {
			return recurse(self,next1);
		};
		var recurse1;
		switch(self._hx_index) {
		case 0:
			var _g = self.o;
			var _g1 = self.next;
			switch(next._hx_index) {
			case 0:
				var head = next.o;
				var tail = next.next;
				recurse1 = recurse(self,tail);
				break;
			case 1:
				var fn = next.tran;
				var tail = _g1;
				var head = _g;
				recurse1 = recurse(tail,fn(stx_coroutine_core_ControlSum.Push(head)));
				break;
			case 2:
				var ft = next.held;
				var self1 = self;
				recurse1 = stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held._new(eu_ohmrun_fletcher_Provide._.convert(ft,eu_ohmrun_fletcher_Convert.Fun(function(next) {
					return recurse(self1,next);
				}))));
				break;
			case 3:
				var out = next.r;
				recurse1 = stx_coroutine_core_CoroutineSum.Halt(out);
				break;
			}
			break;
		case 1:
			var _g = self.tran;
			switch(next._hx_index) {
			case 0:
				var _g1 = next.o;
				var _g1 = next.next;
				var fn = _g;
				recurse1 = stx_coroutine_core_CoroutineSum.Wait(stx_coroutine_core_TransmissionLift.mod(fn,fl));
				break;
			case 2:
				var _g1 = next.held;
				var fn = _g;
				recurse1 = stx_coroutine_core_CoroutineSum.Wait(stx_coroutine_core_TransmissionLift.mod(fn,fl));
				break;
			case 3:
				var out = next.r;
				recurse1 = stx_coroutine_core_CoroutineSum.Halt(out);
				break;
			default:
				var fn = _g;
				recurse1 = stx_coroutine_core_CoroutineSum.Wait(stx_coroutine_core_TransmissionLift.mod(fn,fl));
			}
			break;
		case 2:
			var _g = self.held;
			switch(next._hx_index) {
			case 0:
				var _g1 = next.o;
				var _g1 = next.next;
				var ft = _g;
				recurse1 = stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held._new(eu_ohmrun_fletcher_Provide._.convert(ft,eu_ohmrun_fletcher_Convert.Fun(fl))));
				break;
			case 2:
				var _g1 = next.held;
				var ft = _g;
				recurse1 = stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held._new(eu_ohmrun_fletcher_Provide._.convert(ft,eu_ohmrun_fletcher_Convert.Fun(fl))));
				break;
			case 3:
				var out = next.r;
				recurse1 = stx_coroutine_core_CoroutineSum.Halt(out);
				break;
			default:
				var ft = _g;
				recurse1 = stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held._new(eu_ohmrun_fletcher_Provide._.convert(ft,eu_ohmrun_fletcher_Convert.Fun(fl))));
			}
			break;
		case 3:
			var out = self.r;
			recurse1 = stx_coroutine_core_CoroutineSum.Halt(out);
			break;
		}
		return stx_coroutine_pack_Effect.toCoroutine(stx_coroutine_pack_Effect.lift(recurse1));
	};
	return stx_coroutine_pack_Effect.fromCoroutine(recurse(stx_coroutine_pack_Emiter.toCoroutine(self),stx_coroutine_pack_Secure.toCoroutine(next)));
};
stx_coroutine_pack_EmiterLift.sample = function(self,fn,init) {
	var data = init;
	var rec = null;
	rec = function(self) {
		switch(self._hx_index) {
		case 0:
			var o = self.o;
			var next = self.next;
			var step = fn(o,data);
			switch(step._hx_index) {
			case 0:
				var v = step.v;
				data = v;
				return rec(next);
			case 1:
				return rec(next);
			case 2:
				var _g = step.err;
				if(_g == null) {
					return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Production(data));
				} else {
					var err = _g;
					return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Exit(err)));
				}
				break;
			}
			break;
		case 1:
			var tran = self.tran;
			return stx_coroutine_core_CoroutineSum.Wait(stx_coroutine_core_TransmissionLift.mod(tran,rec));
		case 2:
			var held = self.held;
			return stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held._new(eu_ohmrun_fletcher_Provide._.convert(held,eu_ohmrun_fletcher_Convert.Fun(rec))));
		case 3:
			var _g = self.r;
			switch(_g._hx_index) {
			case 0:
				var _g1 = _g.c;
				if(_g1._hx_index == 0) {
					return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Production(data));
				} else {
					var r = _g1;
					return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(r));
				}
				break;
			case 1:
				var r = _g.v;
				return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Production(data));
			}
			break;
		}
	};
	return stx_coroutine_pack_Source.fromCoroutine(rec(self));
};
stx_coroutine_pack_EmiterLift.derive = function(self,pure,plus,zero) {
	var value = zero;
	var f = null;
	f = function(self) {
		switch(self._hx_index) {
		case 0:
			var o = self.o;
			var next = self.next;
			value = plus(pure(o),zero);
			var self1 = next;
			return stx_coroutine_core_CoroutineSum.Emit(null,stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held.Pause(function() {
				return f(self1);
			})));
		case 1:
			var tran = self.tran;
			return stx_coroutine_core_CoroutineSum.Wait(stx_coroutine_core_TransmissionLift.mod(tran,f));
		case 2:
			var held = self.held;
			return stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held._new(eu_ohmrun_fletcher_Provide._.convert(held,eu_ohmrun_fletcher_Convert.Fun(f))));
		case 3:
			var _g = self.r;
			switch(_g._hx_index) {
			case 0:
				var cause = _g.c;
				return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(cause));
			case 1:
				var _g1 = _g.v;
				return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Production(value));
			}
			break;
		}
	};
	return stx_coroutine_pack_Derive.fromCoroutine(f(self));
};
var stx_coroutine_pack_Emiter = {};
stx_coroutine_pack_Emiter._new = function(self) {
	var this1 = self;
	return this1;
};
stx_coroutine_pack_Emiter.lift = function(self) {
	return stx_coroutine_pack_Emiter._new(self);
};
stx_coroutine_pack_Emiter.pure = function(self) {
	return stx_coroutine_pack_Emiter.fromCoroutine(stx_coroutine_core_CoroutineSum.Emit(self,stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Production(null))));
};
stx_coroutine_pack_Emiter.unit = function() {
	return stx_coroutine_pack_Emiter.lift(stx_coroutine_core_CoroutineSum.Wait(stx_coroutine_core_Transmission.lift(function(control) {
		return stx_coroutine_core_ControlLift.fold(control,function(_) {
			return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Stop));
		},function(e) {
			return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_Cause.fromRefuse(stx_nano_lift_LiftErrorDigestToRefuse.toRefuse(e))));
		},function() {
			return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Stop));
		});
	})));
};
stx_coroutine_pack_Emiter.fromOption = function(opt) {
	var tmp;
	switch(opt._hx_index) {
	case 0:
		var v = opt.v;
		tmp = stx_coroutine_core_CoroutineLift.cons(stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Stop)),v);
		break;
	case 1:
		tmp = stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Stop));
		break;
	}
	return stx_coroutine_pack_Emiter.lift(tmp);
};
stx_coroutine_pack_Emiter.fromThunk = function(thk) {
	var recurse = null;
	recurse = function() {
		return stx_coroutine_core_CoroutineLift.cons(stx_coroutine_core_Held.lazy(recurse),thk());
	};
	return stx_coroutine_pack_Emiter.lift(stx_coroutine_core_Held.lazy(recurse));
};
stx_coroutine_pack_Emiter.fromIterator = function(iter) {
	var recurse = null;
	recurse = function() {
		if(iter.hasNext()) {
			return stx_coroutine_core_CoroutineLift.cons(stx_coroutine_core_Held.lazy(recurse),iter.next());
		} else {
			return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Stop));
		}
	};
	return stx_coroutine_pack_Emiter.lift(stx_coroutine_core_Held.lazy(recurse));
};
stx_coroutine_pack_Emiter.fromSignal = function(self) {
	return stx_coroutine_pack_Emiter.fromTinkSignal(stx_nano_Signal.prj(self));
};
stx_coroutine_pack_Emiter.fromTinkSignal = function(self) {
	var buffer = [];
	var wake = function() {
		return;
	};
	self.listen(function(x) {
		buffer.push(x);
		wake();
	});
	var rec = null;
	rec = function(cb) {
		var head = buffer.shift();
		var this1 = new tink_core__$Future_SuspendableFuture(rec);
		var f = stx_coroutine_core_CoroutineSum.Emit(head,stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held.Guard(this1,{ fileName : "stx/coroutine/pack/Emiter.hx", lineNumber : 66, className : "stx.coroutine.pack._Emiter.Emiter_Impl_", methodName : "fromTinkSignal"})));
		if(buffer.length == 0) {
			wake = function() {
				wake = function() {
				};
				cb(f);
			};
		} else {
			cb(f);
		}
		var this1 = new tink_core_SimpleLink(function() {
		});
		return this1;
	};
	var this1 = new tink_core__$Future_SuspendableFuture(rec);
	return stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held.Guard(this1,{ fileName : "stx/coroutine/pack/Emiter.hx", lineNumber : 63, className : "stx.coroutine.pack._Emiter.Emiter_Impl_", methodName : "fromTinkSignal"}));
};
stx_coroutine_pack_Emiter.fromCoroutine = function(self) {
	return stx_coroutine_pack_Emiter.lift(self);
};
stx_coroutine_pack_Emiter.toCoroutine = function(this1) {
	return this1;
};
stx_coroutine_pack_Emiter.ints = function() {
	var val = 0;
	var go = function() {
		var o = val;
		val += 1;
		return o;
	};
	return stx_coroutine_pack_Emiter.fromThunk(go);
};
stx_coroutine_pack_Emiter.timestamp = function() {
	return stx_coroutine_pack_Emiter.fromThunk(haxe_Timer.stamp);
};
stx_coroutine_pack_Emiter.one = function() {
	return stx_coroutine_pack_Emiter.fromThunk(function() {
		return 1;
	});
};
var stx_coroutine_pack_RelateLift = function() { };
$hxClasses["stx.coroutine.pack.RelateLift"] = stx_coroutine_pack_RelateLift;
stx_coroutine_pack_RelateLift.__name__ = "stx.coroutine.pack.RelateLift";
stx_coroutine_pack_RelateLift.toTunnel = function(self) {
	var rec = null;
	rec = function(self) {
		switch(self._hx_index) {
		case 0:
			var _g = self.o;
			var next = self.next;
			return rec(next);
		case 1:
			var tran = self.tran;
			return stx_coroutine_core_CoroutineSum.Wait(stx_coroutine_core_TransmissionLift.mod(tran,rec));
		case 2:
			var held = self.held;
			return stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held._new(eu_ohmrun_fletcher_Provide._.convert(held,eu_ohmrun_fletcher_Convert.Fun(rec))));
		case 3:
			var _g = self.r;
			switch(_g._hx_index) {
			case 0:
				var cause = _g.c;
				return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(cause));
			case 1:
				var out = _g.v;
				return stx_coroutine_core_CoroutineSum.Emit(out,stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Stop)));
			}
			break;
		}
	};
	return stx_coroutine_pack_Tunnel.fromCoroutine(rec(self));
};
stx_coroutine_pack_RelateLift.derive = function(self) {
	var rec = null;
	rec = function(self) {
		var f = rec;
		switch(self._hx_index) {
		case 0:
			var o = self.o;
			var next = self.next;
			return stx_coroutine_core_CoroutineSum.Emit(o,f(next));
		case 1:
			var tran = self.tran;
			return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Stop));
		case 2:
			var held = self.held;
			return stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held._new(eu_ohmrun_fletcher_Provide._.convert(held,eu_ohmrun_fletcher_Convert.Fun(f))));
		case 3:
			var r = self.r;
			return stx_coroutine_core_CoroutineSum.Halt(r);
		}
	};
	return stx_coroutine_pack_Derive.lift(rec(self));
};
var stx_coroutine_pack_Relate = {};
stx_coroutine_pack_Relate.lift = function(self) {
	var this1 = self;
	return this1;
};
stx_coroutine_pack_Relate._new = function(self) {
	var this1 = self;
	return this1;
};
stx_coroutine_pack_Relate.unit = function() {
	var recurse = null;
	recurse = function(v) {
		var fn = recurse;
		return stx_coroutine_core_CoroutineSum.Wait(stx_coroutine_core_Transmission.lift(function(control) {
			return stx_coroutine_core_ControlLift.fold(control,fn,function(e) {
				return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_Cause.fromRefuse(stx_nano_lift_LiftErrorDigestToRefuse.toRefuse(e))));
			},function() {
				return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Stop));
			});
		}));
	};
	var fn = recurse;
	return stx_coroutine_pack_Relate.lift(stx_coroutine_core_CoroutineSum.Wait(stx_coroutine_core_Transmission.lift(function(control) {
		return stx_coroutine_core_ControlLift.fold(control,fn,function(e) {
			return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_Cause.fromRefuse(stx_nano_lift_LiftErrorDigestToRefuse.toRefuse(e))));
		},function() {
			return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Stop));
		});
	})));
};
stx_coroutine_pack_Relate.pure = function(r) {
	return stx_coroutine_pack_Relate.lift(stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Production(r)));
};
stx_coroutine_pack_Relate.fromFun1R = function(fn) {
	var fn1 = function(x) {
		return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Production(fn(x)));
	};
	return stx_coroutine_pack_Relate.lift(stx_coroutine_core_CoroutineSum.Wait(stx_coroutine_core_Transmission.lift(function(control) {
		return stx_coroutine_core_ControlLift.fold(control,fn1,function(e) {
			return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_Cause.fromRefuse(stx_nano_lift_LiftErrorDigestToRefuse.toRefuse(e))));
		},function() {
			return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Stop));
		});
	})));
};
var stx_coroutine_pack_SecureLift = function() { };
$hxClasses["stx.coroutine.pack.SecureLift"] = stx_coroutine_pack_SecureLift;
stx_coroutine_pack_SecureLift.__name__ = "stx.coroutine.pack.SecureLift";
stx_coroutine_pack_SecureLift.close = function(self) {
	var f = null;
	f = function(self) {
		switch(self._hx_index) {
		case 0:
			var o = self.o;
			var next = self.next;
			return stx_coroutine_core_CoroutineSum.Emit(o,f(next));
		case 1:
			var tran = self.tran;
			return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Stop));
		case 2:
			var held = self.held;
			return stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held._new(eu_ohmrun_fletcher_Provide._.convert(held,eu_ohmrun_fletcher_Convert.Fun(f))));
		case 3:
			var r = self.r;
			return stx_coroutine_core_CoroutineSum.Halt(r);
		}
	};
	return stx_coroutine_pack_Effect.lift(f(self));
};
var stx_coroutine_pack_Secure = {};
stx_coroutine_pack_Secure.lift = function(self) {
	return stx_coroutine_pack_Secure._new(self);
};
stx_coroutine_pack_Secure._new = function(self) {
	var this1 = self;
	return this1;
};
stx_coroutine_pack_Secure.handler = function(fn) {
	var rec = null;
	rec = function(o) {
		fn(o);
		var fn1 = rec;
		return stx_coroutine_core_CoroutineSum.Wait(stx_coroutine_core_Transmission.lift(function(control) {
			return stx_coroutine_core_ControlLift.fold(control,fn1,function(e) {
				return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_Cause.fromRefuse(stx_nano_lift_LiftErrorDigestToRefuse.toRefuse(e))));
			},function() {
				return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Stop));
			});
		}));
	};
	var fn1 = rec;
	return stx_coroutine_pack_Secure.lift(stx_coroutine_core_CoroutineSum.Wait(stx_coroutine_core_Transmission.lift(function(control) {
		return stx_coroutine_core_ControlLift.fold(control,fn1,function(e) {
			return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_Cause.fromRefuse(stx_nano_lift_LiftErrorDigestToRefuse.toRefuse(e))));
		},function() {
			return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Stop));
		});
	})));
};
stx_coroutine_pack_Secure.nowhere = function() {
	return stx_coroutine_pack_Secure.handler(function(x) {
	});
};
stx_coroutine_pack_Secure.provide = function(this1,v) {
	return stx_coroutine_pack_Secure.lift(stx_coroutine_core_Coroutine._.provide(this1,v));
};
stx_coroutine_pack_Secure.fromHandler = function(fn) {
	return stx_coroutine_pack_Secure.handler(fn);
};
stx_coroutine_pack_Secure.toCoroutine = function(this1) {
	return this1;
};
stx_coroutine_pack_Secure.fromCoroutine = function(self) {
	return stx_coroutine_pack_Secure.lift(self);
};
var stx_coroutine_pack_SourceLift = function() { };
$hxClasses["stx.coroutine.pack.SourceLift"] = stx_coroutine_pack_SourceLift;
stx_coroutine_pack_SourceLift.__name__ = "stx.coroutine.pack.SourceLift";
stx_coroutine_pack_SourceLift.lift = function(self) {
	return stx_coroutine_pack_Source.lift(self);
};
stx_coroutine_pack_SourceLift.toEmiter = function(self,cb) {
	var recurse = null;
	recurse = function(self) {
		var f = recurse;
		switch(self._hx_index) {
		case 0:
			var head = self.o;
			var rest = self.next;
			return stx_coroutine_pack_Source.fromCoroutine(stx_coroutine_core_CoroutineSum.Emit(head,stx_coroutine_core_CoroutineLift.mod(rest,f)));
		case 1:
			var arw = self.tran;
			return stx_coroutine_pack_Source.fromCoroutine(stx_coroutine_core_CoroutineSum.Wait(stx_coroutine_core_TransmissionLift.mod(arw,f)));
		case 2:
			var ft = self.held;
			return stx_coroutine_pack_Source.fromCoroutine(stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held._new(eu_ohmrun_fletcher_Provide._.convert(ft,eu_ohmrun_fletcher_Convert.Fun(f)))));
		case 3:
			var _g = self.r;
			switch(_g._hx_index) {
			case 0:
				var cause = _g.c;
				return stx_coroutine_pack_Source.fromCoroutine(stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(cause)));
			case 1:
				var ret = _g.v;
				return stx_coroutine_pack_Source.fromCoroutine(stx_coroutine_core_CoroutineLift.cons(stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Stop)),cb(ret)));
			}
			break;
		}
	};
	return stx_coroutine_pack_Emiter.lift(recurse(self));
};
stx_coroutine_pack_SourceLift.emiter = function(self,cb) {
	var recurse = null;
	recurse = function(self) {
		var f = recurse;
		switch(self._hx_index) {
		case 0:
			var head = self.o;
			var rest = self.next;
			return stx_coroutine_pack_Source.fromCoroutine(stx_coroutine_core_CoroutineSum.Emit(head,stx_coroutine_core_CoroutineLift.mod(rest,f)));
		case 1:
			var arw = self.tran;
			return stx_coroutine_pack_Source.fromCoroutine(stx_coroutine_core_CoroutineSum.Wait(stx_coroutine_core_TransmissionLift.mod(arw,f)));
		case 2:
			var ft = self.held;
			return stx_coroutine_pack_Source.fromCoroutine(stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held._new(eu_ohmrun_fletcher_Provide._.convert(ft,eu_ohmrun_fletcher_Convert.Fun(f)))));
		case 3:
			var _g = self.r;
			switch(_g._hx_index) {
			case 0:
				var cause = _g.c;
				return stx_coroutine_pack_Source.fromCoroutine(stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(cause)));
			case 1:
				var ret = _g.v;
				return stx_coroutine_pack_Source.fromCoroutine(stx_coroutine_core_CoroutineLift.cons(stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Stop)),cb(ret)));
			}
			break;
		}
	};
	return stx_coroutine_pack_Emiter.lift(recurse(self));
};
stx_coroutine_pack_SourceLift.filter = function(self,fn) {
	var fn1 = fn;
	var f = function(self) {
		return stx_coroutine_pack_SourceLift.filter(self,fn1);
	};
	var tmp;
	switch(self._hx_index) {
	case 0:
		var head = self.o;
		var tail = self.next;
		tmp = fn(head) ? stx_coroutine_core_CoroutineSum.Emit(head,f(tail)) : stx_coroutine_core_CoroutineLift.mod(tail,f);
		break;
	case 1:
		var fn = self.tran;
		tmp = stx_coroutine_core_CoroutineSum.Wait(stx_coroutine_core_TransmissionLift.mod(fn,f));
		break;
	case 2:
		var ft = self.held;
		tmp = stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held._new(eu_ohmrun_fletcher_Provide._.convert(ft,eu_ohmrun_fletcher_Convert.Fun(f))));
		break;
	case 3:
		var t = self.r;
		tmp = stx_coroutine_core_CoroutineSum.Halt(t);
		break;
	}
	return stx_coroutine_pack_SourceLift.lift(tmp);
};
stx_coroutine_pack_SourceLift.map_filter = function(self,fn) {
	var fn1 = fn;
	var f = function(self) {
		return stx_coroutine_pack_SourceLift.map_filter(self,fn1);
	};
	var tmp;
	switch(self._hx_index) {
	case 0:
		var head = self.o;
		var tail = self.next;
		var _g = fn(head);
		switch(_g._hx_index) {
		case 0:
			var v = _g.v;
			tmp = stx_coroutine_core_CoroutineSum.Emit(v,f(tail));
			break;
		case 1:
			tmp = f(tail);
			break;
		}
		break;
	case 1:
		var arw = self.tran;
		tmp = stx_coroutine_core_CoroutineSum.Wait(stx_coroutine_core_TransmissionLift.mod(arw,f));
		break;
	case 2:
		var ft = self.held;
		tmp = stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held._new(eu_ohmrun_fletcher_Provide._.convert(ft,eu_ohmrun_fletcher_Convert.Fun(f))));
		break;
	case 3:
		var t = self.r;
		tmp = stx_coroutine_core_CoroutineSum.Halt(t);
		break;
	}
	return stx_coroutine_pack_SourceLift.lift(tmp);
};
stx_coroutine_pack_SourceLift.derive = function(self) {
	var f = null;
	f = function(self) {
		switch(self._hx_index) {
		case 0:
			var _m = self.o;
			var tail = self.next;
			return f(tail);
		case 1:
			var arw = self.tran;
			return stx_coroutine_core_CoroutineSum.Wait(stx_coroutine_core_TransmissionLift.mod(arw,f));
		case 2:
			var ft = self.held;
			return stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held._new(eu_ohmrun_fletcher_Provide._.convert(ft,eu_ohmrun_fletcher_Convert.Fun(f))));
		case 3:
			var h = self.r;
			return stx_coroutine_core_CoroutineSum.Halt(h);
		}
	};
	return stx_coroutine_pack_Derive.lift(f(self));
};
var stx_coroutine_pack_Source = {};
stx_coroutine_pack_Source.lift = function(self) {
	return stx_coroutine_pack_Source._new(self);
};
stx_coroutine_pack_Source._new = function(self) {
	var this1 = self;
	return this1;
};
stx_coroutine_pack_Source.fromCoroutine = function(self) {
	return stx_coroutine_pack_Source.lift(self);
};
stx_coroutine_pack_Source.toCoroutine = function(this1) {
	return this1;
};
var stx_coroutine_pack_TunnelLift = function() { };
$hxClasses["stx.coroutine.pack.TunnelLift"] = stx_coroutine_pack_TunnelLift;
stx_coroutine_pack_TunnelLift.__name__ = "stx.coroutine.pack.TunnelLift";
stx_coroutine_pack_TunnelLift.lift = function(self) {
	return stx_coroutine_pack_Tunnel.lift(self);
};
stx_coroutine_pack_TunnelLift.append = function(prc0,prc1) {
	switch(prc0._hx_index) {
	case 0:
		var head = prc0.o;
		var tail = prc0.next;
		return stx_coroutine_core_CoroutineSum.Emit(head,stx_coroutine_pack_Tunnel.toCoroutine(stx_coroutine_pack_TunnelLift.append(stx_coroutine_pack_Tunnel.fromCoroutine(tail),prc1)));
	case 1:
		var arw = prc0.tran;
		var prc11 = prc1;
		return stx_coroutine_core_CoroutineSum.Wait(stx_coroutine_core_TransmissionLift.mod(arw,function(prc0) {
			return stx_coroutine_pack_TunnelLift.append(prc0,prc11);
		}));
	case 2:
		var ft = prc0.held;
		var prc12 = prc1;
		return stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held._new(eu_ohmrun_fletcher_Provide._.convert(ft,eu_ohmrun_fletcher_Convert.Fun(function(prc0) {
			return stx_coroutine_pack_TunnelLift.append(prc0,prc12);
		}))));
	case 3:
		var _g = prc0.r;
		switch(_g._hx_index) {
		case 0:
			var _g1 = _g.c;
			if(_g1._hx_index == 0) {
				return prc1();
			} else {
				var cause = _g1;
				return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(cause));
			}
			break;
		case 1:
			if(_g.v == null) {
				return prc1();
			} else {
				var e = _g;
				return stx_coroutine_core_CoroutineSum.Halt(e);
			}
			break;
		}
		break;
	}
};
stx_coroutine_pack_TunnelLift.flat_map = function(prc,fn) {
	var tmp;
	switch(prc._hx_index) {
	case 0:
		var head = prc.o;
		var tail = prc.next;
		var tmp1 = fn(head);
		var prc1 = stx_coroutine_pack_Tunnel.fromCoroutine(tail);
		var fn1 = fn;
		tmp = stx_coroutine_pack_TunnelLift.append(tmp1,function() {
			return stx_coroutine_pack_TunnelLift.flat_map(prc1,fn1);
		});
		break;
	case 1:
		var arw = prc.tran;
		tmp = stx_coroutine_core_CoroutineSum.Wait(function(i) {
			var next = arw(i);
			return stx_coroutine_pack_Tunnel.toCoroutine(stx_coroutine_pack_TunnelLift.flat_map(stx_coroutine_pack_Tunnel.fromCoroutine(next),fn));
		});
		break;
	case 2:
		var ft = prc.held;
		var fn2 = fn;
		tmp = stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held._new(eu_ohmrun_fletcher_Provide._.convert(ft,eu_ohmrun_fletcher_Convert.Fun(function(prc) {
			return stx_coroutine_pack_TunnelLift.flat_map(prc,fn2);
		}))));
		break;
	case 3:
		var e = prc.r;
		tmp = stx_coroutine_core_CoroutineSum.Halt(e);
		break;
	}
	return stx_coroutine_pack_TunnelLift.lift(tmp);
};
stx_coroutine_pack_TunnelLift.emiter = function(self,that) {
	var this1 = stx_coroutine_Logging.log(stx_nano_Wildcard.__);
	var fn = function(pos) {
		return pos.with_stamp(function(stamp) {
			return stamp.relevel(2);
		});
	};
	(function(value,pos) {
		this1(value,fn(pos));
	})(stx_log_Stringify.fromString("emiter: " + Std.string(self))(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/coroutine/pack/Tunnel.hx", lineNumber : 100, className : "stx.coroutine.pack.TunnelLift", methodName : "emiter"}));
	var that1 = that;
	var f = function(self) {
		return stx_coroutine_pack_TunnelLift.emiter(self,that1);
	};
	var tmp;
	switch(self._hx_index) {
	case 0:
		var head = self.o;
		var tail = self.next;
		tmp = stx_coroutine_core_CoroutineSum.Emit(head,f(stx_coroutine_pack_Tunnel.fromCoroutine(tail)));
		break;
	case 1:
		var fn1 = self.tran;
		switch(that._hx_index) {
		case 0:
			var head = that.o;
			var tail = that.next;
			tmp = stx_coroutine_pack_TunnelLift.emiter(stx_coroutine_pack_Tunnel.fromCoroutine(fn1(stx_coroutine_core_Control.push(head))),stx_coroutine_pack_Emiter.fromCoroutine(tail));
			break;
		case 1:
			var arw = that.tran;
			tmp = stx_coroutine_pack_TunnelLift.emiter(self,stx_coroutine_pack_Emiter.fromCoroutine(arw(stx_coroutine_core_ControlSum.Push(null))));
			break;
		case 2:
			var ft = that.held;
			tmp = stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held.lift(eu_ohmrun_FletcherLift.map(ft,function(pipe) {
				return stx_coroutine_core_Coroutine.lift(stx_coroutine_pack_TunnelLift.emiter(self,stx_coroutine_pack_Emiter.fromCoroutine(pipe)));
			})));
			break;
		case 3:
			var done = that.r;
			tmp = stx_coroutine_core_CoroutineSum.Halt(done);
			break;
		}
		break;
	case 2:
		var ft = self.held;
		tmp = stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held.lift(eu_ohmrun_FletcherLift.map(ft,function(pipe) {
			return stx_coroutine_core_Coroutine.lift(stx_coroutine_pack_TunnelLift.emiter(stx_coroutine_pack_Tunnel.fromCoroutine(pipe),that));
		})));
		break;
	case 3:
		var e = self.r;
		tmp = stx_coroutine_core_CoroutineSum.Halt(e);
		break;
	}
	return stx_coroutine_pack_Emiter.lift(tmp);
};
stx_coroutine_pack_TunnelLift.demand = function(self,req,fn) {
	var source = stx_nano_Pledge.trigger();
	var sent = false;
	var done = false;
	var f = null;
	f = function(self) {
		switch(self._hx_index) {
		case 0:
			var o = self.o;
			var next = self.next;
			if(sent) {
				if(!done) {
					return stx_LiftIf.if_else(fn(stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,o)),function() {
						done = true;
						return next;
					},function() {
						return f(next);
					});
				} else {
					return next;
				}
			} else {
				return stx_coroutine_core_CoroutineSum.Emit(o,f(next));
			}
			break;
		case 1:
			var tran = self.tran;
			if(!sent) {
				sent = true;
				return f(tran(stx_coroutine_core_Control.push(req)));
			} else {
				return stx_coroutine_core_CoroutineSum.Wait(stx_coroutine_core_TransmissionLift.mod(tran,f));
			}
			break;
		case 2:
			var held = self.held;
			return stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held._new(eu_ohmrun_fletcher_Provide._.convert(held,eu_ohmrun_fletcher_Convert.Fun(f))));
		case 3:
			var _g = self.r;
			switch(_g._hx_index) {
			case 0:
				var _g1 = _g.c;
				switch(_g1._hx_index) {
				case 0:
					return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Stop));
				case 1:
					var e = _g1.err;
					return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Exit(e)));
				}
				break;
			case 1:
				var _g1 = _g.v;
				if(!done) {
					var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/coroutine/pack/Tunnel.hx", lineNumber : 154, className : "stx.coroutine.pack.TunnelLift", methodName : "demand"});
					var err = stx_fail_Refuse.make(haxe_ds_Option.Some(stx_fail_DeclineSum.INTERIOR(stx_nano_CTR.apply(function(_) {
						return stx_nano_Digests.e_undefined(_);
					},stx_Nano.digests(stx_nano_Wildcard.__)))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1));
					fn(stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(err),{ fileName : "stx/coroutine/pack/Tunnel.hx", lineNumber : 155, className : "stx.coroutine.pack.TunnelLift", methodName : "demand"}));
					return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_Cause.fromRefuse(err)));
				} else {
					return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Production(null));
				}
				break;
			}
			break;
		}
	};
	return stx_coroutine_pack_Tunnel.lift(f(self));
};
stx_coroutine_pack_TunnelLift.mod = function(self,fn) {
	var fn1 = stx_fn_UnaryLift.then(fn,function(x) {
		return stx_coroutine_pack_Tunnel.prj(x);
	});
	var f = function(self) {
		return stx_coroutine_pack_TunnelLift.mod(self,fn1);
	};
	var tmp;
	switch(self._hx_index) {
	case 0:
		var data = self.o;
		var next = self.next;
		tmp = stx_coroutine_core_CoroutineSum.Emit(data,f(next));
		break;
	case 1:
		var fn = self.tran;
		tmp = stx_coroutine_core_CoroutineSum.Wait(stx_coroutine_core_TransmissionLift.mod(fn,f));
		break;
	case 2:
		var held = self.held;
		tmp = stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held._new(eu_ohmrun_fletcher_Provide._.convert(held,eu_ohmrun_fletcher_Convert.Fun(f))));
		break;
	case 3:
		var h = self.r;
		tmp = stx_coroutine_core_CoroutineSum.Halt(h);
		break;
	}
	return stx_coroutine_pack_TunnelLift.lift(tmp);
};
var stx_coroutine_pack_Tunnel = {};
stx_coroutine_pack_Tunnel._new = function(self) {
	var this1 = self;
	return this1;
};
stx_coroutine_pack_Tunnel.lift = function(self) {
	return stx_coroutine_pack_Tunnel._new(self);
};
stx_coroutine_pack_Tunnel.fromFun2CallbackVoid = function(arw) {
	var rec = null;
	rec = function(i) {
		var future = new tink_core_FutureTrigger();
		arw(i,function(o) {
			var fn = rec;
			future.trigger(stx_coroutine_core_CoroutineSum.Emit(o,stx_coroutine_core_CoroutineSum.Wait(stx_coroutine_core_Transmission.lift(function(control) {
				return stx_coroutine_core_ControlLift.fold(control,fn,function(e) {
					return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_Cause.fromRefuse(stx_nano_lift_LiftErrorDigestToRefuse.toRefuse(e))));
				},function() {
					return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Stop));
				});
			}))));
		});
		return stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held.Guard(future,{ fileName : "stx/coroutine/pack/Tunnel.hx", lineNumber : 22, className : "stx.coroutine.pack._Tunnel.Tunnel_Impl_", methodName : "fromFun2CallbackVoid"}));
	};
	var fn = rec;
	return stx_coroutine_pack_Tunnel.lift(stx_coroutine_core_CoroutineSum.Wait(stx_coroutine_core_Transmission.lift(function(control) {
		return stx_coroutine_core_ControlLift.fold(control,fn,function(e) {
			return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_Cause.fromRefuse(stx_nano_lift_LiftErrorDigestToRefuse.toRefuse(e))));
		},function() {
			return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Stop));
		});
	})));
};
stx_coroutine_pack_Tunnel.fromEmiterConstrucor = function(cons) {
	var fn = function(i) {
		var recurse = null;
		recurse = function(emiter) {
			switch(emiter._hx_index) {
			case 0:
				var head = emiter.o;
				var tail = emiter.next;
				return stx_coroutine_core_CoroutineSum.Emit(head,recurse(stx_coroutine_pack_Emiter.fromCoroutine(tail)));
			case 1:
				var fn = emiter.tran;
				var fn = stx_fn_UnaryLift.then(cons,recurse);
				return stx_coroutine_core_CoroutineSum.Wait(stx_coroutine_core_Transmission.lift(function(control) {
					return stx_coroutine_core_ControlLift.fold(control,fn,function(e) {
						return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_Cause.fromRefuse(stx_nano_lift_LiftErrorDigestToRefuse.toRefuse(e))));
					},function() {
						return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Stop));
					});
				}));
			case 2:
				var h = emiter.held;
				return stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held.lift(eu_ohmrun_FletcherLift.map(h,function(pipe) {
					return stx_coroutine_core_Coroutine.lift(recurse(stx_coroutine_pack_Emiter.fromCoroutine(pipe)));
				})));
			case 3:
				var r = emiter.r;
				return stx_coroutine_core_CoroutineSum.Halt(r);
			}
		};
		return recurse(cons(i));
	};
	return stx_coroutine_pack_Tunnel.fromCoroutine(stx_coroutine_core_CoroutineSum.Wait(stx_coroutine_core_Transmission.lift(function(control) {
		return stx_coroutine_core_ControlLift.fold(control,fn,function(e) {
			return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_Cause.fromRefuse(stx_nano_lift_LiftErrorDigestToRefuse.toRefuse(e))));
		},function() {
			return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Stop));
		});
	})));
};
stx_coroutine_pack_Tunnel.fromFunction = function(fn) {
	var rec = null;
	rec = function(i) {
		var head = fn(i);
		var fn1 = rec;
		return stx_coroutine_core_CoroutineSum.Emit(head,stx_coroutine_core_CoroutineSum.Wait(stx_coroutine_core_Transmission.lift(function(control) {
			return stx_coroutine_core_ControlLift.fold(control,fn1,function(e) {
				return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_Cause.fromRefuse(stx_nano_lift_LiftErrorDigestToRefuse.toRefuse(e))));
			},function() {
				return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Stop));
			});
		})));
	};
	var fn1 = rec;
	return stx_coroutine_pack_Tunnel.fromCoroutine(stx_coroutine_core_CoroutineSum.Wait(stx_coroutine_core_Transmission.lift(function(control) {
		return stx_coroutine_core_ControlLift.fold(control,fn1,function(e) {
			return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_Cause.fromRefuse(stx_nano_lift_LiftErrorDigestToRefuse.toRefuse(e))));
		},function() {
			return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Stop));
		});
	})));
};
stx_coroutine_pack_Tunnel.toCoroutine = function(this1) {
	return this1;
};
stx_coroutine_pack_Tunnel.toCoroutineStop = function(this1) {
	return stx_coroutine_core_CoroutineLift.flat_map_r(this1,function(r) {
		return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Stop));
	});
};
stx_coroutine_pack_Tunnel.fromCoroutine = function(self) {
	return stx_coroutine_pack_Tunnel.lift(self);
};
stx_coroutine_pack_Tunnel.prj = function(this1) {
	return this1;
};
var stx_ds_BinaryTreeSum = $hxEnums["stx.ds.BinaryTreeSum"] = { __ename__:"stx.ds.BinaryTreeSum",__constructs__:null
	,Empty: {_hx_name:"Empty",_hx_index:0,__enum__:"stx.ds.BinaryTreeSum",toString:$estr}
	,Split: ($_=function(v,l,r) { return {_hx_index:1,v:v,l:l,r:r,__enum__:"stx.ds.BinaryTreeSum",toString:$estr}; },$_._hx_name="Split",$_.__params__ = ["v","l","r"],$_)
};
stx_ds_BinaryTreeSum.__constructs__ = [stx_ds_BinaryTreeSum.Empty,stx_ds_BinaryTreeSum.Split];
var stx_ds_BinaryTree = {};
stx_ds_BinaryTree._new = function(self) {
	var this1 = self;
	return this1;
};
stx_ds_BinaryTree.value = function(this1) {
	switch(this1._hx_index) {
	case 0:
		return null;
	case 1:
		var _g = this1.l;
		var _g = this1.r;
		var v = this1.v;
		return v;
	}
};
stx_ds_BinaryTree.head = function(this1) {
	switch(this1._hx_index) {
	case 0:
		return stx_ds_BinaryTreeSum.Empty;
	case 1:
		var _g = this1.v;
		var _g1 = this1.r;
		if(_g == null) {
			var l = this1.l;
			return l;
		} else {
			var v = _g;
			return stx_ds_BinaryTreeSum.Split(v,stx_ds_BinaryTreeSum.Empty,stx_ds_BinaryTreeSum.Empty);
		}
		break;
	}
};
stx_ds_BinaryTree.tail = function(this1) {
	switch(this1._hx_index) {
	case 0:
		return stx_ds_BinaryTreeSum.Empty;
	case 1:
		var _g = this1.v;
		var _g = this1.l;
		var r = this1.r;
		return r;
	}
};
stx_ds_BinaryTree.df = function(this1,fn,z) {
	return stx_ds_BinaryTrees.df(this1,fn,z);
};
stx_ds_BinaryTree.isEnd = function(this1) {
	if(this1._hx_index == 0) {
		return true;
	} else {
		return false;
	}
};
var stx_ds_BinaryTrees = function() { };
$hxClasses["stx.ds.BinaryTrees"] = stx_ds_BinaryTrees;
stx_ds_BinaryTrees.__name__ = "stx.ds.BinaryTrees";
stx_ds_BinaryTrees.df = function(btree,fn,z) {
	switch(btree._hx_index) {
	case 0:
		return z;
	case 1:
		var v = btree.v;
		var l = btree.l;
		var r = btree.r;
		var a = fn(v,z);
		var b = stx_ds_BinaryTrees.df(l,fn,a);
		var c = stx_ds_BinaryTrees.df(r,fn,b);
		return c;
	}
};
stx_ds_BinaryTrees.hdf = function(btree,fn,z) {
	switch(btree._hx_index) {
	case 0:
		return z;
	case 1:
		var v = btree.v;
		var l = btree.l;
		var r = btree.r;
		var o = fn(v,z);
		switch(o._hx_index) {
		case 0:
			var o1 = o.v;
			var b = stx_ds_BinaryTrees.hdf(l,fn,o1);
			var c = stx_ds_BinaryTrees.hdf(r,fn,b);
			return c;
		case 1:
			var o1 = o.v;
			return o1;
		}
		break;
	}
};
var stx_ds_KaryTreeSum = $hxEnums["stx.ds.KaryTreeSum"] = { __ename__:"stx.ds.KaryTreeSum",__constructs__:null
	,Nought: {_hx_name:"Nought",_hx_index:0,__enum__:"stx.ds.KaryTreeSum",toString:$estr}
	,Branch: ($_=function(x,xs) { return {_hx_index:1,x:x,xs:xs,__enum__:"stx.ds.KaryTreeSum",toString:$estr}; },$_._hx_name="Branch",$_.__params__ = ["x","xs"],$_)
};
stx_ds_KaryTreeSum.__constructs__ = [stx_ds_KaryTreeSum.Nought,stx_ds_KaryTreeSum.Branch];
var stx_ds_KaryTreeLift = function() { };
$hxClasses["stx.ds.KaryTreeLift"] = stx_ds_KaryTreeLift;
stx_ds_KaryTreeLift.__name__ = "stx.ds.KaryTreeLift";
stx_ds_KaryTreeLift.search_child = function(self,fn) {
	if(self._hx_index == 1) {
		var x = self.x;
		var xs = self.xs;
		var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,xs);
		var tmp;
		if(self._hx_index == 0) {
			var v = self.v;
			tmp = v;
		} else {
			tmp = stx_ds_LinkedList.unit();
		}
		return stx_ds_LinkedList.search(tmp,function(tree) {
			var self = stx_pico_OptionLift.map(stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,tree),function(_) {
				return stx_ds_KaryTree.value(_);
			}),fn);
			if(self._hx_index == 0) {
				var v = self.v;
				return v;
			} else {
				return false;
			}
		});
	} else {
		return haxe_ds_Option.None;
	}
};
stx_ds_KaryTreeLift.toString = function(self) {
	var rec = null;
	rec = function(v,int) {
		if(v == null) {
			return "";
		} else {
			switch(v._hx_index) {
			case 0:
				return "";
			case 1:
				var v1 = v.x;
				var rst = v.xs;
				var arr = stx_nano_ReportLift.is_defined(new stx_assert_Module({ fileName : "stx/ds/KaryTree.hx", lineNumber : 94, className : "stx.ds.KaryTreeLift", methodName : "toString"}).exists().apply(rst)) ? stx_ds_LinkedListSum.Nil : rst;
				var out = stx_ds_LinkedList.map(arr,function(next) {
					return rec(next,"" + int + " ");
				});
				var val = stx_ds_LinkedList.fold(out,function(next,memo) {
					return "" + memo + "\n" + int + next;
				},"");
				return "" + Std.string(v1) + ":\n" + val;
			}
		}
	};
	var out = rec(self,"  ");
	return "\n" + out;
};
stx_ds_KaryTreeLift.next = function(t,concat) {
	if(t._hx_index == 1) {
		var _g = t.head;
		if(_g._hx_index == 1) {
			var x = _g.x;
			var xs = _g.xs;
			var rst = t.tail;
			if(xs == null) {
				xs = stx_ds_LinkedListSum.Nil;
			}
			var t = concat(xs,rst);
			var concat1 = concat;
			return stx_fp_LazyStream.make(stx_fp_LazyStreamTrigger.fromFn(function() {
				return stx_ds_KaryTreeLift.next(t,concat1);
			}),haxe_ds_Option.Some(x));
		} else {
			return stx_fp_LazyStream.unit();
		}
	} else {
		return stx_fp_LazyStream.unit();
	}
};
stx_ds_KaryTreeLift.df_concat = function(l,r) {
	return stx_ds_LinkedList.concat(l,r);
};
stx_ds_KaryTreeLift.bf_concat = function(l,r) {
	return stx_ds_LinkedList.concat(r,l);
};
stx_ds_KaryTreeLift.genDF = function(node) {
	var vals = stx_ds_LinkedListSum.Cons(node,stx_ds_LinkedListSum.Nil);
	var t = vals;
	var concat = stx_ds_KaryTreeLift.df_concat;
	return function() {
		return stx_ds_KaryTreeLift.next(t,concat);
	};
};
stx_ds_KaryTreeLift.iterDF = function(node) {
	return stx_ds_KaryTreeLift.iter(stx_fp_LazyStreamTrigger.fromFn(stx_ds_KaryTreeLift.genDF(node)));
};
stx_ds_KaryTreeLift.genBF = function(node) {
	var vals = stx_ds_LinkedListSum.Cons(node,stx_ds_LinkedListSum.Nil);
	var t = vals;
	var concat = stx_ds_KaryTreeLift.bf_concat;
	return function() {
		return stx_ds_KaryTreeLift.next(t,concat);
	};
};
stx_ds_KaryTreeLift.iterBF = function(node) {
	return stx_ds_KaryTreeLift.iter(stx_fp_LazyStreamTrigger.fromFn(stx_ds_KaryTreeLift.genBF(node)));
};
stx_ds_KaryTreeLift.iter = function(generator) {
	return { iterator : function() {
		var cursor = stx_fp_LazyStream.reply(generator.next());
		return { next : function() {
			var out;
			var _g = stx_nano_CoupleLift.fst(cursor);
			if(_g._hx_index == 0) {
				var v = _g.v;
				out = v;
			} else {
				out = null;
			}
			cursor = stx_fp_LazyStream.reply(stx_nano_CoupleLift.snd(cursor).next());
			return out;
		}, hasNext : function() {
			var self = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_nano_CoupleLift.fst(cursor)),function(ok) {
				return stx_pico_OptionLift.is_defined(ok);
			});
			if(self._hx_index == 0) {
				var v = self.v;
				return v;
			} else {
				return false;
			}
		}};
	}};
};
var stx_ds_KaryTree = {};
stx_ds_KaryTree.unit = function() {
	return stx_ds_KaryTreeSum.Nought;
};
stx_ds_KaryTree.pure = function(v) {
	return stx_ds_KaryTreeSum.Branch(v,stx_ds_LinkedListSum.Nil);
};
stx_ds_KaryTree._new = function(self) {
	var this1 = stx_nano_ReportLift.is_defined(new stx_assert_Module({ fileName : "stx/ds/KaryTree.hx", lineNumber : 22, className : "stx.ds._KaryTree.KaryTree_Impl_", methodName : "_new"}).exists().apply(self)) ? stx_ds_KaryTreeSum.Nought : self;
	return this1;
};
stx_ds_KaryTree.df = function(this1) {
	return stx_ds_KaryTreeLift.iterDF(this1);
};
stx_ds_KaryTree.bf = function(this1) {
	return stx_ds_KaryTreeLift.iterBF(this1);
};
stx_ds_KaryTree.zipper = function(this1) {
	return stx_ds_kary_$tree_KaryTreeZip._new(stx_ds_LinkedListSum.Cons(this1,stx_ds_LinkedListSum.Nil));
};
stx_ds_KaryTree.value = function(this1) {
	if(this1._hx_index == 1) {
		var _g = this1.xs;
		var x = this1.x;
		return x;
	} else {
		return null;
	}
};
stx_ds_KaryTree.children = function(this1) {
	if(this1._hx_index == 1) {
		var _g = this1.x;
		var ls = this1.xs;
		if(ls == null) {
			return stx_ds_LinkedListSum.Nil;
		} else {
			return ls;
		}
	} else {
		return stx_ds_LinkedListSum.Nil;
	}
};
stx_ds_KaryTree.equals = function(this1,that) {
	return stx_ds_KaryTree.equals_with(this1,that,function(l,r) {
		return l == r;
	});
};
stx_ds_KaryTree.equals_with = function(this1,that,fn) {
	var handler = null;
	handler = function(ls0,ls1) {
		if(ls0 == null) {
			if(ls1 == null) {
				return true;
			} else {
				return false;
			}
		} else {
			switch(ls0._hx_index) {
			case 0:
				if(ls1 == null) {
					return false;
				} else if(ls1._hx_index == 0) {
					return true;
				} else {
					return false;
				}
				break;
			case 1:
				if(ls1 == null) {
					return false;
				} else if(ls1._hx_index == 1) {
					var y = ls1.head;
					var ys = ls1.tail;
					var xs = ls0.tail;
					var x = ls0.head;
					var l = x;
					var r = y;
					if(stx_ds_KaryTree.equals(l,r)) {
						return handler(xs,ys);
					} else {
						return false;
					}
				} else {
					return false;
				}
				break;
			}
		}
	};
	switch(this1._hx_index) {
	case 0:
		if(that._hx_index == 0) {
			return true;
		} else {
			return false;
		}
		break;
	case 1:
		if(that._hx_index == 1) {
			var r = that.x;
			var rs = that.xs;
			var ls = this1.xs;
			var l = this1.x;
			var o = fn(l,r);
			if(!o) {
				return o;
			} else {
				return handler(ls,rs);
			}
		} else {
			return false;
		}
		break;
	}
};
var stx_ds_LazyBinaryTreeSum = $hxEnums["stx.ds.LazyBinaryTreeSum"] = { __ename__:"stx.ds.LazyBinaryTreeSum",__constructs__:null
	,LazyEmpty: {_hx_name:"LazyEmpty",_hx_index:0,__enum__:"stx.ds.LazyBinaryTreeSum",toString:$estr}
	,LazySplit: ($_=function(v,l,r) { return {_hx_index:1,v:v,l:l,r:r,__enum__:"stx.ds.LazyBinaryTreeSum",toString:$estr}; },$_._hx_name="LazySplit",$_.__params__ = ["v","l","r"],$_)
};
stx_ds_LazyBinaryTreeSum.__constructs__ = [stx_ds_LazyBinaryTreeSum.LazyEmpty,stx_ds_LazyBinaryTreeSum.LazySplit];
var stx_ds_LazyBinaryTree = {};
stx_ds_LazyBinaryTree._new = function(self) {
	var this1 = self;
	return this1;
};
stx_ds_LazyBinaryTree.value = function(this1) {
	switch(this1._hx_index) {
	case 0:
		return null;
	case 1:
		var _g = this1.l;
		var _g = this1.r;
		var v = this1.v;
		return v;
	}
};
stx_ds_LazyBinaryTree.head = function(this1) {
	switch(this1._hx_index) {
	case 0:
		return stx_ds_LazyBinaryTreeSum.LazyEmpty;
	case 1:
		var _g = this1.v;
		var _g1 = this1.r;
		if(_g == null) {
			var l = this1.l;
			return l();
		} else {
			var v = _g;
			return stx_ds_LazyBinaryTreeSum.LazySplit(v,function() {
				return stx_ds_LazyBinaryTreeSum.LazyEmpty;
			},function() {
				return stx_ds_LazyBinaryTreeSum.LazyEmpty;
			});
		}
		break;
	}
};
stx_ds_LazyBinaryTree.tail = function(this1) {
	switch(this1._hx_index) {
	case 0:
		return stx_ds_LazyBinaryTreeSum.LazyEmpty;
	case 1:
		var _g = this1.v;
		var _g = this1.l;
		var r = this1.r;
		return r();
	}
};
stx_ds_LazyBinaryTree.df = function(this1,fn,z) {
	return stx_ds_LazyBinaryTrees.df(this1,fn,z);
};
stx_ds_LazyBinaryTree.isEnd = function(this1) {
	if(this1._hx_index == 0) {
		return true;
	} else {
		return false;
	}
};
var stx_ds_LazyBinaryTrees = function() { };
$hxClasses["stx.ds.LazyBinaryTrees"] = stx_ds_LazyBinaryTrees;
stx_ds_LazyBinaryTrees.__name__ = "stx.ds.LazyBinaryTrees";
stx_ds_LazyBinaryTrees.df = function(btree,fn,z) {
	switch(btree._hx_index) {
	case 0:
		return z;
	case 1:
		var v = btree.v;
		var l = btree.l;
		var r = btree.r;
		var a = fn(v,z);
		var b = stx_ds_LazyBinaryTrees.df(l(),fn,a);
		var c = stx_ds_LazyBinaryTrees.df(r(),fn,b);
		return c;
	}
};
stx_ds_LazyBinaryTrees.hdf = function(btree,fn,z) {
	switch(btree._hx_index) {
	case 0:
		return z;
	case 1:
		var v = btree.v;
		var l = btree.l;
		var r = btree.r;
		var o = fn(v,z);
		switch(o._hx_index) {
		case 0:
			var o1 = o.v;
			var b = stx_ds_LazyBinaryTrees.hdf(l(),fn,o1);
			var c = stx_ds_LazyBinaryTrees.hdf(r(),fn,b);
			return c;
		case 1:
			var o1 = o.v;
			return o1;
		}
		break;
	}
};
var stx_ds_LinkedListSum = $hxEnums["stx.ds.LinkedListSum"] = { __ename__:"stx.ds.LinkedListSum",__constructs__:null
	,Nil: {_hx_name:"Nil",_hx_index:0,__enum__:"stx.ds.LinkedListSum",toString:$estr}
	,Cons: ($_=function(head,tail) { return {_hx_index:1,head:head,tail:tail,__enum__:"stx.ds.LinkedListSum",toString:$estr}; },$_._hx_name="Cons",$_.__params__ = ["head","tail"],$_)
};
stx_ds_LinkedListSum.__constructs__ = [stx_ds_LinkedListSum.Nil,stx_ds_LinkedListSum.Cons];
var stx_ds_LinkedList = {};
stx_ds_LinkedList.unit = function() {
	return stx_ds_LinkedListSum.Nil;
};
stx_ds_LinkedList.lift = function(self) {
	return stx_ds_LinkedList._new(self);
};
stx_ds_LinkedList.pure = function(v) {
	return stx_ds_LinkedListSum.Cons(v,stx_ds_LinkedListSum.Nil);
};
stx_ds_LinkedList._new = function(self) {
	var this1 = self;
	return this1;
};
stx_ds_LinkedList.tail = function(this1) {
	switch(this1._hx_index) {
	case 0:
		return stx_ds_LinkedListSum.Nil;
	case 1:
		var _g = this1.head;
		var next = this1.tail;
		return next;
	}
};
stx_ds_LinkedList.cons = function(this1,v) {
	return stx_ds_LinkedList._new(stx_ds_LinkedListSum.Cons(v,this1));
};
stx_ds_LinkedList.snoc = function(this1,v) {
	var rec = null;
	rec = function(ls) {
		switch(ls._hx_index) {
		case 0:
			return stx_ds_LinkedListSum.Cons(v,stx_ds_LinkedListSum.Nil);
		case 1:
			var head = ls.head;
			var tail = ls.tail;
			return stx_ds_LinkedListSum.Cons(head,rec(tail));
		}
	};
	return rec(this1);
};
stx_ds_LinkedList.last = function(this1) {
	var crs = this1;
	var val = null;
	while(true) if(crs._hx_index == 1) {
		var x = crs.head;
		var xs = crs.tail;
		val = x;
		crs = xs;
	} else {
		break;
	}
	return val;
};
stx_ds_LinkedList.concat = function(this1,that) {
	switch(this1._hx_index) {
	case 0:
		if(that._hx_index == 0) {
			return stx_ds_LinkedListSum.Nil;
		} else {
			var l = that;
			return l;
		}
		break;
	case 1:
		var _g = this1.head;
		var _g1 = this1.tail;
		if(that._hx_index == 0) {
			var l = this1;
			return l;
		} else if(_g1._hx_index == 0) {
			var x = _g;
			return stx_ds_LinkedListSum.Cons(x,that);
		} else {
			var xs = _g1;
			var x = _g;
			return stx_ds_LinkedListSum.Cons(x,stx_ds_LinkedList.concat(xs,that));
		}
		break;
	}
};
stx_ds_LinkedList.fromArray = function(arr) {
	return stx_lift_ArrayLift.rfold(arr,function(n,m) {
		return stx_ds_LinkedList.cons(m,n);
	},stx_ds_LinkedListSum.Nil);
};
stx_ds_LinkedList.fromCluster = function(arr) {
	return stx_nano_ClusterLift.rfold(arr,function(n,m) {
		return stx_ds_LinkedList.cons(m,n);
	},stx_ds_LinkedListSum.Nil);
};
stx_ds_LinkedList.search = function(this1,fn) {
	return stx_ds_LinkedList.fold(this1,function(next,memo) {
		return stx_pico_OptionLift.or(memo,function() {
			if(fn(next)) {
				return haxe_ds_Option.Some(next);
			} else {
				return haxe_ds_Option.None;
			}
		});
	},haxe_ds_Option.None);
};
stx_ds_LinkedList.fold = function(this1,f,b) {
	if(this1 == null) {
		return b;
	} else {
		switch(this1._hx_index) {
		case 0:
			return b;
		case 1:
			var x = this1.head;
			var xs = this1.tail;
			return stx_ds_LinkedList.fold(xs,f,f(x,b));
		}
	}
};
stx_ds_LinkedList.head = function(this1) {
	if(this1._hx_index == 1) {
		var x = this1.head;
		var xs = this1.tail;
		return x;
	} else {
		return null;
	}
};
stx_ds_LinkedList.toIterable = function(this1) {
	var _e = this1;
	return { iterator : function() {
		return $iterator(stx_ds_LinkedList)(_e);
	}};
};
stx_ds_LinkedList.toIter = function(this1) {
	var _e = this1;
	return stx_nano_Iter.lift({ iterator : function() {
		return $iterator(stx_ds_LinkedList)(_e);
	}});
};
stx_ds_LinkedList.iterator = function(this1) {
	var cursor = this1;
	return { next : function() {
		var value = null;
		if(cursor == null) {
			cursor = stx_ds_LinkedListSum.Nil;
		} else if(cursor._hx_index == 1) {
			var x = cursor.head;
			var xs = cursor.tail;
			value = x;
			cursor = xs;
		} else {
			cursor = stx_ds_LinkedListSum.Nil;
		}
		return value;
	}, hasNext : function() {
		if(cursor == null) {
			return true;
		} else if(cursor._hx_index == 0) {
			return false;
		} else {
			return true;
		}
	}};
};
stx_ds_LinkedList.map = function(this1,f) {
	switch(this1._hx_index) {
	case 0:
		return stx_ds_LinkedListSum.Nil;
	case 1:
		var x = this1.head;
		var xs = this1.tail;
		var tmp = f(x);
		var self = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,xs),function(_) {
			return stx_ds_LinkedList.map(_,f);
		});
		var tmp1;
		if(self._hx_index == 0) {
			var v = self.v;
			tmp1 = v;
		} else {
			tmp1 = null;
		}
		return stx_ds_LinkedListSum.Cons(tmp,tmp1);
	}
};
stx_ds_LinkedList.map_filter = function(this1,f) {
	switch(this1._hx_index) {
	case 0:
		return stx_ds_LinkedListSum.Nil;
	case 1:
		var x = this1.head;
		var xs = this1.tail;
		var nxt = f(x);
		if(nxt._hx_index == 0) {
			var v = nxt.v;
			return stx_ds_LinkedListSum.Cons(v,stx_ds_LinkedList.map_filter(xs,f));
		} else {
			return stx_ds_LinkedList.map_filter(xs,f);
		}
		break;
	}
};
stx_ds_LinkedList.elemWith = function(this1,v,$with) {
	if(this1._hx_index == 1) {
		var _g = this1.tail;
		var x = this1.head;
		return $with(v,x);
	} else {
		return false;
	}
};
stx_ds_LinkedList.zip_with = function(this1,that,$with) {
	var itI = $iterator(stx_ds_LinkedList)(this1);
	var itII = $getIterator(that);
	var rest = [];
	while(true) {
		var l_done = false;
		var r_done = false;
		var lhs = null;
		var rhs = null;
		if(itI.hasNext()) {
			lhs = itI.next();
		} else {
			l_done = true;
		}
		if(itII.hasNext()) {
			rhs = itII.next();
		} else {
			r_done = true;
		}
		if(l_done && r_done) {
			break;
		} else {
			rest.push($with(lhs,rhs));
		}
	}
	return stx_lift_ArrayLift.rfold(rest,function(n,m) {
		return stx_ds_LinkedList.cons(m,n);
	},stx_ds_LinkedList.unit());
};
stx_ds_LinkedList.rfold = function(this1,fn,z) {
	var rec = null;
	rec = function(next,memo) {
		switch(next._hx_index) {
		case 0:
			return memo;
		case 1:
			var x = next.head;
			var xs = next.tail;
			var nx = rec(xs,memo);
			var lx = fn(x,nx);
			return lx;
		}
	};
	return rec(this1,z);
};
stx_ds_LinkedList.lfold = function(this1,fn,z) {
	var rec = function(next,memo) {
		switch(next._hx_index) {
		case 0:
			return memo;
		case 1:
			var x = next.head;
			var xs = next.tail;
			var lx = fn(x,memo);
			var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,xs);
			var nl;
			if(self._hx_index == 0) {
				var v = self.v;
				nl = v;
			} else {
				nl = stx_ds_LinkedList.unit();
			}
			var nl1 = stx_ds_LinkedList.lfold(nl,fn,lx);
			return nl1;
		}
	};
	return rec(this1,z);
};
stx_ds_LinkedList.join = function(this1,str) {
	return stx_ds_LinkedList.lfold(stx_ds_LinkedList.map(this1,Std.string),function(n,m) {
		if(m.length == 0) {
			return "" + n;
		} else {
			return "" + m + str + n;
		}
	},"");
};
stx_ds_LinkedList.zip = function(this1,that) {
	return stx_ds_LinkedList.zip_with(this1,that,function(tI,tII) {
		return stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,tI,tII);
	});
};
stx_ds_LinkedList.size = function(this1) {
	return stx_ds_LinkedList.fold(this1,function(n,m) {
		return m + 1;
	},0);
};
stx_ds_LinkedList.is_defined = function(this1) {
	if(this1._hx_index == 0) {
		return false;
	} else {
		return true;
	}
};
stx_ds_LinkedList.has = function(this1,v) {
	var nxt = null;
	nxt = function(ls) {
		if(ls._hx_index == 1) {
			var x = ls.head;
			var xs = ls.tail;
			if(x == v) {
				return true;
			} else {
				return nxt(xs);
			}
		} else {
			return false;
		}
	};
	return nxt(this1);
};
stx_ds_LinkedList.filter = function(this1,fn) {
	return stx_ds_LinkedList.rfold(this1,function(next,memo) {
		if(fn(next)) {
			return stx_ds_LinkedList.cons(memo,next);
		} else {
			return memo;
		}
	},stx_ds_LinkedList.unit());
};
stx_ds_LinkedList.toArray = function(this1) {
	return stx_ds_LinkedList.lfold(this1,function(n,m) {
		return stx_lift_ArrayLift.snoc(m,n);
	},[]);
};
stx_ds_LinkedList.toCluster = function(this1) {
	return stx_ds_LinkedList.lfold(this1,function(n,m) {
		return stx_nano_ClusterLift.snoc(m,n);
	},stx_nano_Cluster.lift([]));
};
var stx_ds_Logging = function() { };
$hxClasses["stx.ds.Logging"] = stx_ds_Logging;
stx_ds_Logging.__name__ = "stx.ds.Logging";
stx_ds_Logging.log = function(wildcard) {
	var self = stx_pico_OptionLift.map(stx_pkg_Pkg.source(stx_PkgLift.pkg(stx_nano_Wildcard.__,{ fileName : "stx/ds/Logging.hx", lineNumber : 9, className : "stx.ds.Logging", methodName : "log"})),function(scope) {
		var this1 = stx_Log.unit();
		var tag = scope.pack.join("/");
		var this2 = this1;
		var fn = function(pos) {
			return pos.with_stamp(function(stamp) {
				return stamp.tag(tag);
			});
		};
		return function(value,pos) {
			this2(value,fn(pos));
		};
	});
	if(self._hx_index == 0) {
		var v = self.v;
		return v;
	} else {
		return stx_Log.unit();
	}
};
var stx_ds_NelSum = $hxEnums["stx.ds.NelSum"] = { __ename__:"stx.ds.NelSum",__constructs__:null
	,InitNel: ($_=function(x) { return {_hx_index:0,x:x,__enum__:"stx.ds.NelSum",toString:$estr}; },$_._hx_name="InitNel",$_.__params__ = ["x"],$_)
	,ConsNel: ($_=function(x,xs) { return {_hx_index:1,x:x,xs:xs,__enum__:"stx.ds.NelSum",toString:$estr}; },$_._hx_name="ConsNel",$_.__params__ = ["x","xs"],$_)
};
stx_ds_NelSum.__constructs__ = [stx_ds_NelSum.InitNel,stx_ds_NelSum.ConsNel];
var stx_ds_Nel = {};
stx_ds_Nel._new = function(self) {
	var this1 = self;
	return this1;
};
stx_ds_Nel.cons = function(this1,v) {
	switch(this1._hx_index) {
	case 0:
		var x = this1.x;
		return stx_ds_NelSum.ConsNel(v,this1);
	case 1:
		var x = this1.x;
		var xs = this1.xs;
		return stx_ds_NelSum.ConsNel(v,this1);
	}
};
var stx_ds_RedBlackMapLift = function() { };
$hxClasses["stx.ds.RedBlackMapLift"] = stx_ds_RedBlackMapLift;
stx_ds_RedBlackMapLift.__name__ = "stx.ds.RedBlackMapLift";
stx_ds_RedBlackMapLift.set = function(self,key,val) {
	var ins = null;
	ins = function(tree,comparator) {
		var result;
		switch(tree._hx_index) {
		case 0:
			result = stx_ds_RedBlackTreeSum.Node(stx_RedBlackSum.Red,stx_ds_RedBlackTreeSum.Leaf,{ key : key, val : val},stx_ds_RedBlackTreeSum.Leaf);
			break;
		case 1:
			var _g = tree.color;
			var _g1 = tree.left;
			var _g2 = tree.label;
			var _g3 = tree.right;
			var k = _g2.key;
			var x = _g2.val;
			var left = _g1;
			var color = _g;
			var right = _g3;
			if(stx_assert_EqualedSum.is_equal(self.with.eq().comply(k,key))) {
				result = stx_ds_RedBlackTreeSum.Node(color,left,{ key : key, val : val},right);
			} else {
				var label = _g2;
				var left = _g1;
				var color = _g;
				var right = _g3;
				result = stx_nano_Report.is_ok(comparator.comply(key,label.key)) ? stx_ds_RedBlackTree._.balance(stx_ds_RedBlackTreeSum.Node(color,ins(left,comparator),label,right)) : stx_nano_Report.is_ok(comparator.comply(label.key,key)) ? stx_ds_RedBlackTree._.balance(stx_ds_RedBlackTreeSum.Node(color,left,label,ins(right,comparator))) : tree;
			}
			break;
		}
		return result;
	};
	var _g = ins(self.data,stx_assert_Ord.toAssertion(self.with.lt()));
	switch(_g._hx_index) {
	case 0:
		throw haxe_Exception.thrown("Never reach here");
	case 1:
		var _g1 = _g.color;
		var left = _g.left;
		var label = _g.label;
		var right = _g.right;
		return { data : stx_ds_RedBlackTreeSum.Node(stx_RedBlackSum.Black,left,label,right), 'with' : self.with};
	}
};
stx_ds_RedBlackMapLift.get = function(self,key) {
	var mem = null;
	mem = function(tree) {
		switch(tree._hx_index) {
		case 0:
			return null;
		case 1:
			var _g = tree.color;
			var left = tree.left;
			var label = tree.label;
			var right = tree.right;
			if(stx_assert_OrderedSum.is_ok(self.with.lt().comply(key,label.key))) {
				return mem(left);
			} else if(stx_assert_OrderedSum.is_ok(self.with.lt().comply(label.key,key))) {
				return mem(right);
			} else {
				return label.val;
			}
			break;
		}
	};
	return mem(self.data);
};
stx_ds_RedBlackMapLift.rem = function(self,value) {
	var balance = stx_ds_RedBlackTree._.balance;
	var eq = self.with.eq();
	var lt = self.with.lt();
	var cons = function(data) {
		return data;
	};
	var s = function(v) {
		return stx_ds_RedBlackTree._.toString(v);
	};
	var merge = null;
	merge = function(l,r) {
		switch(l._hx_index) {
		case 0:
			var v = r;
			return v;
		case 1:
			var _g = l.color;
			var _g1 = l.left;
			var _g2 = l.label;
			var _g3 = l.right;
			switch(r._hx_index) {
			case 0:
				var v = l;
				return v;
			case 1:
				var _g4 = r.color;
				var _g5 = r.left;
				var _g6 = r.label;
				var _g7 = r.right;
				var c1 = _g4;
				var l1 = _g5;
				var v1 = _g6;
				var r1 = _g7;
				var r0 = _g3;
				var v0 = _g2;
				var l0 = _g1;
				var c0 = _g;
				if(stx_assert_OrderedSum.is_ok(lt.comply(v0.key,v1.key))) {
					return balance(stx_ds_RedBlackTreeSum.Node(c1,merge(l,l1),v1,r1));
				} else {
					var c1 = _g4;
					var l1 = _g5;
					var v1 = _g6;
					var r1 = _g7;
					var r0 = _g3;
					var v0 = _g2;
					var l0 = _g1;
					var c0 = _g;
					if(stx_assert_OrderedSum.is_ok(lt.comply(v1.key,v0.key))) {
						return balance(stx_ds_RedBlackTreeSum.Node(c0,merge(l0,r),v0,r0));
					} else {
						return stx_ds_RedBlackTreeSum.Leaf;
					}
				}
				break;
			default:
				return stx_ds_RedBlackTreeSum.Leaf;
			}
			break;
		default:
			if(r._hx_index == 0) {
				var v = l;
				return v;
			} else {
				return stx_ds_RedBlackTreeSum.Leaf;
			}
		}
	};
	var rec = null;
	rec = function(data) {
		switch(data._hx_index) {
		case 0:
			return cons(stx_ds_RedBlackTreeSum.Leaf);
		case 1:
			var c = data.color;
			var l = data.left;
			var v = data.label;
			var r = data.right;
			if(stx_assert_EqualedSum.is_ok(eq.comply(value,v.key))) {
				switch(l._hx_index) {
				case 0:
					var v1 = r;
					return cons(v1);
				case 1:
					var _g = l.color;
					var _g1 = l.left;
					var _g2 = l.label;
					var _g3 = l.right;
					switch(r._hx_index) {
					case 0:
						var v1 = l;
						return cons(v1);
					case 1:
						var c1 = r.color;
						var l1 = r.left;
						var v1 = r.label;
						var r1 = r.right;
						var r0 = _g3;
						var v0 = _g2;
						var l0 = _g1;
						var c0 = _g;
						var out = merge(l,r);
						return out;
					}
					break;
				}
			} else if(stx_assert_OrderedSum.is_ok(lt.comply(value,v.key))) {
				return cons(stx_ds_RedBlackTreeSum.Node(c,rec(l),v,r));
			} else if(stx_assert_OrderedSum.is_ok(lt.comply(v.key,value))) {
				return cons(stx_ds_RedBlackTreeSum.Node(c,l,v,rec(r)));
			} else {
				return data;
			}
			break;
		}
	};
	return stx_ds_RedBlackMap.make(self.with,rec(self.data));
};
stx_ds_RedBlackMapLift.union = function(self,that) {
	var item = $iterator(stx_ds_RedBlackMap)(that);
	while(item.hasNext()) {
		var item1 = item.next();
		var self1 = [self];
		var key = [item1.key];
		var val = [item1.val];
		var ins = [null];
		ins[0] = (function(ins,val,key,self) {
			return function(tree,comparator) {
				var result;
				switch(tree._hx_index) {
				case 0:
					result = stx_ds_RedBlackTreeSum.Node(stx_RedBlackSum.Red,stx_ds_RedBlackTreeSum.Leaf,{ key : key[0], val : val[0]},stx_ds_RedBlackTreeSum.Leaf);
					break;
				case 1:
					var _g = tree.color;
					var _g1 = tree.left;
					var _g2 = tree.label;
					var _g3 = tree.right;
					var k = _g2.key;
					var x = _g2.val;
					var left = _g1;
					var color = _g;
					var right = _g3;
					if(stx_assert_EqualedSum.is_equal(self[0].with.eq().comply(k,key[0]))) {
						result = stx_ds_RedBlackTreeSum.Node(color,left,{ key : key[0], val : val[0]},right);
					} else {
						var label = _g2;
						var left = _g1;
						var color = _g;
						var right = _g3;
						result = stx_nano_Report.is_ok(comparator.comply(key[0],label.key)) ? stx_ds_RedBlackTree._.balance(stx_ds_RedBlackTreeSum.Node(color,ins[0](left,comparator),label,right)) : stx_nano_Report.is_ok(comparator.comply(label.key,key[0])) ? stx_ds_RedBlackTree._.balance(stx_ds_RedBlackTreeSum.Node(color,left,label,ins[0](right,comparator))) : tree;
					}
					break;
				}
				return result;
			};
		})(ins,val,key,self1);
		var _g = ins[0](self1[0].data,stx_assert_Ord.toAssertion(self1[0].with.lt()));
		switch(_g._hx_index) {
		case 0:
			throw haxe_Exception.thrown("Never reach here");
		case 1:
			var _g1 = _g.color;
			var left = _g.left;
			var label = _g.label;
			var right = _g.right;
			self = { data : stx_ds_RedBlackTreeSum.Node(stx_RedBlackSum.Black,left,label,right), 'with' : self1[0].with};
			break;
		}
	}
	return self;
};
stx_ds_RedBlackMapLift.last = function(self) {
	var rec = null;
	rec = function(self,def) {
		switch(self._hx_index) {
		case 0:
			return def;
		case 1:
			var _g = self.color;
			var _g = self.left;
			var label = self.label;
			var right = self.right;
			return rec(right,haxe_ds_Option.Some(label));
		}
	};
	return rec(self.data,haxe_ds_Option.None);
};
stx_ds_RedBlackMapLift.size = function(self) {
	return stx_ds_RedBlackTreeLift.size(self.data);
};
stx_ds_RedBlackMapLift.unit = function(self) {
	return stx_ds_RedBlackMap.make(self.with);
};
var stx_ds_RedBlackMap = {};
stx_ds_RedBlackMap._new = function(self) {
	var this1 = self;
	return this1;
};
stx_ds_RedBlackMap.string = function() {
	return stx_ds_RedBlackMap.make(stx_assert_Comparable.String());
};
stx_ds_RedBlackMap.make = function($with,data) {
	return { 'with' : $with, data : data == null ? stx_ds_RedBlackTreeSum.Leaf : data};
};
stx_ds_RedBlackMap.makeI = function(ord,eq) {
	return { data : stx_ds_RedBlackTreeSum.Leaf, 'with' : new stx_assert_comparable_term_Base(eq,ord)};
};
stx_ds_RedBlackMap.make_with = function(ord,eq) {
	return { data : stx_ds_RedBlackTreeSum.Leaf, 'with' : new stx_assert_comparable_term_Base(eq,ord)};
};
stx_ds_RedBlackMap.set = function(this1,k,v) {
	var self = stx_ds_RedBlackMap.get_self(this1);
	var key = k;
	var val = v;
	var ins = null;
	ins = function(tree,comparator) {
		var result;
		switch(tree._hx_index) {
		case 0:
			result = stx_ds_RedBlackTreeSum.Node(stx_RedBlackSum.Red,stx_ds_RedBlackTreeSum.Leaf,{ key : key, val : val},stx_ds_RedBlackTreeSum.Leaf);
			break;
		case 1:
			var _g = tree.color;
			var _g1 = tree.left;
			var _g2 = tree.label;
			var _g3 = tree.right;
			var k = _g2.key;
			var x = _g2.val;
			var left = _g1;
			var color = _g;
			var right = _g3;
			if(stx_assert_EqualedSum.is_equal(self.with.eq().comply(k,key))) {
				result = stx_ds_RedBlackTreeSum.Node(color,left,{ key : key, val : val},right);
			} else {
				var label = _g2;
				var left = _g1;
				var color = _g;
				var right = _g3;
				result = stx_nano_Report.is_ok(comparator.comply(key,label.key)) ? stx_ds_RedBlackTree._.balance(stx_ds_RedBlackTreeSum.Node(color,ins(left,comparator),label,right)) : stx_nano_Report.is_ok(comparator.comply(label.key,key)) ? stx_ds_RedBlackTree._.balance(stx_ds_RedBlackTreeSum.Node(color,left,label,ins(right,comparator))) : tree;
			}
			break;
		}
		return result;
	};
	var _g = ins(self.data,stx_assert_Ord.toAssertion(self.with.lt()));
	switch(_g._hx_index) {
	case 0:
		throw haxe_Exception.thrown("Never reach here");
	case 1:
		var _g1 = _g.color;
		var left = _g.left;
		var label = _g.label;
		var right = _g.right;
		return { data : stx_ds_RedBlackTreeSum.Node(stx_RedBlackSum.Black,left,label,right), 'with' : self.with};
	}
};
stx_ds_RedBlackMap.put = function(this1,kv) {
	return stx_ds_RedBlackMap.set(this1,kv.key,kv.val);
};
stx_ds_RedBlackMap.get = function(this1,k) {
	var self = stx_ds_RedBlackMap.get_self(this1);
	var key = k;
	var mem = null;
	mem = function(tree) {
		switch(tree._hx_index) {
		case 0:
			return null;
		case 1:
			var _g = tree.color;
			var left = tree.left;
			var label = tree.label;
			var right = tree.right;
			if(stx_assert_OrderedSum.is_ok(self.with.lt().comply(key,label.key))) {
				return mem(left);
			} else if(stx_assert_OrderedSum.is_ok(self.with.lt().comply(label.key,key))) {
				return mem(right);
			} else {
				return label.val;
			}
			break;
		}
	};
	return stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,mem(self.data));
};
stx_ds_RedBlackMap.has = function(this1,k) {
	var self = stx_ds_RedBlackMap.get_self(this1);
	var key = k;
	var mem = null;
	mem = function(tree) {
		switch(tree._hx_index) {
		case 0:
			return null;
		case 1:
			var _g = tree.color;
			var left = tree.left;
			var label = tree.label;
			var right = tree.right;
			if(stx_assert_OrderedSum.is_ok(self.with.lt().comply(key,label.key))) {
				return mem(left);
			} else if(stx_assert_OrderedSum.is_ok(self.with.lt().comply(label.key,key))) {
				return mem(right);
			} else {
				return label.val;
			}
			break;
		}
	};
	return stx_pico_OptionLift.is_defined(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,mem(self.data)));
};
stx_ds_RedBlackMap.rem = function(this1,k) {
	var self = stx_ds_RedBlackMap.get_self(this1);
	var value = k;
	var balance = stx_ds_RedBlackTree._.balance;
	var eq = self.with.eq();
	var lt = self.with.lt();
	var cons = function(data) {
		return data;
	};
	var s = function(v) {
		return stx_ds_RedBlackTree._.toString(v);
	};
	var merge = null;
	merge = function(l,r) {
		switch(l._hx_index) {
		case 0:
			var v = r;
			return v;
		case 1:
			var _g = l.color;
			var _g1 = l.left;
			var _g2 = l.label;
			var _g3 = l.right;
			switch(r._hx_index) {
			case 0:
				var v = l;
				return v;
			case 1:
				var _g4 = r.color;
				var _g5 = r.left;
				var _g6 = r.label;
				var _g7 = r.right;
				var c1 = _g4;
				var l1 = _g5;
				var v1 = _g6;
				var r1 = _g7;
				var r0 = _g3;
				var v0 = _g2;
				var l0 = _g1;
				var c0 = _g;
				if(stx_assert_OrderedSum.is_ok(lt.comply(v0.key,v1.key))) {
					return balance(stx_ds_RedBlackTreeSum.Node(c1,merge(l,l1),v1,r1));
				} else {
					var c1 = _g4;
					var l1 = _g5;
					var v1 = _g6;
					var r1 = _g7;
					var r0 = _g3;
					var v0 = _g2;
					var l0 = _g1;
					var c0 = _g;
					if(stx_assert_OrderedSum.is_ok(lt.comply(v1.key,v0.key))) {
						return balance(stx_ds_RedBlackTreeSum.Node(c0,merge(l0,r),v0,r0));
					} else {
						return stx_ds_RedBlackTreeSum.Leaf;
					}
				}
				break;
			default:
				return stx_ds_RedBlackTreeSum.Leaf;
			}
			break;
		default:
			if(r._hx_index == 0) {
				var v = l;
				return v;
			} else {
				return stx_ds_RedBlackTreeSum.Leaf;
			}
		}
	};
	var rec = null;
	rec = function(data) {
		switch(data._hx_index) {
		case 0:
			return cons(stx_ds_RedBlackTreeSum.Leaf);
		case 1:
			var c = data.color;
			var l = data.left;
			var v = data.label;
			var r = data.right;
			if(stx_assert_EqualedSum.is_ok(eq.comply(value,v.key))) {
				switch(l._hx_index) {
				case 0:
					var v1 = r;
					return cons(v1);
				case 1:
					var _g = l.color;
					var _g1 = l.left;
					var _g2 = l.label;
					var _g3 = l.right;
					switch(r._hx_index) {
					case 0:
						var v1 = l;
						return cons(v1);
					case 1:
						var c1 = r.color;
						var l1 = r.left;
						var v1 = r.label;
						var r1 = r.right;
						var r0 = _g3;
						var v0 = _g2;
						var l0 = _g1;
						var c0 = _g;
						var out = merge(l,r);
						return out;
					}
					break;
				}
			} else if(stx_assert_OrderedSum.is_ok(lt.comply(value,v.key))) {
				return cons(stx_ds_RedBlackTreeSum.Node(c,rec(l),v,r));
			} else if(stx_assert_OrderedSum.is_ok(lt.comply(v.key,value))) {
				return cons(stx_ds_RedBlackTreeSum.Node(c,l,v,rec(r)));
			} else {
				return data;
			}
			break;
		}
	};
	return stx_ds_RedBlackMap.make(self.with,rec(self.data));
};
stx_ds_RedBlackMap.iterator = function(this1) {
	return $iterator(stx_ds_RedBlackTree._)(this1.data);
};
stx_ds_RedBlackMap.keyVaIterator = function(this1) {
	return $iterator(stx_ds_RedBlackTree._)(this1.data);
};
stx_ds_RedBlackMap.union = function(this1,that) {
	return stx_ds_RedBlackMap._.union(stx_ds_RedBlackMap.get_self(this1),that);
};
stx_ds_RedBlackMap.toIter = function(this1) {
	var _e = this1;
	return stx_nano_Iter._new({ iterator : function() {
		return $iterator(stx_ds_RedBlackMap)(_e);
	}});
};
stx_ds_RedBlackMap.get_self = function(this1) {
	return this1;
};
stx_ds_RedBlackMap.copy = function(this1,$with,data) {
	var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,$with);
	var tmp;
	if(self._hx_index == 0) {
		var v = self.v;
		tmp = v;
	} else {
		tmp = this1.with;
	}
	var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,data);
	var tmp1;
	if(self._hx_index == 0) {
		var v = self.v;
		tmp1 = v;
	} else {
		tmp1 = this1.data;
	}
	return stx_ds_RedBlackMap.make(tmp,tmp1);
};
stx_ds_RedBlackMap.toString = function(this1) {
	return stx_ds_RedBlackTreeLift.toString(this1.data);
};
var stx_ds_RedBlackSetLift = function() { };
$hxClasses["stx.ds.RedBlackSetLift"] = stx_ds_RedBlackSetLift;
stx_ds_RedBlackSetLift.__name__ = "stx.ds.RedBlackSetLift";
stx_ds_RedBlackSetLift.balance = function(set) {
	return { data : stx_ds_RedBlackTree._.balance(set.data), 'with' : set.with};
};
stx_ds_RedBlackSetLift.put = function(set,val) {
	var ins = null;
	ins = function(tree,comparator) {
		switch(tree._hx_index) {
		case 0:
			return stx_ds_RedBlackTreeSum.Node(stx_RedBlackSum.Red,stx_ds_RedBlackTreeSum.Leaf,val,stx_ds_RedBlackTreeSum.Leaf);
		case 1:
			var color = tree.color;
			var left = tree.left;
			var v = tree.label;
			var right = tree.right;
			if(stx_nano_Report.is_ok(comparator.comply(val,v))) {
				return stx_ds_RedBlackTree._.balance(stx_ds_RedBlackTreeSum.Node(color,ins(left,comparator),v,right));
			} else if(stx_nano_Report.is_ok(comparator.comply(v,val))) {
				return stx_ds_RedBlackTree._.balance(stx_ds_RedBlackTreeSum.Node(color,left,v,ins(right,comparator)));
			} else {
				return stx_ds_RedBlackTreeSum.Node(color,left,val,right);
			}
			break;
		}
	};
	var _g = ins(set.data,stx_assert_Ord.toAssertion(set.with.lt()));
	switch(_g._hx_index) {
	case 0:
		throw haxe_Exception.thrown("Never reach here");
	case 1:
		var _g1 = _g.color;
		var left = _g.left;
		var label = _g.label;
		var right = _g.right;
		return { data : stx_ds_RedBlackTreeSum.Node(stx_RedBlackSum.Black,left,label,right), 'with' : set.with};
	}
};
stx_ds_RedBlackSetLift.concat = function(set,xs) {
	var x = $getIterator(xs);
	while(x.hasNext()) {
		var x1 = x.next();
		set = stx_ds_RedBlackSetLift.put(set,x1);
	}
	return set;
};
stx_ds_RedBlackSetLift.toString = function(set) {
	return stx_ds_RedBlackTree._.toString(set.data);
};
stx_ds_RedBlackSetLift.rem = function(set,value) {
	var balance = stx_ds_RedBlackTree._.balance;
	var eq = ($_=set.with,$bind($_,$_.eq));
	var lt = ($_=set.with,$bind($_,$_.lt));
	var cons = function(data) {
		return data;
	};
	var s = function(v) {
		return stx_ds_RedBlackTree._.toString(v);
	};
	var merge = null;
	merge = function(l,r) {
		switch(l._hx_index) {
		case 0:
			var v = r;
			return v;
		case 1:
			var _g = l.color;
			var _g1 = l.left;
			var _g2 = l.label;
			var _g3 = l.right;
			switch(r._hx_index) {
			case 0:
				var v = l;
				return v;
			case 1:
				var _g4 = r.color;
				var _g5 = r.left;
				var _g6 = r.label;
				var _g7 = r.right;
				var c1 = _g4;
				var l1 = _g5;
				var v1 = _g6;
				var r1 = _g7;
				var r0 = _g3;
				var v0 = _g2;
				var l0 = _g1;
				var c0 = _g;
				if(stx_assert_OrderedSum.is_ok(lt().comply(v0,v1))) {
					return balance(stx_ds_RedBlackTreeSum.Node(c1,merge(l,l1),v1,r1));
				} else {
					var c1 = _g4;
					var l1 = _g5;
					var v1 = _g6;
					var r1 = _g7;
					var r0 = _g3;
					var v0 = _g2;
					var l0 = _g1;
					var c0 = _g;
					if(stx_assert_OrderedSum.is_ok(lt().comply(v1,v0))) {
						return balance(stx_ds_RedBlackTreeSum.Node(c0,merge(l0,r),v0,r0));
					} else {
						return stx_ds_RedBlackTreeSum.Leaf;
					}
				}
				break;
			default:
				return stx_ds_RedBlackTreeSum.Leaf;
			}
			break;
		default:
			if(r._hx_index == 0) {
				var v = l;
				return v;
			} else {
				return stx_ds_RedBlackTreeSum.Leaf;
			}
		}
	};
	var rec = null;
	rec = function(data) {
		switch(data._hx_index) {
		case 0:
			return cons(stx_ds_RedBlackTreeSum.Leaf);
		case 1:
			var c = data.color;
			var l = data.left;
			var v = data.label;
			var r = data.right;
			if(stx_assert_EqualedSum.is_ok(eq().comply(value,v))) {
				switch(l._hx_index) {
				case 0:
					var v1 = r;
					return cons(v1);
				case 1:
					var _g = l.color;
					var _g1 = l.left;
					var _g2 = l.label;
					var _g3 = l.right;
					switch(r._hx_index) {
					case 0:
						var v1 = l;
						return cons(v1);
					case 1:
						var c1 = r.color;
						var l1 = r.left;
						var v1 = r.label;
						var r1 = r.right;
						var r0 = _g3;
						var v0 = _g2;
						var l0 = _g1;
						var c0 = _g;
						var out = merge(l,r);
						return out;
					}
					break;
				}
			} else if(stx_assert_OrderedSum.is_ok(lt().comply(value,v))) {
				return cons(stx_ds_RedBlackTreeSum.Node(c,rec(l),v,r));
			} else if(stx_assert_OrderedSum.is_ok(lt().comply(v,value))) {
				return cons(stx_ds_RedBlackTreeSum.Node(c,l,v,rec(r)));
			} else {
				return data;
			}
			break;
		}
	};
	return stx_ds_RedBlackSet.make(set.with,rec(set.data));
};
stx_ds_RedBlackSetLift.has = function(set,val) {
	var hs = null;
	hs = function(tree,$with) {
		switch(tree._hx_index) {
		case 0:
			return false;
		case 1:
			var color = tree.color;
			var left = tree.left;
			var v = tree.label;
			var right = tree.right;
			if(stx_assert_EqualedSum.is_ok($with.eq().comply(val,v))) {
				return true;
			} else if(stx_assert_OrderedSum.is_ok($with.lt().comply(val,v))) {
				return hs(left,$with);
			} else if(stx_assert_OrderedSum.is_ok($with.lt().comply(v,val))) {
				return hs(right,$with);
			} else {
				return false;
			}
			break;
		}
	};
	return hs(set.data,set.with);
};
stx_ds_RedBlackSetLift.split = function(self,item) {
	var balance = stx_ds_RedBlackTree._.balance;
	var cons = function(data) {
		return stx_ds_RedBlackSet.make(self.with,data);
	};
	var merge = null;
	merge = function(l,r) {
		switch(l._hx_index) {
		case 0:
			var v = r;
			return v;
		case 1:
			var _g = l.color;
			var _g1 = l.left;
			var _g2 = l.label;
			var _g3 = l.right;
			switch(r._hx_index) {
			case 0:
				var v = l;
				return v;
			case 1:
				var _g4 = r.color;
				var _g5 = r.left;
				var _g6 = r.label;
				var _g7 = r.right;
				var c1 = _g4;
				var l1 = _g5;
				var v1 = _g6;
				var r1 = _g7;
				var r0 = _g3;
				var v0 = _g2;
				var l0 = _g1;
				var c0 = _g;
				if(stx_assert_OrderedSum.is_ok(self.with.lt().comply(v0,v1))) {
					return balance(stx_ds_RedBlackTreeSum.Node(c1,merge(l,l1),v1,r1));
				} else {
					var c1 = _g4;
					var l1 = _g5;
					var v1 = _g6;
					var r1 = _g7;
					var r0 = _g3;
					var v0 = _g2;
					var l0 = _g1;
					var c0 = _g;
					if(stx_assert_OrderedSum.is_ok(self.with.lt().comply(v1,v0))) {
						return balance(stx_ds_RedBlackTreeSum.Node(c0,merge(l0,r),v0,r0));
					} else {
						return stx_ds_RedBlackTreeSum.Leaf;
					}
				}
				break;
			default:
				return stx_ds_RedBlackTreeSum.Leaf;
			}
			break;
		default:
			if(r._hx_index == 0) {
				var v = l;
				return v;
			} else {
				return stx_ds_RedBlackTreeSum.Leaf;
			}
		}
	};
	var rec = null;
	rec = function(x) {
		var _g = x.data;
		switch(_g._hx_index) {
		case 0:
			return stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,stx_ds_RedBlackSet.unit(self),stx_ds_RedBlackSet.unit(self));
		case 1:
			var _g1 = _g.color;
			var left = _g.left;
			var label = _g.label;
			var right = _g.right;
			if(stx_assert_OrderedSum.is_ok(self.with.lt().comply(item,label)) || stx_assert_OrderedSum.is_ok(self.with.lt().comply(item,label))) {
				var next = cons(left);
				return stx_nano_CoupleLift.decouple(rec(next),function(l,r) {
					return stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,l,cons(merge(stx_ds_RedBlackSetLift.put(cons(right),label).data,r.data)));
				});
			} else {
				var next = cons(right);
				return stx_nano_CoupleLift.decouple(rec(next),function(l,r) {
					return stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,cons(merge(stx_ds_RedBlackSetLift.put(cons(left),label).data,l.data)),r);
				});
			}
			break;
		}
	};
	return rec(self);
};
stx_ds_RedBlackSetLift.fold = function(self,fn,z) {
	var memo = z;
	var next = $iterator(stx_ds_RedBlackSet)(self);
	while(next.hasNext()) {
		var next1 = next.next();
		memo = fn(next1,memo);
	}
	return memo;
};
stx_ds_RedBlackSetLift.toArray = function(self) {
	var itr = $iterator(stx_ds_RedBlackSet)(self);
	var out = [];
	while(itr.hasNext()) out.push(itr.next());
	return out;
};
stx_ds_RedBlackSetLift.toCluster = function(self) {
	return stx_nano_Cluster.lift(stx_ds_RedBlackSetLift.toArray(self));
};
stx_ds_RedBlackSetLift.union = function(self,that) {
	var val = $iterator(stx_ds_RedBlackSet)(that);
	while(val.hasNext()) {
		var val1 = val.next();
		self = stx_ds_RedBlackSetLift.put(self,val1);
	}
	return self;
};
stx_ds_RedBlackSetLift.difference = function(self,that) {
	var val = $iterator(stx_ds_RedBlackSet)(that);
	while(val.hasNext()) {
		var val1 = val.next();
		self = stx_ds_RedBlackSetLift.rem(self,val1);
	}
	return self;
};
stx_ds_RedBlackSetLift.symmetric_difference = function(self,that) {
	var a = stx_ds_RedBlackSet.difference(self,that);
	var b = stx_ds_RedBlackSet.difference(that,self);
	return stx_ds_RedBlackSetLift.union(a,b);
};
stx_ds_RedBlackSetLift.filter = function(self,fn) {
	var next = stx_ds_RedBlackSet.make(self.with);
	var val = $iterator(stx_ds_RedBlackSet)(self);
	while(val.hasNext()) {
		var val1 = val.next();
		if(fn(val1)) {
			next = stx_ds_RedBlackSetLift.put(next,val1);
		}
	}
	return next;
};
stx_ds_RedBlackSetLift.equals = function(self,that) {
	return stx_ds_RedBlackSetLift.fold(stx_ds_RedBlackSetLift.union(self,that),function(next,memo) {
		return stx_assert_Equaled.and(memo,stx_ds_RedBlackSetLift.has(self,next) && true);
	},true);
};
stx_ds_RedBlackSetLift.less_than = function(self,that) {
	var l_iter = $iterator(stx_ds_RedBlackSet)(self);
	var r_iter = $iterator(stx_ds_RedBlackSet)(that);
	var res = false;
	while(true) {
		var _g = l_iter.hasNext();
		var _g1 = r_iter.hasNext();
		if(_g) {
			if(_g1) {
				res = self.with.lt().comply(l_iter.next(),r_iter.next());
				if(res == true) {
					break;
				}
			} else {
				res = false;
				break;
			}
		} else if(_g1) {
			res = true;
			break;
		}
	}
	return res;
};
stx_ds_RedBlackSetLift.is_defined = function(self) {
	return self.data != stx_ds_RedBlackTreeSum.Leaf;
};
stx_ds_RedBlackSetLift.last = function(self) {
	var rec = null;
	rec = function(self,def) {
		switch(self._hx_index) {
		case 0:
			return def;
		case 1:
			var _g = self.color;
			var _g = self.left;
			var label = self.label;
			var right = self.right;
			return rec(right,haxe_ds_Option.Some(label));
		}
	};
	return rec(self.data,haxe_ds_Option.None);
};
var stx_ds_RedBlackSet = {};
stx_ds_RedBlackSet._new = function(self) {
	var this1 = self;
	return this1;
};
stx_ds_RedBlackSet.String = function() {
	return stx_ds_RedBlackSet.make(stx_assert_Comparable.String());
};
stx_ds_RedBlackSet.make = function($with,data) {
	return stx_ds_RedBlackSet._new({ 'with' : $with, data : data == null ? stx_ds_RedBlackTreeSum.Leaf : data});
};
stx_ds_RedBlackSet.make_with = function(ord,eq,data) {
	var $with = new stx_assert_comparable_term_Base(eq,ord);
	return stx_ds_RedBlackSet.make($with,data);
};
stx_ds_RedBlackSet.toIterable = function(this1) {
	var _e = this1;
	return { iterator : function() {
		return $iterator(stx_ds_RedBlackSet)(_e);
	}};
};
stx_ds_RedBlackSet.toIter = function(this1) {
	return stx_ds_RedBlackSet.toIterable(this1);
};
stx_ds_RedBlackSet.iterator = function(this1) {
	return $iterator(stx_ds_RedBlackTree._)(this1.data);
};
stx_ds_RedBlackSet.difference = function(this1,that) {
	return stx_ds_RedBlackSet._.filter(stx_ds_RedBlackSet.get_self(this1),function(v) {
		return !stx_ds_RedBlackSet.has(stx_ds_RedBlackSet.uses(that,stx_ds_RedBlackSet.get_self(this1).with),v);
	});
};
stx_ds_RedBlackSet.has = function(this1,v) {
	return stx_ds_RedBlackSet._.has(this1,v);
};
stx_ds_RedBlackSet.equals = function(this1,that) {
	return stx_ds_RedBlackSetLift.fold(stx_ds_RedBlackSet._.union(stx_ds_RedBlackSet.get_self(this1),that),function(next,memo) {
		return stx_assert_Equaled.and(memo,stx_ds_RedBlackSet.has(this1,next) && true);
	},true);
};
stx_ds_RedBlackSet.uses = function(this1,$with) {
	return { data : this1.data, 'with' : $with};
};
stx_ds_RedBlackSet.lt = function(this1,that) {
	if(stx_ds_RedBlackSetLift.fold(stx_ds_RedBlackSet.difference(that,this1),function(next,memo) {
		return memo++;
	},0) > 0) {
		return true;
	} else {
		return false;
	}
};
stx_ds_RedBlackSet.get_self = function(this1) {
	return this1;
};
stx_ds_RedBlackSet.toString = function(this1) {
	return stx_ds_RedBlackSet._.toString(this1);
};
stx_ds_RedBlackSet.unit = function(this1) {
	return stx_ds_RedBlackSet.make(this1.with);
};
stx_ds_RedBlackSet.copy = function(this1,$with,data) {
	var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,$with);
	var tmp;
	if(self._hx_index == 0) {
		var v = self.v;
		tmp = v;
	} else {
		tmp = this1.with;
	}
	var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,data);
	var tmp1;
	if(self._hx_index == 0) {
		var v = self.v;
		tmp1 = v;
	} else {
		tmp1 = this1.data;
	}
	return stx_ds_RedBlackSet.make(tmp,tmp1);
};
var stx_ds_RedBlackTreeSum = $hxEnums["stx.ds.RedBlackTreeSum"] = { __ename__:"stx.ds.RedBlackTreeSum",__constructs__:null
	,Leaf: {_hx_name:"Leaf",_hx_index:0,__enum__:"stx.ds.RedBlackTreeSum",toString:$estr}
	,Node: ($_=function(color,left,label,right) { return {_hx_index:1,color:color,left:left,label:label,right:right,__enum__:"stx.ds.RedBlackTreeSum",toString:$estr}; },$_._hx_name="Node",$_.__params__ = ["color","left","label","right"],$_)
};
stx_ds_RedBlackTreeSum.__constructs__ = [stx_ds_RedBlackTreeSum.Leaf,stx_ds_RedBlackTreeSum.Node];
var stx_ds_RedBlackTreeLift = function() { };
$hxClasses["stx.ds.RedBlackTreeLift"] = stx_ds_RedBlackTreeLift;
stx_ds_RedBlackTreeLift.__name__ = "stx.ds.RedBlackTreeLift";
stx_ds_RedBlackTreeLift.is_defined = function(self) {
	if(self._hx_index == 0) {
		return false;
	} else {
		return true;
	}
};
stx_ds_RedBlackTreeLift.balance = function(tree) {
	if(tree._hx_index == 1) {
		var _g = tree.left;
		var _g1 = tree.label;
		var _g2 = tree.right;
		if(tree.color._hx_index == 1) {
			if(_g._hx_index == 1) {
				var _g3 = _g.left;
				var _g4 = _g.label;
				var _g5 = _g.right;
				if(_g.color._hx_index == 0) {
					if(_g3._hx_index == 1) {
						if(_g3.color._hx_index == 0) {
							var a = _g3.left;
							var x = _g3.label;
							var b = _g3.right;
							var y = _g4;
							var c = _g5;
							var z = _g1;
							var d = _g2;
							return stx_ds_RedBlackTreeSum.Node(stx_RedBlackSum.Red,stx_ds_RedBlackTreeSum.Node(stx_RedBlackSum.Black,a,x,b),y,stx_ds_RedBlackTreeSum.Node(stx_RedBlackSum.Black,c,z,d));
						} else if(_g5._hx_index == 1) {
							if(_g5.color._hx_index == 0) {
								var a = _g3;
								var b = _g5.left;
								var y = _g5.label;
								var c = _g5.right;
								var x = _g4;
								var z = _g1;
								var d = _g2;
								return stx_ds_RedBlackTreeSum.Node(stx_RedBlackSum.Red,stx_ds_RedBlackTreeSum.Node(stx_RedBlackSum.Black,a,x,b),y,stx_ds_RedBlackTreeSum.Node(stx_RedBlackSum.Black,c,z,d));
							} else if(_g2._hx_index == 1) {
								var _g6 = _g2.left;
								var _g7 = _g2.label;
								var _g8 = _g2.right;
								if(_g2.color._hx_index == 0) {
									if(_g6._hx_index == 1) {
										if(_g6.color._hx_index == 0) {
											var a = _g;
											var b = _g6.left;
											var y = _g6.label;
											var c = _g6.right;
											var z = _g7;
											var d = _g8;
											var x = _g1;
											return stx_ds_RedBlackTreeSum.Node(stx_RedBlackSum.Red,stx_ds_RedBlackTreeSum.Node(stx_RedBlackSum.Black,a,x,b),y,stx_ds_RedBlackTreeSum.Node(stx_RedBlackSum.Black,c,z,d));
										} else if(_g8._hx_index == 1) {
											if(_g8.color._hx_index == 0) {
												var a = _g;
												var b = _g6;
												var c = _g8.left;
												var z = _g8.label;
												var d = _g8.right;
												var y = _g7;
												var x = _g1;
												return stx_ds_RedBlackTreeSum.Node(stx_RedBlackSum.Red,stx_ds_RedBlackTreeSum.Node(stx_RedBlackSum.Black,a,x,b),y,stx_ds_RedBlackTreeSum.Node(stx_RedBlackSum.Black,c,z,d));
											} else {
												return tree;
											}
										} else {
											return tree;
										}
									} else if(_g8._hx_index == 1) {
										if(_g8.color._hx_index == 0) {
											var a = _g;
											var b = _g6;
											var c = _g8.left;
											var z = _g8.label;
											var d = _g8.right;
											var y = _g7;
											var x = _g1;
											return stx_ds_RedBlackTreeSum.Node(stx_RedBlackSum.Red,stx_ds_RedBlackTreeSum.Node(stx_RedBlackSum.Black,a,x,b),y,stx_ds_RedBlackTreeSum.Node(stx_RedBlackSum.Black,c,z,d));
										} else {
											return tree;
										}
									} else {
										return tree;
									}
								} else {
									return tree;
								}
							} else {
								return tree;
							}
						} else if(_g2._hx_index == 1) {
							var _g6 = _g2.left;
							var _g7 = _g2.label;
							var _g8 = _g2.right;
							if(_g2.color._hx_index == 0) {
								if(_g6._hx_index == 1) {
									if(_g6.color._hx_index == 0) {
										var a = _g;
										var b = _g6.left;
										var y = _g6.label;
										var c = _g6.right;
										var z = _g7;
										var d = _g8;
										var x = _g1;
										return stx_ds_RedBlackTreeSum.Node(stx_RedBlackSum.Red,stx_ds_RedBlackTreeSum.Node(stx_RedBlackSum.Black,a,x,b),y,stx_ds_RedBlackTreeSum.Node(stx_RedBlackSum.Black,c,z,d));
									} else if(_g8._hx_index == 1) {
										if(_g8.color._hx_index == 0) {
											var a = _g;
											var b = _g6;
											var c = _g8.left;
											var z = _g8.label;
											var d = _g8.right;
											var y = _g7;
											var x = _g1;
											return stx_ds_RedBlackTreeSum.Node(stx_RedBlackSum.Red,stx_ds_RedBlackTreeSum.Node(stx_RedBlackSum.Black,a,x,b),y,stx_ds_RedBlackTreeSum.Node(stx_RedBlackSum.Black,c,z,d));
										} else {
											return tree;
										}
									} else {
										return tree;
									}
								} else if(_g8._hx_index == 1) {
									if(_g8.color._hx_index == 0) {
										var a = _g;
										var b = _g6;
										var c = _g8.left;
										var z = _g8.label;
										var d = _g8.right;
										var y = _g7;
										var x = _g1;
										return stx_ds_RedBlackTreeSum.Node(stx_RedBlackSum.Red,stx_ds_RedBlackTreeSum.Node(stx_RedBlackSum.Black,a,x,b),y,stx_ds_RedBlackTreeSum.Node(stx_RedBlackSum.Black,c,z,d));
									} else {
										return tree;
									}
								} else {
									return tree;
								}
							} else {
								return tree;
							}
						} else {
							return tree;
						}
					} else if(_g5._hx_index == 1) {
						if(_g5.color._hx_index == 0) {
							var a = _g3;
							var b = _g5.left;
							var y = _g5.label;
							var c = _g5.right;
							var x = _g4;
							var z = _g1;
							var d = _g2;
							return stx_ds_RedBlackTreeSum.Node(stx_RedBlackSum.Red,stx_ds_RedBlackTreeSum.Node(stx_RedBlackSum.Black,a,x,b),y,stx_ds_RedBlackTreeSum.Node(stx_RedBlackSum.Black,c,z,d));
						} else if(_g2._hx_index == 1) {
							var _g3 = _g2.left;
							var _g4 = _g2.label;
							var _g5 = _g2.right;
							if(_g2.color._hx_index == 0) {
								if(_g3._hx_index == 1) {
									if(_g3.color._hx_index == 0) {
										var a = _g;
										var b = _g3.left;
										var y = _g3.label;
										var c = _g3.right;
										var z = _g4;
										var d = _g5;
										var x = _g1;
										return stx_ds_RedBlackTreeSum.Node(stx_RedBlackSum.Red,stx_ds_RedBlackTreeSum.Node(stx_RedBlackSum.Black,a,x,b),y,stx_ds_RedBlackTreeSum.Node(stx_RedBlackSum.Black,c,z,d));
									} else if(_g5._hx_index == 1) {
										if(_g5.color._hx_index == 0) {
											var a = _g;
											var b = _g3;
											var c = _g5.left;
											var z = _g5.label;
											var d = _g5.right;
											var y = _g4;
											var x = _g1;
											return stx_ds_RedBlackTreeSum.Node(stx_RedBlackSum.Red,stx_ds_RedBlackTreeSum.Node(stx_RedBlackSum.Black,a,x,b),y,stx_ds_RedBlackTreeSum.Node(stx_RedBlackSum.Black,c,z,d));
										} else {
											return tree;
										}
									} else {
										return tree;
									}
								} else if(_g5._hx_index == 1) {
									if(_g5.color._hx_index == 0) {
										var a = _g;
										var b = _g3;
										var c = _g5.left;
										var z = _g5.label;
										var d = _g5.right;
										var y = _g4;
										var x = _g1;
										return stx_ds_RedBlackTreeSum.Node(stx_RedBlackSum.Red,stx_ds_RedBlackTreeSum.Node(stx_RedBlackSum.Black,a,x,b),y,stx_ds_RedBlackTreeSum.Node(stx_RedBlackSum.Black,c,z,d));
									} else {
										return tree;
									}
								} else {
									return tree;
								}
							} else {
								return tree;
							}
						} else {
							return tree;
						}
					} else if(_g2._hx_index == 1) {
						var _g3 = _g2.left;
						var _g4 = _g2.label;
						var _g5 = _g2.right;
						if(_g2.color._hx_index == 0) {
							if(_g3._hx_index == 1) {
								if(_g3.color._hx_index == 0) {
									var a = _g;
									var b = _g3.left;
									var y = _g3.label;
									var c = _g3.right;
									var z = _g4;
									var d = _g5;
									var x = _g1;
									return stx_ds_RedBlackTreeSum.Node(stx_RedBlackSum.Red,stx_ds_RedBlackTreeSum.Node(stx_RedBlackSum.Black,a,x,b),y,stx_ds_RedBlackTreeSum.Node(stx_RedBlackSum.Black,c,z,d));
								} else if(_g5._hx_index == 1) {
									if(_g5.color._hx_index == 0) {
										var a = _g;
										var b = _g3;
										var c = _g5.left;
										var z = _g5.label;
										var d = _g5.right;
										var y = _g4;
										var x = _g1;
										return stx_ds_RedBlackTreeSum.Node(stx_RedBlackSum.Red,stx_ds_RedBlackTreeSum.Node(stx_RedBlackSum.Black,a,x,b),y,stx_ds_RedBlackTreeSum.Node(stx_RedBlackSum.Black,c,z,d));
									} else {
										return tree;
									}
								} else {
									return tree;
								}
							} else if(_g5._hx_index == 1) {
								if(_g5.color._hx_index == 0) {
									var a = _g;
									var b = _g3;
									var c = _g5.left;
									var z = _g5.label;
									var d = _g5.right;
									var y = _g4;
									var x = _g1;
									return stx_ds_RedBlackTreeSum.Node(stx_RedBlackSum.Red,stx_ds_RedBlackTreeSum.Node(stx_RedBlackSum.Black,a,x,b),y,stx_ds_RedBlackTreeSum.Node(stx_RedBlackSum.Black,c,z,d));
								} else {
									return tree;
								}
							} else {
								return tree;
							}
						} else {
							return tree;
						}
					} else {
						return tree;
					}
				} else if(_g2._hx_index == 1) {
					var _g3 = _g2.left;
					var _g4 = _g2.label;
					var _g5 = _g2.right;
					if(_g2.color._hx_index == 0) {
						if(_g3._hx_index == 1) {
							if(_g3.color._hx_index == 0) {
								var a = _g;
								var b = _g3.left;
								var y = _g3.label;
								var c = _g3.right;
								var z = _g4;
								var d = _g5;
								var x = _g1;
								return stx_ds_RedBlackTreeSum.Node(stx_RedBlackSum.Red,stx_ds_RedBlackTreeSum.Node(stx_RedBlackSum.Black,a,x,b),y,stx_ds_RedBlackTreeSum.Node(stx_RedBlackSum.Black,c,z,d));
							} else if(_g5._hx_index == 1) {
								if(_g5.color._hx_index == 0) {
									var a = _g;
									var b = _g3;
									var c = _g5.left;
									var z = _g5.label;
									var d = _g5.right;
									var y = _g4;
									var x = _g1;
									return stx_ds_RedBlackTreeSum.Node(stx_RedBlackSum.Red,stx_ds_RedBlackTreeSum.Node(stx_RedBlackSum.Black,a,x,b),y,stx_ds_RedBlackTreeSum.Node(stx_RedBlackSum.Black,c,z,d));
								} else {
									return tree;
								}
							} else {
								return tree;
							}
						} else if(_g5._hx_index == 1) {
							if(_g5.color._hx_index == 0) {
								var a = _g;
								var b = _g3;
								var c = _g5.left;
								var z = _g5.label;
								var d = _g5.right;
								var y = _g4;
								var x = _g1;
								return stx_ds_RedBlackTreeSum.Node(stx_RedBlackSum.Red,stx_ds_RedBlackTreeSum.Node(stx_RedBlackSum.Black,a,x,b),y,stx_ds_RedBlackTreeSum.Node(stx_RedBlackSum.Black,c,z,d));
							} else {
								return tree;
							}
						} else {
							return tree;
						}
					} else {
						return tree;
					}
				} else {
					return tree;
				}
			} else if(_g2._hx_index == 1) {
				var _g3 = _g2.left;
				var _g4 = _g2.label;
				var _g5 = _g2.right;
				if(_g2.color._hx_index == 0) {
					if(_g3._hx_index == 1) {
						if(_g3.color._hx_index == 0) {
							var a = _g;
							var b = _g3.left;
							var y = _g3.label;
							var c = _g3.right;
							var z = _g4;
							var d = _g5;
							var x = _g1;
							return stx_ds_RedBlackTreeSum.Node(stx_RedBlackSum.Red,stx_ds_RedBlackTreeSum.Node(stx_RedBlackSum.Black,a,x,b),y,stx_ds_RedBlackTreeSum.Node(stx_RedBlackSum.Black,c,z,d));
						} else if(_g5._hx_index == 1) {
							if(_g5.color._hx_index == 0) {
								var a = _g;
								var b = _g3;
								var c = _g5.left;
								var z = _g5.label;
								var d = _g5.right;
								var y = _g4;
								var x = _g1;
								return stx_ds_RedBlackTreeSum.Node(stx_RedBlackSum.Red,stx_ds_RedBlackTreeSum.Node(stx_RedBlackSum.Black,a,x,b),y,stx_ds_RedBlackTreeSum.Node(stx_RedBlackSum.Black,c,z,d));
							} else {
								return tree;
							}
						} else {
							return tree;
						}
					} else if(_g5._hx_index == 1) {
						if(_g5.color._hx_index == 0) {
							var a = _g;
							var b = _g3;
							var c = _g5.left;
							var z = _g5.label;
							var d = _g5.right;
							var y = _g4;
							var x = _g1;
							return stx_ds_RedBlackTreeSum.Node(stx_RedBlackSum.Red,stx_ds_RedBlackTreeSum.Node(stx_RedBlackSum.Black,a,x,b),y,stx_ds_RedBlackTreeSum.Node(stx_RedBlackSum.Black,c,z,d));
						} else {
							return tree;
						}
					} else {
						return tree;
					}
				} else {
					return tree;
				}
			} else {
				return tree;
			}
		} else {
			return tree;
		}
	} else {
		return tree;
	}
};
stx_ds_RedBlackTreeLift.toString = function(tree) {
	var rec = null;
	rec = function(tree,ins) {
		if(ins == null) {
			ins = "  ";
		}
		var nins = "" + ins + "  ";
		switch(tree._hx_index) {
		case 0:
			return "";
		case 1:
			var colour = tree.color;
			var left = tree.left;
			var label = tree.label;
			var right = tree.right;
			var c = colour == stx_RedBlackSum.Red ? "r" : "b";
			var l = rec(left,nins);
			var r = rec(right,nins);
			return "(" + c + ":" + Std.string(label) + ")\n" + ins + "<-:" + l + "\n" + ins + "->:" + r;
		}
	};
	return "\n" + rec(tree);
};
stx_ds_RedBlackTreeLift.iterator = function(tree) {
	var recurse = null;
	recurse = function(head,stack) {
		switch(head._hx_index) {
		case 0:
			if(stack.length == 0) {
				var head1 = stx_ds_RedBlackTreeSum.Leaf;
				var stack1 = [];
				return stx_fp_LazyStream.make(stx_fp_LazyStreamTrigger.fromFn(function() {
					return recurse(head1,stack1);
				}),haxe_ds_Option.None);
			} else {
				var arr = stack;
				var recurse1 = recurse;
				var self = stx_lift_ArrayLift.head(arr);
				var recurse2;
				if(self._hx_index == 0) {
					var v = self.v;
					recurse2 = v;
				} else {
					recurse2 = stx_ds_RedBlackTreeSum.Leaf;
				}
				return recurse1(recurse2,stx_lift_ArrayLift.tail(arr));
			}
			break;
		case 1:
			var _g = head.color;
			var l = head.left;
			var v = head.label;
			var r = head.right;
			var arr = stack;
			var head = l;
			var stack = stx_lift_ArrayLift.cons(arr,r);
			return stx_fp_LazyStream.make(stx_fp_LazyStreamTrigger.fromFn(function() {
				return recurse(head,stack);
			}),haxe_ds_Option.Some(v));
		}
	};
	var val = recurse(tree,[]);
	return { next : function() {
		var res = stx_fp_LazyStream.reply(val);
		var self = stx_nano_CoupleLift.fst(res);
		var v;
		if(self._hx_index == 0) {
			var v1 = self.v;
			v = v1;
		} else {
			v = null;
		}
		val = stx_nano_CoupleLift.snd(res).next();
		return v;
	}, hasNext : function() {
		var res = stx_fp_LazyStream.reply(val);
		var self = stx_pico_OptionLift.map(stx_nano_CoupleLift.fst(res),function(_) {
			return true;
		});
		if(self._hx_index == 0) {
			var v = self.v;
			return v;
		} else {
			return false;
		}
	}};
};
stx_ds_RedBlackTreeLift.size = function(self) {
	return stx_nano_IterLift.lfold({ iterator : function() {
		return $iterator(stx_ds_RedBlackTreeLift)(self);
	}},function(n,m) {
		return m++;
	},0);
};
var stx_ds_RedBlackTree = {};
stx_ds_RedBlackTree._new = function(self) {
	var this1 = self;
	return this1;
};
var stx_ds_kary_$tree_KaryTreeZip = {};
stx_ds_kary_$tree_KaryTreeZip.unit = function() {
	return stx_ds_kary_$tree_KaryTreeZip.lift(stx_ds_LinkedListSum.Cons(stx_ds_KaryTreeSum.Nought,stx_ds_LinkedListSum.Nil));
};
stx_ds_kary_$tree_KaryTreeZip.lift = function(self) {
	return stx_ds_kary_$tree_KaryTreeZip._new(self);
};
stx_ds_kary_$tree_KaryTreeZip._new = function(self) {
	var this1 = self;
	return this1;
};
stx_ds_kary_$tree_KaryTreeZip.fromKaryTree = function(v) {
	return stx_ds_kary_$tree_KaryTreeZip._new(stx_ds_LinkedListSum.Cons(v,stx_ds_LinkedListSum.Nil));
};
stx_ds_kary_$tree_KaryTreeZip.isRoot = function(this1) {
	if(this1._hx_index == 1) {
		if(this1.tail._hx_index == 0) {
			var x = this1.head;
			return true;
		} else {
			return false;
		}
	} else {
		return false;
	}
};
stx_ds_kary_$tree_KaryTreeZip.end = function(this1) {
	return stx_ds_kary_$tree_KaryTreeZip.lift(stx_ds_LinkedListSum.Cons(stx_ds_KaryTreeSum.Nought,this1));
};
stx_ds_kary_$tree_KaryTreeZip.has_right = function(this1) {
	var _g = stx_ds_kary_$tree_KaryTreeZip.prj(stx_ds_kary_$tree_KaryTreeZip.right(this1));
	if(_g._hx_index == 1) {
		var _g1 = _g.tail;
		if(_g.head._hx_index == 0) {
			return false;
		} else {
			return true;
		}
	} else {
		return true;
	}
};
stx_ds_kary_$tree_KaryTreeZip.right = function(this1) {
	if(this1._hx_index == 1) {
		var _g = this1.tail;
		if(_g._hx_index == 1) {
			var _g1 = _g.head;
			if(_g1._hx_index == 1) {
				var v = _g1.x;
				var siblings = _g1.xs;
				var previous = _g.tail;
				var cursor = this1.head;
				var _g = stx_ds_kary_$tree_KaryTreeZip.find_head(this1,siblings,cursor);
				if(_g._hx_index == 1) {
					var _g1 = _g.head;
					var _g1 = _g.tail;
					if(_g1._hx_index == 1) {
						var _g = _g1.tail;
						var right = _g1.head;
						var tree = stx_ds_KaryTreeSum.Branch(v,siblings);
						var o = stx_ds_kary_$tree_KaryTreeZip._new(stx_ds_LinkedListSum.Cons(right,stx_ds_LinkedListSum.Cons(tree,previous)));
						return o;
					} else {
						var tree = stx_ds_KaryTreeSum.Branch(v,siblings);
						return stx_ds_kary_$tree_KaryTreeZip.lift(stx_ds_LinkedListSum.Cons(stx_ds_KaryTreeSum.Nought,stx_ds_LinkedListSum.Cons(tree,previous)));
					}
				} else {
					var tree = stx_ds_KaryTreeSum.Branch(v,siblings);
					return stx_ds_kary_$tree_KaryTreeZip.lift(stx_ds_LinkedListSum.Cons(stx_ds_KaryTreeSum.Nought,stx_ds_LinkedListSum.Cons(tree,previous)));
				}
			} else {
				return stx_ds_kary_$tree_KaryTreeZip.end(this1);
			}
		} else {
			return stx_ds_kary_$tree_KaryTreeZip.end(this1);
		}
	} else {
		return stx_ds_kary_$tree_KaryTreeZip.end(this1);
	}
};
stx_ds_kary_$tree_KaryTreeZip.left = function(this1) {
	if(this1._hx_index == 1) {
		var _g = this1.tail;
		if(_g._hx_index == 1) {
			var _g1 = _g.head;
			if(_g1._hx_index == 1) {
				var v = _g1.x;
				var siblings = _g1.xs;
				var previous = _g.tail;
				var cursor = this1.head;
				var _g = stx_ds_kary_$tree_KaryTreeZip.find_left(this1,siblings,cursor);
				if(_g._hx_index == 1) {
					var _g1 = _g.tail;
					var left = _g.head;
					var tree = stx_ds_KaryTreeSum.Branch(v,siblings);
					return stx_ds_kary_$tree_KaryTreeZip.lift(stx_ds_LinkedListSum.Cons(left,stx_ds_LinkedListSum.Cons(tree,previous)));
				} else {
					var tree = stx_ds_KaryTreeSum.Branch(v,siblings);
					return stx_ds_kary_$tree_KaryTreeZip.lift(stx_ds_LinkedListSum.Cons(stx_ds_KaryTreeSum.Nought,stx_ds_LinkedListSum.Cons(tree,previous)));
				}
			} else {
				return stx_ds_kary_$tree_KaryTreeZip.lift(stx_ds_LinkedListSum.Cons(stx_ds_KaryTreeSum.Nought,this1));
			}
		} else {
			return stx_ds_kary_$tree_KaryTreeZip.lift(stx_ds_LinkedListSum.Cons(stx_ds_KaryTreeSum.Nought,this1));
		}
	} else {
		return stx_ds_kary_$tree_KaryTreeZip.lift(stx_ds_LinkedListSum.Cons(stx_ds_KaryTreeSum.Nought,this1));
	}
};
stx_ds_kary_$tree_KaryTreeZip.up = function(this1) {
	var o;
	if(this1._hx_index == 1) {
		var _g = this1.tail;
		if(_g._hx_index == 1) {
			var parent = _g.head;
			var rest = _g.tail;
			var cursor = this1.head;
			o = stx_ds_kary_$tree_KaryTreeZip.lift(stx_ds_LinkedListSum.Cons(parent,rest));
		} else {
			o = this1;
		}
	} else {
		o = this1;
	}
	return o;
};
stx_ds_kary_$tree_KaryTreeZip.down = function(this1) {
	if(this1._hx_index == 1) {
		var _g = this1.head;
		var _g1 = this1.tail;
		if(_g._hx_index == 1) {
			var _g1 = _g.x;
			var _g1 = _g.xs;
			if(_g1._hx_index == 1) {
				var _g = _g1.tail;
				var firstChild = _g1.head;
				return stx_ds_kary_$tree_KaryTreeZip.lift(stx_ds_LinkedListSum.Cons(firstChild,this1));
			} else {
				return stx_ds_kary_$tree_KaryTreeZip.lift(stx_ds_LinkedListSum.Cons(stx_ds_KaryTreeSum.Nought,this1));
			}
		} else {
			return stx_ds_kary_$tree_KaryTreeZip.lift(stx_ds_LinkedListSum.Cons(stx_ds_KaryTreeSum.Nought,this1));
		}
	} else {
		return stx_ds_kary_$tree_KaryTreeZip.lift(stx_ds_LinkedListSum.Cons(stx_ds_KaryTreeSum.Nought,this1));
	}
};
stx_ds_kary_$tree_KaryTreeZip.has_down = function(this1) {
	return stx_ds_LinkedList.is_defined(stx_ds_KaryTree.children(stx_ds_kary_$tree_KaryTreeZip.toTree(this1)));
};
stx_ds_kary_$tree_KaryTreeZip.value = function(this1) {
	if(this1._hx_index == 1) {
		var _g = this1.head;
		var _g1 = this1.tail;
		if(_g._hx_index == 1) {
			var _g1 = _g.xs;
			var v = _g.x;
			return v;
		} else {
			return null;
		}
	} else {
		return null;
	}
};
stx_ds_kary_$tree_KaryTreeZip.children = function(this1) {
	return stx_ds_KaryTree.children(stx_ds_kary_$tree_KaryTreeZip.toTree(this1));
};
stx_ds_kary_$tree_KaryTreeZip.root = function(this1) {
	return stx_ds_kary_$tree_KaryTreeZip.lift(stx_ds_LinkedListSum.Cons(stx_ds_LinkedList.last(this1),stx_ds_LinkedListSum.Nil));
};
stx_ds_kary_$tree_KaryTreeZip.toTree = function(this1) {
	return stx_ds_LinkedList.last(this1);
};
stx_ds_kary_$tree_KaryTreeZip.add_child = function(this1,v) {
	var new_tree = stx_ds_KaryTreeSum.Branch(v,stx_ds_LinkedListSum.Nil);
	return stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,new_tree,stx_ds_kary_$tree_KaryTreeZip.add_child_node(this1,new_tree));
};
stx_ds_kary_$tree_KaryTreeZip.add_child_node = function(this1,v) {
	if(this1._hx_index == 1) {
		var _g = this1.head;
		if(_g._hx_index == 1) {
			var node = _g.x;
			var children = _g.xs;
			var rest = this1.tail;
			var new_node = stx_ds_KaryTreeSum.Branch(node,stx_ds_LinkedList.cons(children,v));
			return stx_ds_kary_$tree_KaryTreeZip.update(this1,new_node);
		} else {
			return stx_ds_kary_$tree_KaryTreeZip.lift(stx_ds_LinkedListSum.Cons(v,stx_ds_LinkedListSum.Nil));
		}
	} else {
		return stx_ds_kary_$tree_KaryTreeZip.lift(stx_ds_LinkedListSum.Cons(v,stx_ds_LinkedListSum.Nil));
	}
};
stx_ds_kary_$tree_KaryTreeZip.rem_child_node = function(this1,v) {
	if(this1._hx_index == 1) {
		var _g = this1.head;
		var _g1 = this1.tail;
		if(_g._hx_index == 1) {
			var _g2 = _g.x;
			var _g3 = _g.xs;
			var node = _g2;
			var children = _g3;
			var rest = _g1;
			if(children == null) {
				return this1;
			} else {
				var node = _g2;
				var children = _g3;
				var rest = _g1;
				children = stx_ds_LinkedList.fold(children,function(next,memo) {
					if(stx_ds_kary_$tree_KaryTreeZip.tree_equals(v,next)) {
						return memo;
					} else {
						return stx_ds_LinkedListSum.Cons(next,memo);
					}
				},stx_ds_LinkedListSum.Nil);
				var new_node = stx_ds_KaryTreeSum.Branch(node,children);
				return stx_ds_kary_$tree_KaryTreeZip.update(this1,new_node);
			}
		} else {
			return this1;
		}
	} else {
		return this1;
	}
};
stx_ds_kary_$tree_KaryTreeZip.select_child = function(this1,new_head) {
	if(this1._hx_index == 1) {
		var head = this1.head;
		var t = this1.tail;
		return stx_ds_kary_$tree_KaryTreeZip.lift(stx_ds_LinkedListSum.Cons(new_head,t));
	} else {
		return stx_ds_kary_$tree_KaryTreeZip.lift(stx_ds_LinkedListSum.Cons(new_head,stx_ds_LinkedListSum.Nil));
	}
};
stx_ds_kary_$tree_KaryTreeZip.search_child = function(this1,fn) {
	return stx_ds_KaryTreeLift.search_child(stx_ds_kary_$tree_KaryTreeZip.toTree(this1),fn);
};
stx_ds_kary_$tree_KaryTreeZip.update = function(this1,replace) {
	return stx_ds_kary_$tree_KaryTreeZips.update(this1,replace);
};
stx_ds_kary_$tree_KaryTreeZip.selefctDF = function(this1,fn) {
	var head = stx_ds_LinkedList.head(this1);
	var path = stx_ds_LinkedListSum.Nil;
	var handler = null;
	handler = function(node) {
		if(node == null) {
			return false;
		}
		path = stx_ds_LinkedList.cons(path,node);
		if(node._hx_index == 0) {
			return false;
		}
		if(fn(stx_ds_KaryTree.value(node))) {
			return true;
		} else {
			var children = stx_ds_KaryTree.children(node);
			var node = $iterator(stx_ds_LinkedList)(children);
			while(node.hasNext()) {
				var node1 = node.next();
				if(!handler(node1)) {
					path = stx_ds_LinkedList.tail(path);
				} else {
					return true;
				}
			}
			return false;
		}
	};
	handler(head);
	if(path == stx_ds_LinkedListSum.Nil) {
		return stx_ds_LinkedList.concat(this1,stx_ds_LinkedList.cons(path,stx_ds_KaryTreeSum.Nought));
	} else {
		return stx_ds_LinkedList.concat(stx_ds_LinkedList.tail(this1),path);
	}
};
stx_ds_kary_$tree_KaryTreeZip.find_left = function(this1,list,cursor) {
	var handler = null;
	handler = function(ls,c) {
		if(ls._hx_index == 1) {
			var _g = ls.head;
			var _g1 = ls.tail;
			if(_g1._hx_index == 1) {
				var y = _g1.head;
				var ys = _g1.tail;
				var x = _g;
				if(stx_ds_kary_$tree_KaryTreeZip.tree_equals(c,y)) {
					return stx_ds_LinkedListSum.Cons(x,ys);
				} else {
					var xs = _g1;
					var x = _g;
					return handler(xs,c);
				}
			} else {
				var xs = _g1;
				var x = _g;
				return handler(xs,c);
			}
		} else {
			return stx_ds_LinkedListSum.Nil;
		}
	};
	return handler(list,cursor);
};
stx_ds_kary_$tree_KaryTreeZip.find_head = function(this1,list,cursor) {
	var handler = null;
	handler = function(ls,c) {
		if(ls._hx_index == 1) {
			var _g = ls.head;
			var _g1 = ls.tail;
			var x = _g;
			var xs = _g1;
			if(stx_ds_kary_$tree_KaryTreeZip.tree_equals(c,x)) {
				return stx_ds_LinkedListSum.Cons(x,xs);
			} else {
				var x = _g;
				var xs = _g1;
				return handler(xs,c);
			}
		} else {
			return stx_ds_LinkedListSum.Nil;
		}
	};
	return handler(list,cursor);
};
stx_ds_kary_$tree_KaryTreeZip.tree_equals = function(treel,treer) {
	return treel == treer;
};
stx_ds_kary_$tree_KaryTreeZip.prj = function(this1) {
	return this1;
};
var stx_ds_kary_$tree_KaryTreeZips = function() { };
$hxClasses["stx.ds.kary_tree.KaryTreeZips"] = stx_ds_kary_$tree_KaryTreeZips;
stx_ds_kary_$tree_KaryTreeZips.__name__ = "stx.ds.kary_tree.KaryTreeZips";
stx_ds_kary_$tree_KaryTreeZips.update = function(zip,replace) {
	var changes = stx_ds_LinkedList.fold(zip,function(next,memo) {
		if(memo._hx_index == 0) {
			var ls = stx_ds_LinkedList.cons(stx_ds_LinkedList.unit(),stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,next,replace));
			return ls;
		} else {
			switch(next._hx_index) {
			case 0:
				return memo;
			case 1:
				var memo1 = memo;
				var v = next.x;
				var rst = next.xs;
				if(rst == null) {
					rst = stx_ds_LinkedListSum.Nil;
				}
				var leaves = stx_ds_LinkedList.map(rst,function(x) {
					var shouldChange = x == stx_nano_CoupleLift.fst(stx_ds_LinkedList.head(memo1));
					if(shouldChange) {
						return stx_nano_CoupleLift.snd(stx_ds_LinkedList.head(memo1));
					} else {
						return x;
					}
				});
				var branch = stx_ds_KaryTreeSum.Branch(v,leaves);
				var o = stx_ds_LinkedList.cons(memo1,stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,next,branch));
				return o;
			}
		}
	},stx_ds_LinkedListSum.Nil);
	var handler = null;
	handler = function(next) {
		if(next._hx_index == 1) {
			var x = next.head;
			var xs = next.tail;
			var ls = handler(xs);
			return stx_ds_LinkedList.concat(ls,stx_ds_LinkedListSum.Cons(stx_nano_CoupleLift.snd(x),stx_ds_LinkedListSum.Nil));
		} else {
			return stx_ds_LinkedListSum.Nil;
		}
	};
	var o = handler(changes);
	return stx_ds_kary_$tree_KaryTreeZip._new(o);
};
var stx_fail_ASysFailureSum = $hxEnums["stx.fail.ASysFailureSum"] = { __ename__:"stx.fail.ASysFailureSum",__constructs__:null
	,E_ASys_UndefinedHomePath: {_hx_name:"E_ASys_UndefinedHomePath",_hx_index:0,__enum__:"stx.fail.ASysFailureSum",toString:$estr}
	,E_ASys_UnknownDistroName: {_hx_name:"E_ASys_UnknownDistroName",_hx_index:1,__enum__:"stx.fail.ASysFailureSum",toString:$estr}
	,E_ASys_EnvironmentVariablesInaccessible: ($_=function(name) { return {_hx_index:2,name:name,__enum__:"stx.fail.ASysFailureSum",toString:$estr}; },$_._hx_name="E_ASys_EnvironmentVariablesInaccessible",$_.__params__ = ["name"],$_)
	,E_ASys_SubSystem: ($_=function(err) { return {_hx_index:3,err:err,__enum__:"stx.fail.ASysFailureSum",toString:$estr}; },$_._hx_name="E_ASys_SubSystem",$_.__params__ = ["err"],$_)
	,E_ASys_Fs: ($_=function(fs) { return {_hx_index:4,fs:fs,__enum__:"stx.fail.ASysFailureSum",toString:$estr}; },$_._hx_name="E_ASys_Fs",$_.__params__ = ["fs"],$_)
};
stx_fail_ASysFailureSum.__constructs__ = [stx_fail_ASysFailureSum.E_ASys_UndefinedHomePath,stx_fail_ASysFailureSum.E_ASys_UnknownDistroName,stx_fail_ASysFailureSum.E_ASys_EnvironmentVariablesInaccessible,stx_fail_ASysFailureSum.E_ASys_SubSystem,stx_fail_ASysFailureSum.E_ASys_Fs];
var stx_fail_ASysFailure = {};
stx_fail_ASysFailure._new = function(self) {
	var this1 = self;
	return this1;
};
stx_fail_ASysFailure.lift = function(self) {
	return stx_fail_ASysFailure._new(self);
};
stx_fail_ASysFailure.prj = function(this1) {
	return this1;
};
stx_fail_ASysFailure.get_self = function(this1) {
	return stx_fail_ASysFailure.lift(this1);
};
stx_fail_ASysFailure.fromFsFailure = function(self) {
	return stx_fail_ASysFailureSum.E_ASys_Fs(self);
};
stx_fail_ASysFailure.fromPathFailure = function(self) {
	return stx_fail_ASysFailureSum.E_ASys_Fs(stx_fail_FsFailureSum.E_Fs_Path(self));
};
var stx_fail_AssertFailure = $hxEnums["stx.fail.AssertFailure"] = { __ename__:"stx.fail.AssertFailure",__constructs__:null
	,PredicateFailed: ($_=function(type,valueN,value0) { return {_hx_index:0,type:type,valueN:valueN,value0:value0,__enum__:"stx.fail.AssertFailure",toString:$estr}; },$_._hx_name="PredicateFailed",$_.__params__ = ["type","valueN","value0"],$_)
};
stx_fail_AssertFailure.__constructs__ = [stx_fail_AssertFailure.PredicateFailed];
var stx_fail_ConfigFailureSum = $hxEnums["stx.fail.ConfigFailureSum"] = { __ename__:"stx.fail.ConfigFailureSum",__constructs__:null
	,E_Config: ($_=function(str) { return {_hx_index:0,str:str,__enum__:"stx.fail.ConfigFailureSum",toString:$estr}; },$_._hx_name="E_Config",$_.__params__ = ["str"],$_)
	,E_Config_Fs: ($_=function(data) { return {_hx_index:1,data:data,__enum__:"stx.fail.ConfigFailureSum",toString:$estr}; },$_._hx_name="E_Config_Fs",$_.__params__ = ["data"],$_)
};
stx_fail_ConfigFailureSum.__constructs__ = [stx_fail_ConfigFailureSum.E_Config,stx_fail_ConfigFailureSum.E_Config_Fs];
var stx_fail_ConfigFailure = {};
stx_fail_ConfigFailure._new = function(self) {
	var this1 = self;
	return this1;
};
stx_fail_ConfigFailure.lift = function(self) {
	return stx_fail_ConfigFailure._new(self);
};
stx_fail_ConfigFailure.prj = function(this1) {
	return this1;
};
stx_fail_ConfigFailure.get_self = function(this1) {
	return stx_fail_ConfigFailure.lift(this1);
};
stx_fail_ConfigFailure.fromFsFailure = function(self) {
	return stx_fail_ConfigFailure.lift(stx_fail_ConfigFailureSum.E_Config_Fs(self));
};
stx_fail_ConfigFailure.fromNoise = function(self) {
	return stx_fail_ConfigFailure.lift(stx_fail_ConfigFailureSum.E_Config("E_Config"));
};
var stx_fail__$Digest_DigestForeign = function(detail,code) {
	if(code == null) {
		code = -1;
	}
	stx_fail_Digest.call(this,"125cb1ae06784bb586e87ea8f57cdb6e",detail,code);
};
$hxClasses["stx.fail._Digest.DigestForeign"] = stx_fail__$Digest_DigestForeign;
stx_fail__$Digest_DigestForeign.__name__ = "stx.fail._Digest.DigestForeign";
stx_fail__$Digest_DigestForeign.__super__ = stx_fail_Digest;
stx_fail__$Digest_DigestForeign.prototype = $extend(stx_fail_Digest.prototype,{
	__class__: stx_fail__$Digest_DigestForeign
});
var stx_fail_ErrorLift = function() { };
$hxClasses["stx.fail.ErrorLift"] = stx_fail_ErrorLift;
stx_fail_ErrorLift.__name__ = "stx.fail.ErrorLift";
stx_fail_ErrorLift.digest_with = function(self,fn) {
	var tmp = stx_pico_OptionLift.map(self.get_data(),function(e) {
		return stx_fail_DeclineSum.INTERIOR(stx_fail_Digest.Foreign(fn(e)));
	});
	var tmp1 = self.get_next();
	var fn1 = fn;
	return stx_fail_Refuse.make(tmp,stx_pico_OptionLift.map(tmp1,function(self) {
		return stx_fail_ErrorLift.digest_with(self,fn1);
	}),self.get_pos());
};
var stx_fail_Error = {};
stx_fail_Error._new = function(self) {
	var this1 = self;
	return this1;
};
stx_fail_Error.lift = function(self) {
	return stx_fail_Error._new(self);
};
stx_fail_Error.make = function(data,next,pos) {
	return stx_fail_Error.lift(new stx_fail_term_Base(data,next,pos));
};
stx_fail_Error.prj = function(this1) {
	return this1;
};
stx_fail_Error.get_self = function(this1) {
	return stx_fail_Error.lift(this1);
};
stx_fail_Error.Remote = function(self,pos) {
	return new stx_fail_term_ErrorRemote(self,haxe_ds_Option.Some(pos)).toError();
};
stx_fail_Error.Unit = function() {
	return new stx_fail_term_Unit().toError();
};
stx_fail_Error.Caught = function(data,next,pos,exception) {
	return new stx_fail_term_Caught(data,next,pos,exception).toError();
};
stx_fail_Error.map = function(this1,fn) {
	return new stx_fail_term_MapAnon(this1,fn).toError();
};
stx_fail_Error.errate = function(this1,fn) {
	return new stx_fail_term_MapAnon(this1,fn).toError();
};
stx_fail_Error.errata = function(this1,fn) {
	return new stx_fail_term_ErrataAnon(this1,fn).toError();
};
stx_fail_Error.toIterable = function(this1) {
	return { iterator : $bind(this1,this1.iterator)};
};
stx_fail_Error.is_unit = function(this1) {
	if(!stx_pico_OptionLift.is_defined(this1.get_data()) && !stx_pico_OptionLift.is_defined(this1.get_pos())) {
		return !stx_pico_OptionLift.is_defined(this1.get_stack());
	} else {
		return false;
	}
};
function stx_fail_Error_map(self,fn) {
	if(self._hx_index == 0) {
		var tI = self.v;
		return haxe_ds_Option.Some(fn(tI));
	} else {
		return haxe_ds_Option.None;
	}
}
function stx_fail_Error_flat_map(self,fn) {
	if(self._hx_index == 0) {
		var n = self.v;
		return fn(n);
	} else {
		return haxe_ds_Option.None;
	}
}
var stx_fail_FsFailureSum = $hxEnums["stx.fail.FsFailureSum"] = { __ename__:"stx.fail.FsFailureSum",__constructs__:null
	,E_Fs_IsNotADirectory: {_hx_name:"E_Fs_IsNotADirectory",_hx_index:0,__enum__:"stx.fail.FsFailureSum",toString:$estr}
	,E_Fs_FileUnreadable: ($_=function(dyn) { return {_hx_index:1,dyn:dyn,__enum__:"stx.fail.FsFailureSum",toString:$estr}; },$_._hx_name="E_Fs_FileUnreadable",$_.__params__ = ["dyn"],$_)
	,E_Fs_FileUnwriteable: ($_=function(dyn) { return {_hx_index:2,dyn:dyn,__enum__:"stx.fail.FsFailureSum",toString:$estr}; },$_._hx_name="E_Fs_FileUnwriteable",$_.__params__ = ["dyn"],$_)
	,E_Fs_UnknownFSError: ($_=function(dyn) { return {_hx_index:3,dyn:dyn,__enum__:"stx.fail.FsFailureSum",toString:$estr}; },$_._hx_name="E_Fs_UnknownFSError",$_.__params__ = ["dyn"],$_)
	,E_Fs_FileNotFound: ($_=function(archive) { return {_hx_index:4,archive:archive,__enum__:"stx.fail.FsFailureSum",toString:$estr}; },$_._hx_name="E_Fs_FileNotFound",$_.__params__ = ["archive"],$_)
	,E_Fs_DirectoryNotFound: ($_=function(dir) { return {_hx_index:5,dir:dir,__enum__:"stx.fail.FsFailureSum",toString:$estr}; },$_._hx_name="E_Fs_DirectoryNotFound",$_.__params__ = ["dir"],$_)
	,E_Fs_AlreadyExists: {_hx_name:"E_Fs_AlreadyExists",_hx_index:6,__enum__:"stx.fail.FsFailureSum",toString:$estr}
	,E_Fs_CannotReadDirectory: {_hx_name:"E_Fs_CannotReadDirectory",_hx_index:7,__enum__:"stx.fail.FsFailureSum",toString:$estr}
	,E_Fs_CannotSetWorkingDirectory: ($_=function(target,details) { return {_hx_index:8,target:target,details:details,__enum__:"stx.fail.FsFailureSum",toString:$estr}; },$_._hx_name="E_Fs_CannotSetWorkingDirectory",$_.__params__ = ["target","details"],$_)
	,E_Fs_CannotCreate: ($_=function(path) { return {_hx_index:9,path:path,__enum__:"stx.fail.FsFailureSum",toString:$estr}; },$_._hx_name="E_Fs_CannotCreate",$_.__params__ = ["path"],$_)
	,E_Fs_Path: ($_=function(fp) { return {_hx_index:10,fp:fp,__enum__:"stx.fail.FsFailureSum",toString:$estr}; },$_._hx_name="E_Fs_Path",$_.__params__ = ["fp"],$_)
	,E_Fs_IsAlreadyRoot: {_hx_name:"E_Fs_IsAlreadyRoot",_hx_index:11,__enum__:"stx.fail.FsFailureSum",toString:$estr}
};
stx_fail_FsFailureSum.__constructs__ = [stx_fail_FsFailureSum.E_Fs_IsNotADirectory,stx_fail_FsFailureSum.E_Fs_FileUnreadable,stx_fail_FsFailureSum.E_Fs_FileUnwriteable,stx_fail_FsFailureSum.E_Fs_UnknownFSError,stx_fail_FsFailureSum.E_Fs_FileNotFound,stx_fail_FsFailureSum.E_Fs_DirectoryNotFound,stx_fail_FsFailureSum.E_Fs_AlreadyExists,stx_fail_FsFailureSum.E_Fs_CannotReadDirectory,stx_fail_FsFailureSum.E_Fs_CannotSetWorkingDirectory,stx_fail_FsFailureSum.E_Fs_CannotCreate,stx_fail_FsFailureSum.E_Fs_Path,stx_fail_FsFailureSum.E_Fs_IsAlreadyRoot];
var stx_fail_FsFailureLift = function() { };
$hxClasses["stx.fail.FsFailureLift"] = stx_fail_FsFailureLift;
stx_fail_FsFailureLift.__name__ = "stx.fail.FsFailureLift";
stx_fail_FsFailureLift.toASysFailure = function(self) {
	return stx_fail_ASysFailureSum.E_ASys_Fs(self);
};
var stx_fail_FsFailure = {};
stx_fail_FsFailure._new = function(self) {
	var this1 = self;
	return this1;
};
stx_fail_FsFailure.lift = function(self) {
	return stx_fail_FsFailure._new(self);
};
stx_fail_FsFailure.prj = function(this1) {
	return this1;
};
stx_fail_FsFailure.get_self = function(this1) {
	return stx_fail_FsFailure.lift(this1);
};
stx_fail_FsFailure.toASysFailure = function(this1) {
	return stx_fail_ASysFailureSum.E_ASys_Fs(this1);
};
stx_fail_FsFailure.fromPathFailure = function(self) {
	return stx_fail_FsFailureSum.E_Fs_Path(self);
};
stx_fail_FsFailure.fromPathParseFailure = function(self) {
	return stx_fail_FsFailureSum.E_Fs_Path(stx_fail_PathFailureSum.E_Path_PathParse(self));
};
var stx_fail_GFailure = $hxEnums["stx.fail.GFailure"] = { __ename__:"stx.fail.GFailure",__constructs__:null
	,E_G_NoTypeForIdent: ($_=function(string) { return {_hx_index:0,string:string,__enum__:"stx.fail.GFailure",toString:$estr}; },$_._hx_name="E_G_NoTypeForIdent",$_.__params__ = ["string"],$_)
};
stx_fail_GFailure.__constructs__ = [stx_fail_GFailure.E_G_NoTypeForIdent];
var stx_fail_IoFailureSum = $hxEnums["stx.fail.IoFailureSum"] = { __ename__:"stx.fail.IoFailureSum",__constructs__:null
	,E_Io_Subsystem: ($_=function(e) { return {_hx_index:0,e:e,__enum__:"stx.fail.IoFailureSum",toString:$estr}; },$_._hx_name="E_Io_Subsystem",$_.__params__ = ["e"],$_)
	,E_Io_TypeError: {_hx_name:"E_Io_TypeError",_hx_index:1,__enum__:"stx.fail.IoFailureSum",toString:$estr}
	,E_Io_SourceNotFound: {_hx_name:"E_Io_SourceNotFound",_hx_index:2,__enum__:"stx.fail.IoFailureSum",toString:$estr}
	,E_Io_EndOfFile: {_hx_name:"E_Io_EndOfFile",_hx_index:3,__enum__:"stx.fail.IoFailureSum",toString:$estr}
	,E_Io_InvalidString: {_hx_name:"E_Io_InvalidString",_hx_index:4,__enum__:"stx.fail.IoFailureSum",toString:$estr}
	,E_Io_UnsupportedValue: {_hx_name:"E_Io_UnsupportedValue",_hx_index:5,__enum__:"stx.fail.IoFailureSum",toString:$estr}
	,E_Io_Digest: ($_=function(digest) { return {_hx_index:6,digest:digest,__enum__:"stx.fail.IoFailureSum",toString:$estr}; },$_._hx_name="E_Io_Digest",$_.__params__ = ["digest"],$_)
	,E_Io_Exhausted: ($_=function(retry,no_value_found) { return {_hx_index:7,retry:retry,no_value_found:no_value_found,__enum__:"stx.fail.IoFailureSum",toString:$estr}; },$_._hx_name="E_Io_Exhausted",$_.__params__ = ["retry","no_value_found"],$_)
};
stx_fail_IoFailureSum.__constructs__ = [stx_fail_IoFailureSum.E_Io_Subsystem,stx_fail_IoFailureSum.E_Io_TypeError,stx_fail_IoFailureSum.E_Io_SourceNotFound,stx_fail_IoFailureSum.E_Io_EndOfFile,stx_fail_IoFailureSum.E_Io_InvalidString,stx_fail_IoFailureSum.E_Io_UnsupportedValue,stx_fail_IoFailureSum.E_Io_Digest,stx_fail_IoFailureSum.E_Io_Exhausted];
stx_fail_IoFailureSum.__meta__ = { fields : { E_Io_EndOfFile : { 'stx.fail.of' : ["Eof"]}, E_Io_InvalidString : { 'stx.fail.of' : ["Invalid string"]}}};
var stx_fail_IoFailure = {};
stx_fail_IoFailure._new = function(self) {
	var this1 = self;
	return this1;
};
stx_fail_IoFailure.lift = function(self) {
	return stx_fail_IoFailure._new(self);
};
stx_fail_IoFailure.prj = function(this1) {
	return this1;
};
stx_fail_IoFailure.get_self = function(this1) {
	return stx_fail_IoFailure.lift(this1);
};
var stx_fail_LogFailure = $hxEnums["stx.fail.LogFailure"] = { __ename__:"stx.fail.LogFailure",__constructs__:null
	,E_Log_UnderLogLevel: {_hx_name:"E_Log_UnderLogLevel",_hx_index:0,__enum__:"stx.fail.LogFailure",toString:$estr}
	,E_Log_SourceNotInPackage: ($_=function(source,dir) { return {_hx_index:1,source:source,dir:dir,__enum__:"stx.fail.LogFailure",toString:$estr}; },$_._hx_name="E_Log_SourceNotInPackage",$_.__params__ = ["source","dir"],$_)
	,E_Log_NotLine: ($_=function(n) { return {_hx_index:2,n:n,__enum__:"stx.fail.LogFailure",toString:$estr}; },$_._hx_name="E_Log_NotLine",$_.__params__ = ["n"],$_)
	,E_Log_NotOfRange: ($_=function(l,r) { return {_hx_index:3,l:l,r:r,__enum__:"stx.fail.LogFailure",toString:$estr}; },$_._hx_name="E_Log_NotOfRange",$_.__params__ = ["l","r"],$_)
	,E_Log_NotInMethod: ($_=function(str) { return {_hx_index:4,str:str,__enum__:"stx.fail.LogFailure",toString:$estr}; },$_._hx_name="E_Log_NotInMethod",$_.__params__ = ["str"],$_)
	,E_Log_DoesNotContainTag: ($_=function(tag) { return {_hx_index:5,tag:tag,__enum__:"stx.fail.LogFailure",toString:$estr}; },$_._hx_name="E_Log_DoesNotContainTag",$_.__params__ = ["tag"],$_)
	,E_Log_Not: {_hx_name:"E_Log_Not",_hx_index:6,__enum__:"stx.fail.LogFailure",toString:$estr}
	,E_Log_LosesRace: {_hx_name:"E_Log_LosesRace",_hx_index:7,__enum__:"stx.fail.LogFailure",toString:$estr}
	,E_Log_Default: ($_=function(data) { return {_hx_index:8,data:data,__enum__:"stx.fail.LogFailure",toString:$estr}; },$_._hx_name="E_Log_Default",$_.__params__ = ["data"],$_)
	,E_Log_Zero: {_hx_name:"E_Log_Zero",_hx_index:9,__enum__:"stx.fail.LogFailure",toString:$estr}
};
stx_fail_LogFailure.__constructs__ = [stx_fail_LogFailure.E_Log_UnderLogLevel,stx_fail_LogFailure.E_Log_SourceNotInPackage,stx_fail_LogFailure.E_Log_NotLine,stx_fail_LogFailure.E_Log_NotOfRange,stx_fail_LogFailure.E_Log_NotInMethod,stx_fail_LogFailure.E_Log_DoesNotContainTag,stx_fail_LogFailure.E_Log_Not,stx_fail_LogFailure.E_Log_LosesRace,stx_fail_LogFailure.E_Log_Default,stx_fail_LogFailure.E_Log_Zero];
var stx_fail_ParseFailureCode = {};
stx_fail_ParseFailureCode._new = function(self) {
	var this1 = self;
	return this1;
};
stx_fail_ParseFailureCode.lift = function(self) {
	return stx_fail_ParseFailureCode._new(self);
};
stx_fail_ParseFailureCode.prj = function(this1) {
	return this1;
};
stx_fail_ParseFailureCode.get_self = function(this1) {
	return stx_fail_ParseFailureCode.lift(this1);
};
stx_fail_ParseFailureCode.fromString = function(self) {
	return stx_fail_ParseFailureCode.lift(stx_fail_ParseFailureCodeSum.E_Parse_ParseFailed(self));
};
var stx_fail_PathFailureSum = $hxEnums["stx.fail.PathFailureSum"] = { __ename__:"stx.fail.PathFailureSum",__constructs__:null
	,E_Path_PathParse: ($_=function(pf) { return {_hx_index:0,pf:pf,__enum__:"stx.fail.PathFailureSum",toString:$estr}; },$_._hx_name="E_Path_PathParse",$_.__params__ = ["pf"],$_)
	,E_Path_ReachedRoot: {_hx_name:"E_Path_ReachedRoot",_hx_index:1,__enum__:"stx.fail.PathFailureSum",toString:$estr}
	,E_Path_ExpectedAbsolutePath: {_hx_name:"E_Path_ExpectedAbsolutePath",_hx_index:2,__enum__:"stx.fail.PathFailureSum",toString:$estr}
	,E_Path_ExpectedEntry: {_hx_name:"E_Path_ExpectedEntry",_hx_index:3,__enum__:"stx.fail.PathFailureSum",toString:$estr}
	,E_Path_ExpectedDirectory: {_hx_name:"E_Path_ExpectedDirectory",_hx_index:4,__enum__:"stx.fail.PathFailureSum",toString:$estr}
};
stx_fail_PathFailureSum.__constructs__ = [stx_fail_PathFailureSum.E_Path_PathParse,stx_fail_PathFailureSum.E_Path_ReachedRoot,stx_fail_PathFailureSum.E_Path_ExpectedAbsolutePath,stx_fail_PathFailureSum.E_Path_ExpectedEntry,stx_fail_PathFailureSum.E_Path_ExpectedDirectory];
var stx_fail_PathFailure = {};
stx_fail_PathFailure._new = function(self) {
	var this1 = self;
	return this1;
};
stx_fail_PathFailure.lift = function(self) {
	return stx_fail_PathFailure._new(self);
};
stx_fail_PathFailure.prj = function(this1) {
	return this1;
};
stx_fail_PathFailure.get_self = function(this1) {
	return stx_fail_PathFailure.lift(this1);
};
stx_fail_PathFailure.fromPathParseFailure = function(self) {
	return stx_fail_PathFailure.lift(stx_fail_PathFailureSum.E_Path_PathParse(self));
};
var stx_fail_PathFailureLift = function() { };
$hxClasses["stx.fail.PathFailureLift"] = stx_fail_PathFailureLift;
stx_fail_PathFailureLift.__name__ = "stx.fail.PathFailureLift";
stx_fail_PathFailureLift.toFsFailure = function(self) {
	return stx_fail_FsFailureSum.E_Fs_Path(self);
};
stx_fail_PathFailureLift.toASysFailure = function(self) {
	return stx_fail_ASysFailureSum.E_ASys_Fs(stx_fail_FsFailureSum.E_Fs_Path(self));
};
var stx_fail_PathParseFailureSum = $hxEnums["stx.fail.PathParseFailureSum"] = { __ename__:"stx.fail.PathParseFailureSum",__constructs__:null
	,E_PathParse_UnexpectedToken: ($_=function(token,raw) { return {_hx_index:0,token:token,raw:raw,__enum__:"stx.fail.PathParseFailureSum",toString:$estr}; },$_._hx_name="E_PathParse_UnexpectedToken",$_.__params__ = ["token","raw"],$_)
	,E_PathParse_ParseErrorInfo: ($_=function(v) { return {_hx_index:1,v:v,__enum__:"stx.fail.PathParseFailureSum",toString:$estr}; },$_._hx_name="E_PathParse_ParseErrorInfo",$_.__params__ = ["v"],$_)
	,E_PathParse_EmptyInput: {_hx_name:"E_PathParse_EmptyInput",_hx_index:2,__enum__:"stx.fail.PathParseFailureSum",toString:$estr}
	,E_PathParse_MalformedRaw: ($_=function(raw) { return {_hx_index:3,raw:raw,__enum__:"stx.fail.PathParseFailureSum",toString:$estr}; },$_._hx_name="E_PathParse_MalformedRaw",$_.__params__ = ["raw"],$_)
	,E_PathParse_ExpectedEntry: ($_=function(raw) { return {_hx_index:4,raw:raw,__enum__:"stx.fail.PathParseFailureSum",toString:$estr}; },$_._hx_name="E_PathParse_ExpectedEntry",$_.__params__ = ["raw"],$_)
	,E_PathParse_NoHeadNode: {_hx_name:"E_PathParse_NoHeadNode",_hx_index:5,__enum__:"stx.fail.PathParseFailureSum",toString:$estr}
	,E_PathParse_MisplacedHeadNode: {_hx_name:"E_PathParse_MisplacedHeadNode",_hx_index:6,__enum__:"stx.fail.PathParseFailureSum",toString:$estr}
	,E_PathParse_UnexpectedDenormalizedPath: ($_=function(raw) { return {_hx_index:7,raw:raw,__enum__:"stx.fail.PathParseFailureSum",toString:$estr}; },$_._hx_name="E_PathParse_UnexpectedDenormalizedPath",$_.__params__ = ["raw"],$_)
	,E_PathParse_UnexpectedFileInDirectory: ($_=function(raw) { return {_hx_index:8,raw:raw,__enum__:"stx.fail.PathParseFailureSum",toString:$estr}; },$_._hx_name="E_PathParse_UnexpectedFileInDirectory",$_.__params__ = ["raw"],$_)
	,E_PathParse_ExpectedRelativePath: ($_=function(raw) { return {_hx_index:9,raw:raw,__enum__:"stx.fail.PathParseFailureSum",toString:$estr}; },$_._hx_name="E_PathParse_ExpectedRelativePath",$_.__params__ = ["raw"],$_)
	,E_PathParse_NoFileFoundOnAttachment: ($_=function(raw) { return {_hx_index:10,raw:raw,__enum__:"stx.fail.PathParseFailureSum",toString:$estr}; },$_._hx_name="E_PathParse_NoFileFoundOnAttachment",$_.__params__ = ["raw"],$_)
	,E_PathParse_NoFileOnPath: ($_=function(raw) { return {_hx_index:11,raw:raw,__enum__:"stx.fail.PathParseFailureSum",toString:$estr}; },$_._hx_name="E_PathParse_NoFileOnPath",$_.__params__ = ["raw"],$_)
};
stx_fail_PathParseFailureSum.__constructs__ = [stx_fail_PathParseFailureSum.E_PathParse_UnexpectedToken,stx_fail_PathParseFailureSum.E_PathParse_ParseErrorInfo,stx_fail_PathParseFailureSum.E_PathParse_EmptyInput,stx_fail_PathParseFailureSum.E_PathParse_MalformedRaw,stx_fail_PathParseFailureSum.E_PathParse_ExpectedEntry,stx_fail_PathParseFailureSum.E_PathParse_NoHeadNode,stx_fail_PathParseFailureSum.E_PathParse_MisplacedHeadNode,stx_fail_PathParseFailureSum.E_PathParse_UnexpectedDenormalizedPath,stx_fail_PathParseFailureSum.E_PathParse_UnexpectedFileInDirectory,stx_fail_PathParseFailureSum.E_PathParse_ExpectedRelativePath,stx_fail_PathParseFailureSum.E_PathParse_NoFileFoundOnAttachment,stx_fail_PathParseFailureSum.E_PathParse_NoFileOnPath];
var stx_fail_PathParseFailure = {};
stx_fail_PathParseFailure._new = function(self) {
	var this1 = self;
	return this1;
};
stx_fail_PathParseFailure.lift = function(self) {
	return stx_fail_PathParseFailure._new(self);
};
stx_fail_PathParseFailure.prj = function(this1) {
	return this1;
};
stx_fail_PathParseFailure.get_self = function(this1) {
	return stx_fail_PathParseFailure.lift(this1);
};
stx_fail_PathParseFailure.fromParseErrorInfo = function(self) {
	return stx_fail_PathParseFailure.lift(stx_fail_PathParseFailureSum.E_PathParse_ParseErrorInfo(self));
};
var stx_fail_PathParseFailureLift = function() { };
$hxClasses["stx.fail.PathParseFailureLift"] = stx_fail_PathParseFailureLift;
stx_fail_PathParseFailureLift.__name__ = "stx.fail.PathParseFailureLift";
stx_fail_PathParseFailureLift.toPathFailure = function(self) {
	return stx_fail_PathFailureSum.E_Path_PathParse(self);
};
stx_fail_PathParseFailureLift.toFsFailure = function(self) {
	return stx_fail_PathFailureLift.toFsFailure(stx_fail_PathParseFailureLift.toPathFailure(self));
};
stx_fail_PathParseFailureLift.toASysFailure = function(self) {
	return stx_fail_FsFailure.toASysFailure(stx_fail_PathFailureLift.toFsFailure(stx_fail_PathParseFailureLift.toPathFailure(self)));
};
var stx_fail_PmlFailureSum = $hxEnums["stx.fail.PmlFailureSum"] = { __ename__:"stx.fail.PmlFailureSum",__constructs__:null
	,E_Pml_Noise: {_hx_name:"E_Pml_Noise",_hx_index:0,__enum__:"stx.fail.PmlFailureSum",toString:$estr}
	,E_Pml_Empty: {_hx_name:"E_Pml_Empty",_hx_index:1,__enum__:"stx.fail.PmlFailureSum",toString:$estr}
	,E_Pml_Parse: ($_=function(f) { return {_hx_index:2,f:f,__enum__:"stx.fail.PmlFailureSum",toString:$estr}; },$_._hx_name="E_Pml_Parse",$_.__params__ = ["f"],$_)
};
stx_fail_PmlFailureSum.__constructs__ = [stx_fail_PmlFailureSum.E_Pml_Noise,stx_fail_PmlFailureSum.E_Pml_Empty,stx_fail_PmlFailureSum.E_Pml_Parse];
var stx_fail_PmlFailure = {};
stx_fail_PmlFailure._new = function(self) {
	var this1 = self;
	return this1;
};
stx_fail_PmlFailure.lift = function(self) {
	return stx_fail_PmlFailure._new(self);
};
stx_fail_PmlFailure.prj = function(this1) {
	return this1;
};
stx_fail_PmlFailure.get_self = function(this1) {
	return stx_fail_PmlFailure.lift(this1);
};
var stx_fail_ProcessFailureSum = $hxEnums["stx.fail.ProcessFailureSum"] = { __ename__:"stx.fail.ProcessFailureSum",__constructs__:null
	,E_ProcessState: ($_=function(state) { return {_hx_index:0,state:state,__enum__:"stx.fail.ProcessFailureSum",toString:$estr}; },$_._hx_name="E_ProcessState",$_.__params__ = ["state"],$_)
	,E_Process: ($_=function(code,explanation) { return {_hx_index:1,code:code,explanation:explanation,__enum__:"stx.fail.ProcessFailureSum",toString:$estr}; },$_._hx_name="E_Process",$_.__params__ = ["code","explanation"],$_)
	,E_Process_Io: ($_=function(err) { return {_hx_index:2,err:err,__enum__:"stx.fail.ProcessFailureSum",toString:$estr}; },$_._hx_name="E_Process_Io",$_.__params__ = ["err"],$_)
	,E_Process_Parse: ($_=function(fail) { return {_hx_index:3,fail:fail,__enum__:"stx.fail.ProcessFailureSum",toString:$estr}; },$_._hx_name="E_Process_Parse",$_.__params__ = ["fail"],$_)
	,E_Process_Raw: ($_=function(bytes) { return {_hx_index:4,bytes:bytes,__enum__:"stx.fail.ProcessFailureSum",toString:$estr}; },$_._hx_name="E_Process_Raw",$_.__params__ = ["bytes"],$_)
	,E_Process_Unsupported: ($_=function(explanation) { return {_hx_index:5,explanation:explanation,__enum__:"stx.fail.ProcessFailureSum",toString:$estr}; },$_._hx_name="E_Process_Unsupported",$_.__params__ = ["explanation"],$_)
};
stx_fail_ProcessFailureSum.__constructs__ = [stx_fail_ProcessFailureSum.E_ProcessState,stx_fail_ProcessFailureSum.E_Process,stx_fail_ProcessFailureSum.E_Process_Io,stx_fail_ProcessFailureSum.E_Process_Parse,stx_fail_ProcessFailureSum.E_Process_Raw,stx_fail_ProcessFailureSum.E_Process_Unsupported];
var stx_fail_ProcessFailure = {};
stx_fail_ProcessFailure._new = function(self) {
	var this1 = self;
	return this1;
};
stx_fail_ProcessFailure.lift = function(self) {
	return stx_fail_ProcessFailure._new(self);
};
stx_fail_ProcessFailure.prj = function(this1) {
	return this1;
};
stx_fail_ProcessFailure.get_self = function(this1) {
	return stx_fail_ProcessFailure.lift(this1);
};
var stx_fail_ProxyFailure = $hxEnums["stx.fail.ProxyFailure"] = { __ename__:"stx.fail.ProxyFailure",__constructs__:null
};
stx_fail_ProxyFailure.__constructs__ = [];
var stx_fail_ShowFailureSum = $hxEnums["stx.fail.ShowFailureSum"] = { __ename__:"stx.fail.ShowFailureSum",__constructs__:null
	,E_Show_DoesNotSupportLayout: ($_=function(c) { return {_hx_index:0,c:c,__enum__:"stx.fail.ShowFailureSum",toString:$estr}; },$_._hx_name="E_Show_DoesNotSupportLayout",$_.__params__ = ["c"],$_)
	,E_Show_Escaped: {_hx_name:"E_Show_Escaped",_hx_index:1,__enum__:"stx.fail.ShowFailureSum",toString:$estr}
};
stx_fail_ShowFailureSum.__constructs__ = [stx_fail_ShowFailureSum.E_Show_DoesNotSupportLayout,stx_fail_ShowFailureSum.E_Show_Escaped];
var stx_fail_ShowFailureLift = function() { };
$hxClasses["stx.fail.ShowFailureLift"] = stx_fail_ShowFailureLift;
stx_fail_ShowFailureLift.__name__ = "stx.fail.ShowFailureLift";
stx_fail_ShowFailureLift.lift = function(self) {
	var this1 = self;
	return this1;
};
var stx_fail_ShowFailure = {};
stx_fail_ShowFailure._new = function(self) {
	var this1 = self;
	return this1;
};
stx_fail_ShowFailure.lift = function(self) {
	var this1 = self;
	return this1;
};
stx_fail_ShowFailure.prj = function(this1) {
	return this1;
};
stx_fail_ShowFailure.get_self = function(this1) {
	var this2 = this1;
	return this2;
};
var stx_fail_TestFailureSum = $hxEnums["stx.fail.TestFailureSum"] = { __ename__:"stx.fail.TestFailureSum",__constructs__:null
	,E_Test_AutoRequiresIndecesDecl: {_hx_name:"E_Test_AutoRequiresIndecesDecl",_hx_index:0,__enum__:"stx.fail.TestFailureSum",toString:$estr}
	,E_Test_AutoMalformed: ($_=function(v) { return {_hx_index:1,v:v,__enum__:"stx.fail.TestFailureSum",toString:$estr}; },$_._hx_name="E_Test_AutoMalformed",$_.__params__ = ["v"],$_)
	,E_Test_AutoClassNotFound: ($_=function(name) { return {_hx_index:2,name:name,__enum__:"stx.fail.TestFailureSum",toString:$estr}; },$_._hx_name="E_Test_AutoClassNotFound",$_.__params__ = ["name"],$_)
	,E_Test_AutoFieldNotFound: ($_=function(name) { return {_hx_index:3,name:name,__enum__:"stx.fail.TestFailureSum",toString:$estr}; },$_._hx_name="E_Test_AutoFieldNotFound",$_.__params__ = ["name"],$_)
	,E_Test_ClassNotInIndeces: ($_=function(name) { return {_hx_index:4,name:name,__enum__:"stx.fail.TestFailureSum",toString:$estr}; },$_._hx_name="E_Test_ClassNotInIndeces",$_.__params__ = ["name"],$_)
	,E_Test_NoIndeces: {_hx_name:"E_Test_NoIndeces",_hx_index:5,__enum__:"stx.fail.TestFailureSum",toString:$estr}
	,E_Test_BadSpec: {_hx_name:"E_Test_BadSpec",_hx_index:6,__enum__:"stx.fail.TestFailureSum",toString:$estr}
	,E_Test_ParseFailure: ($_=function(f) { return {_hx_index:7,f:f,__enum__:"stx.fail.TestFailureSum",toString:$estr}; },$_._hx_name="E_Test_ParseFailure",$_.__params__ = ["f"],$_)
	,NullTestFailure: {_hx_name:"NullTestFailure",_hx_index:8,__enum__:"stx.fail.TestFailureSum",toString:$estr}
	,WhileAsserting: ($_=function(description,failure) { return {_hx_index:9,description:description,failure:failure,__enum__:"stx.fail.TestFailureSum",toString:$estr}; },$_._hx_name="WhileAsserting",$_.__params__ = ["description","failure"],$_)
	,TestFailedBecause: ($_=function(str) { return {_hx_index:10,str:str,__enum__:"stx.fail.TestFailureSum",toString:$estr}; },$_._hx_name="TestFailedBecause",$_.__params__ = ["str"],$_)
	,TestTimedOut: ($_=function(after) { return {_hx_index:11,after:after,__enum__:"stx.fail.TestFailureSum",toString:$estr}; },$_._hx_name="TestTimedOut",$_.__params__ = ["after"],$_)
	,NoTestNamed: ($_=function(name) { return {_hx_index:12,name:name,__enum__:"stx.fail.TestFailureSum",toString:$estr}; },$_._hx_name="NoTestNamed",$_.__params__ = ["name"],$_)
	,E_Test_Exception: ($_=function(e) { return {_hx_index:13,e:e,__enum__:"stx.fail.TestFailureSum",toString:$estr}; },$_._hx_name="E_Test_Exception",$_.__params__ = ["e"],$_)
	,E_Test_Refuse: ($_=function(err) { return {_hx_index:14,err:err,__enum__:"stx.fail.TestFailureSum",toString:$estr}; },$_._hx_name="E_Test_Refuse",$_.__params__ = ["err"],$_)
};
stx_fail_TestFailureSum.__constructs__ = [stx_fail_TestFailureSum.E_Test_AutoRequiresIndecesDecl,stx_fail_TestFailureSum.E_Test_AutoMalformed,stx_fail_TestFailureSum.E_Test_AutoClassNotFound,stx_fail_TestFailureSum.E_Test_AutoFieldNotFound,stx_fail_TestFailureSum.E_Test_ClassNotInIndeces,stx_fail_TestFailureSum.E_Test_NoIndeces,stx_fail_TestFailureSum.E_Test_BadSpec,stx_fail_TestFailureSum.E_Test_ParseFailure,stx_fail_TestFailureSum.NullTestFailure,stx_fail_TestFailureSum.WhileAsserting,stx_fail_TestFailureSum.TestFailedBecause,stx_fail_TestFailureSum.TestTimedOut,stx_fail_TestFailureSum.NoTestNamed,stx_fail_TestFailureSum.E_Test_Exception,stx_fail_TestFailureSum.E_Test_Refuse];
var stx_fail_TestFailure = {};
stx_fail_TestFailure._new = function(self) {
	var this1 = self;
	return this1;
};
stx_fail_TestFailure.lift = function(self) {
	return stx_fail_TestFailure._new(self);
};
stx_fail_TestFailure.prj = function(this1) {
	return this1;
};
stx_fail_TestFailure.get_self = function(this1) {
	return stx_fail_TestFailure.lift(this1);
};
stx_fail_TestFailure.toString = function(this1) {
	switch(this1._hx_index) {
	case 13:
		var e = this1.e;
		return e.toString();
	case 14:
		var e = this1.err;
		return e.toString();
	default:
		return Std.string(this1);
	}
};
stx_fail_TestFailure.get_stack = function(this1) {
	switch(this1._hx_index) {
	case 13:
		var e = this1.e;
		return haxe_ds_Option.Some(e.get_stack());
	case 14:
		var e = this1.err;
		return e.get_stack();
	default:
		return haxe_ds_Option.None;
	}
};
var stx_fail_term_Caught = function(data,next,pos,exception) {
	stx_fail_term_Base.call(this,data,next,pos);
	this.exception = exception;
};
$hxClasses["stx.fail.term.Caught"] = stx_fail_term_Caught;
stx_fail_term_Caught.__name__ = "stx.fail.term.Caught";
stx_fail_term_Caught.__super__ = stx_fail_term_Base;
stx_fail_term_Caught.prototype = $extend(stx_fail_term_Base.prototype,{
	exception: null
	,get_stack: function() {
		return haxe_ds_Option.Some(this.exception.get_stack());
	}
	,__class__: stx_fail_term_Caught
});
var stx_fail_term_Errata = function(delegate) {
	this.delegate = delegate;
};
$hxClasses["stx.fail.term.Errata"] = stx_fail_term_Errata;
stx_fail_term_Errata.__name__ = "stx.fail.term.Errata";
stx_fail_term_Errata.__super__ = stx_fail_ErrorCls;
stx_fail_term_Errata.prototype = $extend(stx_fail_ErrorCls.prototype,{
	delegate: null
	,errata: null
	,get_pos: function() {
		return this.delegate.get_pos();
	}
	,get_next: function() {
		var _gthis = this;
		return stx_pico_OptionLift.map(this.delegate.get_next(),function(next) {
			return new stx_fail_term_ErrataAnon(next,$bind(_gthis,_gthis.errata)).toError();
		});
	}
	,get_data: function() {
		return this.errata(this.delegate).get_data();
	}
	,get_stack: function() {
		return this.errata(this.delegate).get_stack();
	}
	,__class__: stx_fail_term_Errata
});
function stx_fail_term_Errata_map(self,fn) {
	if(self._hx_index == 0) {
		var tI = self.v;
		return haxe_ds_Option.Some(fn(tI));
	} else {
		return haxe_ds_Option.None;
	}
}
var stx_fail_term_ErrataAnon = function(delegate,_errata) {
	stx_fail_term_Errata.call(this,delegate);
	this._errata = _errata;
};
$hxClasses["stx.fail.term.ErrataAnon"] = stx_fail_term_ErrataAnon;
stx_fail_term_ErrataAnon.__name__ = "stx.fail.term.ErrataAnon";
stx_fail_term_ErrataAnon.__super__ = stx_fail_term_Errata;
stx_fail_term_ErrataAnon.prototype = $extend(stx_fail_term_Errata.prototype,{
	_errata: null
	,errata: function(e) {
		return this._errata(e);
	}
	,__class__: stx_fail_term_ErrataAnon
});
var stx_fail_term_ErrorConcat = function(lhs,rhs) {
	this.lhs = lhs;
	this.rhs = rhs;
};
$hxClasses["stx.fail.term.ErrorConcat"] = stx_fail_term_ErrorConcat;
stx_fail_term_ErrorConcat.__name__ = "stx.fail.term.ErrorConcat";
stx_fail_term_ErrorConcat.__super__ = stx_fail_ErrorCls;
stx_fail_term_ErrorConcat.prototype = $extend(stx_fail_ErrorCls.prototype,{
	lhs: null
	,rhs: null
	,get_next: function() {
		var _gthis = this;
		return stx_pico_OptionLift.or(stx_pico_OptionLift.map(stx_pico_OptionLift.flat_map(this.lhs,function(x) {
			return x.get_next();
		}),function(x) {
			return new stx_fail_term_ErrorConcat(stx_pico_Option.fromNullT(x),_gthis.rhs).toError();
		}),function() {
			return _gthis.rhs;
		});
	}
	,get_data: function() {
		return stx_pico_OptionLift.flat_map(this.lhs,function(x) {
			return x.get_data();
		});
	}
	,get_pos: function() {
		return stx_pico_OptionLift.flat_map(this.lhs,function(x) {
			return x.get_pos();
		});
	}
	,get_stack: function() {
		return stx_pico_OptionLift.flat_map(this.lhs,function(x) {
			return x.get_stack();
		});
	}
	,__class__: stx_fail_term_ErrorConcat
});
function stx_fail_term_ErrorConcat_flat_map(self,fn) {
	if(self._hx_index == 0) {
		var n = self.v;
		return fn(n);
	} else {
		return haxe_ds_Option.None;
	}
}
var stx_fail_term_ErrorRemote = function(delegate,pos) {
	this.delegate = delegate;
	this.data = haxe_ds_Option.Some(stx_fail_DeclineSum.EXTERIOR(delegate.next()));
	this.pos = pos;
};
$hxClasses["stx.fail.term.ErrorRemote"] = stx_fail_term_ErrorRemote;
stx_fail_term_ErrorRemote.__name__ = "stx.fail.term.ErrorRemote";
stx_fail_term_ErrorRemote.__super__ = stx_fail_ErrorCls;
stx_fail_term_ErrorRemote.prototype = $extend(stx_fail_ErrorCls.prototype,{
	delegate: null
	,get_pos: function() {
		return this.pos;
	}
	,get_next: function() {
		if(this.delegate.hasNext()) {
			return haxe_ds_Option.Some(new stx_fail_term_ErrorRemote(this.delegate,this.get_pos()).toError());
		} else {
			return haxe_ds_Option.None;
		}
	}
	,get_data: function() {
		return this.data;
	}
	,get_stack: function() {
		return haxe_ds_Option.None;
	}
	,__class__: stx_fail_term_ErrorRemote
});
function stx_fail_term_Map_map(self,fn) {
	if(self._hx_index == 0) {
		var tI = self.v;
		return haxe_ds_Option.Some(fn(tI));
	} else {
		return haxe_ds_Option.None;
	}
}
function stx_fail_term_MapAnon_map(self,fn) {
	if(self._hx_index == 0) {
		var tI = self.v;
		return haxe_ds_Option.Some(fn(tI));
	} else {
		return haxe_ds_Option.None;
	}
}
var stx_fail_term_Unit = function() {
};
$hxClasses["stx.fail.term.Unit"] = stx_fail_term_Unit;
stx_fail_term_Unit.__name__ = "stx.fail.term.Unit";
stx_fail_term_Unit.__super__ = stx_fail_ErrorCls;
stx_fail_term_Unit.prototype = $extend(stx_fail_ErrorCls.prototype,{
	get_pos: function() {
		return haxe_ds_Option.None;
	}
	,get_next: function() {
		return haxe_ds_Option.None;
	}
	,get_data: function() {
		return haxe_ds_Option.None;
	}
	,get_stack: function() {
		return haxe_ds_Option.None;
	}
	,__class__: stx_fail_term_Unit
});
var stx_fn_BinaryLift = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["stx.fn.BinaryLift"] = stx_fn_BinaryLift;
stx_fn_BinaryLift.__name__ = "stx.fn.BinaryLift";
stx_fn_BinaryLift.then = function(self,that) {
	return function(pI,pII) {
		return that(self(pI,pII));
	};
};
stx_fn_BinaryLift.braid = function(self,pI,pII) {
	return self(pI,pII);
};
stx_fn_BinaryLift.rotate = function(self) {
	return function(pII,pI) {
		return self(pI,pII);
	};
};
stx_fn_BinaryLift.swap = function(self) {
	return function(pII,pI) {
		return self(pI,pII);
	};
};
stx_fn_BinaryLift.curry = function(self) {
	return function(pI) {
		return function(pII) {
			return self(pI,pII);
		};
	};
};
stx_fn_BinaryLift.equals = function(self,that) {
	return self == that;
};
stx_fn_BinaryLift.bindPi = function(self,pI) {
	var fn = self;
	var _g = fn;
	var a1 = pI;
	return function(a2) {
		return _g(a1,a2);
	};
};
stx_fn_BinaryLift.bindPii = function(pII,self) {
	var fn = self;
	var _g = fn;
	var a2 = pII;
	return function(a1) {
		return _g(a1,a2);
	};
};
stx_fn_BinaryLift.cache = function(self,pI,pII) {
	var r = null;
	return function() {
		if(r == null) {
			r = false;
			r = self(pI,pII);
			return r;
		} else {
			return r;
		}
	};
};
stx_fn_BinaryLift.pipe = function(self,tp) {
	return function() {
		return stx_nano_CoupleLift.decouple(tp(),self);
	};
};
stx_fn_BinaryLift.encouple = function(self) {
	return function(tp) {
		return stx_nano_CoupleLift.decouple(tp,self);
	};
};
stx_fn_BinaryLift.__super__ = stx_pico_Clazz;
stx_fn_BinaryLift.prototype = $extend(stx_pico_Clazz.prototype,{
	__class__: stx_fn_BinaryLift
});
var stx_fn_Binary = {};
stx_fn_Binary._new = function(self) {
	var this1 = self;
	return this1;
};
stx_fn_Binary.prj = function(this1) {
	return this1;
};
var stx_fn_BlockLift = function() { };
$hxClasses["stx.fn.BlockLift"] = stx_fn_BlockLift;
stx_fn_BlockLift.__name__ = "stx.fn.BlockLift";
stx_fn_BlockLift.returning = function(self,r) {
	return function() {
		self();
		return r;
	};
};
stx_fn_BlockLift.equals = function(self,that) {
	return self == that;
};
stx_fn_BlockLift.promote = function(f) {
	return function(p) {
		f();
	};
};
stx_fn_BlockLift.then = function(self,that) {
	return function() {
		self();
		that();
	};
};
stx_fn_BlockLift.enact = function(self) {
	self();
};
var stx_fn_Block = {};
stx_fn_Block._new = function(self) {
	var this1 = self;
	return this1;
};
stx_fn_Block.unit = function() {
	return function() {
	};
};
stx_fn_Block.pure = function(fn) {
	return fn;
};
stx_fn_Block.lift = function(fn) {
	return stx_fn_Block._new(fn);
};
var stx_fn_DualLift = function() { };
$hxClasses["stx.fn.DualLift"] = stx_fn_DualLift;
stx_fn_DualLift.__name__ = "stx.fn.DualLift";
stx_fn_DualLift.then = function(self,then) {
	return stx_fn_Unary._.then(stx_fn_Dual.toUnary(self),then);
};
stx_fn_DualLift.into = function(self,fn) {
	return stx_fn_DualLift.then(self,stx_nano_lift_LiftNano.decouple(stx_nano_Wildcard.__,fn));
};
stx_fn_DualLift.pass = function(self,fn) {
	return stx_fn_Dual.fromUnary(stx_fn_DualLift.then(self,stx_nano_lift_LiftNano.decouple(stx_nano_Wildcard.__,fn)));
};
stx_fn_DualLift.first = function(self,fn) {
	return stx_fn_Dual.fromUnary(stx_fn_DualLift.then(self,stx_fn_UnaryLift.first(fn)));
};
stx_fn_DualLift.second = function(self,fn) {
	return stx_fn_Dual.fromUnary(stx_fn_DualLift.then(self,stx_fn_UnaryLift.second(fn)));
};
var stx_fn_Dual = {};
stx_fn_Dual.unit = function() {
	return stx_fn_Dual._new(function(tp) {
		return tp;
	});
};
stx_fn_Dual._new = function(self) {
	var this1 = self;
	return this1;
};
stx_fn_Dual.fromUnary = function(self) {
	return stx_fn_Dual._new(self);
};
stx_fn_Dual.toUnary = function(this1) {
	return this1;
};
var stx_fn_FSum = $hxEnums["stx.fn.FSum"] = { __ename__:"stx.fn.FSum",__constructs__:null
	,F0X: ($_=function(f) { return {_hx_index:0,f:f,__enum__:"stx.fn.FSum",toString:$estr}; },$_._hx_name="F0X",$_.__params__ = ["f"],$_)
	,F1X: ($_=function(f) { return {_hx_index:1,f:f,__enum__:"stx.fn.FSum",toString:$estr}; },$_._hx_name="F1X",$_.__params__ = ["f"],$_)
	,F1R: ($_=function(f) { return {_hx_index:2,f:f,__enum__:"stx.fn.FSum",toString:$estr}; },$_._hx_name="F1R",$_.__params__ = ["f"],$_)
};
stx_fn_FSum.__constructs__ = [stx_fn_FSum.F0X,stx_fn_FSum.F1X,stx_fn_FSum.F1R];
var stx_fn_F = {};
stx_fn_F._new = function(self) {
	var this1 = self;
	return this1;
};
stx_fn_F.lift = function(self) {
	return stx_fn_F._new(self);
};
stx_fn_F.unit = function() {
	return stx_fn_F.lift(stx_fn_FSum.F1X(function(x) {
	}));
};
stx_fn_F.fromF0X = function(fn) {
	return stx_fn_F._new(stx_fn_FSum.F0X(fn));
};
stx_fn_F.fromF1X = function(fn) {
	return stx_fn_F.lift(stx_fn_FSum.F1X(fn));
};
stx_fn_F.fromF1R = function(fn) {
	return stx_fn_F.lift(stx_fn_FSum.F1R(fn));
};
stx_fn_F.toUnary = function(this1) {
	switch(this1._hx_index) {
	case 0:
		var f = this1.f;
		return function(_) {
			f();
			return null;
		};
	case 1:
		var f1 = this1.f;
		return function(x) {
			f1(x);
			return null;
		};
	case 2:
		var f2 = this1.f;
		return function(x) {
			return f2(x);
		};
	}
};
stx_fn_F.prj = function(this1) {
	return this1;
};
stx_fn_F.get_self = function(this1) {
	return stx_fn_F.lift(this1);
};
stx_fn_F.apply = function(this1,pi) {
	var tmp;
	switch(this1._hx_index) {
	case 0:
		var f = this1.f;
		tmp = function(_) {
			f();
			return null;
		};
		break;
	case 1:
		var f1 = this1.f;
		tmp = function(x) {
			f1(x);
			return null;
		};
		break;
	case 2:
		var f2 = this1.f;
		tmp = function(x) {
			return f2(x);
		};
		break;
	}
	return tmp(pi);
};
var stx_fn_Module = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["stx.fn.Module"] = stx_fn_Module;
stx_fn_Module.__name__ = "stx.fn.Module";
stx_fn_Module.__super__ = stx_pico_Clazz;
stx_fn_Module.prototype = $extend(stx_pico_Clazz.prototype,{
	_1R: function(fn) {
		return fn;
	}
	,sink: function(fn) {
		var this1 = fn;
		return this1;
	}
	,__class__: stx_fn_Module
});
var stx_fn_Perhaps = {};
stx_fn_Perhaps._new = function(self) {
	var this1 = self;
	return this1;
};
var stx_fn_Pick = {};
stx_fn_Pick._new = function(self) {
	var this1 = self;
	return this1;
};
stx_fn_Pick.leftPickToSwitch = function(fn) {
	return function(e) {
		switch(e._hx_index) {
		case 0:
			var v = e.v;
			return fn(v);
		case 1:
			var v = e.v;
			return haxe_ds_Either.Right(v);
		}
	};
};
stx_fn_Pick.rightPickToSwitch = function(fn) {
	return function(e) {
		switch(e._hx_index) {
		case 0:
			var v = e.v;
			return haxe_ds_Either.Left(v);
		case 1:
			var v = e.v;
			return fn(v);
		}
	};
};
var stx_fn_SinkLift = function() { };
$hxClasses["stx.fn.SinkLift"] = stx_fn_SinkLift;
stx_fn_SinkLift.__name__ = "stx.fn.SinkLift";
stx_fn_SinkLift.then = function(self,that) {
	var this1 = function(p) {
		self(p);
		that(p);
	};
	return this1;
};
stx_fn_SinkLift.bind = function(self,p) {
	return stx_fn_Block.lift(stx_fn_SinkLift.bind(self,p));
};
stx_fn_SinkLift.returns = function(self,r) {
	return function(p) {
		self(p);
		return r;
	};
};
stx_fn_SinkLift.promote = function(self) {
	return function(p) {
		self(p);
		return p;
	};
};
stx_fn_SinkLift.compose = function(self,fn) {
	return function(pI) {
		self(fn(pI));
	};
};
var stx_fn_Sink = {};
stx_fn_Sink._new = function(self) {
	var this1 = self;
	return this1;
};
stx_fn_Sink.unit = function() {
	var this1 = function(p) {
	};
	return this1;
};
stx_fn_Sink.lift = function(fn) {
	var this1 = fn;
	return this1;
};
stx_fn_Sink.toTinkCallback = function(this1) {
	return this1;
};
stx_fn_Sink.stage = function(this1,before,after) {
	if(before == null) {
		before = function(_) {
		};
	}
	if(after == null) {
		after = function(_) {
		};
	}
	return function(p) {
		before(p);
		this1(p);
		after(p);
	};
};
stx_fn_Sink.prj = function(this1) {
	return this1;
};
var stx_fn_Switch = {};
stx_fn_Switch._new = function(self) {
	var this1 = self;
	return this1;
};
var stx_fn_TernaryLift = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["stx.fn.TernaryLift"] = stx_fn_TernaryLift;
stx_fn_TernaryLift.__name__ = "stx.fn.TernaryLift";
stx_fn_TernaryLift.rotate = function(f) {
	return function(pII,pIII,pI) {
		return f(pI,pII,pIII);
	};
};
stx_fn_TernaryLift.curry = function(f) {
	return function(pI) {
		return function(pII) {
			return function(pIII) {
				return f(pI,pII,pIII);
			};
		};
	};
};
stx_fn_TernaryLift.cache = function(self,pI,pII,pIII) {
	var r = null;
	return function() {
		if(r == null) {
			r = false;
			r = self(pI,pII,pIII);
			return r;
		} else {
			return r;
		}
	};
};
stx_fn_TernaryLift.equals = function(self,that) {
	return self == that;
};
stx_fn_TernaryLift.__super__ = stx_pico_Clazz;
stx_fn_TernaryLift.prototype = $extend(stx_pico_Clazz.prototype,{
	__class__: stx_fn_TernaryLift
});
var stx_fn_Ternary = {};
stx_fn_Ternary._new = function(self) {
	var this1 = self;
	return this1;
};
var stx_fn_ThunkLift = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["stx.fn.ThunkLift"] = stx_fn_ThunkLift;
stx_fn_ThunkLift.__name__ = "stx.fn.ThunkLift";
stx_fn_ThunkLift.reply = function(self) {
	return self();
};
stx_fn_ThunkLift.cache = function(self) {
	var r = null;
	return function() {
		if(r == null) {
			r = false;
			r = self();
			return r;
		} else {
			return r;
		}
	};
};
stx_fn_ThunkLift.promote = function(self) {
	return function(p) {
		return self();
	};
};
stx_fn_ThunkLift.stage = function(f,before,after) {
	var state = before();
	var result = f();
	after(state);
	return result;
};
stx_fn_ThunkLift.equals = function(that,self) {
	return self == that;
};
stx_fn_ThunkLift.then = function(that,self) {
	return function() {
		return that(self());
	};
};
stx_fn_ThunkLift.__super__ = stx_pico_Clazz;
stx_fn_ThunkLift.prototype = $extend(stx_pico_Clazz.prototype,{
	__class__: stx_fn_ThunkLift
});
var stx_fn_Thunk = {};
stx_fn_Thunk.lift = function(thk) {
	var this1 = thk;
	return this1;
};
stx_fn_Thunk._new = function(self) {
	var this1 = self;
	return this1;
};
stx_fn_Thunk.then = function(this1,that) {
	return stx_fn_Thunk._.then(that,this1);
};
stx_fn_Thunk.cache = function(this1) {
	return stx_fn_Thunk._.cache(this1);
};
stx_fn_Thunk.prj = function(this1) {
	return this1;
};
var stx_fn_UnaryLift = function() { };
$hxClasses["stx.fn.UnaryLift"] = stx_fn_UnaryLift;
stx_fn_UnaryLift.__name__ = "stx.fn.UnaryLift";
stx_fn_UnaryLift.apply = function(self,pI) {
	return self(pI);
};
stx_fn_UnaryLift.cache = function(self,pI) {
	var r = null;
	return function() {
		if(r == null) {
			r = false;
			r = self(pI);
			return r;
		} else {
			return r;
		}
	};
};
stx_fn_UnaryLift.pipe = function(self,pI) {
	return function() {
		return self(pI());
	};
};
stx_fn_UnaryLift.equals = function(self,that) {
	return self == that;
};
stx_fn_UnaryLift.then = function(self,that) {
	return function(a) {
		return that(self(a));
	};
};
stx_fn_UnaryLift.compose = function(that,self) {
	return function(a) {
		return that(self(a));
	};
};
stx_fn_UnaryLift.dual = function(self) {
	return function(t) {
		return stx_nano_CoupleLift.decouple(t,function(l,r) {
			return stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,self(l),self(r));
		});
	};
};
stx_fn_UnaryLift.perhaps = function(self) {
	return function(x) {
		switch(x._hx_index) {
		case 0:
			var v = x.v;
			return haxe_ds_Option.Some(self(v));
		case 1:
			return haxe_ds_Option.None;
		}
	};
};
stx_fn_UnaryLift.first = function(fn1) {
	return function(t) {
		return stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,fn1(stx_nano_CoupleLift.fst(t)),stx_nano_CoupleLift.snd(t));
	};
};
stx_fn_UnaryLift.second = function(fn1) {
	return function(t) {
		return stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,stx_nano_CoupleLift.fst(t),fn1(stx_nano_CoupleLift.snd(t)));
	};
};
stx_fn_UnaryLift.bound = function(bindl,bindr) {
	var out = stx_fn_UnaryLift.then(stx_fn_UnaryLift.split(stx_fn_Unary.unit(),bindl),bindr);
	return out;
};
stx_fn_UnaryLift.broach = function(bindl) {
	return stx_fn_UnaryLift.bound(bindl,function(x) {
		return x;
	});
};
stx_fn_UnaryLift.split = function(self,that) {
	return function(p) {
		return stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,self(p),that(p));
	};
};
stx_fn_UnaryLift.fan = function(a) {
	return stx_fn_UnaryLift.then(a,function(x) {
		return stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,x,x);
	});
};
stx_fn_UnaryLift.pair = function(fn1,fn2) {
	return function(t) {
		return stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,fn1(stx_nano_CoupleLift.fst(t)),fn2(stx_nano_CoupleLift.snd(t)));
	};
};
stx_fn_UnaryLift.bindI = function(fn,p) {
	var _g = stx_fn_Unary.prj(fn);
	var a1 = p;
	return function() {
		return _g(a1);
	};
};
stx_fn_UnaryLift.sink = function(fn,handler) {
	var this1 = function(p) {
		var val = fn(p);
		handler(val);
	};
	return this1;
};
var stx_fn_Unary = {};
stx_fn_Unary._new = function(self) {
	var this1 = self;
	return this1;
};
stx_fn_Unary.lift = function(fn) {
	return stx_fn_Unary._new(fn);
};
stx_fn_Unary.unit = function() {
	return stx_fn_Unary.lift(function(x) {
		return x;
	});
};
stx_fn_Unary.pure = function(r) {
	return function(v) {
		return r;
	};
};
stx_fn_Unary.prj = function(this1) {
	return this1;
};
var stx_fn_lift_LiftBroker = function() { };
$hxClasses["stx.fn.lift.LiftBroker"] = stx_fn_lift_LiftBroker;
stx_fn_lift_LiftBroker.__name__ = "stx.fn.lift.LiftBroker";
stx_fn_lift_LiftBroker.broker = function(v,fn) {
	return (fn(function(x) {
		return x;
	}))(v);
};
var stx_fp_ContinuationLift = function() { };
$hxClasses["stx.fp.ContinuationLift"] = stx_fp_ContinuationLift;
stx_fp_ContinuationLift.__name__ = "stx.fp.ContinuationLift";
stx_fp_ContinuationLift.apply = function(self,fn) {
	return self(fn);
};
stx_fp_ContinuationLift.map = function(self,fn) {
	return function(cont) {
		return self(function(p) {
			return cont(fn(p));
		});
	};
};
stx_fp_ContinuationLift.flat_map = function(self,fn) {
	return function(cont) {
		return self(function(p) {
			return (fn(p))(cont);
		});
	};
};
stx_fp_ContinuationLift.zip_with = function(self,that,fn) {
	return function(cont) {
		return self(function(p) {
			return that(function(pI) {
				return cont(fn(p,pI));
			});
		});
	};
};
stx_fp_ContinuationLift.mod = function(self,g) {
	return function(f) {
		return g(self(f));
	};
};
var stx_fp_Continuation = {};
stx_fp_Continuation.unit = function() {
	return function(fn) {
		return fn(null);
	};
};
stx_fp_Continuation.pure = function(p) {
	return function(fn) {
		return fn(p);
	};
};
stx_fp_Continuation.lift = function(fn) {
	return stx_fp_Continuation._new(fn);
};
stx_fp_Continuation._new = function(self) {
	var this1 = self;
	return this1;
};
stx_fp_Continuation.callcc = function(f) {
	return function(k) {
		return (f(function(p) {
			return stx_fp_Continuation.lift(function(_) {
				return k(p);
			});
		}))(k);
	};
};
stx_fp_Continuation.asFunction = function(this1) {
	return this1;
};
stx_fp_Continuation.prj = function(this1) {
	return this1;
};
var stx_fp_Handler = {};
stx_fp_Handler.lift = function(self) {
	return stx_fp_Handler._new(self);
};
stx_fp_Handler._new = function(self) {
	var this1 = self;
	return this1;
};
stx_fp_Handler.handle = function(this1,cb) {
	this1(cb);
};
stx_fp_Handler.callcc = function(f) {
	return function(k) {
		(f(function(p) {
			return stx_fp_Handler.lift(function(_) {
				k(p);
			});
		}))(k);
	};
};
var stx_fp_HandlerLift = function() { };
$hxClasses["stx.fp.HandlerLift"] = stx_fp_HandlerLift;
stx_fp_HandlerLift.__name__ = "stx.fp.HandlerLift";
stx_fp_HandlerLift.lift = function(self) {
	return stx_fp_Handler._new(self);
};
stx_fp_HandlerLift.apply = function(self,fn) {
	stx_fp_ContinuationLift.apply(self,fn);
};
stx_fp_HandlerLift.map = function(self,fn) {
	return stx_fp_HandlerLift.lift(stx_fp_ContinuationLift.map(self,fn));
};
stx_fp_HandlerLift.flat_map = function(self,fn) {
	return stx_fp_HandlerLift.lift(stx_fp_ContinuationLift.flat_map(self,fn));
};
stx_fp_HandlerLift.zip_with = function(self,that,fn) {
	return stx_fp_HandlerLift.lift(stx_fp_ContinuationLift.zip_with(self,that,fn));
};
var stx_fp_LazyStreamTrigger = {};
stx_fp_LazyStreamTrigger._new = function(self) {
	var this1 = self;
	return this1;
};
stx_fp_LazyStreamTrigger.lift = function(self) {
	return stx_fp_LazyStreamTrigger._new(self);
};
stx_fp_LazyStreamTrigger.fromFn = function(fn) {
	return { next : fn};
};
stx_fp_LazyStreamTrigger.prj = function(this1) {
	return this1;
};
stx_fp_LazyStreamTrigger.get_self = function(this1) {
	return stx_fp_LazyStreamTrigger.lift(this1);
};
var stx_fp_LazyStreamSum = $hxEnums["stx.fp.LazyStreamSum"] = { __ename__:"stx.fp.LazyStreamSum",__constructs__:null
	,LazyVal: ($_=function(val,next) { return {_hx_index:0,val:val,next:next,__enum__:"stx.fp.LazyStreamSum",toString:$estr}; },$_._hx_name="LazyVal",$_.__params__ = ["val","next"],$_)
};
stx_fp_LazyStreamSum.__constructs__ = [stx_fp_LazyStreamSum.LazyVal];
var stx_fp_LazyStream = {};
stx_fp_LazyStream._new = function(self) {
	var this1 = self;
	return this1;
};
stx_fp_LazyStream.lift = function(self) {
	return self;
};
stx_fp_LazyStream.zero = function() {
	return stx_fp_LazyStream.ZERO;
};
stx_fp_LazyStream.fromRec = function(v) {
	var v1 = v;
	return stx_fp_LazyStream.lift(stx_fp_LazyStreamSum.LazyVal(stx_pico_Option.fromNullT(v()),stx_fp_LazyStreamTrigger.fromFn(function() {
		return stx_fp_LazyStream.fromRec(v1);
	})));
};
stx_fp_LazyStream.fromTuple = function(tp) {
	return stx_fp_LazyStream.lift(stx_fp_LazyStreamSum.LazyVal(stx_nano_CoupleLift.fst(tp),stx_nano_CoupleLift.snd(tp)));
};
stx_fp_LazyStream.make = function(xs,x) {
	return stx_fp_LazyStream.fromTuple(stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,x,xs));
};
stx_fp_LazyStream.unit = function() {
	return stx_fp_LazyStreamSum.LazyVal(null,stx_fp_LazyStreamTrigger.fromFn(stx_fp_LazyStream.unit));
};
stx_fp_LazyStream.pure = function(x) {
	return stx_fp_LazyStream.make(stx_fp_LazyStreamTrigger.fromFn(stx_fp_LazyStream.unit),x);
};
stx_fp_LazyStream.reply = function(this1) {
	var val = this1.val;
	var next = this1.next;
	return stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,val,next);
};
var stx_fp_SemiGroupApi = function() { };
$hxClasses["stx.fp.SemiGroupApi"] = stx_fp_SemiGroupApi;
stx_fp_SemiGroupApi.__name__ = "stx.fp.SemiGroupApi";
stx_fp_SemiGroupApi.__isInterface__ = true;
stx_fp_SemiGroupApi.prototype = {
	plus: null
	,toSemiGroup: null
	,__class__: stx_fp_SemiGroupApi
};
var stx_fp_MonoidApi = function() { };
$hxClasses["stx.fp.MonoidApi"] = stx_fp_MonoidApi;
stx_fp_MonoidApi.__name__ = "stx.fp.MonoidApi";
stx_fp_MonoidApi.__isInterface__ = true;
stx_fp_MonoidApi.__interfaces__ = [stx_fp_SemiGroupApi];
stx_fp_MonoidApi.prototype = {
	unit: null
	,__class__: stx_fp_MonoidApi
};
var stx_fp_Monoid = {};
stx_fp_Monoid._new = function(self) {
	var this1 = self;
	return this1;
};
var stx_fp_SemiGroupCls = function() {
};
$hxClasses["stx.fp.SemiGroupCls"] = stx_fp_SemiGroupCls;
stx_fp_SemiGroupCls.__name__ = "stx.fp.SemiGroupCls";
stx_fp_SemiGroupCls.__interfaces__ = [stx_fp_SemiGroupApi];
stx_fp_SemiGroupCls.prototype = {
	plus: null
	,toSemiGroup: function() {
		return this;
	}
	,__class__: stx_fp_SemiGroupCls
};
var stx_fp_SemiGroup = {};
stx_fp_SemiGroup._new = function(self) {
	var this1 = self;
	return this1;
};
stx_fp_SemiGroup.lift = function(self) {
	return stx_fp_SemiGroup._new(self);
};
var stx_fp_StateM = {};
stx_fp_StateM._new = function(self) {
	var this1 = self;
	return this1;
};
stx_fp_StateM.unit = function() {
	return function(p) {
		return stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,null,p);
	};
};
stx_fp_StateM.pure = function(r) {
	return function(p) {
		return stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,r,p);
	};
};
var stx_fp_StateMLift = function() { };
$hxClasses["stx.fp.StateMLift"] = stx_fp_StateMLift;
stx_fp_StateMLift.__name__ = "stx.fp.StateMLift";
stx_fp_StateMLift.exec = function(self,p) {
	return stx_nano_CoupleLift.snd(self(p));
};
stx_fp_StateMLift.eval = function(self,p) {
	return stx_nano_CoupleLift.fst(self(p));
};
stx_fp_StateMLift.map = function(self,fn) {
	return function(p) {
		return stx_nano_CoupleLift.decouple(self(p),function(r,p) {
			return stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,fn(r),p);
		});
	};
};
stx_fp_StateMLift.mod = function(self,fn) {
	return function(p) {
		return stx_nano_CoupleLift.decouple(self(p),function(r,p) {
			return stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,r,fn(p));
		});
	};
};
stx_fp_StateMLift.flat_map = function(self,fn) {
	return function(p) {
		return stx_nano_CoupleLift.decouple(self(p),function(r,p) {
			return (fn(r))(p);
		});
	};
};
var stx_fp_With = {};
stx_fp_With._new = function(self) {
	var this1 = self;
	return this1;
};
stx_fp_With.lift = function(self) {
	return stx_fp_With._new(self);
};
stx_fp_With.prj = function(this1) {
	return this1;
};
stx_fp_With.get_self = function(this1) {
	return stx_fp_With.lift(this1);
};
var stx_fs_PathApi = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["stx.fs.PathApi"] = stx_fs_PathApi;
stx_fs_PathApi.__name__ = "stx.fs.PathApi";
stx_fs_PathApi.__super__ = stx_pico_Clazz;
stx_fs_PathApi.prototype = $extend(stx_pico_Clazz.prototype,{
	__class__: stx_fs_PathApi
});
var stx_fs_Path = function() { };
$hxClasses["stx.fs.Path"] = stx_fs_Path;
stx_fs_Path.__name__ = "stx.fs.Path";
stx_fs_Path.path = function(wildcard) {
	return new stx_fs_PathApi();
};
stx_fs_Path.parse = function(str) {
	return eu_ohmrun_fletcher_AttemptLift.errate(eu_ohmrun_fletcher_Attempt.fromFun1Res(function(env) {
		var this1 = stx_fs_path_Logging.log(stx_nano_Wildcard.__);
		var fn = function(pos) {
			return pos.with_stamp(function(stamp) {
				return stamp.relevel(2);
			});
		};
		(function(value,pos) {
			this1(value,fn(pos));
		})(new stx_log_EntryCtr().pure(env),stx_log_LogPosition.fromPos({ fileName : "stx/fs/Path.hx", lineNumber : 19, className : "stx.fs.Path", methodName : "parse"}));
		var self = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,str),function(s) {
			var this1 = stx_LiftIf.if_else(stx_asys_Distro.is_windows(env.device.distro),function() {
				return new stx_parse_path_Windows().asBase();
			},function() {
				return new stx_parse_path_Posix().asBase();
			});
			var self = stx_parse_ParseResult.toRes(this1.apply(stx_parse_ParseInput.pure(stx_parse_core_Enumerable.string(s))));
			var self1;
			switch(self._hx_index) {
			case 0:
				var t = self.t;
				var self2;
				switch(t._hx_index) {
				case 0:
					var t1 = t.v;
					self2 = stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,t1);
					break;
				case 1:
					self2 = stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_ParseFailure.toRefuse(stx_fail_ParseFailure.make(0,stx_fail_ParseFailureCode.fromString("no output"),true))),{ fileName : "stx/fs/Path.hx", lineNumber : 27, className : "stx.fs.Path", methodName : "parse"});
					break;
				}
				self1 = self2;
				break;
			case 1:
				var e = self.e;
				self1 = stx_nano_ResSum.Reject(e);
				break;
			}
			var this1 = self1;
			return this1;
		});
		if(self._hx_index == 0) {
			var v = self.v;
			return v;
		} else {
			var reader = stx_parse_ParseInput.pure(stx_parse_core_Enumerable.string(""));
			var self = stx_parse_ParseResult.toRes(stx_LiftParse.no(reader,stx_fail_ParseFailureCode.fromString("no input")));
			var self1;
			switch(self._hx_index) {
			case 0:
				var t = self.t;
				var self2;
				switch(t._hx_index) {
				case 0:
					var t1 = t.v;
					self2 = stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,t1);
					break;
				case 1:
					self2 = stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_ParseFailure.toRefuse(stx_fail_ParseFailure.make(0,stx_fail_ParseFailureCode.fromString("no output"),true))),{ fileName : "stx/fs/Path.hx", lineNumber : 36, className : "stx.fs.Path", methodName : "parse"});
					break;
				}
				self1 = self2;
				break;
			case 1:
				var e = self.e;
				self1 = stx_nano_ResSum.Reject(e);
				break;
			}
			var this2 = self1;
			return this2;
		}
	}),function(e) {
		return stx_fail_PathParseFailureLift.toPathFailure(stx_LiftParseErrorInfoToPathParseFailure.toPathParseFailure(e));
	});
};
var stx_fs_LiftDrive = function() { };
$hxClasses["stx.fs.LiftDrive"] = stx_fs_LiftDrive;
stx_fs_LiftDrive.__name__ = "stx.fs.LiftDrive";
stx_fs_LiftDrive.canonical = function(drive,env) {
	var sep = "" + (env.device.sep == null ? "null" : stx_fs_path_Separator.toString(env.device.sep));
	switch(drive._hx_index) {
	case 0:
		var name = drive.v;
		return "name" + sep;
	case 1:
		return sep;
	}
};
var stx_fs_pack_File = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["stx.fs.pack.File"] = stx_fs_pack_File;
stx_fs_pack_File.__name__ = "stx.fs.pack.File";
stx_fs_pack_File.__super__ = stx_pico_Clazz;
stx_fs_pack_File.prototype = $extend(stx_pico_Clazz.prototype,{
	read: function(path,binary) {
		if(binary == null) {
			binary = false;
		}
		return eu_ohmrun_fletcher_Produce.fromFunXRes(function() {
			var out = null;
			try {
				var binary1 = binary;
				out = stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,new sys_io_FileInput(js_node_Fs.openSync(path,"r")));
			} catch( _g ) {
				var e = haxe_Exception.caught(_g).unwrap();
				var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/fs/pack/File.hx", lineNumber : 13, className : "stx.fs.pack.File", methodName : "read"});
				out = stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_FsFailureSum.E_Fs_FileUnreadable(e))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1))),{ fileName : "stx/fs/pack/File.hx", lineNumber : 13, className : "stx.fs.pack.File", methodName : "read"});
			}
			return out;
		});
	}
	,exists: function(str) {
		return eu_ohmrun_fletcher_Produce.fromFunXRes(function() {
			var out = null;
			try {
				out = stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,sys_FileSystem.exists(str));
			} catch( _g ) {
				var e = haxe_Exception.caught(_g).unwrap();
				var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/fs/pack/File.hx", lineNumber : 24, className : "stx.fs.pack.File", methodName : "exists"});
				out = stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_FsFailureSum.E_Fs_UnknownFSError(e))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1))),{ fileName : "stx/fs/pack/File.hx", lineNumber : 24, className : "stx.fs.pack.File", methodName : "exists"});
			}
			return out;
		});
	}
	,is_dir: function(str) {
		return eu_ohmrun_fletcher_Produce.fromFunXRes(function() {
			var out = null;
			try {
				out = stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,sys_FileSystem.isDirectory(str));
			} catch( _g ) {
				var e = haxe_Exception.caught(_g).unwrap();
				var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/fs/pack/File.hx", lineNumber : 35, className : "stx.fs.pack.File", methodName : "is_dir"});
				out = stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_FsFailureSum.E_Fs_UnknownFSError(e))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1))),{ fileName : "stx/fs/pack/File.hx", lineNumber : 35, className : "stx.fs.pack.File", methodName : "is_dir"});
			}
			return out;
		});
	}
	,put: function(archive,data) {
		return eu_ohmrun_fletcher_CommandArg.toCommand(eu_ohmrun_fletcher_CommandArg.fromCommandArgFun1Report(function(env) {
			var out = stx_nano_Report.unit();
			try {
				js_node_Fs.writeFileSync(stx_fs_path_Archive.canonical(archive,env.device.sep),data);
			} catch( _g ) {
				var e = haxe_Exception.caught(_g).unwrap();
				var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/fs/pack/File.hx", lineNumber : 46, className : "stx.fs.pack.File", methodName : "put"});
				out = stx_nano_Report.pure(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_FsFailureSum.E_Fs_UnknownFSError(e))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1)));
			}
			return out;
		}));
	}
	,__class__: stx_fs_pack_File
});
var stx_fs_pack_VolumeApi = function() { };
$hxClasses["stx.fs.pack.VolumeApi"] = stx_fs_pack_VolumeApi;
stx_fs_pack_VolumeApi.__name__ = "stx.fs.pack.VolumeApi";
stx_fs_pack_VolumeApi.__isInterface__ = true;
stx_fs_pack_VolumeApi.prototype = {
	index: null
	,parent: null
	,read: null
	,is_directory: null
	,__class__: stx_fs_pack_VolumeApi
};
var stx_fs_pack_Volume = function(sep) {
	stx_pico_Clazz.call(this);
	this.sep = sep;
};
$hxClasses["stx.fs.pack.Volume"] = stx_fs_pack_Volume;
stx_fs_pack_Volume.__name__ = "stx.fs.pack.Volume";
stx_fs_pack_Volume.__interfaces__ = [stx_fs_pack_VolumeApi];
stx_fs_pack_Volume.__super__ = stx_pico_Clazz;
stx_fs_pack_Volume.prototype = $extend(stx_pico_Clazz.prototype,{
	sep: null
	,index: function(dir) {
		var path = stx_fs_path_Directory.canonical(dir,this.sep);
		return eu_ohmrun_fletcher_ProduceLift.errata(eu_ohmrun_fletcher_Produce.fromFunXR(function() {
			return js_node_Fs.readdirSync(path);
		}),function(e) {
			var this1 = stx_nano_lift_LiftError.fault(e);
			return stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_FsFailureSum.E_Fs_CannotReadDirectory)),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1));
		});
	}
	,parent: function(dir) {
		return stx_LiftIf.if_else(stx_nano_Cluster.get_length(dir.track) > 0,function() {
			return stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,stx_fs_path_Directory.make(dir.drive,stx_fs_path_Track._new(stx_nano_ClusterLift.rdropn(dir.track,1))));
		},function() {
			var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/fs/pack/Volume.hx", lineNumber : 28, className : "stx.fs.pack.Volume", methodName : "parent"});
			return stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_PathFailureSum.E_Path_ReachedRoot)),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1))),{ fileName : "stx/fs/pack/Volume.hx", lineNumber : 28, className : "stx.fs.pack.Volume", methodName : "parent"});
		});
	}
	,read: function(archive,binary) {
		if(binary == null) {
			binary = false;
		}
		var _gthis = this;
		return eu_ohmrun_fletcher_Produce.fromFunXRes(function() {
			try {
				var path = stx_fs_path_Archive.canonical(archive,_gthis.sep);
				var binary1 = binary;
				return stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,new sys_io_FileInput(js_node_Fs.openSync(path,"r")));
			} catch( _g ) {
				var e = haxe_Exception.caught(_g).unwrap();
				var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/fs/pack/Volume.hx", lineNumber : 36, className : "stx.fs.pack.Volume", methodName : "read"});
				return stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_FsFailureSum.E_Fs_FileUnreadable(e))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1))),{ fileName : "stx/fs/pack/Volume.hx", lineNumber : 36, className : "stx.fs.pack.Volume", methodName : "read"});
			}
		});
	}
	,write: function(archive,binary) {
		if(binary == null) {
			binary = false;
		}
		var _gthis = this;
		return eu_ohmrun_fletcher_Produce.fromFunXRes(function() {
			try {
				var path = stx_fs_path_Archive.canonical(archive,_gthis.sep);
				var binary1 = binary;
				return stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,new sys_io_FileOutput(js_node_Fs.openSync(path,"w")));
			} catch( _g ) {
				var e = haxe_Exception.caught(_g).unwrap();
				var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/fs/pack/Volume.hx", lineNumber : 43, className : "stx.fs.pack.Volume", methodName : "write"});
				return stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_FsFailureSum.E_Fs_FileUnwriteable(e))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1))),{ fileName : "stx/fs/pack/Volume.hx", lineNumber : 43, className : "stx.fs.pack.Volume", methodName : "write"});
			}
		});
	}
	,is_directory: function(self) {
		return eu_ohmrun_fletcher_Attempt.fromFun1Res(function(state) {
			try {
				var canonical = stx_fs_path_RawLift.canonical(self,state.device.sep);
				var is_dir = sys_FileSystem.isDirectory(canonical);
				return stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,is_dir);
			} catch( _g ) {
				var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/fs/pack/Volume.hx", lineNumber : 55, className : "stx.fs.pack.Volume", methodName : "is_directory"});
				return stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_FsFailureSum.E_Fs_DirectoryNotFound(null))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1))),{ fileName : "stx/fs/pack/Volume.hx", lineNumber : 55, className : "stx.fs.pack.Volume", methodName : "is_directory"});
			}
		});
	}
	,__class__: stx_fs_pack_Volume
});
var stx_fs_path_Address = {};
stx_fs_path_Address._new = function(self) {
	var this1 = self;
	return this1;
};
stx_fs_path_Address.lift = function(self) {
	return stx_fs_path_Address._new(self);
};
stx_fs_path_Address.make = function(drive,track,entry) {
	return stx_fs_path_Address.lift({ drive : drive, track : track, entry : entry});
};
stx_fs_path_Address.canonical = function(this1,sep) {
	var self = this1.drive;
	var head;
	switch(self._hx_index) {
	case 0:
		var t = self.v;
		head = t + ("" + (sep == null ? "null" : stx_fs_path_Separator.toString(sep)));
		break;
	case 1:
		head = "" + (sep == null ? "null" : stx_fs_path_Separator.toString(sep));
		break;
	}
	var body = stx_fs_path_Track.canonical(this1.track,sep);
	var self = stx_pico_OptionLift.map(stx_pico_OptionLift.map(this1.entry,function(e) {
		return stx_fs_path_Entry.canonical(e);
	}),function(s) {
		return "#sep" + s;
	});
	var tail;
	if(self._hx_index == 0) {
		var v = self.v;
		tail = v;
	} else {
		tail = sep;
	}
	var this1 = stx_fs_path_Logging.log(stx_nano_Wildcard.__);
	var fn = function(pos) {
		return pos.with_stamp(function(stamp) {
			return stamp.relevel(2);
		});
	};
	(function(value,pos) {
		this1(value,fn(pos));
	})(new stx_log_EntryCtr().pure(head),stx_log_LogPosition.fromPos({ fileName : "stx/fs/path/Address.hx", lineNumber : 29, className : "stx.fs.path._Address.Address_Impl_", methodName : "canonical"}));
	var this2 = stx_fs_path_Logging.log(stx_nano_Wildcard.__);
	var fn1 = function(pos) {
		return pos.with_stamp(function(stamp) {
			return stamp.relevel(2);
		});
	};
	(function(value,pos) {
		this2(value,fn1(pos));
	})(new stx_log_EntryCtr().pure(body),stx_log_LogPosition.fromPos({ fileName : "stx/fs/path/Address.hx", lineNumber : 30, className : "stx.fs.path._Address.Address_Impl_", methodName : "canonical"}));
	var this3 = stx_fs_path_Logging.log(stx_nano_Wildcard.__);
	var fn2 = function(pos) {
		return pos.with_stamp(function(stamp) {
			return stamp.relevel(2);
		});
	};
	(function(value,pos) {
		this3(value,fn2(pos));
	})(new stx_log_EntryCtr().pure(tail),stx_log_LogPosition.fromPos({ fileName : "stx/fs/path/Address.hx", lineNumber : 31, className : "stx.fs.path._Address.Address_Impl_", methodName : "canonical"}));
	return head + body + tail;
};
stx_fs_path_Address.prj = function(this1) {
	return this1;
};
stx_fs_path_Address.get_self = function(this1) {
	return stx_fs_path_Address.lift(this1);
};
var stx_fs_path_AddressLift = function() { };
$hxClasses["stx.fs.path.AddressLift"] = stx_fs_path_AddressLift;
stx_fs_path_AddressLift.__name__ = "stx.fs.path.AddressLift";
stx_fs_path_AddressLift.lift = function(self) {
	return stx_fs_path_Address.lift(self);
};
stx_fs_path_AddressLift.is_directory = function(self) {
	return eu_ohmrun_fletcher_Attempt.fromFun1Res(function(state) {
		try {
			var canonical = stx_fs_path_Address.canonical(stx_fs_path_AddressLift.lift(self),state.device.sep);
			var is_dir = sys_FileSystem.isDirectory(canonical);
			return stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,is_dir);
		} catch( _g ) {
			var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/fs/path/Address.hx", lineNumber : 51, className : "stx.fs.path.AddressLift", methodName : "is_directory"});
			return stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_FsFailureSum.E_Fs_DirectoryNotFound(null))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1))),{ fileName : "stx/fs/path/Address.hx", lineNumber : 51, className : "stx.fs.path.AddressLift", methodName : "is_directory"});
		}
	});
};
stx_fs_path_AddressLift.toDirectory = function(self) {
	return stx_fs_path_Directory.make(self.drive,self.track);
};
stx_fs_path_AddressLift.with_entry = function(self,entry) {
	return stx_fs_path_Archive.make(self.drive,self.track,entry);
};
var stx_fs_path_ArchiveLift = function() { };
$hxClasses["stx.fs.path.ArchiveLift"] = stx_fs_path_ArchiveLift;
stx_fs_path_ArchiveLift.__name__ = "stx.fs.path.ArchiveLift";
stx_fs_path_ArchiveLift.update = function(self,data) {
	return eu_ohmrun_fletcher_CommandArg.toCommand(eu_ohmrun_fletcher_CommandArg.fromCommandArgFun1OptionRefuse(function(env) {
		var out = haxe_ds_Option.None;
		try {
			js_node_Fs.writeFileSync(stx_fs_path_Archive.canonical(self,env.device.sep),data);
		} catch( _g ) {
			var e = haxe_Exception.caught(_g).unwrap();
			var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/fs/path/Archive.hx", lineNumber : 51, className : "stx.fs.path.ArchiveLift", methodName : "update"});
			out = haxe_ds_Option.Some(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_FsFailureSum.E_Fs_UnknownFSError(e))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1)));
		}
		return out;
	}));
};
stx_fs_path_ArchiveLift.upsert = function(self,data) {
	var lhs = stx_fs_path_Directory.inject(stx_fs_path_Archive.directory(self));
	var rhs = stx_fs_path_Archive.update(self,data);
	var two = eu_ohmrun_fletcher_Command.and(lhs,rhs);
	return two;
};
stx_fs_path_ArchiveLift.val = function(self) {
	return eu_ohmrun_fletcher_Attempt.fromFun1Res(function(env) {
		var canonical = stx_fs_path_Archive.canonical(self,env.device.sep);
		try {
			return stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,js_node_Fs.readFileSync(canonical,{ encoding : "utf8"}));
		} catch( _g ) {
			var e = haxe_Exception.caught(_g).unwrap();
			if(Std.string(e) == "[file_contents," + canonical + "]") {
				var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/fs/path/Archive.hx", lineNumber : 70, className : "stx.fs.path.ArchiveLift", methodName : "val"});
				return stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_FsFailureSum.E_Fs_FileNotFound(self))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1))),{ fileName : "stx/fs/path/Archive.hx", lineNumber : 70, className : "stx.fs.path.ArchiveLift", methodName : "val"});
			} else if(Std.string(e) == "Could not read file " + canonical) {
				var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/fs/path/Archive.hx", lineNumber : 72, className : "stx.fs.path.ArchiveLift", methodName : "val"});
				return stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_FsFailureSum.E_Fs_FileNotFound(self))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1))),{ fileName : "stx/fs/path/Archive.hx", lineNumber : 72, className : "stx.fs.path.ArchiveLift", methodName : "val"});
			} else {
				var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/fs/path/Archive.hx", lineNumber : 74, className : "stx.fs.path.ArchiveLift", methodName : "val"});
				return stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_FsFailureSum.E_Fs_UnknownFSError(e))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1))),{ fileName : "stx/fs/path/Archive.hx", lineNumber : 74, className : "stx.fs.path.ArchiveLift", methodName : "val"});
			}
		}
	});
};
stx_fs_path_ArchiveLift.exists = function(self) {
	return eu_ohmrun_fletcher_Attempt.fromFun1Res(function(env) {
		var canonical = stx_fs_path_Archive.canonical(self,env.device.sep);
		var exists = sys_FileSystem.exists(canonical);
		return stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,exists);
	});
};
var stx_fs_path_Archive = {};
stx_fs_path_Archive._new = function(self) {
	var this1 = self;
	return this1;
};
stx_fs_path_Archive.lift = function(self) {
	return stx_fs_path_Archive._new(self);
};
stx_fs_path_Archive.make = function(drive,track,entry) {
	return stx_fs_path_Archive.lift({ drive : drive, track : track, entry : entry});
};
stx_fs_path_Archive.canonical = function(this1,sep) {
	var self = this1.drive;
	var head;
	switch(self._hx_index) {
	case 0:
		var t = self.v;
		head = t;
		break;
	case 1:
		head = "";
		break;
	}
	var body = this1.track.join(sep);
	var tail = stx_fs_path_Entry.canonical(this1.entry);
	return "" + head + (sep == null ? "null" : stx_fs_path_Separator.toString(sep)) + body + (sep == null ? "null" : stx_fs_path_Separator.toString(sep)) + tail;
};
stx_fs_path_Archive.update = function(this1,data) {
	return stx_fs_path_Archive._.update(stx_fs_path_Archive.get_self(this1),data);
};
stx_fs_path_Archive.upsert = function(this1,data) {
	return stx_fs_path_Archive._.upsert(stx_fs_path_Archive.get_self(this1),data);
};
stx_fs_path_Archive.directory = function(this1) {
	return stx_fs_path_Directory.make(this1.drive,this1.track);
};
stx_fs_path_Archive.prj = function(this1) {
	return this1;
};
stx_fs_path_Archive.get_self = function(this1) {
	return stx_fs_path_Archive.lift(this1);
};
var stx_fs_path_Attachment = {};
stx_fs_path_Attachment._new = function(self) {
	var this1 = self;
	return this1;
};
stx_fs_path_Attachment.lift = function(self) {
	return stx_fs_path_Attachment._new(self);
};
stx_fs_path_Attachment.make = function(entry,route) {
	return stx_fs_path_Attachment.lift({ entry : entry, track : route});
};
stx_fs_path_Attachment.fromEntry = function(entry) {
	return stx_fs_path_Attachment.make(entry,stx_fs_path_Route.unit());
};
stx_fs_path_Attachment.prj = function(this1) {
	return this1;
};
stx_fs_path_Attachment.get_self = function(this1) {
	return stx_fs_path_Attachment.lift(this1);
};
var stx_fs_path_DirectoryLift = function() { };
$hxClasses["stx.fs.path.DirectoryLift"] = stx_fs_path_DirectoryLift;
stx_fs_path_DirectoryLift.__name__ = "stx.fs.path.DirectoryLift";
stx_fs_path_DirectoryLift.eq = function(self) {
	return new stx_assert_eq_term_fs_path_Directory();
};
stx_fs_path_DirectoryLift.down = function(self,next) {
	return stx_fs_path_Directory.make(self.drive,stx_nano_ClusterLift.snoc(self.track,next));
};
stx_fs_path_DirectoryLift.entries = function(self) {
	return eu_ohmrun_fletcher_Attempt.fromFun1Res(function(env) {
		var sep = env.device.sep;
		var path = stx_fs_path_Directory.canonical(self,sep);
		var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/fs/path/Directory.hx", lineNumber : 96, className : "stx.fs.path.DirectoryLift", methodName : "entries"});
		var out = stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_FsFailureSum.E_Fs_AlreadyExists)),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1))),{ fileName : "stx/fs/path/Directory.hx", lineNumber : 96, className : "stx.fs.path.DirectoryLift", methodName : "entries"});
		out = stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,stx_nano_ClusterLift.map(stx_nano_Cluster.lift(js_node_Fs.readdirSync(path)),function(str) {
			return stx_LiftIf.if_else(sys_FileSystem.isDirectory(stx_fs_path_Directory.canonical(stx_fs_path_Directory.into(self,[str]),sep)),function() {
				return haxe_ds_Either.Left(str);
			},function() {
				return haxe_ds_Either.Right(stx_fs_path_Entry.parse(str));
			});
		}));
		return out;
	});
};
stx_fs_path_DirectoryLift.files = function(self) {
	return eu_ohmrun_fletcher_Attempt.fromFun1Res(function(env) {
		var sep = env.device.sep;
		var path = stx_fs_path_Directory.canonical(self,sep);
		return stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,stx_nano_ClusterLift.map_filter(stx_nano_Cluster.lift(js_node_Fs.readdirSync(path)),function(str) {
			return stx_LiftIf.if_else(sys_FileSystem.isDirectory(stx_fs_path_Directory.canonical(stx_fs_path_Directory.into(self,[str]),sep)),function() {
				return haxe_ds_Option.Some(str);
			},function() {
				return haxe_ds_Option.None;
			});
		}));
	});
};
stx_fs_path_DirectoryLift.directories = function(self) {
	return eu_ohmrun_fletcher_Attempt.fromFun1Res(function(env) {
		var sep = env.device.sep;
		var path = stx_fs_path_Directory.canonical(self,sep);
		return stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,stx_nano_ClusterLift.map_filter(stx_nano_Cluster.lift(js_node_Fs.readdirSync(path)),function(str) {
			return stx_LiftIf.if_else(sys_FileSystem.isDirectory(stx_fs_path_Directory.canonical(stx_fs_path_Directory.into(self,[str]),sep)),function() {
				return haxe_ds_Option.None;
			},function() {
				return haxe_ds_Option.Some(str);
			});
		}));
	});
};
stx_fs_path_DirectoryLift.attach = function(self) {
	return eu_ohmrun_fletcher_CommandArg.toCommand(eu_ohmrun_fletcher_CommandArg.fromCommandArgFun1Report(function(env) {
		var str = stx_fs_path_Directory.canonical(self,env.device.sep);
		try {
			sys_FileSystem.createDirectory(str);
			return stx_nano_Report.unit();
		} catch( _g ) {
			var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/fs/path/Directory.hx", lineNumber : 149, className : "stx.fs.path.DirectoryLift", methodName : "attach"});
			return stx_nano_Report.pure(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_FsFailureSum.E_Fs_CannotCreate(str))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1)));
		}
	}));
};
stx_fs_path_DirectoryLift.ensure = function(self) {
	return eu_ohmrun_fletcher_ReframeLift.commandeer(eu_ohmrun_fletcher_AttemptLift.reframe(stx_fs_path_DirectoryLift.exists(self)),function(bool) {
		return stx_LiftIf.if_else(bool,function() {
			return eu_ohmrun_fletcher_Command.unit();
		},function() {
			return stx_fs_path_DirectoryLift.inject(self);
		});
	});
};
stx_fs_path_DirectoryLift.inject = function(self) {
	haxe_Log.trace(self == null ? "null" : stx_fs_path_Directory.toString(self),{ fileName : "stx/fs/path/Directory.hx", lineNumber : 168, className : "stx.fs.path.DirectoryLift", methodName : "inject"});
	return eu_ohmrun_fletcher_Command.fromFun1Execute(function(env) {
		var this1 = stx_fs_path_Logging.log(stx_nano_Wildcard.__);
		var fn = function(pos) {
			return pos.with_stamp(function(stamp) {
				return stamp.relevel(2);
			});
		};
		(function(value,pos) {
			this1(value,fn(pos));
		})(stx_log_Stringify.fromString("inject:0")(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/fs/path/Directory.hx", lineNumber : 170, className : "stx.fs.path.DirectoryLift", methodName : "inject"}));
		return eu_ohmrun_fletcher_Execute.bind_fold(function(next,memo) {
			var this1 = stx_fs_path_Logging.log(stx_nano_Wildcard.__);
			var fn = function(pos) {
				return pos.with_stamp(function(stamp) {
					return stamp.relevel(1);
				});
			};
			(function(value,pos) {
				this1(value,fn(pos));
			})(stx_log_Stringify.fromString("inject")(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/fs/path/Directory.hx", lineNumber : 173, className : "stx.fs.path.DirectoryLift", methodName : "inject"}));
			var path = stx_fs_path_Directory.fromArray(next);
			var tmp;
			if(memo == null) {
				tmp = eu_ohmrun_fletcher_ProduceLift.point(eu_ohmrun_fletcher_AttemptLift.provide(stx_fs_path_DirectoryLift.exists(path),env),function(b) {
					return stx_LiftIf.if_else(b,function() {
						var this1 = eu_ohmrun_Fletcher.pure(stx_nano_Report.unit());
						return this1;
					},function() {
						return eu_ohmrun_fletcher_Command.provide(stx_fs_path_DirectoryLift.attach(path),env);
					});
				});
			} else {
				switch(memo._hx_index) {
				case 0:
					var v = memo.v;
					var this2 = eu_ohmrun_Fletcher.pure(stx_nano_Report.pure(v));
					tmp = this2;
					break;
				case 1:
					tmp = eu_ohmrun_fletcher_ProduceLift.point(eu_ohmrun_fletcher_AttemptLift.provide(stx_fs_path_DirectoryLift.exists(path),env),function(b) {
						return stx_LiftIf.if_else(b,function() {
							var this1 = eu_ohmrun_Fletcher.pure(stx_nano_Report.unit());
							return this1;
						},function() {
							return eu_ohmrun_fletcher_Command.provide(stx_fs_path_DirectoryLift.attach(path),env);
						});
					});
					break;
				}
			}
			return tmp;
		},stx_nano_ClusterLift.lfold(stx_fs_path_Directory.components(self),function(next,memo) {
			return stx_LiftIf.if_else(memo.length > 0,function() {
				return stx_lift_ArrayLift.snoc(memo,stx_lift_ArrayLift.snoc(memo[memo.length - 1],next));
			},function() {
				return stx_lift_ArrayLift.snoc(memo,[next]);
			});
		},[]));
	});
};
stx_fs_path_DirectoryLift.exists = function(self) {
	return eu_ohmrun_fletcher_Attempt.fromFun1Res(function(env) {
		try {
			return stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,sys_FileSystem.exists(stx_fs_path_Directory.canonical(self,env.device.sep)));
		} catch( _g ) {
			var e = haxe_Exception.caught(_g).unwrap();
			var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/fs/path/Directory.hx", lineNumber : 203, className : "stx.fs.path.DirectoryLift", methodName : "exists"});
			return stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_FsFailureSum.E_Fs_UnknownFSError(e))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1))),{ fileName : "stx/fs/path/Directory.hx", lineNumber : 203, className : "stx.fs.path.DirectoryLift", methodName : "exists"});
		}
	});
};
stx_fs_path_DirectoryLift.parent = function(self) {
	var fn = function() {
		var track = stx_nano_ClusterLift.rdropn(stx_fs_path_Track.snapshot(self.track),1);
		return stx_fs_path_Directory.make(self.drive,track);
	};
	return eu_ohmrun_fletcher_ProduceLift.errata(eu_ohmrun_fletcher_Produce.fromFunXR(fn),function(e) {
		var this1 = stx_nano_lift_LiftError.fault(e);
		return stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_FsFailureSum.E_Fs_UnknownFSError(e.get_data()))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1));
	});
};
stx_fs_path_DirectoryLift.tree = function(dir) {
	var this1 = stx_fs_path_Logging.log(stx_nano_Wildcard.__);
	var fn = function(pos) {
		return pos.with_stamp(function(stamp) {
			return stamp.relevel(1);
		});
	};
	(function(value,pos) {
		this1(value,fn(pos));
	})(stx_log_Stringify.fromString("tree: " + (dir == null ? "null" : stx_fs_path_Directory.toString(dir)))(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/fs/path/Directory.hx", lineNumber : 220, className : "stx.fs.path.DirectoryLift", methodName : "tree"}));
	var init = eu_ohmrun_fletcher_ArrangeLift.convert(eu_ohmrun_fletcher_Arrange.fromFun1Attempt(stx_fs_path_DirectoryLift.entries),eu_ohmrun_fletcher_Convert.Fun(function(x) {
		return stx_nano_Cluster.toIterable(x);
	}));
	var c = eu_ohmrun_fletcher_ReframeLift.convert(eu_ohmrun_fletcher_ReframeLift.arrange(eu_ohmrun_fletcher_ModulateLift.reframe(eu_ohmrun_fletcher_Modulate.pure(dir)),eu_ohmrun_fletcher_Arrange.fromFun1Attempt(stx_fs_path_DirectoryLift.entries)),eu_ohmrun_fletcher_Convert.Fun(function(x) {
		return stx_nano_Cluster.toIterable(x);
	}));
	var fn1 = function(either,t) {
		var this1 = stx_fs_path_Logging.log(stx_nano_Wildcard.__);
		var fn = function(pos) {
			return pos.with_stamp(function(stamp) {
				return stamp.relevel(1);
			});
		};
		(function(value,pos) {
			this1(value,fn(pos));
		})(new stx_log_EntryCtr().pure(either),stx_log_LogPosition.fromPos({ fileName : "stx/fs/path/Directory.hx", lineNumber : 225, className : "stx.fs.path.DirectoryLift", methodName : "tree"}));
		switch(either._hx_index) {
		case 0:
			var string = either.v;
			var into = stx_fs_path_Directory.into(dir,[string]);
			var this2 = stx_fs_path_Logging.log(stx_nano_Wildcard.__);
			var fn1 = function(pos) {
				return pos.with_stamp(function(stamp) {
					return stamp.relevel(1);
				});
			};
			(function(value,pos) {
				this2(value,fn1(pos));
			})(new stx_log_EntryCtr().pure(into),stx_log_LogPosition.fromPos({ fileName : "stx/fs/path/Directory.hx", lineNumber : 229, className : "stx.fs.path.DirectoryLift", methodName : "tree"}));
			var next = stx_fs_path_DirectoryLift.tree(into);
			var this3 = stx_fs_path_Logging.log(stx_nano_Wildcard.__);
			var fn2 = function(pos) {
				return pos.with_stamp(function(stamp) {
					return stamp.relevel(1);
				});
			};
			(function(value,pos) {
				this3(value,fn2(pos));
			})(new stx_log_EntryCtr().pure(next),stx_log_LogPosition.fromPos({ fileName : "stx/fs/path/Directory.hx", lineNumber : 231, className : "stx.fs.path.DirectoryLift", methodName : "tree"}));
			return eu_ohmrun_fletcher_Modulate._.convert(next,eu_ohmrun_fletcher_Convert.Fun(function(t1) {
				return eu_ohmrun_pml_PExpr.conflate(t,eu_ohmrun_pml_PExprSum.PGroup(stx_ds_LinkedListSum.Cons(eu_ohmrun_pml_PExprSum.PGroup(stx_ds_LinkedListSum.Cons(eu_ohmrun_pml_PExprSum.PLabel(string),stx_ds_LinkedListSum.Cons(t1,stx_ds_LinkedListSum.Nil))),stx_ds_LinkedListSum.Nil)));
			}));
		case 1:
			var entry = either.v;
			return eu_ohmrun_fletcher_Modulate.pure(eu_ohmrun_pml_PExpr.conflate(t,eu_ohmrun_pml_PExprSum.PValue(entry)));
		}
	};
	var ut = eu_ohmrun_fletcher_Arrange.pure(eu_ohmrun_pml_PExprSum.PEmpty);
	var fn2 = fn1;
	var d = stx_fn_UnaryLift.then(function(iterable) {
		return eu_ohmrun_fletcher_Arrange.bind_fold(fn2,iterable);
	},function(_) {
		if(_._hx_index == 0) {
			var v = _.v;
			return v;
		} else {
			return ut;
		}
	});
	var e = eu_ohmrun_fletcher_Attempt.toModulate(eu_ohmrun_fletcher_ReframeLift.arrangement(c,d));
	var f = eu_ohmrun_fletcher_Modulate._.mapi(e,function(env) {
		return stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,eu_ohmrun_pml_PExprSum.PEmpty,env);
	});
	var this2 = f;
	return this2;
};
stx_fs_path_DirectoryLift.search_ancestors = function(self,arw) {
	return eu_ohmrun_fletcher_Modulate.fromFun1Produce(function(state) {
		return eu_ohmrun_fletcher_ModulateLift.produce(eu_ohmrun_fletcher_Modulate._.flat_map(arw,function(b) {
			return stx_LiftIf.if_else(b,function() {
				return eu_ohmrun_fletcher_Modulate.pure(haxe_ds_Option.Some(self));
			},function() {
				return eu_ohmrun_fletcher_ModulateLift.modulate(eu_ohmrun_fletcher_ProduceLift.toModulate(stx_fs_path_DirectoryLift.parent(self)),eu_ohmrun_fletcher_Modulate.fromFun1Produce(function(that) {
					return stx_LiftIf.if_else(stx_assert_EqualedSum.is_ok(stx_fs_path_DirectoryLift.eq(self).comply(self,that)),function() {
						return eu_ohmrun_fletcher_Produce.pure(haxe_ds_Option.None);
					},function() {
						return eu_ohmrun_fletcher_ModulateLift.produce(stx_fs_path_DirectoryLift.search_ancestors(that,arw),stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,state));
					});
				}));
			});
		}),stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,{ device : state.device, enquire : self}));
	});
};
stx_fs_path_DirectoryLift.into = function(self,track) {
	return stx_fs_path_Directory.into(self,track);
};
stx_fs_path_DirectoryLift.archive = function(self,that) {
	var self1 = stx_nano_ClusterLift.lfold(that.track,function(next,memo) {
		switch(next._hx_index) {
		case 0:
			var _g = next.name;
			switch(memo._hx_index) {
			case 0:
				var dir = memo.t;
				var name = _g;
				return stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,stx_fs_path_Track.concat(dir,stx_fs_path_Track.lift(stx_nano_Cluster.lift([name]))));
			case 1:
				var _g = memo.e;
				return memo;
			}
			break;
		case 1:
			switch(memo._hx_index) {
			case 0:
				var dir = memo.t;
				var self = stx_fs_path_Track.up(dir);
				var fn = function(e) {
					return stx_fail_FsFailure.fromPathFailure(e);
				};
				var self1;
				switch(self._hx_index) {
				case 0:
					var t = self.t;
					self1 = stx_nano_Res.accept(t);
					break;
				case 1:
					var e = self.e;
					self1 = stx_nano_Res.reject(stx_fail_Refuse.errate(e,fn));
					break;
				}
				var this1 = self1;
				return this1;
			case 1:
				var _g = memo.e;
				return memo;
			}
			break;
		}
	},stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,self.track));
	var fn = function(next) {
		return stx_fs_path_Archive.lift({ drive : self.drive, track : next, entry : that.entry});
	};
	var self2;
	switch(self1._hx_index) {
	case 0:
		var t = self1.t;
		self2 = stx_nano_ResSum.Accept(fn(t));
		break;
	case 1:
		var e = self1.e;
		self2 = stx_nano_ResSum.Reject(e);
		break;
	}
	var this1 = self2;
	return this1;
};
stx_fs_path_DirectoryLift.is_root = function(self) {
	var value = stx_nano_Cluster.toIterable(self.track);
	return (((value) instanceof Array) ? value : null).length <= 0;
};
stx_fs_path_DirectoryLift.toAddress = function(self) {
	return stx_fs_path_Address.make(self.drive,self.track,haxe_ds_Option.None);
};
var stx_fs_path_Directory = {};
stx_fs_path_Directory._new = function(self) {
	var this1 = self;
	return this1;
};
stx_fs_path_Directory.lift = function(self) {
	return stx_fs_path_Directory._new(self);
};
stx_fs_path_Directory.make = function(drive,track) {
	return stx_fs_path_Directory.lift({ drive : drive, track : track});
};
stx_fs_path_Directory.fromArray = function(arr) {
	var self = stx_pico_OptionLift.map(stx_pico_OptionLift.flat_map(stx_lift_ArrayLift.head(arr),function(str) {
		return stx_LiftIf.if_else(str.charAt(str.length - 1) == ":",function() {
			return haxe_ds_Option.Some(str);
		},function() {
			return haxe_ds_Option.None;
		});
	}),function(str) {
		return stx_fs_path_Directory.make(haxe_ds_Option.Some(str),stx_fs_path_Track.lift(stx_nano_Cluster.lift(stx_lift_ArrayLift.tail(arr))));
	});
	var tmp;
	if(self._hx_index == 0) {
		var v = self.v;
		tmp = v;
	} else {
		tmp = stx_fs_path_Directory.make(haxe_ds_Option.None,stx_fs_path_Track.lift(stx_nano_Cluster.lift(arr)));
	}
	return stx_fn_lift_LiftBroker.broker(tmp,function(F) {
		return stx_fs_path_Directory.lift;
	});
};
stx_fs_path_Directory.parse = function(string) {
	return eu_ohmrun_fletcher_AttemptLift.attempt(stx_fs_Path.parse(string),eu_ohmrun_fletcher_Attempt.fromFun1Produce(stx_fs_path_Raw._.toDirectory));
};
stx_fs_path_Directory.attach = function(this1) {
	return stx_fs_path_Directory._.attach(stx_fs_path_Directory.get_self(this1));
};
stx_fs_path_Directory.inject = function(this1) {
	return stx_fs_path_Directory._.inject(stx_fs_path_Directory.get_self(this1));
};
stx_fs_path_Directory.exists = function(this1) {
	return stx_fs_path_Directory._.exists(stx_fs_path_Directory.get_self(this1));
};
stx_fs_path_Directory.prj = function(this1) {
	return this1;
};
stx_fs_path_Directory.get_self = function(this1) {
	return stx_fs_path_Directory.lift(this1);
};
stx_fs_path_Directory.canonical = function(this1,sep) {
	var self = this1.drive;
	var head;
	switch(self._hx_index) {
	case 0:
		var t = self.v;
		head = t + ("" + (sep == null ? "null" : stx_fs_path_Separator.toString(sep)));
		break;
	case 1:
		head = "" + (sep == null ? "null" : stx_fs_path_Separator.toString(sep));
		break;
	}
	var body = stx_fs_path_Track.canonical(this1.track,sep);
	var this1 = stx_fs_path_Logging.log(stx_nano_Wildcard.__);
	var fn = function(pos) {
		return pos.with_stamp(function(stamp) {
			return stamp.relevel(2);
		});
	};
	(function(value,pos) {
		this1(value,fn(pos));
	})(new stx_log_EntryCtr().pure(head),stx_log_LogPosition.fromPos({ fileName : "stx/fs/path/Directory.hx", lineNumber : 60, className : "stx.fs.path._Directory.Directory_Impl_", methodName : "canonical"}));
	var this2 = stx_fs_path_Logging.log(stx_nano_Wildcard.__);
	var fn1 = function(pos) {
		return pos.with_stamp(function(stamp) {
			return stamp.relevel(2);
		});
	};
	(function(value,pos) {
		this2(value,fn1(pos));
	})(new stx_log_EntryCtr().pure(body),stx_log_LogPosition.fromPos({ fileName : "stx/fs/path/Directory.hx", lineNumber : 61, className : "stx.fs.path._Directory.Directory_Impl_", methodName : "canonical"}));
	return head + body;
};
stx_fs_path_Directory.toString = function(this1) {
	return stx_fs_path_Directory.canonical(this1,"::");
};
stx_fs_path_Directory.components = function(this1) {
	var self = this1.drive;
	switch(self._hx_index) {
	case 0:
		var t = self.v;
		return stx_fs_path_Track.concat(stx_fs_path_Track.lift(stx_nano_Cluster.lift([t])),this1.track);
	case 1:
		return this1.track;
	}
};
stx_fs_path_Directory.into = function(this1,track) {
	return stx_fs_path_Directory.make(this1.drive,stx_fs_path_Track.concat(this1.track,track));
};
stx_fs_path_Directory.entry = function(this1,entry) {
	return stx_fs_path_Archive.make(this1.drive,this1.track,entry);
};
var stx_fs_path_Entry = {};
stx_fs_path_Entry._new = function(self) {
	var this1 = self;
	return this1;
};
stx_fs_path_Entry.lift = function(self) {
	return stx_fs_path_Entry._new(self);
};
stx_fs_path_Entry.parse = function(str) {
	var val = str.split(".");
	switch(val.length) {
	case 0:
		throw haxe_Exception.thrown("WOBBLARIA");
	case 1:
		return stx_fs_path_Entry.fromName(str);
	default:
		var ext = val.pop();
		return stx_fs_path_Entry.make(val.join("."),ext);
	}
};
stx_fs_path_Entry.make = function(name,ext) {
	return stx_fs_path_Entry.lift({ name : name, ext : ext});
};
stx_fs_path_Entry.fromName = function(name) {
	return stx_fs_path_Entry.lift({ name : name});
};
stx_fs_path_Entry.canonical = function(this1) {
	var self = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,this1.ext),function(ext) {
		return "" + this1.name + "." + ext;
	});
	if(self._hx_index == 0) {
		var v = self.v;
		return v;
	} else {
		return this1.name;
	}
};
stx_fs_path_Entry.toString = function(this1) {
	if(this1.ext == null) {
		return "" + this1.name;
	} else {
		return "" + this1.name + "." + this1.ext;
	}
};
stx_fs_path_Entry.prj = function(this1) {
	return this1;
};
stx_fs_path_Entry.get_self = function(this1) {
	return stx_fs_path_Entry.lift(this1);
};
stx_fs_path_Entry.fromToken = function(self) {
	switch(self._hx_index) {
	case 0:
		var name = self.name;
		return haxe_ds_Option.None;
	case 1:
		return haxe_ds_Option.None;
	case 2:
		return haxe_ds_Option.None;
	case 3:
		return haxe_ds_Option.None;
	case 4:
		var str = self.str;
		var arr = str.split(".");
		if(arr.length > 1) {
			var ext = arr.pop();
			return haxe_ds_Option.Some(stx_fs_path_Entry.make(arr.join("."),ext));
		} else {
			return haxe_ds_Option.Some(stx_fs_path_Entry.make(str,null));
		}
		break;
	case 5:
		var str = self.str;
		var ext = self.ext;
		return haxe_ds_Option.Some(stx_fs_path_Entry.make(str,ext));
	}
};
var stx_fs_path_EntryLift = function() { };
$hxClasses["stx.fs.path.EntryLift"] = stx_fs_path_EntryLift;
stx_fs_path_EntryLift.__name__ = "stx.fs.path.EntryLift";
var stx_fs_path_Journey = {};
stx_fs_path_Journey._new = function(self) {
	var this1 = self;
	return this1;
};
stx_fs_path_Journey.lift = function(self) {
	return stx_fs_path_Journey._new(self);
};
stx_fs_path_Journey.unit = function() {
	return stx_fs_path_Journey.lift({ drive : stx_fs_path_StemSum.Here, tread : haxe_ds_Either.Right(stx_fs_path_Track.lift(stx_nano_Cluster.lift([]))), entry : haxe_ds_Option.None});
};
stx_fs_path_Journey.make = function(drive,tread,entry) {
	return stx_fs_path_Journey.lift({ drive : drive, tread : tread, entry : entry});
};
stx_fs_path_Journey.canonical = function(this1,sep) {
	var head;
	var _g = this1.drive;
	switch(_g._hx_index) {
	case 0:
		head = "./";
		break;
	case 1:
		var _g1 = _g.drive;
		switch(_g1._hx_index) {
		case 0:
			var v = _g1.v;
			head = "" + v + "/";
			break;
		case 1:
			head = "/";
			break;
		}
		break;
	}
	var body;
	var _g = this1.tread;
	switch(_g._hx_index) {
	case 0:
		var route = _g.v;
		body = stx_fs_path_Route.canonical(route,sep);
		break;
	case 1:
		var track = _g.v;
		body = stx_fs_path_Track.canonical(track,sep);
		break;
	}
	var self = this1.entry;
	var tail;
	switch(self._hx_index) {
	case 0:
		var t = self.v;
		tail = "/" + stx_fs_path_Entry.canonical(t);
		break;
	case 1:
		tail = "";
		break;
	}
	return "" + head + body + tail;
};
stx_fs_path_Journey.exists = function(this1) {
	return eu_ohmrun_fletcher_Attempt.fromFun1Res(function(env) {
		return stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,sys_FileSystem.exists(stx_fs_path_Journey.canonical(this1,env.device.sep)));
	});
};
stx_fs_path_Journey.prj = function(this1) {
	return this1;
};
stx_fs_path_Journey.get_self = function(this1) {
	return stx_fs_path_Journey.lift(this1);
};
stx_fs_path_Journey.with_entry = function(this1,entry) {
	return stx_fs_path_Journey.lift({ drive : this1.drive, tread : this1.tread, entry : haxe_ds_Option.Some(entry)});
};
stx_fs_path_Journey.isDirectory = function(this1) {
	return stx_pico_OptionLift.is_defined(this1.entry);
};
var stx_fs_path_JourneyLift = function() { };
$hxClasses["stx.fs.path.JourneyLift"] = stx_fs_path_JourneyLift;
stx_fs_path_JourneyLift.__name__ = "stx.fs.path.JourneyLift";
stx_fs_path_JourneyLift.get_track = function(self) {
	var _g = self.tread;
	switch(_g._hx_index) {
	case 0:
		var route = _g.v;
		return stx_fs_path_RouteLift.toTrack(route);
	case 1:
		var track = _g.v;
		return stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,track);
	}
};
stx_fs_path_JourneyLift.toDirectory = function(self) {
	var self1 = stx_fs_path_JourneyLift.get_track(self);
	var self2;
	switch(self1._hx_index) {
	case 0:
		var t = self1.t;
		var _g = self.drive;
		switch(_g._hx_index) {
		case 0:
			var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/fs/path/Journey.hx", lineNumber : 66, className : "stx.fs.path.JourneyLift", methodName : "toDirectory"});
			self2 = stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_PathFailureSum.E_Path_ExpectedAbsolutePath)),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1))),{ fileName : "stx/fs/path/Journey.hx", lineNumber : 66, className : "stx.fs.path.JourneyLift", methodName : "toDirectory"});
			break;
		case 1:
			var d = _g.drive;
			self2 = stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,stx_fs_path_Directory.make(d,t));
			break;
		}
		break;
	case 1:
		var e = self1.e;
		self2 = stx_nano_ResSum.Reject(e);
		break;
	}
	var this1 = self2;
	return this1;
};
stx_fs_path_JourneyLift.toArchive = function(self) {
	var self1 = stx_fs_path_Stem.fold(self.drive,function() {
		var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/fs/path/Journey.hx", lineNumber : 74, className : "stx.fs.path.JourneyLift", methodName : "toArchive"});
		return stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_PathFailureSum.E_Path_ExpectedEntry)),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1))),{ fileName : "stx/fs/path/Journey.hx", lineNumber : 74, className : "stx.fs.path.JourneyLift", methodName : "toArchive"});
	},function(x) {
		return stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,x);
	});
	var that = stx_fs_path_JourneyLift.get_track(self);
	var self2;
	switch(self1._hx_index) {
	case 0:
		var _g = self1.t;
		switch(that._hx_index) {
		case 0:
			var tt = that.t;
			var t = _g;
			self2 = stx_nano_ResSum.Accept(stx_nano_Couple.make(t,tt));
			break;
		case 1:
			var e = that.e;
			self2 = stx_nano_ResSum.Reject(e);
			break;
		}
		break;
	case 1:
		var _g = self1.e;
		if(that._hx_index == 1) {
			var ee = that.e;
			var e = _g;
			self2 = stx_nano_ResSum.Reject(stx_fail_Refuse.concat(e,ee));
		} else {
			var e = _g;
			self2 = stx_nano_ResSum.Reject(e);
		}
		break;
	}
	var that = stx_nano_lift_LiftOptionNano.resolve(self.entry,function(_) {
		return stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_PathFailureSum.E_Path_ExpectedEntry)),haxe_ds_Option.None,stx_pico_Option.fromNullT(_));
	},{ fileName : "stx/fs/path/Journey.hx", lineNumber : 78, className : "stx.fs.path.JourneyLift", methodName : "toArchive"});
	switch(self2._hx_index) {
	case 0:
		var _g = self2.t;
		switch(that._hx_index) {
		case 0:
			var tt = that.t;
			var t = _g;
			return stx_nano_ResSum.Accept(stx_fs_path_Archive.make(stx_nano_CoupleLift.fst(t),stx_nano_CoupleLift.snd(t),tt));
		case 1:
			var e = that.e;
			return stx_nano_ResSum.Reject(e);
		}
		break;
	case 1:
		var _g = self2.e;
		if(that._hx_index == 1) {
			var ee = that.e;
			var e = _g;
			return stx_nano_ResSum.Reject(stx_fail_Refuse.concat(e,ee));
		} else {
			var e = _g;
			return stx_nano_ResSum.Reject(e);
		}
		break;
	}
};
stx_fs_path_JourneyLift.materialize = function(self) {
	return stx_LiftIf.if_else(stx_fs_path_Journey.isDirectory(self),function() {
		var self1 = stx_fs_path_JourneyLift.toDirectory(self);
		var self2;
		switch(self1._hx_index) {
		case 0:
			var t = self1.t;
			self2 = stx_nano_ResSum.Accept(haxe_ds_Either.Left(t));
			break;
		case 1:
			var e = self1.e;
			self2 = stx_nano_ResSum.Reject(e);
			break;
		}
		var this1 = self2;
		return this1;
	},function() {
		var self1 = stx_fs_path_JourneyLift.toArchive(self);
		var self2;
		switch(self1._hx_index) {
		case 0:
			var t = self1.t;
			self2 = stx_nano_ResSum.Accept(haxe_ds_Either.Right(t));
			break;
		case 1:
			var e = self1.e;
			self2 = stx_nano_ResSum.Reject(e);
			break;
		}
		var this1 = self2;
		return this1;
	});
};
var stx_fs_path_Logging = function() { };
$hxClasses["stx.fs.path.Logging"] = stx_fs_path_Logging;
stx_fs_path_Logging.__name__ = "stx.fs.path.Logging";
stx_fs_path_Logging.log = function(wildcard) {
	var self = stx_pico_OptionLift.map(stx_pkg_Pkg.source(stx_PkgLift.pkg(stx_nano_Wildcard.__,{ fileName : "stx/fs/path/Logging.hx", lineNumber : 9, className : "stx.fs.path.Logging", methodName : "log"})),function(scope) {
		var this1 = stx_Log.unit();
		var tag = scope.pack.join("/");
		var this2 = this1;
		var fn = function(pos) {
			return pos.with_stamp(function(stamp) {
				return stamp.tag(tag);
			});
		};
		return function(value,pos) {
			this2(value,fn(pos));
		};
	});
	if(self._hx_index == 0) {
		var v = self.v;
		return v;
	} else {
		return stx_Log.unit();
	}
};
var stx_fs_path_MoveSum = $hxEnums["stx.fs.path.MoveSum"] = { __ename__:"stx.fs.path.MoveSum",__constructs__:null
	,Into: ($_=function(name) { return {_hx_index:0,name:name,__enum__:"stx.fs.path.MoveSum",toString:$estr}; },$_._hx_name="Into",$_.__params__ = ["name"],$_)
	,From: {_hx_name:"From",_hx_index:1,__enum__:"stx.fs.path.MoveSum",toString:$estr}
};
stx_fs_path_MoveSum.__constructs__ = [stx_fs_path_MoveSum.Into,stx_fs_path_MoveSum.From];
var stx_fs_path_RawLift = function() { };
$hxClasses["stx.fs.path.RawLift"] = stx_fs_path_RawLift;
stx_fs_path_RawLift.__name__ = "stx.fs.path.RawLift";
stx_fs_path_RawLift.canonical = function(self,sep) {
	var self1 = stx_nano_ClusterLift.lfold1(stx_nano_ClusterLift.map(stx_fs_path_Raw.prj(self),function(token) {
		return stx_parse_path_Token.canonical(token,sep);
	}),function(x,y) {
		return "" + x + y;
	});
	if(self1._hx_index == 0) {
		var v = self1.v;
		return v;
	} else {
		return ".";
	}
};
stx_fs_path_RawLift.toJourney = function(arr) {
	var head = stx_nano_ClusterLift.head(arr);
	var rest = stx_nano_ClusterLift.tail(arr);
	switch(head._hx_index) {
	case 0:
		var v = head.v;
		var is_denormalized = false;
		var is_absolute = false;
		var head = stx_fs_path_StemSum.Here;
		var body = [];
		var tail = haxe_ds_Option.None;
		var error = null;
		switch(v._hx_index) {
		case 0:
			var drive = v.name;
			is_absolute = true;
			head = stx_fs_path_StemSum.Root(drive);
			break;
		case 1:
			break;
		case 2:
			is_denormalized = true;
			stx_lift_ArrayLift.prj(body).push(stx_fs_path_MoveSum.From);
			break;
		case 4:
			var str = v.str;
			stx_lift_ArrayLift.prj(body).push(stx_fs_path_MoveSum.Into(str));
			break;
		case 5:
			var _g = v.str;
			var _g1 = v.ext;
			if(_g1 == null) {
				var str = _g;
				tail = haxe_ds_Option.Some(stx_fs_path_Entry.fromName(str));
			} else {
				var ext = _g1;
				var str = _g;
				tail = haxe_ds_Option.Some(stx_fs_path_Entry.lift({ name : str, ext : ext}));
			}
			break;
		default:
			haxe_Log.trace(v,{ fileName : "stx/fs/path/Raw.hx", lineNumber : 64, className : "stx.fs.path.RawLift", methodName : "toJourney"});
			var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/fs/path/Raw.hx", lineNumber : 65, className : "stx.fs.path.RawLift", methodName : "toJourney"});
			error = stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_PathFailureSum.E_Path_PathParse(stx_fail_PathParseFailureSum.E_PathParse_NoHeadNode))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1));
		}
		var _g_current = 0;
		var _g_array = rest;
		while(_g_current < _g_array.length) {
			var node = _g_array[_g_current++];
			switch(node._hx_index) {
			case 0:
				var name = node.name;
				var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/fs/path/Raw.hx", lineNumber : 71, className : "stx.fs.path.RawLift", methodName : "toJourney"});
				error = stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_PathFailureSum.E_Path_PathParse(stx_fail_PathParseFailureSum.E_PathParse_MisplacedHeadNode))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1));
				break;
			case 1:
				var this2 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/fs/path/Raw.hx", lineNumber : 73, className : "stx.fs.path.RawLift", methodName : "toJourney"});
				error = stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_PathFailureSum.E_Path_PathParse(stx_fail_PathParseFailureSum.E_PathParse_MisplacedHeadNode))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this2));
				break;
			case 2:
				stx_lift_ArrayLift.prj(body).push(stx_fs_path_MoveSum.From);
				break;
			case 3:
				break;
			case 4:
				var str = node.str;
				stx_lift_ArrayLift.prj(body).push(stx_fs_path_MoveSum.Into(str));
				break;
			case 5:
				var _g = node.str;
				var _g1 = node.ext;
				if(_g1 == null) {
					var str1 = _g;
					tail = haxe_ds_Option.Some(stx_fs_path_Entry.fromName(str1));
				} else {
					var ext = _g1;
					var str2 = _g;
					tail = haxe_ds_Option.Some(stx_fs_path_Entry.lift({ name : str2, ext : ext}));
				}
				break;
			}
		}
		if(error != null) {
			return stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(error),{ fileName : "stx/fs/path/Raw.hx", lineNumber : 88, className : "stx.fs.path.RawLift", methodName : "toJourney"});
		} else {
			var track;
			if(!is_denormalized) {
				var result = new Array(body.length);
				var _g = 0;
				var _g1 = body.length;
				while(_g < _g1) {
					var i = _g++;
					var x = body[i];
					var track1;
					if(x._hx_index == 0) {
						var v = x.name;
						track1 = v;
					} else {
						track1 = "";
					}
					result[i] = track1;
				}
				track = stx_fs_path_Track.lift(result);
			} else {
				track = stx_fs_path_Track.lift(stx_nano_Cluster.unit());
			}
			return stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,stx_fs_path_Journey.lift({ drive : head, tread : stx_LiftIf.if_else(is_denormalized,function() {
				return haxe_ds_Either.Left(stx_fs_path_Route.lift(stx_nano_Cluster.lift(body)));
			},function() {
				return haxe_ds_Either.Right(track);
			}), entry : tail}));
		}
		break;
	case 1:
		return stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,stx_fs_path_Journey.lift({ drive : stx_fs_path_StemSum.Here, tread : haxe_ds_Either.Right(stx_fs_path_Track.lift(stx_nano_Cluster.lift([]))), entry : haxe_ds_Option.None}));
	}
};
stx_fs_path_RawLift.toDirectory = function(raw) {
	var this1 = stx_fs_path_Logging.log(stx_nano_Wildcard.__);
	var fn = function(pos) {
		return pos.with_stamp(function(stamp) {
			return stamp.relevel(2);
		});
	};
	(function(value,pos) {
		this1(value,fn(pos));
	})(new stx_log_EntryCtr().pure(raw),stx_log_LogPosition.fromPos({ fileName : "stx/fs/path/Raw.hx", lineNumber : 112, className : "stx.fs.path.RawLift", methodName : "toDirectory"}));
	var self;
	var _g = stx_nano_ClusterLift.head(raw);
	if(_g._hx_index == 0) {
		var _g1 = _g.v;
		if(_g1._hx_index == 0) {
			var head = _g1.name;
			var drive = head;
			var this2 = stx_fs_path_Logging.log(stx_nano_Wildcard.__);
			var fn1 = function(pos) {
				return pos.with_stamp(function(stamp) {
					return stamp.relevel(2);
				});
			};
			(function(value,pos) {
				this2(value,fn1(pos));
			})(new stx_log_EntryCtr().pure(drive),stx_log_LogPosition.fromPos({ fileName : "stx/fs/path/Raw.hx", lineNumber : 116, className : "stx.fs.path.RawLift", methodName : "toDirectory"}));
			var track = stx_nano_ClusterLift.lfold(stx_nano_ClusterLift.tail(raw),function(next,memo) {
				var track;
				switch(memo._hx_index) {
				case 0:
					var t = memo.t;
					var this1 = stx_fs_path_Logging.log(stx_nano_Wildcard.__);
					var fn = function(pos) {
						return pos.with_stamp(function(stamp) {
							return stamp.relevel(1);
						});
					};
					var this2 = function(value,pos) {
						this1(value,fn(pos));
					};
					var ctr = null;
					var pos = { fileName : "stx/fs/path/Raw.hx", lineNumber : 119, className : "stx.fs.path.RawLift", methodName : "toDirectory"};
					var log_pos = stx_log_LogPosition.pure(pos);
					var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,ctr);
					if(self._hx_index == 0) {
						var v = self.v;
						ctr = v;
					} else {
						ctr = stx_log_StringCtr.unit();
					}
					var _g = (function(v) {
						this2(stx_log_StringCtr.capture(ctr,v),stx_log_LogPosition.fromPos(pos));
						return v;
					})(next);
					switch(_g._hx_index) {
					case 0:
						var _g1 = _g.name;
						var this3 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/fs/path/Raw.hx", lineNumber : 120, className : "stx.fs.path.RawLift", methodName : "toDirectory"});
						track = stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_PathFailureSum.E_Path_PathParse(stx_fail_PathParseFailureSum.E_PathParse_MisplacedHeadNode))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this3))),{ fileName : "stx/fs/path/Raw.hx", lineNumber : 120, className : "stx.fs.path.RawLift", methodName : "toDirectory"});
						break;
					case 1:
						var this3 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/fs/path/Raw.hx", lineNumber : 121, className : "stx.fs.path.RawLift", methodName : "toDirectory"});
						track = stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_PathFailureSum.E_Path_PathParse(stx_fail_PathParseFailureSum.E_PathParse_MisplacedHeadNode))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this3))),{ fileName : "stx/fs/path/Raw.hx", lineNumber : 121, className : "stx.fs.path.RawLift", methodName : "toDirectory"});
						break;
					case 2:
						var this3 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/fs/path/Raw.hx", lineNumber : 122, className : "stx.fs.path.RawLift", methodName : "toDirectory"});
						track = stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_PathFailureSum.E_Path_PathParse(stx_fail_PathParseFailureSum.E_PathParse_UnexpectedDenormalizedPath(raw)))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this3))),{ fileName : "stx/fs/path/Raw.hx", lineNumber : 122, className : "stx.fs.path.RawLift", methodName : "toDirectory"});
						break;
					case 3:
						track = stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,t);
						break;
					case 4:
						var str = _g.str;
						track = stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,stx_nano_ClusterLift.snoc(t,str));
						break;
					case 5:
						var _g1 = _g.str;
						var _g1 = _g.ext;
						var this3 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/fs/path/Raw.hx", lineNumber : 125, className : "stx.fs.path.RawLift", methodName : "toDirectory"});
						track = stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_PathFailureSum.E_Path_PathParse(stx_fail_PathParseFailureSum.E_PathParse_UnexpectedFileInDirectory(raw)))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this3))),{ fileName : "stx/fs/path/Raw.hx", lineNumber : 125, className : "stx.fs.path.RawLift", methodName : "toDirectory"});
						break;
					}
					break;
				case 1:
					var e = memo.e;
					track = stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(e),{ fileName : "stx/fs/path/Raw.hx", lineNumber : 127, className : "stx.fs.path.RawLift", methodName : "toDirectory"});
					break;
				}
				return track;
			},stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,[]));
			var this3 = stx_fs_path_Logging.log(stx_nano_Wildcard.__);
			var fn2 = function(pos) {
				return pos.with_stamp(function(stamp) {
					return stamp.relevel(2);
				});
			};
			(function(value,pos) {
				this3(value,fn2(pos));
			})(new stx_log_EntryCtr().pure(track),stx_log_LogPosition.fromPos({ fileName : "stx/fs/path/Raw.hx", lineNumber : 131, className : "stx.fs.path.RawLift", methodName : "toDirectory"}));
			var fn3 = function(track) {
				return stx_fs_path_Directory.make(drive,track);
			};
			var self1;
			switch(track._hx_index) {
			case 0:
				var t = track.t;
				self1 = stx_nano_ResSum.Accept(fn3(t));
				break;
			case 1:
				var e = track.e;
				self1 = stx_nano_ResSum.Reject(e);
				break;
			}
			var this4 = self1;
			self = eu_ohmrun_fletcher_ProduceArg.fromSync(this4);
		} else {
			var this4 = stx_fs_path_Logging.log(stx_nano_Wildcard.__);
			var fn3 = function(pos) {
				return pos.with_stamp(function(stamp) {
					return stamp.relevel(2);
				});
			};
			(function(value,pos) {
				this4(value,fn3(pos));
			})(new stx_log_EntryCtr().pure(stx_nano_ClusterLift.head(raw)),stx_log_LogPosition.fromPos({ fileName : "stx/fs/path/Raw.hx", lineNumber : 136, className : "stx.fs.path.RawLift", methodName : "toDirectory"}));
			var this5 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/fs/path/Raw.hx", lineNumber : 137, className : "stx.fs.path.RawLift", methodName : "toDirectory"});
			self = eu_ohmrun_fletcher_ProduceArg.fromSync(stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_PathFailureSum.E_Path_PathParse(stx_fail_PathParseFailureSum.E_PathParse_NoHeadNode))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this5))),{ fileName : "stx/fs/path/Raw.hx", lineNumber : 137, className : "stx.fs.path.RawLift", methodName : "toDirectory"}));
		}
	} else {
		var this5 = stx_fs_path_Logging.log(stx_nano_Wildcard.__);
		var fn4 = function(pos) {
			return pos.with_stamp(function(stamp) {
				return stamp.relevel(2);
			});
		};
		(function(value,pos) {
			this5(value,fn4(pos));
		})(new stx_log_EntryCtr().pure(stx_nano_ClusterLift.head(raw)),stx_log_LogPosition.fromPos({ fileName : "stx/fs/path/Raw.hx", lineNumber : 136, className : "stx.fs.path.RawLift", methodName : "toDirectory"}));
		var this6 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/fs/path/Raw.hx", lineNumber : 137, className : "stx.fs.path.RawLift", methodName : "toDirectory"});
		self = eu_ohmrun_fletcher_ProduceArg.fromSync(stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_PathFailureSum.E_Path_PathParse(stx_fail_PathParseFailureSum.E_PathParse_NoHeadNode))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this6))),{ fileName : "stx/fs/path/Raw.hx", lineNumber : 137, className : "stx.fs.path.RawLift", methodName : "toDirectory"}));
	}
	switch(self._hx_index) {
	case 0:
		var o = self.o;
		return eu_ohmrun_fletcher_Produce.pure(o);
	case 1:
		var res = self.res;
		return eu_ohmrun_fletcher_Produce.Sync(res);
	case 2:
		var fn5 = self.fn;
		return eu_ohmrun_fletcher_Produce.Thunk(fn5);
	case 3:
		var refuse = self.Refuse;
		return eu_ohmrun_fletcher_Produce.fromRefuse(refuse);
	case 4:
		var pledge = self.pledge;
		return eu_ohmrun_fletcher_Produce.fromPledge(pledge);
	case 5:
		var fn5 = self.fn;
		return eu_ohmrun_fletcher_Produce.fromFunXProduce(fn5);
	case 6:
		var fletcher = self.fletcher;
		return eu_ohmrun_fletcher_Produce.fromFletcher(fletcher);
	}
};
stx_fs_path_RawLift.toAttachment = function(raw) {
	var this1 = stx_fs_path_Logging.log(stx_nano_Wildcard.__);
	var fn = function(pos) {
		return pos.with_stamp(function(stamp) {
			return stamp.relevel(2);
		});
	};
	(function(value,pos) {
		this1(value,fn(pos));
	})(new stx_log_EntryCtr().pure(stx_nano_ClusterLift.head(raw)),stx_log_LogPosition.fromPos({ fileName : "stx/fs/path/Raw.hx", lineNumber : 142, className : "stx.fs.path.RawLift", methodName : "toAttachment"}));
	var data;
	var _g = stx_nano_ClusterLift.head(raw);
	if(_g._hx_index == 0) {
		var _g1 = _g.v;
		switch(_g1._hx_index) {
		case 1:
			data = stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,stx_nano_ClusterLift.tail(raw));
			break;
		case 4:
			var string = _g1.str;
			data = stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,raw);
			break;
		default:
			var this2 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/fs/path/Raw.hx", lineNumber : 146, className : "stx.fs.path.RawLift", methodName : "toAttachment"});
			data = stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_PathFailureSum.E_Path_PathParse(stx_fail_PathParseFailureSum.E_PathParse_MalformedRaw(raw)))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this2))),{ fileName : "stx/fs/path/Raw.hx", lineNumber : 146, className : "stx.fs.path.RawLift", methodName : "toAttachment"});
		}
	} else {
		var this2 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/fs/path/Raw.hx", lineNumber : 146, className : "stx.fs.path.RawLift", methodName : "toAttachment"});
		data = stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_PathFailureSum.E_Path_PathParse(stx_fail_PathParseFailureSum.E_PathParse_MalformedRaw(raw)))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this2))),{ fileName : "stx/fs/path/Raw.hx", lineNumber : 146, className : "stx.fs.path.RawLift", methodName : "toAttachment"});
	}
	var last = stx_nano_lift_LiftOptionNano.resolve(stx_nano_ClusterLift.last(raw),function(_) {
		return stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_PathFailure.fromPathParseFailure(stx_fail_PathParseFailureSum.E_PathParse_MalformedRaw(raw)))),haxe_ds_Option.None,stx_pico_Option.fromNullT(_));
	},{ fileName : "stx/fs/path/Raw.hx", lineNumber : 149, className : "stx.fs.path.RawLift", methodName : "toAttachment"});
	var fn1 = function(c) {
		return stx_nano_ClusterLift.rdropn(c,1);
	};
	var self;
	switch(data._hx_index) {
	case 0:
		var t = data.t;
		self = stx_nano_ResSum.Accept(fn1(t));
		break;
	case 1:
		var e = data.e;
		self = stx_nano_ResSum.Reject(e);
		break;
	}
	var this2 = self;
	var self = this2;
	var self1;
	switch(self._hx_index) {
	case 0:
		var t = self.t;
		var raw1 = t;
		var self2 = stx_nano_ClusterLift.lfold(raw1,function(next,memo) {
			switch(memo._hx_index) {
			case 0:
				var t = memo.t;
				switch(next._hx_index) {
				case 0:
					var _g = next.name;
					var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/fs/path/Raw.hx", lineNumber : 155, className : "stx.fs.path.RawLift", methodName : "toAttachment"});
					return stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_PathFailureSum.E_Path_PathParse(stx_fail_PathParseFailureSum.E_PathParse_MisplacedHeadNode))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1))),{ fileName : "stx/fs/path/Raw.hx", lineNumber : 155, className : "stx.fs.path.RawLift", methodName : "toAttachment"});
				case 1:
					var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/fs/path/Raw.hx", lineNumber : 156, className : "stx.fs.path.RawLift", methodName : "toAttachment"});
					return stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_PathFailureSum.E_Path_PathParse(stx_fail_PathParseFailureSum.E_PathParse_MisplacedHeadNode))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1))),{ fileName : "stx/fs/path/Raw.hx", lineNumber : 156, className : "stx.fs.path.RawLift", methodName : "toAttachment"});
				case 2:
					return stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,stx_fs_path_MaybeAttachment.snoc(t,stx_fs_path_MoveSum.From));
				case 3:
					return stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,t);
				case 4:
					var str = next.str;
					return stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,stx_fs_path_MaybeAttachment.snoc(t,stx_fs_path_MoveSum.Into(str)));
				case 5:
					var n = next.str;
					var e = next.ext;
					var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/fs/path/Raw.hx", lineNumber : 159, className : "stx.fs.path.RawLift", methodName : "toAttachment"});
					return stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_PathFailureSum.E_Path_PathParse(stx_fail_PathParseFailureSum.E_PathParse_MalformedRaw(raw1)))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1))),{ fileName : "stx/fs/path/Raw.hx", lineNumber : 159, className : "stx.fs.path.RawLift", methodName : "toAttachment"});
				}
				break;
			case 1:
				var e = memo.e;
				return stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(e),{ fileName : "stx/fs/path/Raw.hx", lineNumber : 162, className : "stx.fs.path.RawLift", methodName : "toAttachment"});
			}
		},stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,stx_fs_path_MaybeAttachment._new()));
		var self3;
		switch(self2._hx_index) {
		case 0:
			var t = self2.t;
			var x = t;
			var fn1 = function(y) {
				return stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,stx_fs_path_Entry.fromToken(y),x);
			};
			var self4;
			switch(last._hx_index) {
			case 0:
				var t = last.t;
				self4 = stx_nano_ResSum.Accept(fn1(t));
				break;
			case 1:
				var e = last.e;
				self4 = stx_nano_ResSum.Reject(e);
				break;
			}
			var this2 = self4;
			self3 = this2;
			break;
		case 1:
			var e = self2.e;
			self3 = stx_nano_ResSum.Reject(e);
			break;
		}
		var this2 = self3;
		var self2 = this2;
		var self3;
		switch(self2._hx_index) {
		case 0:
			var t = self2.t;
			var self4 = stx_nano_CoupleLift.fst(t);
			var self5;
			switch(self4._hx_index) {
			case 0:
				var t1 = self4.v;
				self5 = stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,stx_fs_path_Attachment.make(t1,stx_nano_CoupleLift.snd(stx_nano_CoupleLift.snd(t))));
				break;
			case 1:
				var this2 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/fs/path/Raw.hx", lineNumber : 170, className : "stx.fs.path.RawLift", methodName : "toAttachment"});
				self5 = stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_PathFailureSum.E_Path_PathParse(stx_fail_PathParseFailureSum.E_PathParse_NoFileFoundOnAttachment(raw1)))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this2))),{ fileName : "stx/fs/path/Raw.hx", lineNumber : 170, className : "stx.fs.path.RawLift", methodName : "toAttachment"});
				break;
			}
			self3 = self5;
			break;
		case 1:
			var e = self2.e;
			self3 = stx_nano_ResSum.Reject(e);
			break;
		}
		var this2 = self3;
		self1 = this2;
		break;
	case 1:
		var e = self.e;
		self1 = stx_nano_ResSum.Reject(e);
		break;
	}
	var this2 = self1;
	return this2;
};
stx_fs_path_RawLift.toAddress = function(raw) {
	var _g = stx_nano_ClusterLift.head(raw);
	if(_g._hx_index == 0) {
		var _g1 = _g.v;
		if(_g1._hx_index == 0) {
			var head = _g1.name;
			var drive = head;
			var entry = stx_nano_ClusterLift.last(raw);
			var track = stx_nano_ClusterLift.lfold(stx_nano_ClusterLift.rdropn(stx_nano_ClusterLift.tail(raw),1),function(next,memo) {
				var track;
				switch(memo._hx_index) {
				case 0:
					var t = memo.t;
					switch(next._hx_index) {
					case 0:
						var _g = next.name;
						var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/fs/path/Raw.hx", lineNumber : 183, className : "stx.fs.path.RawLift", methodName : "toAddress"});
						track = stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_PathFailureSum.E_Path_PathParse(stx_fail_PathParseFailureSum.E_PathParse_MisplacedHeadNode))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1))),{ fileName : "stx/fs/path/Raw.hx", lineNumber : 183, className : "stx.fs.path.RawLift", methodName : "toAddress"});
						break;
					case 1:
						var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/fs/path/Raw.hx", lineNumber : 184, className : "stx.fs.path.RawLift", methodName : "toAddress"});
						track = stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_PathFailureSum.E_Path_PathParse(stx_fail_PathParseFailureSum.E_PathParse_MisplacedHeadNode))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1))),{ fileName : "stx/fs/path/Raw.hx", lineNumber : 184, className : "stx.fs.path.RawLift", methodName : "toAddress"});
						break;
					case 2:
						var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/fs/path/Raw.hx", lineNumber : 185, className : "stx.fs.path.RawLift", methodName : "toAddress"});
						track = stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_PathFailureSum.E_Path_PathParse(stx_fail_PathParseFailureSum.E_PathParse_UnexpectedDenormalizedPath(raw)))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1))),{ fileName : "stx/fs/path/Raw.hx", lineNumber : 185, className : "stx.fs.path.RawLift", methodName : "toAddress"});
						break;
					case 3:
						track = memo;
						break;
					case 4:
						var str = next.str;
						var fn = function(arr) {
							return stx_nano_ClusterLift.snoc(arr,str);
						};
						var self;
						switch(memo._hx_index) {
						case 0:
							var t = memo.t;
							self = stx_nano_ResSum.Accept(fn(t));
							break;
						case 1:
							var e = memo.e;
							self = stx_nano_ResSum.Reject(e);
							break;
						}
						var this1 = self;
						track = this1;
						break;
					case 5:
						var nm = next.str;
						var ext = next.ext;
						var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/fs/path/Raw.hx", lineNumber : 188, className : "stx.fs.path.RawLift", methodName : "toAddress"});
						track = stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_PathFailureSum.E_Path_PathParse(stx_fail_PathParseFailureSum.E_PathParse_MalformedRaw(raw)))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1))),{ fileName : "stx/fs/path/Raw.hx", lineNumber : 188, className : "stx.fs.path.RawLift", methodName : "toAddress"});
						break;
					}
					break;
				case 1:
					var e = memo.e;
					track = stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(e),{ fileName : "stx/fs/path/Raw.hx", lineNumber : 190, className : "stx.fs.path.RawLift", methodName : "toAddress"});
					break;
				}
				return track;
			},stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,stx_nano_Cluster.unit()));
			var self;
			switch(track._hx_index) {
			case 0:
				var t = track.t;
				var self1;
				switch(entry._hx_index) {
				case 0:
					var t1 = entry.v;
					switch(t1._hx_index) {
					case 3:
						self1 = stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,haxe_ds_Option.None,t));
						break;
					case 4:
						var str = t1.str;
						self1 = stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,haxe_ds_Option.None,stx_nano_ClusterLift.snoc(t,str)));
						break;
					case 5:
						var nm = t1.str;
						var ext = t1.ext;
						self1 = stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,haxe_ds_Option.Some(stx_fs_path_Entry.make(nm,ext)),t));
						break;
					default:
						var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/fs/path/Raw.hx", lineNumber : 200, className : "stx.fs.path.RawLift", methodName : "toAddress"});
						self1 = stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_PathFailureSum.E_Path_PathParse(stx_fail_PathParseFailureSum.E_PathParse_MalformedRaw(raw)))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1))),{ fileName : "stx/fs/path/Raw.hx", lineNumber : 200, className : "stx.fs.path.RawLift", methodName : "toAddress"});
					}
					break;
				case 1:
					var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/fs/path/Raw.hx", lineNumber : 202, className : "stx.fs.path.RawLift", methodName : "toAddress"});
					self1 = stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_PathFailureSum.E_Path_PathParse(stx_fail_PathParseFailureSum.E_PathParse_MalformedRaw(raw)))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1))),{ fileName : "stx/fs/path/Raw.hx", lineNumber : 202, className : "stx.fs.path.RawLift", methodName : "toAddress"});
					break;
				}
				self = self1;
				break;
			case 1:
				var e = track.e;
				self = stx_nano_ResSum.Reject(e);
				break;
			}
			var this1 = self;
			var self = this1;
			var fn = function(entry) {
				return stx_fs_path_Address.make(drive,stx_nano_CoupleLift.snd(entry),stx_nano_CoupleLift.fst(entry));
			};
			var self1;
			switch(self._hx_index) {
			case 0:
				var t = self.t;
				self1 = stx_nano_ResSum.Accept(fn(t));
				break;
			case 1:
				var e = self.e;
				self1 = stx_nano_ResSum.Reject(e);
				break;
			}
			var this1 = self1;
			return this1;
		} else {
			var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/fs/path/Raw.hx", lineNumber : 208, className : "stx.fs.path.RawLift", methodName : "toAddress"});
			return stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_PathFailureSum.E_Path_PathParse(stx_fail_PathParseFailureSum.E_PathParse_NoHeadNode))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1))),{ fileName : "stx/fs/path/Raw.hx", lineNumber : 208, className : "stx.fs.path.RawLift", methodName : "toAddress"});
		}
	} else {
		var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/fs/path/Raw.hx", lineNumber : 208, className : "stx.fs.path.RawLift", methodName : "toAddress"});
		return stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_PathFailureSum.E_Path_PathParse(stx_fail_PathParseFailureSum.E_PathParse_NoHeadNode))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1))),{ fileName : "stx/fs/path/Raw.hx", lineNumber : 208, className : "stx.fs.path.RawLift", methodName : "toAddress"});
	}
};
stx_fs_path_RawLift.toArchive = function(raw) {
	var self = stx_fs_path_RawLift.toAddress(raw);
	var self1;
	switch(self._hx_index) {
	case 0:
		var t = self.t;
		var self2 = t.entry;
		var self3;
		switch(self2._hx_index) {
		case 0:
			var t1 = self2.v;
			self3 = stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,stx_fs_path_Archive.make(t.drive,t.track,t1));
			break;
		case 1:
			var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/fs/path/Raw.hx", lineNumber : 215, className : "stx.fs.path.RawLift", methodName : "toArchive"});
			self3 = stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_PathFailureSum.E_Path_PathParse(stx_fail_PathParseFailureSum.E_PathParse_ExpectedEntry(raw)))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1))),{ fileName : "stx/fs/path/Raw.hx", lineNumber : 215, className : "stx.fs.path.RawLift", methodName : "toArchive"});
			break;
		}
		self1 = self3;
		break;
	case 1:
		var e = self.e;
		self1 = stx_nano_ResSum.Reject(e);
		break;
	}
	var this1 = self1;
	return this1;
};
stx_fs_path_RawLift.kind = function(arr) {
	var absolute = false;
	var normalized = true;
	var has_trailing_slash = false;
	var file = stx_nano_TrivalentSum.Nay;
	var _g = 0;
	var _g1 = stx_nano_Cluster.get_length(arr);
	while(_g < _g1) {
		var i = _g++;
		var token = stx_fs_path_Raw.at(arr,i);
		if(i == 0) {
			var _g2 = stx_parse_path_Token.prj(token);
			absolute = _g2._hx_index == 0 && _g2.name._hx_index == 1;
		}
		if(token == stx_parse_path_TokenSum.FPTUp) {
			normalized = false;
		}
		if(i == stx_nano_Cluster.get_length(arr) - 1) {
			has_trailing_slash = stx_parse_path_Token.prj(token)._hx_index == 3;
			switch(token._hx_index) {
			case 4:
				var _g3 = token.str;
				file = stx_nano_TrivalentSum.Maybe;
				break;
			case 5:
				var _g4 = token.str;
				var _g5 = token.ext;
				file = stx_nano_TrivalentSum.Yay;
				break;
			default:
				file = stx_nano_TrivalentSum.Nay;
			}
		}
	}
	return { absolute : absolute, normalized : normalized, has_trailing_slash : has_trailing_slash, file : file};
};
stx_fs_path_RawLift.toTrack = function(raw) {
	return stx_nano_ClusterLift.lfold(raw,function(next,memo) {
		var tmp;
		switch(memo._hx_index) {
		case 0:
			var t = memo.t;
			switch(next._hx_index) {
			case 3:
				tmp = stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,t);
				break;
			case 4:
				var str = next.str;
				tmp = stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,stx_nano_ClusterLift.snoc(t,str));
				break;
			default:
				var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/fs/path/Raw.hx", lineNumber : 254, className : "stx.fs.path.RawLift", methodName : "toTrack"});
				tmp = stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_PathFailureSum.E_Path_PathParse(stx_fail_PathParseFailureSum.E_PathParse_UnexpectedToken(next,raw)))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1))),{ fileName : "stx/fs/path/Raw.hx", lineNumber : 254, className : "stx.fs.path.RawLift", methodName : "toTrack"});
			}
			break;
		case 1:
			var e = memo.e;
			tmp = stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(e),{ fileName : "stx/fs/path/Raw.hx", lineNumber : 256, className : "stx.fs.path.RawLift", methodName : "toTrack"});
			break;
		}
		return tmp;
	},stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,[]));
};
stx_fs_path_RawLift.absolutize = function(self) {
	var self1 = eu_ohmrun_fletcher_AttemptArg.fromArgFun1Produce(function(state) {
		var kind = stx_fs_path_RawLift.kind(self);
		if(!kind.normalized) {
			self = stx_fs_path_RawLift.normalize(self);
		}
		var a;
		if(!kind.absolute) {
			a = eu_ohmrun_fletcher_AttemptLift.map(eu_ohmrun_fletcher_AttemptLift.adjust(state.device.shell.cwd.pop(),function(dir) {
				var self1 = stx_fs_path_RawLift.toTrack(self);
				var fn = function(track) {
					return stx_fs_path_Directory.into(dir,track);
				};
				var self2;
				switch(self1._hx_index) {
				case 0:
					var t = self1.t;
					self2 = stx_nano_ResSum.Accept(fn(t));
					break;
				case 1:
					var e = self1.e;
					self2 = stx_nano_ResSum.Reject(e);
					break;
				}
				var this1 = self2;
				var self1 = this1;
				var fn = function(e) {
					return stx_fail_FsFailure.fromPathFailure(e);
				};
				var self2;
				switch(self1._hx_index) {
				case 0:
					var t = self1.t;
					self2 = stx_nano_Res.accept(t);
					break;
				case 1:
					var e = self1.e;
					self2 = stx_nano_Res.reject(stx_fail_Refuse.errate(e,fn));
					break;
				}
				var this1 = self2;
				return this1;
			}),function(dir) {
				return stx_fs_path_DirectoryLift.toAddress(dir);
			});
		} else {
			var self1 = eu_ohmrun_fletcher_AttemptArg.fromArgFun1Res(function(s) {
				return stx_fs_path_RawLift.toAddress(self);
			});
			var self2 = stx_LiftAssert.assert(stx_nano_Wildcard.__,{ fileName : "eu/ohmrun/fletcher/Attempt.hx", lineNumber : 48, className : "eu.ohmrun.fletcher._Attempt.Attempt_Impl_", methodName : "bump"}).module.exists().apply(self1);
			if(self2 != null) {
				switch(self2._hx_index) {
				case 0:
					var v = self2.v;
					throw haxe_Exception.thrown(v);
				case 1:
					break;
				}
			}
			var a1;
			switch(self1._hx_index) {
			case 0:
				var r = self1.r;
				a1 = eu_ohmrun_fletcher_Attempt.pure(r);
				break;
			case 1:
				var res = self1.res;
				a1 = eu_ohmrun_fletcher_Attempt.fromRes(res);
				break;
			case 2:
				var fn = self1.fn;
				a1 = eu_ohmrun_fletcher_Attempt.fromFun1Res(fn);
				break;
			case 3:
				var fn = self1.fn;
				a1 = eu_ohmrun_fletcher_Attempt.fromFun1Produce(fn);
				break;
			case 4:
				var fn = self1.fn;
				a1 = eu_ohmrun_fletcher_Attempt.fromUnary1Produce(fn);
				break;
			case 5:
				var fn = self1.fn;
				a1 = eu_ohmrun_fletcher_Attempt.fromFun1Provide(fn);
				break;
			}
			a = eu_ohmrun_fletcher_AttemptLift.errate(a1,function(e) {
				return stx_fail_FsFailure.fromPathFailure(e);
			});
		}
		return eu_ohmrun_fletcher_AttemptLift.produce(a,state);
	});
	var self2 = stx_LiftAssert.assert(stx_nano_Wildcard.__,{ fileName : "eu/ohmrun/fletcher/Attempt.hx", lineNumber : 48, className : "eu.ohmrun.fletcher._Attempt.Attempt_Impl_", methodName : "bump"}).module.exists().apply(self1);
	if(self2 != null) {
		switch(self2._hx_index) {
		case 0:
			var v = self2.v;
			throw haxe_Exception.thrown(v);
		case 1:
			break;
		}
	}
	switch(self1._hx_index) {
	case 0:
		var r = self1.r;
		return eu_ohmrun_fletcher_Attempt.pure(r);
	case 1:
		var res = self1.res;
		return eu_ohmrun_fletcher_Attempt.fromRes(res);
	case 2:
		var fn = self1.fn;
		return eu_ohmrun_fletcher_Attempt.fromFun1Res(fn);
	case 3:
		var fn = self1.fn;
		return eu_ohmrun_fletcher_Attempt.fromFun1Produce(fn);
	case 4:
		var fn = self1.fn;
		return eu_ohmrun_fletcher_Attempt.fromUnary1Produce(fn);
	case 5:
		var fn = self1.fn;
		return eu_ohmrun_fletcher_Attempt.fromFun1Provide(fn);
	}
};
stx_fs_path_RawLift.normalize = function(self) {
	var rest = stx_nano_ClusterLift.lfold(self,function(next,memo) {
		switch(next._hx_index) {
		case 0:
			var _g = next.name;
			return stx_fs_path_Raw.snoc(memo,next);
		case 2:
			return stx_fs_path_Raw.rdropn(memo,1);
		case 1:case 3:
			return stx_fs_path_Raw.snoc(memo,next);
		case 4:
			var _g = next.str;
			return stx_fs_path_Raw.snoc(memo,next);
		case 5:
			var _g = next.str;
			var _g = next.ext;
			return stx_fs_path_Raw.snoc(memo,next);
		}
	},stx_fs_path_Raw.unit());
	return rest;
};
var stx_fs_path_Raw = {};
stx_fs_path_Raw._new = function(self) {
	var this1 = self;
	return this1;
};
stx_fs_path_Raw.lift = function(self) {
	return stx_fs_path_Raw._new(self);
};
stx_fs_path_Raw.unit = function() {
	return stx_fs_path_Raw.lift(stx_nano_Cluster.unit());
};
stx_fs_path_Raw.at = function(this1,i) {
	return this1[i];
};
stx_fs_path_Raw.prj = function(this1) {
	return this1;
};
stx_fs_path_Raw.get_self = function(this1) {
	return stx_fs_path_Raw.lift(this1);
};
stx_fs_path_Raw.snoc = function(this1,token) {
	return stx_fs_path_Raw.lift(stx_nano_ClusterLift.snoc(this1,token));
};
stx_fs_path_Raw.rdropn = function(this1,n) {
	return stx_fs_path_Raw.lift(stx_nano_ClusterLift.rdropn(this1,n));
};
var stx_fs_path_MaybeAttachment = {};
stx_fs_path_MaybeAttachment.lift = function(clause) {
	return stx_fs_path_MaybeAttachment._new(clause);
};
stx_fs_path_MaybeAttachment._new = function(self) {
	var this1;
	var self1 = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,self);
	var v = stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,haxe_ds_Option.None,stx_fs_path_Route._new([]));
	if(self1._hx_index == 0) {
		var v1 = self1.v;
		this1 = v1;
	} else {
		this1 = v;
	}
	return this1;
};
stx_fs_path_MaybeAttachment.snoc = function(this1,v) {
	return stx_fs_path_MaybeAttachment.lift(stx_nano_CoupleLift.map(this1,function(r) {
		return stx_fs_path_Route.snoc(r,v);
	}));
};
stx_fs_path_MaybeAttachment.$name = function(this1,entry) {
	return stx_fs_path_MaybeAttachment.lift(stx_nano_CoupleLift.mapl(this1,function(_) {
		return haxe_ds_Option.Some(entry);
	}));
};
var stx_fs_path_Route = {};
stx_fs_path_Route._new = function(self) {
	var this1 = self;
	return this1;
};
stx_fs_path_Route.lift = function(self) {
	return stx_fs_path_Route._new(self);
};
stx_fs_path_Route.unit = function() {
	return stx_fs_path_Route.lift(stx_nano_Cluster.lift([]));
};
stx_fs_path_Route.fromArray = function(self) {
	return stx_fs_path_Route.lift(stx_nano_Cluster.lift(self));
};
stx_fs_path_Route.canonical = function(this1,sep) {
	return stx_nano_ClusterLift.map(this1,function(move) {
		switch(move._hx_index) {
		case 0:
			var str = move.name;
			return str;
		case 1:
			return "..";
		}
	}).join(sep);
};
stx_fs_path_Route.snoc = function(this1,v) {
	return stx_fs_path_Route.lift(stx_nano_ClusterLift.snoc(this1,v));
};
stx_fs_path_Route.concat = function(this1,that) {
	return stx_nano_Cluster.concat(this1,that);
};
stx_fs_path_Route.prj = function(this1) {
	return this1;
};
stx_fs_path_Route.get_self = function(this1) {
	return stx_fs_path_Route.lift(this1);
};
var stx_fs_path_RouteLift = function() { };
$hxClasses["stx.fs.path.RouteLift"] = stx_fs_path_RouteLift;
stx_fs_path_RouteLift.__name__ = "stx.fs.path.RouteLift";
stx_fs_path_RouteLift.toTrack = function(self) {
	return stx_nano_ClusterLift.lfold(self,function(next,memo) {
		var self;
		switch(memo._hx_index) {
		case 0:
			var t = memo.t;
			var ok = t;
			switch(next._hx_index) {
			case 0:
				var name = next.name;
				self = stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,stx_nano_ClusterLift.snoc(ok,name));
				break;
			case 1:
				var value = stx_nano_Cluster.toIterable(ok);
				self = stx_LiftIf.if_else((((value) instanceof Array) ? value : null).length > 0,function() {
					return stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,stx_nano_ClusterLift.rdropn(ok,1));
				},function() {
					var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/fs/path/Route.hx", lineNumber : 45, className : "stx.fs.path.RouteLift", methodName : "toTrack"});
					return stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_PathFailureSum.E_Path_ReachedRoot)),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1))),{ fileName : "stx/fs/path/Route.hx", lineNumber : 45, className : "stx.fs.path.RouteLift", methodName : "toTrack"});
				});
				break;
			}
			break;
		case 1:
			var e = memo.e;
			self = stx_nano_ResSum.Reject(e);
			break;
		}
		var this1 = self;
		return this1;
	},stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,stx_nano_Cluster.unit()));
};
var stx_fs_path_Separator = {};
stx_fs_path_Separator.toString = function(this1) {
	if(this1 == null) {
		return "null";
	} else {
		return "" + this1;
	}
};
stx_fs_path_Separator._new = function() {
	var this1 = "/";
	return this1;
};
stx_fs_path_Separator.unit = function() {
	return stx_fs_path_Separator._new();
};
var stx_fs_path_StemSum = $hxEnums["stx.fs.path.StemSum"] = { __ename__:"stx.fs.path.StemSum",__constructs__:null
	,Here: {_hx_name:"Here",_hx_index:0,__enum__:"stx.fs.path.StemSum",toString:$estr}
	,Root: ($_=function(drive) { return {_hx_index:1,drive:drive,__enum__:"stx.fs.path.StemSum",toString:$estr}; },$_._hx_name="Root",$_.__params__ = ["drive"],$_)
};
stx_fs_path_StemSum.__constructs__ = [stx_fs_path_StemSum.Here,stx_fs_path_StemSum.Root];
var stx_fs_path_Stem = {};
stx_fs_path_Stem._new = function(self) {
	var this1 = self;
	return this1;
};
stx_fs_path_Stem.lift = function(self) {
	return stx_fs_path_Stem._new(self);
};
stx_fs_path_Stem.prj = function(this1) {
	return this1;
};
stx_fs_path_Stem.get_self = function(this1) {
	return stx_fs_path_Stem.lift(this1);
};
stx_fs_path_Stem.fold = function(this1,here,root) {
	switch(this1._hx_index) {
	case 0:
		return here();
	case 1:
		var drive = this1.drive;
		return root(drive);
	}
};
var stx_fs_path_Track = {};
stx_fs_path_Track._new = function(self) {
	var this1;
	var self1 = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,self);
	var v = stx_nano_Cluster.lift([]);
	if(self1._hx_index == 0) {
		var v1 = self1.v;
		this1 = v1;
	} else {
		this1 = v;
	}
	return this1;
};
stx_fs_path_Track.lift = function(self) {
	return stx_fs_path_Track._new(self);
};
stx_fs_path_Track.unit = function() {
	return stx_fs_path_Track.lift(stx_nano_Cluster.unit());
};
stx_fs_path_Track.pure = function(self) {
	return stx_fs_path_Track.lift(stx_nano_Cluster.lift([self]));
};
stx_fs_path_Track.fromArray = function(self) {
	return stx_fs_path_Track.lift(stx_nano_Cluster.lift(self));
};
stx_fs_path_Track.canonical = function(this1,sep) {
	return this1.join(sep);
};
stx_fs_path_Track.snapshot = function(this1) {
	return stx_nano_Cluster.copy(this1);
};
stx_fs_path_Track.toRoute = function(this1) {
	return stx_nano_ClusterLift.map(this1,stx_fs_path_MoveSum.Into);
};
stx_fs_path_Track.concat = function(this1,that) {
	return stx_fs_path_Track.lift(stx_nano_Cluster.concat(this1,stx_fs_path_Track.prj(that)));
};
stx_fs_path_Track.up = function(this1) {
	var value = stx_nano_Cluster.toIterable(this1);
	return stx_LiftIf.if_else((((value) instanceof Array) ? value : null).length > 0,function() {
		return stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,stx_fs_path_Track.lift(stx_nano_ClusterLift.rdropn(this1,1)));
	},function() {
		var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/fs/path/Track.hx", lineNumber : 35, className : "stx.fs.path._Track.Track_Impl_", methodName : "up"});
		return stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_PathFailureSum.E_Path_ReachedRoot)),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1))),{ fileName : "stx/fs/path/Track.hx", lineNumber : 35, className : "stx.fs.path._Track.Track_Impl_", methodName : "up"});
	});
};
stx_fs_path_Track.prj = function(this1) {
	return this1;
};
stx_fs_path_Track.get_self = function(this1) {
	return stx_fs_path_Track.lift(this1);
};
var stx_fs_path_lift_LiftAttemptHasDeviceRaw = function() { };
$hxClasses["stx.fs.path.lift.LiftAttemptHasDeviceRaw"] = stx_fs_path_lift_LiftAttemptHasDeviceRaw;
stx_fs_path_lift_LiftAttemptHasDeviceRaw.__name__ = "stx.fs.path.lift.LiftAttemptHasDeviceRaw";
stx_fs_path_lift_LiftAttemptHasDeviceRaw.toTrack = function(self) {
	return eu_ohmrun_fletcher_AttemptLift.attempt(self,eu_ohmrun_fletcher_Attempt.fromFun1Res(stx_fs_path_Raw._.toTrack));
};
stx_fs_path_lift_LiftAttemptHasDeviceRaw.toDirectory = function(self) {
	return eu_ohmrun_fletcher_AttemptLift.attempt(self,eu_ohmrun_fletcher_Attempt.fromFun1Produce(stx_fs_path_Raw._.toDirectory));
};
stx_fs_path_lift_LiftAttemptHasDeviceRaw.toJourney = function(self) {
	return eu_ohmrun_fletcher_AttemptLift.attempt(self,eu_ohmrun_fletcher_Attempt.fromFun1Res(stx_fs_path_Raw._.toJourney));
};
stx_fs_path_lift_LiftAttemptHasDeviceRaw.toAttachment = function(self) {
	return eu_ohmrun_fletcher_AttemptLift.attempt(self,eu_ohmrun_fletcher_Attempt.fromFun1Res(stx_fs_path_Raw._.toAttachment));
};
stx_fs_path_lift_LiftAttemptHasDeviceRaw.toArchive = function(self) {
	return eu_ohmrun_fletcher_AttemptLift.attempt(self,eu_ohmrun_fletcher_Attempt.fromFun1Res(stx_fs_path_Raw._.toArchive));
};
var stx_fs_path_lift_LiftString = function() { };
$hxClasses["stx.fs.path.lift.LiftString"] = stx_fs_path_lift_LiftString;
stx_fs_path_lift_LiftString.__name__ = "stx.fs.path.lift.LiftString";
stx_fs_path_lift_LiftString.toJourney = function(string) {
	var self = eu_ohmrun_Fletcher._.fudge(eu_ohmrun_fletcher_AttemptLift.provide(eu_ohmrun_fletcher_AttemptLift.attempt(stx_fs_Path.parse(string),eu_ohmrun_fletcher_Attempt.fromFun1Res(stx_fs_path_Raw._.toJourney)),stx_LiftASys.asys(stx_nano_Wildcard.__).local()),null);
	switch(self._hx_index) {
	case 0:
		var t = self.t;
		return t;
	case 1:
		var e = self.e;
		throw haxe_Exception.thrown(e);
	}
};
stx_fs_path_lift_LiftString.toDirectory = function(string) {
	var self = eu_ohmrun_Fletcher._.fudge(eu_ohmrun_fletcher_AttemptLift.provide(eu_ohmrun_fletcher_AttemptLift.attempt(stx_fs_Path.parse(string),eu_ohmrun_fletcher_Attempt.fromFun1Produce(stx_fs_path_Raw._.toDirectory)),stx_LiftASys.asys(stx_nano_Wildcard.__).local()),null);
	switch(self._hx_index) {
	case 0:
		var t = self.t;
		return t;
	case 1:
		var e = self.e;
		throw haxe_Exception.thrown(e);
	}
};
stx_fs_path_lift_LiftString.toArchive = function(string) {
	var self = eu_ohmrun_Fletcher._.fudge(eu_ohmrun_fletcher_AttemptLift.provide(eu_ohmrun_fletcher_AttemptLift.attempt(stx_fs_Path.parse(string),eu_ohmrun_fletcher_Attempt.fromFun1Res(stx_fs_path_Raw._.toArchive)),stx_LiftASys.asys(stx_nano_Wildcard.__).local()),null);
	switch(self._hx_index) {
	case 0:
		var t = self.t;
		return t;
	case 1:
		var e = self.e;
		throw haxe_Exception.thrown(e);
	}
};
var stx_g_Lang = function() { };
$hxClasses["stx.g.Lang"] = stx_g_Lang;
stx_g_Lang.__name__ = "stx.g.Lang";
stx_g_Lang.g = function(wildcard) {
	return new stx_g_lang_Module();
};
var stx_g_denote_PExpr = function(inner) {
	this.inner = inner;
};
$hxClasses["stx.g.denote.PExpr"] = stx_g_denote_PExpr;
stx_g_denote_PExpr.__name__ = "stx.g.denote.PExpr";
stx_g_denote_PExpr.prototype = {
	inner: null
	,apply: function(self) {
		var _gthis = this;
		var e = stx_g_Lang.g(stx_nano_Wildcard.__).expr();
		switch(self._hx_index) {
		case 0:
			var name = self.name;
			return e.Call(stx_nano_CTR.fromR(e.Path("eu.ohmrun.pml.PExpr.PExprSum.PLabel")),stx_nano_CTR.fromR([e.Const(function(c) {
				return c.String(name);
			})]));
		case 1:
			var list = self.list;
			var xs = stx_nano_IterLift.foldr(stx_ds_LinkedList.toIter(list),function(n,m) {
				return e.Call(stx_nano_CTR.fromR(e.Path("stx.ds.LinkedList.LinkedListSum.Cons")),stx_nano_CTR.fromR([_gthis.apply(n),m]));
			},e.Path("stx.ds.LinkedList.LinkedListSum.Nil"));
			return e.Call(stx_nano_CTR.fromR(e.Path("eu.ohmrun.pml.PExpr.PExprSum.PGroup")),stx_nano_CTR.fromR([xs]));
		case 2:
			var value = self.value;
			return e.Call(stx_nano_CTR.fromR(e.Path("eu.ohmrun.pml.PExpr.PExprSum.PValue")),stx_nano_CTR.fromR([this.inner(value)]));
		case 3:
			return e.Path("eu.ohmrun.pml.PExpr.PExprSum.PEmpty");
		}
	}
	,__class__: stx_g_denote_PExpr
};
var stx_g_lang_GSource = {};
stx_g_lang_GSource._new = function(self) {
	var this1 = self;
	return this1;
};
stx_g_lang_GSource.lift = function(self) {
	return stx_g_lang_GSource._new(self);
};
stx_g_lang_GSource.prj = function(this1) {
	return this1;
};
stx_g_lang_GSource.get_self = function(this1) {
	return stx_g_lang_GSource.lift(this1);
};
var stx_g_lang_Module = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["stx.g.lang.Module"] = stx_g_lang_Module;
stx_g_lang_Module.__name__ = "stx.g.lang.Module";
stx_g_lang_Module.__super__ = stx_pico_Clazz;
stx_g_lang_Module.prototype = $extend(stx_pico_Clazz.prototype,{
	to_macro_at: function() {
		return stx_g_lang_expr_GExpr.__;
	}
	,type: function() {
		return stx_g_lang_expr_GTypeDefinition.__;
	}
	,field: function() {
		return stx_g_lang_expr_GField.__;
	}
	,field_type: function() {
		return stx_g_lang_expr_GFieldType.__;
	}
	,function_arg: function() {
		return stx_g_lang_expr_GFunctionArg.__;
	}
	,complex_type: function() {
		return stx_g_lang_expr_GComplexType.__;
	}
	,ctype: function() {
		return stx_g_lang_expr_GComplexType.__;
	}
	,expr: function() {
		return stx_g_lang_expr_GExpr.__;
	}
	,'const': function() {
		return stx_g_lang_expr_GConstant.__;
	}
	,type_path: function() {
		return stx_g_lang_expr_GTypePath.__;
	}
	,method: function() {
		return stx_g_lang_expr_GFunction.__;
	}
	,__class__: stx_g_lang_Module
});
var stx_g_lang_Printer = function(tabString) {
	if(tabString == null) {
		tabString = "\t";
	}
	this.tabs = "";
	this.tabString = tabString;
};
$hxClasses["stx.g.lang.Printer"] = stx_g_lang_Printer;
stx_g_lang_Printer.__name__ = "stx.g.lang.Printer";
stx_g_lang_Printer.iter = function(iter,fn) {
	var _g_current = 0;
	var _g_array = iter;
	while(_g_current < _g_array.length) {
		var x = _g_array[_g_current++];
		fn(x);
	}
};
stx_g_lang_Printer.ZERO = null;
stx_g_lang_Printer.get_ZERO = function() {
	if(stx_g_lang_Printer.ZERO == null) {
		return stx_g_lang_Printer.ZERO = new stx_g_lang_Printer();
	} else {
		return stx_g_lang_Printer.ZERO;
	}
};
stx_g_lang_Printer.prototype = {
	tabs: null
	,tabString: null
	,printUnop: function(op) {
		switch(op._hx_index) {
		case 0:
			return "++";
		case 1:
			return "--";
		case 2:
			return "!";
		case 3:
			return "-";
		case 4:
			return "~";
		case 5:
			return "...";
		}
	}
	,printBinop: function(op) {
		switch(op._hx_index) {
		case 0:
			return "+";
		case 1:
			return "*";
		case 2:
			return "/";
		case 3:
			return "-";
		case 4:
			return "=";
		case 5:
			return "==";
		case 6:
			return "!=";
		case 7:
			return ">";
		case 8:
			return ">=";
		case 9:
			return "<";
		case 10:
			return "<=";
		case 11:
			return "&";
		case 12:
			return "|";
		case 13:
			return "^";
		case 14:
			return "&&";
		case 15:
			return "||";
		case 16:
			return "<<";
		case 17:
			return ">>";
		case 18:
			return ">>>";
		case 19:
			return "%";
		case 20:
			var op1 = op.op;
			return this.printBinop(op1) + "=";
		case 21:
			return "...";
		case 22:
			return "=>";
		case 23:
			return "in";
		case 24:
			return "??";
		}
	}
	,escapeString: function(s,delim) {
		return delim + StringTools.replace(StringTools.replace(StringTools.replace(StringTools.replace(StringTools.replace(StringTools.replace(s,"\\","\\\\"),"\n","\\n"),"\t","\\t"),"\r","\\r"),"'","\\'"),"\"","\\\"") + delim;
	}
	,printFormatString: function(s) {
		return this.escapeString(s,"'");
	}
	,printString: function(s) {
		return this.escapeString(s,"\"");
	}
	,printConstant: function(c) {
		switch(c._hx_index) {
		case 0:
			var _g = c.v;
			var _g1 = c.s;
			if(_g1 == null) {
				var s = _g;
				return s;
			} else {
				var suffix = _g1;
				var s = _g;
				return s + suffix;
			}
			break;
		case 1:
			var _g = c.f;
			var _g1 = c.s;
			if(_g1 == null) {
				var s = _g;
				return s;
			} else {
				var suffix = _g1;
				var s = _g;
				return s + suffix;
			}
			break;
		case 2:
			var _g = c.s;
			var _g1 = c.kind;
			if(_g1 == null) {
				var s = _g;
				return this.printString(s);
			} else if(_g1._hx_index == 1) {
				var s = _g;
				return this.printFormatString(s);
			} else {
				var s = _g;
				return this.printString(s);
			}
			break;
		case 3:
			var s = c.s;
			return s;
		case 4:
			var s = c.r;
			var opt = c.opt;
			return "~/" + s + "/" + opt;
		}
	}
	,printTypeParam: function(param) {
		switch(param._hx_index) {
		case 0:
			var ct = param.t;
			return this.printComplexType(ct);
		case 1:
			var e = param.e;
			return this.printExpr(e);
		}
	}
	,printTypePath: function(tp) {
		return (stx_nano_Cluster.get_length(tp.pack) > 0 ? tp.pack.join(".") + "." : "") + tp.name + (tp.sub != null ? "." + tp.sub : "") + (tp.params == null ? "" : stx_nano_Cluster.get_length(tp.params) > 0 ? "<" + stx_nano_ClusterLift.map(tp.params,$bind(this,this.printTypeParam)).join(", ") + ">" : "");
	}
	,printComplexType: function(ct) {
		switch(ct._hx_index) {
		case 0:
			var tp = ct.p;
			return this.printTypePath(tp);
		case 1:
			var args = ct.args;
			var ret = ct.ret;
			var wrapArgumentsInParentheses;
			if(stx_nano_Cluster.get_length(args) == 1) {
				var _g = args[0];
				switch(_g._hx_index) {
				case 0:
					var _g1 = _g.p;
					wrapArgumentsInParentheses = false;
					break;
				case 3:
					var t = _g.t;
					wrapArgumentsInParentheses = false;
					break;
				case 5:
					var _g1 = _g.t;
					if(_g1._hx_index == 0) {
						var _g = _g1.p;
						wrapArgumentsInParentheses = false;
					} else {
						wrapArgumentsInParentheses = true;
					}
					break;
				default:
					wrapArgumentsInParentheses = true;
				}
			} else {
				wrapArgumentsInParentheses = true;
			}
			var argStr = stx_nano_ClusterLift.map(args,$bind(this,this.printComplexType)).join(", ");
			var tmp;
			if(ret._hx_index == 1) {
				var _g = ret.args;
				var _g = ret.ret;
				tmp = "(" + this.printComplexType(ret) + ")";
			} else {
				tmp = this.printComplexType(ret);
			}
			return (wrapArgumentsInParentheses ? "(" + argStr + ")" : argStr) + " -> " + tmp;
		case 2:
			var fields = ct.fields;
			var _g = [];
			var _g_current = 0;
			var _g_array = fields;
			while(_g_current < _g_array.length) {
				var f = _g_array[_g_current++];
				_g.push(this.printField(f) + "; ");
			}
			return "{ " + _g.join("") + "}";
		case 3:
			var ct1 = ct.t;
			return "(" + this.printComplexType(ct1) + ")";
		case 4:
			var tpl = ct.p;
			var fields = ct.fields;
			var _g = [];
			var _g_current = 0;
			var _g_array = tpl;
			while(_g_current < _g_array.length) {
				var t = _g_array[_g_current++];
				_g.push("> " + this.printTypePath(t) + ", ");
			}
			var types = _g.join("");
			var _g = [];
			var _g_current = 0;
			var _g_array = fields;
			while(_g_current < _g_array.length) {
				var f = _g_array[_g_current++];
				_g.push(this.printField(f) + "; ");
			}
			var fields = _g.join("");
			return "{" + types + fields + "}";
		case 5:
			var ct1 = ct.t;
			return "?" + this.printComplexType(ct1);
		case 6:
			var n = ct.n;
			var ct1 = ct.t;
			return n + ":" + this.printComplexType(ct1);
		case 7:
			var tl = ct.tl;
			return stx_nano_ClusterLift.map(tl,$bind(this,this.printComplexType)).join(" & ");
		}
	}
	,printMetadata: function(meta) {
		return "@" + meta.name + (meta.params != null && stx_nano_Cluster.get_length(meta.params) > 0 ? "(" + this.printExprs(meta.params,", ") + ")" : "");
	}
	,printAccess: function(access) {
		switch(access._hx_index) {
		case 0:
			return "public";
		case 1:
			return "private";
		case 2:
			return "static";
		case 3:
			return "override";
		case 4:
			return "dynamic";
		case 5:
			return "inline";
		case 6:
			return "macro";
		case 7:
			return "final";
		case 8:
			return "extern";
		case 9:
			return "abstract";
		case 10:
			return "overload";
		}
	}
	,printField: function(field) {
		var tmp = field.doc != null && field.doc != "" ? "/**\n" + this.tabs + this.tabString + StringTools.replace(field.doc,"\n","\n" + this.tabs + this.tabString) + "\n" + this.tabs + "**/\n" + this.tabs : "";
		var tmp1 = field.meta != null && stx_nano_Cluster.get_length(field.meta) > 0 ? stx_nano_ClusterLift.map(field.meta,$bind(this,this.printMetadata)).join("\n" + this.tabs) + ("\n" + this.tabs) : "";
		var tmp2;
		if(field.access != null && stx_nano_Cluster.get_length(field.access) > 0) {
			var access = field.access;
			var obj = stx_g_lang_expr_GAccessSum.GAFinal;
			var tmp3 = function(self) {
				var index = self.indexOf(obj);
				if(index == -1) {
					return haxe_ds_Option.None;
				} else {
					return haxe_ds_Option.Some(index);
				}
			};
			var value = stx_nano_Cluster.toIterable(access);
			tmp2 = stx_nano_ClusterLift.map(stx_pico_OptionLift.is_defined(tmp3(((value) instanceof Array) ? value : null)) ? stx_nano_Cluster.concat(stx_nano_ClusterLift.filter(access,function(a) {
				if(a._hx_index == 7) {
					return false;
				} else {
					return true;
				}
			}),[stx_g_lang_expr_GAccessSum.GAFinal]) : access,$bind(this,this.printAccess)).join(" ") + " ";
		} else {
			tmp2 = "";
		}
		var tmp3 = tmp + tmp1 + tmp2;
		var _g = field.kind;
		var tmp;
		switch(_g._hx_index) {
		case 0:
			var t = _g.t;
			var eo = _g.e;
			var tmp1;
			if(field.access != null) {
				var obj1 = stx_g_lang_expr_GAccessSum.GAFinal;
				var tmp2 = function(self) {
					var index = self.indexOf(obj1);
					if(index == -1) {
						return haxe_ds_Option.None;
					} else {
						return haxe_ds_Option.Some(index);
					}
				};
				var value = stx_nano_Cluster.toIterable(field.access);
				tmp1 = stx_pico_OptionLift.is_defined(tmp2(((value) instanceof Array) ? value : null));
			} else {
				tmp1 = false;
			}
			tmp = (tmp1 ? "" : "var ") + ("" + field.name) + this.opt(t,$bind(this,this.printComplexType)," : ") + this.opt(eo,$bind(this,this.printExpr)," = ");
			break;
		case 1:
			var func = _g.f;
			tmp = "function " + field.name + this.printFunction(func);
			break;
		case 2:
			var get = _g.get;
			var set = _g.set;
			var t = _g.t;
			var eo = _g.e;
			tmp = "var " + field.name + "(" + stx_g_lang_expr_GPropAccessLift.getting(get) + ", " + stx_g_lang_expr_GPropAccessLift.setting(set) + ")" + this.opt(t,$bind(this,this.printComplexType)," : ") + this.opt(eo,$bind(this,this.printExpr)," = ");
			break;
		}
		return tmp3 + tmp;
	}
	,printTypeParamDecl: function(tpd) {
		return (tpd.meta != null && stx_nano_Cluster.get_length(tpd.meta) > 0 ? stx_nano_ClusterLift.map(tpd.meta,$bind(this,this.printMetadata)).join(" ") + " " : "") + tpd.name + (tpd.params != null && stx_nano_Cluster.get_length(tpd.params) > 0 ? "<" + stx_nano_ClusterLift.map(tpd.params,$bind(this,this.printTypeParamDecl)).join(", ") + ">" : "") + (tpd.constraints != null && stx_nano_Cluster.get_length(tpd.constraints) > 0 ? ":(" + stx_nano_ClusterLift.map(tpd.constraints,$bind(this,this.printComplexType)).join(", ") + ")" : "") + (tpd.defaultType != null ? "=" + this.printComplexType(tpd.defaultType) : "");
	}
	,printFunctionArg: function(arg) {
		var opt = function(v,f,prefix) {
			if(prefix == null) {
				prefix = "";
			}
			if(v == null) {
				return "";
			} else {
				return prefix + f(v);
			}
		};
		return (arg.opt ? "?" : "") + arg.name + opt(arg.type,$bind(this,this.printComplexType),":") + opt(arg.value,$bind(this,this.printExpr)," = ");
	}
	,printFunction: function(func,kind) {
		var skipParentheses;
		var _g = func.args;
		if(stx_nano_Cluster.get_length(_g) == 1) {
			var _g1 = _g[0];
			var _g = _g1.meta;
			var _g = _g1.name;
			var _g = _g1.opt;
			var _g = _g1.type;
			var _g2 = _g1.value;
			var _g2 = stx_g_lang_expr_GFunctionArg.get_self(_g1);
			skipParentheses = _g == null && kind == stx_g_lang_expr_GFunctionKind.GFArrow;
		} else {
			skipParentheses = false;
		}
		return (func.params == null ? "" : stx_nano_Cluster.get_length(func.params) > 0 ? "<" + stx_nano_ClusterLift.map(func.params,$bind(this,this.printTypeParamDecl)).join(", ") + ">" : "") + (skipParentheses ? "" : "(") + stx_nano_ClusterLift.map(func.args,$bind(this,this.printFunctionArg)).join(", ") + (skipParentheses ? "" : ")") + (kind == stx_g_lang_expr_GFunctionKind.GFArrow ? " ->" : "") + this.opt(func.ret,$bind(this,this.printComplexType),":") + this.opt(func.expr,$bind(this,this.printExpr)," ");
	}
	,printVar: function(v) {
		var opt = function(v,f,prefix) {
			if(prefix == null) {
				prefix = "";
			}
			if(v == null) {
				return "";
			} else {
				return prefix + f(v);
			}
		};
		var s = v.name + opt(v.type,$bind(this,this.printComplexType),":") + opt(v.expr,$bind(this,this.printExpr)," = ");
		var self = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,v.meta),function(x) {
			return stx_g_lang_expr_GMetadata.prj(x);
		});
		var _g;
		if(self._hx_index == 0) {
			var v = self.v;
			_g = v;
		} else {
			_g = null;
		}
		if(_g == null) {
			return s;
		} else if(stx_nano_Cluster.get_length(_g) == 0) {
			return s;
		} else {
			var meta = _g;
			return stx_nano_ClusterLift.map(meta,$bind(this,this.printMetadata)).join(" ") + " " + s;
		}
	}
	,printObjectFieldKey: function(of) {
		var _g = of.quotes;
		if(_g == null) {
			return of.field;
		} else {
			switch(_g._hx_index) {
			case 0:
				return of.field;
			case 1:
				return "\"" + of.field + "\"";
			}
		}
	}
	,printObjectField: function(of) {
		return "" + this.printObjectFieldKey(of) + " : " + this.printExpr(of.expr);
	}
	,printExpr: function(e) {
		var _gthis = this;
		if(e == null) {
			return "#NULL";
		} else {
			switch(e._hx_index) {
			case 0:
				var c = e.c;
				return this.printConstant(c);
			case 1:
				var e1 = e.e1;
				var e2 = e.e2;
				return "" + this.printExpr(e1) + "[" + this.printExpr(e2) + "]";
			case 2:
				var op = e.op;
				var e1 = e.e1;
				var e2 = e.e2;
				return "" + this.printExpr(e1) + " " + this.printBinop(op) + " " + this.printExpr(e2);
			case 3:
				var _g = e.kind;
				var e1 = e.e;
				var n = e.field;
				return "" + this.printExpr(e1) + "." + n;
			case 4:
				var e1 = e.e;
				return "(" + this.printExpr(e1) + ")";
			case 5:
				var fl = e.fields;
				return "{ " + stx_nano_ClusterLift.map(fl,function(fld) {
					return _gthis.printObjectField(fld);
				}).join(", ") + " }";
			case 6:
				var el = e.values;
				return "[" + this.printExprs(el,", ") + "]";
			case 7:
				var e1 = e.e;
				var el = e.params;
				return "" + this.printExpr(e1) + "(" + this.printExprs(el,", ") + ")";
			case 8:
				var tp = e.t;
				var el = e.params;
				return "new " + this.printTypePath(tp) + "(" + this.printExprs(el,", ") + ")";
			case 9:
				var _g = e.op;
				var _g1 = e.e;
				if(e.postFix) {
					var op = _g;
					var e1 = _g1;
					return this.printExpr(e1) + this.printUnop(op);
				} else {
					var op = _g;
					var e1 = _g1;
					return this.printUnop(op) + this.printExpr(e1);
				}
				break;
			case 10:
				var _g = e.vars;
				if(stx_nano_Cluster.get_length(_g) == 0) {
					return "var ";
				} else {
					var vl = _g;
					return (vl[0].isStatic ? "static " : "") + (vl[0].isFinal ? "final " : "var ") + stx_nano_ClusterLift.map(vl,$bind(this,this.printVar)).join(", ");
				}
				break;
			case 11:
				var _g = e.kind;
				var _g1 = e.f;
				if(_g == null) {
					var kind = _g;
					var func = _g1;
					return (kind != stx_g_lang_expr_GFunctionKind.GFArrow ? "function" : "") + this.printFunction(func,kind);
				} else if(_g._hx_index == 1) {
					var no = _g.name;
					var inlined = _g.inlined;
					var func = _g1;
					return (inlined ? "inline " : "") + ("function " + no) + this.printFunction(func);
				} else {
					var kind = _g;
					var func = _g1;
					return (kind != stx_g_lang_expr_GFunctionKind.GFArrow ? "function" : "") + this.printFunction(func,kind);
				}
				break;
			case 12:
				var _g = e.exprs;
				if(stx_nano_Cluster.get_length(_g) == 0) {
					return "{ }";
				} else {
					var el = _g;
					var old = this.tabs;
					this.tabs += this.tabString;
					var s = "{\n" + this.tabs + this.printExprs(el,";\n" + this.tabs);
					this.tabs = old;
					return s + (";\n" + this.tabs + "}");
				}
				break;
			case 13:
				var e1 = e.it;
				var e2 = e.eexpr;
				return "for (" + this.printExpr(e1) + ") " + this.printExpr(e2);
			case 14:
				var _g = e.econd;
				var _g1 = e.eif;
				var _g2 = e.eelse;
				if(_g2 == null) {
					var eif = _g1;
					var econd = _g;
					return "if (" + this.printExpr(econd) + ") " + this.printExpr(eif);
				} else {
					var eelse = _g2;
					var eif = _g1;
					var econd = _g;
					return "if (" + this.printExpr(econd) + ") " + this.printExpr(eif) + " else " + this.printExpr(eelse);
				}
				break;
			case 15:
				var _g = e.econd;
				var _g1 = e.e;
				if(e.normalWhile) {
					var e1 = _g1;
					var econd = _g;
					return "while (" + this.printExpr(econd) + ") " + this.printExpr(e1);
				} else {
					var e1 = _g1;
					var econd = _g;
					return "do " + this.printExpr(e1) + " while (" + this.printExpr(econd) + ")";
				}
				break;
			case 16:
				var e1 = e.e;
				var cl = e.cases;
				var edef = e.edef;
				var old = this.tabs;
				this.tabs += this.tabString;
				var s = "switch " + this.printExpr(e1) + " {\n" + this.tabs + stx_nano_ClusterLift.map(cl,function(c) {
					return "case " + _gthis.printExprs(c.values,", ") + (c.guard != null ? " if (" + _gthis.printExpr(c.guard) + "):" : ":") + (c.expr != null ? _gthis.opt(c.expr,$bind(_gthis,_gthis.printExpr)) + ";" : "");
				}).join("\n" + this.tabs);
				if(edef != null) {
					s += "\n" + this.tabs + "default:" + (edef == null ? "" : this.printExpr(edef) + ";");
				}
				this.tabs = old;
				return s + ("\n" + this.tabs + "}");
			case 17:
				var e1 = e.e;
				var cl = e.catches;
				return "try " + this.printExpr(e1) + stx_nano_ClusterLift.map(cl,function(c) {
					return _gthis.printCatch(c);
				}).join("");
			case 18:
				var eo = e.e;
				return "return" + this.opt(eo,$bind(this,this.printExpr)," ");
			case 19:
				return "break";
			case 20:
				return "continue";
			case 21:
				var e1 = e.e;
				return "untyped " + this.printExpr(e1);
			case 22:
				var e1 = e.e;
				return "throw " + this.printExpr(e1);
			case 23:
				var _g = e.e;
				var e1 = _g;
				var cto = e.t;
				if(cto != null) {
					return "cast(" + this.printExpr(e1) + ", " + this.printComplexType(cto) + ")";
				} else {
					var e1 = _g;
					return "cast " + this.printExpr(e1);
				}
				break;
			case 24:
				var econd = e.econd;
				var eif = e.eif;
				var eelse = e.eelse;
				return "" + this.printExpr(econd) + " ? " + this.printExpr(eif) + " : " + this.printExpr(eelse);
			case 25:
				var e1 = e.e;
				var ct = e.t;
				return "(" + this.printExpr(e1) + " : " + this.printComplexType(ct) + ")";
			case 26:
				var _g = e.s;
				var _g1 = e.e;
				var _g2 = _g.name;
				var _g3 = _g.params;
				var _g3 = stx_g_lang_expr_GMetadataEntry.get_self(_g);
				if(_g2 == ":implicitReturn") {
					if(_g1._hx_index == 18) {
						var e1 = _g1.e;
						return this.printExpr(e1);
					} else {
						var meta = _g;
						var e1 = _g1;
						return this.printMetadata(meta) + " " + this.printExpr(e1);
					}
				} else {
					var meta = _g;
					var e1 = _g1;
					return this.printMetadata(meta) + " " + this.printExpr(e1);
				}
				break;
			case 27:
				var e1 = e.e;
				var ct = e.t;
				return "" + this.printExpr(e1) + " is " + this.printComplexType(ct);
			}
		}
	}
	,printExprs: function(el,sep) {
		return stx_nano_ClusterLift.map(el,$bind(this,this.printExpr)).join(sep);
	}
	,printExtension: function(tpl,fields) {
		return "{\n" + this.tabs + ">" + stx_nano_ClusterLift.map(tpl,$bind(this,this.printTypePath)).join(",\n" + this.tabs + ">") + "," + (stx_nano_Cluster.get_length(fields) > 0 ? "\n" + this.tabs + stx_nano_ClusterLift.map(fields,$bind(this,this.printField)).join(";\n" + this.tabs) + ";\n}" : "\n}");
	}
	,printStructure: function(fields) {
		if(stx_nano_Cluster.get_length(fields) == 0) {
			return "{ }";
		} else {
			return "{\n" + this.tabs + stx_nano_ClusterLift.map(fields,$bind(this,this.printField)).join(";\n" + this.tabs) + ";\n}";
		}
	}
	,printTypeDefinition: function(t,printPackage) {
		if(printPackage == null) {
			printPackage = true;
		}
		var old = this.tabs;
		this.tabs = this.tabString;
		var str;
		if(t == null) {
			str = "#NULL";
		} else {
			var str1 = (printPackage && stx_nano_Cluster.get_length(t.pack) > 0 && t.pack[0] != "" ? "package " + t.pack.join(".") + ";\n" : "") + (t.doc != null && t.doc != "" ? "/**\n" + this.tabString + StringTools.replace(t.doc,"\n","\n" + this.tabString) + "\n**/\n" : "") + (t.meta != null && stx_nano_Cluster.get_length(t.meta) > 0 ? stx_nano_ClusterLift.map(t.meta,$bind(this,this.printMetadata)).join(" ") + " " : "") + (t.isExtern ? "extern " : "");
			var _g = t.kind;
			var str2;
			switch(_g._hx_index) {
			case 0:
				var str3 = "enum " + t.name + (t.params != null && stx_nano_Cluster.get_length(t.params) > 0 ? "<" + stx_nano_ClusterLift.map(t.params,$bind(this,this.printTypeParamDecl)).join(", ") + ">" : "") + " {\n";
				var _g1 = [];
				var _g_current = 0;
				var _g_array = t.fields;
				while(_g_current < _g_array.length) {
					var field = _g_array[_g_current++];
					var str4 = this.tabs + (field.doc != null && field.doc != "" ? "/**\n" + this.tabs + this.tabString + StringTools.replace(field.doc,"\n","\n" + this.tabs + this.tabString) + "\n" + this.tabs + "**/\n" + this.tabs : "") + (field.meta != null && stx_nano_Cluster.get_length(field.meta) > 0 ? stx_nano_ClusterLift.map(field.meta,$bind(this,this.printMetadata)).join(" ") + " " : "");
					var _g2 = field.kind;
					var str5;
					switch(_g2._hx_index) {
					case 0:
						var _g3 = _g2.e;
						var t1 = _g2.t;
						str5 = field.name + this.opt(t1,$bind(this,this.printComplexType),":");
						break;
					case 1:
						var func = _g2.f;
						str5 = field.name + this.printFunction(func);
						break;
					case 2:
						var _g4 = _g2.get;
						var _g5 = _g2.set;
						var _g6 = _g2.t;
						var _g7 = _g2.e;
						throw haxe_Exception.thrown("FProp is invalid for TDEnum.");
					}
					_g1.push(str4 + str5 + ";");
				}
				str2 = str3 + _g1.join("\n") + "\n}";
				break;
			case 1:
				var str3 = "typedef " + t.name + (t.params != null && stx_nano_Cluster.get_length(t.params) > 0 ? "<" + stx_nano_ClusterLift.map(t.params,$bind(this,this.printTypeParamDecl)).join(", ") + ">" : "") + " = {\n";
				var _g1 = [];
				var _g_current = 0;
				var _g_array = t.fields;
				while(_g_current < _g_array.length) {
					var f = _g_array[_g_current++];
					_g1.push(this.tabs + this.printField(f) + ";");
				}
				str2 = str3 + _g1.join("\n") + "\n}";
				break;
			case 2:
				var superClass = _g.superClass;
				var interfaces = _g.interfaces;
				var isInterface = _g.isInterface;
				var isFinal = _g.isFinal;
				var isAbstract = _g.isAbstract;
				var str3 = (isFinal ? "final " : "") + (isAbstract ? "abstract " : "") + (isInterface ? "interface " : "class ") + t.name + (t.params != null && stx_nano_Cluster.get_length(t.params) > 0 ? "<" + stx_nano_ClusterLift.map(t.params,$bind(this,this.printTypeParamDecl)).join(", ") + ">" : "") + (superClass != null ? " extends " + this.printTypePath(superClass) : "");
				var str4;
				if(interfaces != null) {
					var str5;
					if(isInterface) {
						var _g1 = [];
						var _g_current = 0;
						var _g_array = interfaces;
						while(_g_current < _g_array.length) {
							var tp = _g_array[_g_current++];
							_g1.push(" extends " + this.printTypePath(tp));
						}
						str5 = _g1;
					} else {
						var _g1 = [];
						var _g_current = 0;
						var _g_array = interfaces;
						while(_g_current < _g_array.length) {
							var tp = _g_array[_g_current++];
							_g1.push(" implements " + this.printTypePath(tp));
						}
						str5 = _g1;
					}
					str4 = str5.join("");
				} else {
					str4 = "";
				}
				var str5 = str3 + str4 + " {\n";
				var _g1 = [];
				var _g_current = 0;
				var _g_array = t.fields;
				while(_g_current < _g_array.length) {
					var f = _g_array[_g_current++];
					_g1.push(this.tabs + this.printFieldWithDelimiter(f));
				}
				str2 = str5 + _g1.join("\n") + "\n}";
				break;
			case 3:
				var ct = _g.t;
				var str3 = "typedef " + t.name + (t.params != null && stx_nano_Cluster.get_length(t.params) > 0 ? "<" + stx_nano_ClusterLift.map(t.params,$bind(this,this.printTypeParamDecl)).join(", ") + ">" : "") + " = ";
				var str4;
				switch(ct._hx_index) {
				case 2:
					var fields = ct.fields;
					str4 = this.printStructure(fields);
					break;
				case 4:
					var tpl = ct.p;
					var fields = ct.fields;
					str4 = this.printExtension(tpl,fields);
					break;
				default:
					str4 = this.printComplexType(ct);
				}
				str2 = str3 + str4 + ";";
				break;
			case 4:
				var tthis = _g.tthis;
				var from = _g.from;
				var to = _g.to;
				var str3 = "abstract " + t.name + (t.params != null && stx_nano_Cluster.get_length(t.params) > 0 ? "<" + stx_nano_ClusterLift.map(t.params,$bind(this,this.printTypeParamDecl)).join(", ") + ">" : "") + (tthis == null ? "" : "(" + this.printComplexType(tthis) + ")");
				var str4;
				if(from == null) {
					str4 = "";
				} else {
					var _g1 = [];
					var _g_current = 0;
					var _g_array = from;
					while(_g_current < _g_array.length) {
						var f = _g_array[_g_current++];
						_g1.push(" from " + this.printComplexType(f));
					}
					str4 = _g1.join("");
				}
				var str5 = str3 + str4;
				var str3;
				if(to == null) {
					str3 = "";
				} else {
					var _g1 = [];
					var _g_current = 0;
					var _g_array = to;
					while(_g_current < _g_array.length) {
						var t1 = _g_array[_g_current++];
						_g1.push(" to " + this.printComplexType(t1));
					}
					str3 = _g1.join("");
				}
				var str4 = str5 + str3 + " {\n";
				var _g1 = [];
				var _g_current = 0;
				var _g_array = t.fields;
				while(_g_current < _g_array.length) {
					var f = _g_array[_g_current++];
					_g1.push(this.tabs + this.printFieldWithDelimiter(f));
				}
				str2 = str4 + _g1.join("\n") + "\n}";
				break;
			case 5:
				var kind = _g.kind;
				var access = _g.access;
				this.tabs = old;
				var str3 = access != null && stx_nano_Cluster.get_length(access) > 0 ? stx_nano_ClusterLift.map(access,$bind(this,this.printAccess)).join(" ") + " " : "";
				var str4;
				switch(kind._hx_index) {
				case 0:
					var type = kind.t;
					var eo = kind.e;
					var str5;
					if(access != null) {
						var obj = stx_g_lang_expr_GAccessSum.GAFinal;
						var str6 = function(self) {
							var index = self.indexOf(obj);
							if(index == -1) {
								return haxe_ds_Option.None;
							} else {
								return haxe_ds_Option.Some(index);
							}
						};
						var value = stx_nano_Cluster.toIterable(access);
						str5 = stx_pico_OptionLift.is_defined(str6(((value) instanceof Array) ? value : null));
					} else {
						str5 = false;
					}
					str4 = (str5 ? "" : "var ") + ("" + t.name) + this.opt(type,$bind(this,this.printComplexType)," : ") + this.opt(eo,$bind(this,this.printExpr)," = ") + ";";
					break;
				case 1:
					var func = kind.f;
					var str5 = "function " + t.name + this.printFunction(func);
					var _g = func.expr;
					var str6;
					if(_g == null) {
						str6 = ";";
					} else if(_g._hx_index == 12) {
						var _g1 = _g.exprs;
						str6 = "";
					} else {
						str6 = ";";
					}
					str4 = str5 + str6;
					break;
				case 2:
					var get = kind.get;
					var set = kind.set;
					var type = kind.t;
					var eo = kind.e;
					str4 = "var " + t.name + "(" + stx_g_lang_expr_GPropAccessLift.getting(get) + ", " + stx_g_lang_expr_GPropAccessLift.setting(set) + ")" + this.opt(type,$bind(this,this.printComplexType)," : ") + this.opt(eo,$bind(this,this.printExpr)," = ") + ";";
					break;
				}
				str2 = str3 + str4;
				break;
			}
			str = str1 + str2;
		}
		this.tabs = old;
		return str;
	}
	,printFieldWithDelimiter: function(f) {
		var tmp = this.printField(f);
		var _g = f.kind;
		var tmp1;
		switch(_g._hx_index) {
		case 0:
			var _g1 = _g.t;
			var _g1 = _g.e;
			tmp1 = ";";
			break;
		case 1:
			var _g1 = _g.f;
			var _g2 = _g1.args;
			var _g2 = _g1.expr;
			var _g3 = _g1.params;
			var _g3 = _g1.ret;
			var _g3 = stx_g_lang_expr_GFunction.get_self(_g1);
			if(_g2 == null) {
				tmp1 = ";";
			} else if(_g2._hx_index == 12) {
				var _g1 = _g2.exprs;
				tmp1 = "";
			} else {
				tmp1 = ";";
			}
			break;
		case 2:
			var _g1 = _g.get;
			var _g1 = _g.set;
			var _g1 = _g.t;
			var _g1 = _g.e;
			tmp1 = ";";
			break;
		}
		return tmp + tmp1;
	}
	,printCatch: function(c) {
		return " catch(" + c.name + (c.type == null ? "" : ":" + this.printComplexType(c.type)) + ") " + this.printExpr(c.expr);
	}
	,opt: function(v,f,prefix) {
		if(prefix == null) {
			prefix = "";
		}
		if(v == null) {
			return "";
		} else {
			return prefix + f(v);
		}
	}
	,__class__: stx_g_lang_Printer
};
var stx_g_lang_expr_GAccessCtr = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["stx.g.lang.expr.GAccessCtr"] = stx_g_lang_expr_GAccessCtr;
stx_g_lang_expr_GAccessCtr.__name__ = "stx.g.lang.expr.GAccessCtr";
stx_g_lang_expr_GAccessCtr.unit = function() {
	return new stx_g_lang_expr_GAccessCtr();
};
stx_g_lang_expr_GAccessCtr.__super__ = stx_pico_Clazz;
stx_g_lang_expr_GAccessCtr.prototype = $extend(stx_pico_Clazz.prototype,{
	lift: function(self) {
		return stx_g_lang_expr_GAccess.lift(self);
	}
	,Public: function() {
		return this.lift(stx_g_lang_expr_GAccessSum.GAPublic);
	}
	,Private: function() {
		return this.lift(stx_g_lang_expr_GAccessSum.GAPrivate);
	}
	,Static: function() {
		return this.lift(stx_g_lang_expr_GAccessSum.GAStatic);
	}
	,Override: function() {
		return this.lift(stx_g_lang_expr_GAccessSum.GAOverride);
	}
	,Dynamic: function() {
		return this.lift(stx_g_lang_expr_GAccessSum.GADynamic);
	}
	,Inline: function() {
		return this.lift(stx_g_lang_expr_GAccessSum.GAInline);
	}
	,Macro: function() {
		return this.lift(stx_g_lang_expr_GAccessSum.GAMacro);
	}
	,Final: function() {
		return this.lift(stx_g_lang_expr_GAccessSum.GAFinal);
	}
	,Extern: function() {
		return this.lift(stx_g_lang_expr_GAccessSum.GAExtern);
	}
	,Abstract: function() {
		return this.lift(stx_g_lang_expr_GAccessSum.GAAbstract);
	}
	,Overload: function() {
		return this.lift(stx_g_lang_expr_GAccessSum.GAOverload);
	}
	,__class__: stx_g_lang_expr_GAccessCtr
});
var stx_g_lang_expr_GAccessSum = $hxEnums["stx.g.lang.expr.GAccessSum"] = { __ename__:"stx.g.lang.expr.GAccessSum",__constructs__:null
	,GAPublic: {_hx_name:"GAPublic",_hx_index:0,__enum__:"stx.g.lang.expr.GAccessSum",toString:$estr}
	,GAPrivate: {_hx_name:"GAPrivate",_hx_index:1,__enum__:"stx.g.lang.expr.GAccessSum",toString:$estr}
	,GAStatic: {_hx_name:"GAStatic",_hx_index:2,__enum__:"stx.g.lang.expr.GAccessSum",toString:$estr}
	,GAOverride: {_hx_name:"GAOverride",_hx_index:3,__enum__:"stx.g.lang.expr.GAccessSum",toString:$estr}
	,GADynamic: {_hx_name:"GADynamic",_hx_index:4,__enum__:"stx.g.lang.expr.GAccessSum",toString:$estr}
	,GAInline: {_hx_name:"GAInline",_hx_index:5,__enum__:"stx.g.lang.expr.GAccessSum",toString:$estr}
	,GAMacro: {_hx_name:"GAMacro",_hx_index:6,__enum__:"stx.g.lang.expr.GAccessSum",toString:$estr}
	,GAFinal: {_hx_name:"GAFinal",_hx_index:7,__enum__:"stx.g.lang.expr.GAccessSum",toString:$estr}
	,GAExtern: {_hx_name:"GAExtern",_hx_index:8,__enum__:"stx.g.lang.expr.GAccessSum",toString:$estr}
	,GAAbstract: {_hx_name:"GAAbstract",_hx_index:9,__enum__:"stx.g.lang.expr.GAccessSum",toString:$estr}
	,GAOverload: {_hx_name:"GAOverload",_hx_index:10,__enum__:"stx.g.lang.expr.GAccessSum",toString:$estr}
};
stx_g_lang_expr_GAccessSum.__constructs__ = [stx_g_lang_expr_GAccessSum.GAPublic,stx_g_lang_expr_GAccessSum.GAPrivate,stx_g_lang_expr_GAccessSum.GAStatic,stx_g_lang_expr_GAccessSum.GAOverride,stx_g_lang_expr_GAccessSum.GADynamic,stx_g_lang_expr_GAccessSum.GAInline,stx_g_lang_expr_GAccessSum.GAMacro,stx_g_lang_expr_GAccessSum.GAFinal,stx_g_lang_expr_GAccessSum.GAExtern,stx_g_lang_expr_GAccessSum.GAAbstract,stx_g_lang_expr_GAccessSum.GAOverload];
var stx_g_lang_expr_GAccess = {};
stx_g_lang_expr_GAccess._new = function(self) {
	var this1 = self;
	return this1;
};
stx_g_lang_expr_GAccess.lift = function(self) {
	return stx_g_lang_expr_GAccess._new(self);
};
stx_g_lang_expr_GAccess.prj = function(this1) {
	return this1;
};
stx_g_lang_expr_GAccess.get_self = function(this1) {
	return stx_g_lang_expr_GAccess.lift(this1);
};
stx_g_lang_expr_GAccess.toSource = function(this1) {
	return stx_g_lang_Printer.get_ZERO().printAccess(this1);
};
var stx_g_lang_expr_GAccessLift = function() { };
$hxClasses["stx.g.lang.expr.GAccessLift"] = stx_g_lang_expr_GAccessLift;
stx_g_lang_expr_GAccessLift.__name__ = "stx.g.lang.expr.GAccessLift";
stx_g_lang_expr_GAccessLift.to_macro_at = function(self,pos) {
	switch(self._hx_index) {
	case 0:
		return haxe_macro_Access.APublic;
	case 1:
		return haxe_macro_Access.APrivate;
	case 2:
		return haxe_macro_Access.AStatic;
	case 3:
		return haxe_macro_Access.AOverride;
	case 4:
		return haxe_macro_Access.ADynamic;
	case 5:
		return haxe_macro_Access.AInline;
	case 6:
		return haxe_macro_Access.AMacro;
	case 7:
		return haxe_macro_Access.AFinal;
	case 8:
		return haxe_macro_Access.AExtern;
	case 9:
		return haxe_macro_Access.AAbstract;
	case 10:
		return haxe_macro_Access.AOverload;
	}
};
var stx_g_lang_expr_GBinopSum = $hxEnums["stx.g.lang.expr.GBinopSum"] = { __ename__:"stx.g.lang.expr.GBinopSum",__constructs__:null
	,GOpAdd: {_hx_name:"GOpAdd",_hx_index:0,__enum__:"stx.g.lang.expr.GBinopSum",toString:$estr}
	,GOpMult: {_hx_name:"GOpMult",_hx_index:1,__enum__:"stx.g.lang.expr.GBinopSum",toString:$estr}
	,GOpDiv: {_hx_name:"GOpDiv",_hx_index:2,__enum__:"stx.g.lang.expr.GBinopSum",toString:$estr}
	,GOpSub: {_hx_name:"GOpSub",_hx_index:3,__enum__:"stx.g.lang.expr.GBinopSum",toString:$estr}
	,GOpAssign: {_hx_name:"GOpAssign",_hx_index:4,__enum__:"stx.g.lang.expr.GBinopSum",toString:$estr}
	,GOpEq: {_hx_name:"GOpEq",_hx_index:5,__enum__:"stx.g.lang.expr.GBinopSum",toString:$estr}
	,GOpNotEq: {_hx_name:"GOpNotEq",_hx_index:6,__enum__:"stx.g.lang.expr.GBinopSum",toString:$estr}
	,GOpGt: {_hx_name:"GOpGt",_hx_index:7,__enum__:"stx.g.lang.expr.GBinopSum",toString:$estr}
	,GOpGte: {_hx_name:"GOpGte",_hx_index:8,__enum__:"stx.g.lang.expr.GBinopSum",toString:$estr}
	,GOpLt: {_hx_name:"GOpLt",_hx_index:9,__enum__:"stx.g.lang.expr.GBinopSum",toString:$estr}
	,GOpLte: {_hx_name:"GOpLte",_hx_index:10,__enum__:"stx.g.lang.expr.GBinopSum",toString:$estr}
	,GOpAnd: {_hx_name:"GOpAnd",_hx_index:11,__enum__:"stx.g.lang.expr.GBinopSum",toString:$estr}
	,GOpOr: {_hx_name:"GOpOr",_hx_index:12,__enum__:"stx.g.lang.expr.GBinopSum",toString:$estr}
	,GOpXor: {_hx_name:"GOpXor",_hx_index:13,__enum__:"stx.g.lang.expr.GBinopSum",toString:$estr}
	,GOpBoolAnd: {_hx_name:"GOpBoolAnd",_hx_index:14,__enum__:"stx.g.lang.expr.GBinopSum",toString:$estr}
	,GOpBoolOr: {_hx_name:"GOpBoolOr",_hx_index:15,__enum__:"stx.g.lang.expr.GBinopSum",toString:$estr}
	,GOpShl: {_hx_name:"GOpShl",_hx_index:16,__enum__:"stx.g.lang.expr.GBinopSum",toString:$estr}
	,GOpShr: {_hx_name:"GOpShr",_hx_index:17,__enum__:"stx.g.lang.expr.GBinopSum",toString:$estr}
	,GOpUShr: {_hx_name:"GOpUShr",_hx_index:18,__enum__:"stx.g.lang.expr.GBinopSum",toString:$estr}
	,GOpMod: {_hx_name:"GOpMod",_hx_index:19,__enum__:"stx.g.lang.expr.GBinopSum",toString:$estr}
	,GOpAssignOp: ($_=function(op) { return {_hx_index:20,op:op,__enum__:"stx.g.lang.expr.GBinopSum",toString:$estr}; },$_._hx_name="GOpAssignOp",$_.__params__ = ["op"],$_)
	,GOpInterval: {_hx_name:"GOpInterval",_hx_index:21,__enum__:"stx.g.lang.expr.GBinopSum",toString:$estr}
	,GOpArrow: {_hx_name:"GOpArrow",_hx_index:22,__enum__:"stx.g.lang.expr.GBinopSum",toString:$estr}
	,GOpIn: {_hx_name:"GOpIn",_hx_index:23,__enum__:"stx.g.lang.expr.GBinopSum",toString:$estr}
	,GOpNullCoal: {_hx_name:"GOpNullCoal",_hx_index:24,__enum__:"stx.g.lang.expr.GBinopSum",toString:$estr}
};
stx_g_lang_expr_GBinopSum.__constructs__ = [stx_g_lang_expr_GBinopSum.GOpAdd,stx_g_lang_expr_GBinopSum.GOpMult,stx_g_lang_expr_GBinopSum.GOpDiv,stx_g_lang_expr_GBinopSum.GOpSub,stx_g_lang_expr_GBinopSum.GOpAssign,stx_g_lang_expr_GBinopSum.GOpEq,stx_g_lang_expr_GBinopSum.GOpNotEq,stx_g_lang_expr_GBinopSum.GOpGt,stx_g_lang_expr_GBinopSum.GOpGte,stx_g_lang_expr_GBinopSum.GOpLt,stx_g_lang_expr_GBinopSum.GOpLte,stx_g_lang_expr_GBinopSum.GOpAnd,stx_g_lang_expr_GBinopSum.GOpOr,stx_g_lang_expr_GBinopSum.GOpXor,stx_g_lang_expr_GBinopSum.GOpBoolAnd,stx_g_lang_expr_GBinopSum.GOpBoolOr,stx_g_lang_expr_GBinopSum.GOpShl,stx_g_lang_expr_GBinopSum.GOpShr,stx_g_lang_expr_GBinopSum.GOpUShr,stx_g_lang_expr_GBinopSum.GOpMod,stx_g_lang_expr_GBinopSum.GOpAssignOp,stx_g_lang_expr_GBinopSum.GOpInterval,stx_g_lang_expr_GBinopSum.GOpArrow,stx_g_lang_expr_GBinopSum.GOpIn,stx_g_lang_expr_GBinopSum.GOpNullCoal];
var stx_g_lang_expr_GBinop = {};
stx_g_lang_expr_GBinop._new = function(self) {
	var this1 = self;
	return this1;
};
stx_g_lang_expr_GBinop.lift = function(self) {
	return stx_g_lang_expr_GBinop._new(self);
};
stx_g_lang_expr_GBinop.prj = function(this1) {
	return this1;
};
stx_g_lang_expr_GBinop.get_self = function(this1) {
	return stx_g_lang_expr_GBinop.lift(this1);
};
stx_g_lang_expr_GBinop.toSource = function(this1) {
	return stx_g_lang_Printer.get_ZERO().printBinop(this1);
};
var stx_g_lang_expr_GBinopLift = function() { };
$hxClasses["stx.g.lang.expr.GBinopLift"] = stx_g_lang_expr_GBinopLift;
stx_g_lang_expr_GBinopLift.__name__ = "stx.g.lang.expr.GBinopLift";
stx_g_lang_expr_GBinopLift.to_macro_at = function(self,pos) {
	switch(self._hx_index) {
	case 0:
		return haxe_macro_Binop.OpAdd;
	case 1:
		return haxe_macro_Binop.OpMult;
	case 2:
		return haxe_macro_Binop.OpDiv;
	case 3:
		return haxe_macro_Binop.OpSub;
	case 4:
		return haxe_macro_Binop.OpAssign;
	case 5:
		return haxe_macro_Binop.OpEq;
	case 6:
		return haxe_macro_Binop.OpNotEq;
	case 7:
		return haxe_macro_Binop.OpGt;
	case 8:
		return haxe_macro_Binop.OpGte;
	case 9:
		return haxe_macro_Binop.OpLt;
	case 10:
		return haxe_macro_Binop.OpLte;
	case 11:
		return haxe_macro_Binop.OpAnd;
	case 12:
		return haxe_macro_Binop.OpOr;
	case 13:
		return haxe_macro_Binop.OpXor;
	case 14:
		return haxe_macro_Binop.OpBoolAnd;
	case 15:
		return haxe_macro_Binop.OpBoolOr;
	case 16:
		return haxe_macro_Binop.OpShl;
	case 17:
		return haxe_macro_Binop.OpShr;
	case 18:
		return haxe_macro_Binop.OpUShr;
	case 19:
		return haxe_macro_Binop.OpMod;
	case 20:
		var op = self.op;
		return haxe_macro_Binop.OpAssignOp(stx_g_lang_expr_GBinopLift.to_macro_at(op,pos));
	case 21:
		return haxe_macro_Binop.OpInterval;
	case 22:
		return haxe_macro_Binop.OpArrow;
	case 23:
		return haxe_macro_Binop.OpIn;
	case 24:
		return haxe_macro_Binop.OpNullCoal;
	}
};
var stx_g_lang_expr_GCaseCtr = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["stx.g.lang.expr.GCaseCtr"] = stx_g_lang_expr_GCaseCtr;
stx_g_lang_expr_GCaseCtr.__name__ = "stx.g.lang.expr.GCaseCtr";
stx_g_lang_expr_GCaseCtr.unit = function() {
	return new stx_g_lang_expr_GCaseCtr();
};
stx_g_lang_expr_GCaseCtr.__super__ = stx_pico_Clazz;
stx_g_lang_expr_GCaseCtr.prototype = $extend(stx_pico_Clazz.prototype,{
	lift: function(self) {
		return stx_g_lang_expr_GCase.lift(self);
	}
	,Make: function(values,guard,expr) {
		var ctr = stx_g_lang_expr_GExprCtr.unit();
		var tmp = values(ctr);
		var self = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,guard),function(f) {
			return f(ctr);
		});
		var tmp1;
		if(self._hx_index == 0) {
			var v = self.v;
			tmp1 = v;
		} else {
			tmp1 = null;
		}
		var self = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,expr),function(f) {
			return f(ctr);
		});
		var tmp2;
		if(self._hx_index == 0) {
			var v = self.v;
			tmp2 = v;
		} else {
			tmp2 = null;
		}
		return stx_g_lang_expr_GCase.make(tmp,tmp1,tmp2);
	}
	,__class__: stx_g_lang_expr_GCaseCtr
});
var stx_g_lang_expr_GCase = {};
stx_g_lang_expr_GCase._new = function(self) {
	var this1 = self;
	return this1;
};
stx_g_lang_expr_GCase.lift = function(self) {
	return stx_g_lang_expr_GCase._new(self);
};
stx_g_lang_expr_GCase.make = function(values,guard,expr) {
	return stx_g_lang_expr_GCase.lift({ values : values, guard : guard, expr : expr});
};
stx_g_lang_expr_GCase.prj = function(this1) {
	return this1;
};
stx_g_lang_expr_GCase.get_self = function(this1) {
	return stx_g_lang_expr_GCase.lift(this1);
};
var stx_g_lang_expr_GCaseLift = function() { };
$hxClasses["stx.g.lang.expr.GCaseLift"] = stx_g_lang_expr_GCaseLift;
stx_g_lang_expr_GCaseLift.__name__ = "stx.g.lang.expr.GCaseLift";
stx_g_lang_expr_GCaseLift.to_macro_at = function(self,pos) {
	var self1 = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,self.values),function(x) {
		return stx_nano_Cluster.prj(stx_nano_ClusterLift.map(x,function(y) {
			return stx_g_lang_expr_GExprLift.to_macro_at(y,pos);
		}));
	});
	var tmp;
	if(self1._hx_index == 0) {
		var v = self1.v;
		tmp = v;
	} else {
		tmp = [];
	}
	var self1 = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,self.guard),function(x) {
		return stx_g_lang_expr_GExprLift.to_macro_at(x,pos);
	});
	var tmp1;
	if(self1._hx_index == 0) {
		var v = self1.v;
		tmp1 = v;
	} else {
		tmp1 = null;
	}
	var self1 = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,self.expr),function(x) {
		return stx_g_lang_expr_GExprLift.to_macro_at(x,pos);
	});
	var tmp2;
	if(self1._hx_index == 0) {
		var v = self1.v;
		tmp2 = v;
	} else {
		tmp2 = null;
	}
	return { values : tmp, guard : tmp1, expr : tmp2};
};
var stx_g_lang_expr_GCatchCtr = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["stx.g.lang.expr.GCatchCtr"] = stx_g_lang_expr_GCatchCtr;
stx_g_lang_expr_GCatchCtr.__name__ = "stx.g.lang.expr.GCatchCtr";
stx_g_lang_expr_GCatchCtr.unit = function() {
	return new stx_g_lang_expr_GCatchCtr();
};
stx_g_lang_expr_GCatchCtr.__super__ = stx_pico_Clazz;
stx_g_lang_expr_GCatchCtr.prototype = $extend(stx_pico_Clazz.prototype,{
	lift: function(self) {
		return stx_g_lang_expr_GCatch.lift(self);
	}
	,Make: function(name,expr,type) {
		var tmp = expr(stx_g_lang_expr_GExpr.__);
		var self = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,type),function(f) {
			return f(stx_g_lang_expr_GComplexType.__);
		});
		var tmp1;
		if(self._hx_index == 0) {
			var v = self.v;
			tmp1 = v;
		} else {
			tmp1 = null;
		}
		return stx_g_lang_expr_GCatch.make(name,tmp,tmp1);
	}
	,__class__: stx_g_lang_expr_GCatchCtr
});
var stx_g_lang_expr_GCatchLift = function() { };
$hxClasses["stx.g.lang.expr.GCatchLift"] = stx_g_lang_expr_GCatchLift;
stx_g_lang_expr_GCatchLift.__name__ = "stx.g.lang.expr.GCatchLift";
stx_g_lang_expr_GCatchLift.to_macro_at = function(self,pos) {
	var self1 = self.name;
	var tmp = stx_g_lang_expr_GExprLift.to_macro_at(self.expr,pos);
	var self2 = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,self.type),function(x) {
		return stx_g_lang_expr_GComplexTypeLift.to_macro_at(x,pos);
	});
	var tmp1;
	if(self2._hx_index == 0) {
		var v = self2.v;
		tmp1 = v;
	} else {
		tmp1 = null;
	}
	return { name : self1, expr : tmp, type : tmp1};
};
var stx_g_lang_expr_GCatch = {};
stx_g_lang_expr_GCatch._new = function(self) {
	var this1 = self;
	return this1;
};
stx_g_lang_expr_GCatch.lift = function(self) {
	return stx_g_lang_expr_GCatch._new(self);
};
stx_g_lang_expr_GCatch.make = function(name,expr,type) {
	return stx_g_lang_expr_GCatch.lift({ name : name, expr : expr, type : type});
};
stx_g_lang_expr_GCatch.prj = function(this1) {
	return this1;
};
stx_g_lang_expr_GCatch.get_self = function(this1) {
	return stx_g_lang_expr_GCatch.lift(this1);
};
stx_g_lang_expr_GCatch.toSource = function(this1) {
	return stx_g_lang_Printer.get_ZERO().printCatch(this1);
};
var stx_g_lang_expr_GComplexTypeCtr = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["stx.g.lang.expr.GComplexTypeCtr"] = stx_g_lang_expr_GComplexTypeCtr;
stx_g_lang_expr_GComplexTypeCtr.__name__ = "stx.g.lang.expr.GComplexTypeCtr";
stx_g_lang_expr_GComplexTypeCtr.unit = function() {
	return new stx_g_lang_expr_GComplexTypeCtr();
};
stx_g_lang_expr_GComplexTypeCtr.__super__ = stx_pico_Clazz;
stx_g_lang_expr_GComplexTypeCtr.prototype = $extend(stx_pico_Clazz.prototype,{
	lift: function(self) {
		return stx_g_lang_expr_GComplexType.lift(self);
	}
	,Path: function(p) {
		return this.lift(stx_g_lang_expr_GComplexTypeSum.GTPath(p(stx_g_lang_expr_GTypePath.__)));
	}
	,Function: function(args,ret) {
		return this.lift(stx_g_lang_expr_GComplexTypeSum.GTFunction(args(stx_g_lang_expr_GComplexTypeCtr.unit()),ret(stx_g_lang_expr_GComplexTypeCtr.unit())));
	}
	,Anonymous: function(fields) {
		return this.lift(stx_g_lang_expr_GComplexTypeSum.GTAnonymous(fields(stx_g_lang_expr_GField.__)));
	}
	,Parent: function(t) {
		return this.lift(stx_g_lang_expr_GComplexTypeSum.GTParent(t(this)));
	}
	,Extend: function(p,fields) {
		return this.lift(stx_g_lang_expr_GComplexTypeSum.GTExtend(p(stx_g_lang_expr_GTypePath.__),fields(stx_g_lang_expr_GField.__)));
	}
	,Optional: function(t) {
		return this.lift(stx_g_lang_expr_GComplexTypeSum.GTOptional(t(this)));
	}
	,Named: function(n,t) {
		return this.lift(stx_g_lang_expr_GComplexTypeSum.GTNamed(n,t(this)));
	}
	,Intersection: function(t) {
		return this.lift(stx_g_lang_expr_GComplexTypeSum.GTIntersection(t(this)));
	}
	,string: function(string) {
		return this.Path(function(p) {
			return p.fromString(string);
		});
	}
	,fromString: function(string) {
		return this.Path(function(p) {
			return p.fromString(string);
		});
	}
	,__class__: stx_g_lang_expr_GComplexTypeCtr
});
var stx_g_lang_expr_GComplexTypeSum = $hxEnums["stx.g.lang.expr.GComplexTypeSum"] = { __ename__:"stx.g.lang.expr.GComplexTypeSum",__constructs__:null
	,GTPath: ($_=function(p) { return {_hx_index:0,p:p,__enum__:"stx.g.lang.expr.GComplexTypeSum",toString:$estr}; },$_._hx_name="GTPath",$_.__params__ = ["p"],$_)
	,GTFunction: ($_=function(args,ret) { return {_hx_index:1,args:args,ret:ret,__enum__:"stx.g.lang.expr.GComplexTypeSum",toString:$estr}; },$_._hx_name="GTFunction",$_.__params__ = ["args","ret"],$_)
	,GTAnonymous: ($_=function(fields) { return {_hx_index:2,fields:fields,__enum__:"stx.g.lang.expr.GComplexTypeSum",toString:$estr}; },$_._hx_name="GTAnonymous",$_.__params__ = ["fields"],$_)
	,GTParent: ($_=function(t) { return {_hx_index:3,t:t,__enum__:"stx.g.lang.expr.GComplexTypeSum",toString:$estr}; },$_._hx_name="GTParent",$_.__params__ = ["t"],$_)
	,GTExtend: ($_=function(p,fields) { return {_hx_index:4,p:p,fields:fields,__enum__:"stx.g.lang.expr.GComplexTypeSum",toString:$estr}; },$_._hx_name="GTExtend",$_.__params__ = ["p","fields"],$_)
	,GTOptional: ($_=function(t) { return {_hx_index:5,t:t,__enum__:"stx.g.lang.expr.GComplexTypeSum",toString:$estr}; },$_._hx_name="GTOptional",$_.__params__ = ["t"],$_)
	,GTNamed: ($_=function(n,t) { return {_hx_index:6,n:n,t:t,__enum__:"stx.g.lang.expr.GComplexTypeSum",toString:$estr}; },$_._hx_name="GTNamed",$_.__params__ = ["n","t"],$_)
	,GTIntersection: ($_=function(tl) { return {_hx_index:7,tl:tl,__enum__:"stx.g.lang.expr.GComplexTypeSum",toString:$estr}; },$_._hx_name="GTIntersection",$_.__params__ = ["tl"],$_)
};
stx_g_lang_expr_GComplexTypeSum.__constructs__ = [stx_g_lang_expr_GComplexTypeSum.GTPath,stx_g_lang_expr_GComplexTypeSum.GTFunction,stx_g_lang_expr_GComplexTypeSum.GTAnonymous,stx_g_lang_expr_GComplexTypeSum.GTParent,stx_g_lang_expr_GComplexTypeSum.GTExtend,stx_g_lang_expr_GComplexTypeSum.GTOptional,stx_g_lang_expr_GComplexTypeSum.GTNamed,stx_g_lang_expr_GComplexTypeSum.GTIntersection];
var stx_g_lang_expr_GComplexType = {};
stx_g_lang_expr_GComplexType._new = function(self) {
	var this1 = self;
	return this1;
};
stx_g_lang_expr_GComplexType.lift = function(self) {
	return stx_g_lang_expr_GComplexType._new(self);
};
stx_g_lang_expr_GComplexType.prj = function(this1) {
	return this1;
};
stx_g_lang_expr_GComplexType.get_self = function(this1) {
	return stx_g_lang_expr_GComplexType.lift(this1);
};
stx_g_lang_expr_GComplexType.toSource = function(this1) {
	return stx_g_lang_Printer.get_ZERO().printComplexType(this1);
};
stx_g_lang_expr_GComplexType.toTypeParam = function(this1) {
	return stx_g_lang_expr_GTypeParamSum.GTPType(this1);
};
var stx_g_lang_expr_GComplexTypeLift = function() { };
$hxClasses["stx.g.lang.expr.GComplexTypeLift"] = stx_g_lang_expr_GComplexTypeLift;
stx_g_lang_expr_GComplexTypeLift.__name__ = "stx.g.lang.expr.GComplexTypeLift";
stx_g_lang_expr_GComplexTypeLift.to_macro_at = function(self,pos) {
	switch(self._hx_index) {
	case 0:
		var p = self.p;
		return haxe_macro_ComplexType.TPath(stx_g_lang_expr_GTypePathLift.to_macro_at(p,pos));
	case 1:
		var args = self.args;
		var ret = self.ret;
		return haxe_macro_ComplexType.TFunction(stx_nano_Cluster.prj(stx_nano_ClusterLift.map(args,function(arg) {
			return stx_g_lang_expr_GComplexTypeLift.to_macro_at(arg,pos);
		})),stx_g_lang_expr_GComplexTypeLift.to_macro_at(ret,pos));
	case 2:
		var fields = self.fields;
		return haxe_macro_ComplexType.TAnonymous(stx_nano_Cluster.prj(stx_nano_ClusterLift.map(fields,function(x) {
			return stx_g_lang_expr_GFieldLift.to_macro_at(x,pos);
		})));
	case 3:
		var t = self.t;
		return haxe_macro_ComplexType.TParent(stx_g_lang_expr_GComplexTypeLift.to_macro_at(t,pos));
	case 4:
		var p = self.p;
		var fields = self.fields;
		return haxe_macro_ComplexType.TExtend(stx_nano_Cluster.prj(stx_nano_ClusterLift.map(p,function(x) {
			return stx_g_lang_expr_GTypePathLift.to_macro_at(x,pos);
		})),stx_nano_Cluster.prj(stx_nano_ClusterLift.map(fields,function(x) {
			return stx_g_lang_expr_GFieldLift.to_macro_at(x,pos);
		})));
	case 5:
		var t = self.t;
		return haxe_macro_ComplexType.TOptional(stx_g_lang_expr_GComplexTypeLift.to_macro_at(t,pos));
	case 6:
		var n = self.n;
		var t = self.t;
		return haxe_macro_ComplexType.TNamed(n,stx_g_lang_expr_GComplexTypeLift.to_macro_at(t,pos));
	case 7:
		var tl = self.tl;
		return haxe_macro_ComplexType.TIntersection(stx_nano_Cluster.prj(stx_nano_ClusterLift.map(tl,function(x) {
			return stx_g_lang_expr_GComplexTypeLift.to_macro_at(x,pos);
		})));
	}
};
var stx_g_lang_expr_GConstantCtr = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["stx.g.lang.expr.GConstantCtr"] = stx_g_lang_expr_GConstantCtr;
stx_g_lang_expr_GConstantCtr.__name__ = "stx.g.lang.expr.GConstantCtr";
stx_g_lang_expr_GConstantCtr.unit = function() {
	return new stx_g_lang_expr_GConstantCtr();
};
stx_g_lang_expr_GConstantCtr.__super__ = stx_pico_Clazz;
stx_g_lang_expr_GConstantCtr.prototype = $extend(stx_pico_Clazz.prototype,{
	lift: function(self) {
		return stx_g_lang_expr_GConstant.lift(self);
	}
	,Int: function(v,s) {
		return this.lift(stx_g_lang_expr_GConstantSum.GCInt(v,s));
	}
	,Float: function(v,s) {
		return this.lift(stx_g_lang_expr_GConstantSum.GCFloat(v,s));
	}
	,String: function(v,s) {
		return this.lift(stx_g_lang_expr_GConstantSum.GCString(v,s));
	}
	,Ident: function(v) {
		return this.lift(stx_g_lang_expr_GConstantSum.GCIdent(v));
	}
	,Regexp: function(v,opt) {
		return this.lift(stx_g_lang_expr_GConstantSum.GCRegexp(v,opt));
	}
	,__class__: stx_g_lang_expr_GConstantCtr
});
var stx_g_lang_expr_GConstantSum = $hxEnums["stx.g.lang.expr.GConstantSum"] = { __ename__:"stx.g.lang.expr.GConstantSum",__constructs__:null
	,GCInt: ($_=function(v,s) { return {_hx_index:0,v:v,s:s,__enum__:"stx.g.lang.expr.GConstantSum",toString:$estr}; },$_._hx_name="GCInt",$_.__params__ = ["v","s"],$_)
	,GCFloat: ($_=function(f,s) { return {_hx_index:1,f:f,s:s,__enum__:"stx.g.lang.expr.GConstantSum",toString:$estr}; },$_._hx_name="GCFloat",$_.__params__ = ["f","s"],$_)
	,GCString: ($_=function(s,kind) { return {_hx_index:2,s:s,kind:kind,__enum__:"stx.g.lang.expr.GConstantSum",toString:$estr}; },$_._hx_name="GCString",$_.__params__ = ["s","kind"],$_)
	,GCIdent: ($_=function(s) { return {_hx_index:3,s:s,__enum__:"stx.g.lang.expr.GConstantSum",toString:$estr}; },$_._hx_name="GCIdent",$_.__params__ = ["s"],$_)
	,GCRegexp: ($_=function(r,opt) { return {_hx_index:4,r:r,opt:opt,__enum__:"stx.g.lang.expr.GConstantSum",toString:$estr}; },$_._hx_name="GCRegexp",$_.__params__ = ["r","opt"],$_)
};
stx_g_lang_expr_GConstantSum.__constructs__ = [stx_g_lang_expr_GConstantSum.GCInt,stx_g_lang_expr_GConstantSum.GCFloat,stx_g_lang_expr_GConstantSum.GCString,stx_g_lang_expr_GConstantSum.GCIdent,stx_g_lang_expr_GConstantSum.GCRegexp];
var stx_g_lang_expr_GConstant = {};
stx_g_lang_expr_GConstant._new = function(self) {
	var this1 = self;
	return this1;
};
stx_g_lang_expr_GConstant.lift = function(self) {
	return stx_g_lang_expr_GConstant._new(self);
};
stx_g_lang_expr_GConstant.prj = function(this1) {
	return this1;
};
stx_g_lang_expr_GConstant.get_self = function(this1) {
	return stx_g_lang_expr_GConstant.lift(this1);
};
stx_g_lang_expr_GConstant.toSource = function(this1) {
	return stx_g_lang_Printer.get_ZERO().printConstant(this1);
};
stx_g_lang_expr_GConstant.toGExpr = function(this1) {
	return stx_g_Lang.g(stx_nano_Wildcard.__).expr().Const(function(_) {
		return this1;
	});
};
var stx_g_lang_expr_GConstantLift = function() { };
$hxClasses["stx.g.lang.expr.GConstantLift"] = stx_g_lang_expr_GConstantLift;
stx_g_lang_expr_GConstantLift.__name__ = "stx.g.lang.expr.GConstantLift";
stx_g_lang_expr_GConstantLift.to_macro_at = function(self,pos) {
	switch(self._hx_index) {
	case 0:
		var v = self.v;
		var s = self.s;
		return haxe_macro_Constant.CInt(v,s);
	case 1:
		var f = self.f;
		var s = self.s;
		return haxe_macro_Constant.CFloat(f,s);
	case 2:
		var s = self.s;
		var kind = self.kind;
		var self1 = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,kind),function(x) {
			return stx_g_lang_expr_GStringLiteralKindLift.to_macro_at(x,pos);
		});
		var tmp;
		if(self1._hx_index == 0) {
			var v = self1.v;
			tmp = v;
		} else {
			tmp = null;
		}
		return haxe_macro_Constant.CString(s,tmp);
	case 3:
		var s = self.s;
		return haxe_macro_Constant.CIdent(s);
	case 4:
		var r = self.r;
		var opt = self.opt;
		return haxe_macro_Constant.CRegexp(r,opt);
	}
};
stx_g_lang_expr_GConstantLift.toGComplexType = function(self) {
	var c = stx_g_Lang.g(stx_nano_Wildcard.__).ctype();
	switch(self._hx_index) {
	case 0:
		var v = self.v;
		var s = self.s;
		return c.string("std.Int");
	case 1:
		var f = self.f;
		var s = self.s;
		return c.string("std.Float");
	case 2:
		var s = self.s;
		var kind = self.kind;
		return c.string("std.String");
	case 3:
		var s = self.s;
		switch(s) {
		case "false":case "true":
			return c.string("std.Bool");
		case "null":
			return c.string("Dynamic");
		default:
			var x = s;
			throw haxe_Exception.thrown(stx_fail_GFailure.E_G_NoTypeForIdent(x));
		}
		break;
	case 4:
		var r = self.r;
		var opt = self.opt;
		return c.string("std.EReg");
	}
};
var stx_g_lang_expr_GEFieldKind = $hxEnums["stx.g.lang.expr.GEFieldKind"] = { __ename__:"stx.g.lang.expr.GEFieldKind",__constructs__:null
	,GNormal: {_hx_name:"GNormal",_hx_index:0,__enum__:"stx.g.lang.expr.GEFieldKind",toString:$estr}
	,GSafe: {_hx_name:"GSafe",_hx_index:1,__enum__:"stx.g.lang.expr.GEFieldKind",toString:$estr}
};
stx_g_lang_expr_GEFieldKind.__constructs__ = [stx_g_lang_expr_GEFieldKind.GNormal,stx_g_lang_expr_GEFieldKind.GSafe];
var stx_g_lang_expr_GEFieldKindLift = function() { };
$hxClasses["stx.g.lang.expr.GEFieldKindLift"] = stx_g_lang_expr_GEFieldKindLift;
stx_g_lang_expr_GEFieldKindLift.__name__ = "stx.g.lang.expr.GEFieldKindLift";
stx_g_lang_expr_GEFieldKindLift.to_macro_at = function(self,pos) {
	switch(self._hx_index) {
	case 0:
		return haxe_macro_EFieldKind.Normal;
	case 1:
		return haxe_macro_EFieldKind.Safe;
	}
};
var stx_g_lang_expr_GExprSum = $hxEnums["stx.g.lang.expr.GExprSum"] = { __ename__:"stx.g.lang.expr.GExprSum",__constructs__:null
	,GEConst: ($_=function(c) { return {_hx_index:0,c:c,__enum__:"stx.g.lang.expr.GExprSum",toString:$estr}; },$_._hx_name="GEConst",$_.__params__ = ["c"],$_)
	,GEArray: ($_=function(e1,e2) { return {_hx_index:1,e1:e1,e2:e2,__enum__:"stx.g.lang.expr.GExprSum",toString:$estr}; },$_._hx_name="GEArray",$_.__params__ = ["e1","e2"],$_)
	,GEBinop: ($_=function(op,e1,e2) { return {_hx_index:2,op:op,e1:e1,e2:e2,__enum__:"stx.g.lang.expr.GExprSum",toString:$estr}; },$_._hx_name="GEBinop",$_.__params__ = ["op","e1","e2"],$_)
	,GEField: ($_=function(e,field,kind) { return {_hx_index:3,e:e,field:field,kind:kind,__enum__:"stx.g.lang.expr.GExprSum",toString:$estr}; },$_._hx_name="GEField",$_.__params__ = ["e","field","kind"],$_)
	,GEParenthesis: ($_=function(e) { return {_hx_index:4,e:e,__enum__:"stx.g.lang.expr.GExprSum",toString:$estr}; },$_._hx_name="GEParenthesis",$_.__params__ = ["e"],$_)
	,GEObjectDecl: ($_=function(fields) { return {_hx_index:5,fields:fields,__enum__:"stx.g.lang.expr.GExprSum",toString:$estr}; },$_._hx_name="GEObjectDecl",$_.__params__ = ["fields"],$_)
	,GEArrayDecl: ($_=function(values) { return {_hx_index:6,values:values,__enum__:"stx.g.lang.expr.GExprSum",toString:$estr}; },$_._hx_name="GEArrayDecl",$_.__params__ = ["values"],$_)
	,GECall: ($_=function(e,params) { return {_hx_index:7,e:e,params:params,__enum__:"stx.g.lang.expr.GExprSum",toString:$estr}; },$_._hx_name="GECall",$_.__params__ = ["e","params"],$_)
	,GENew: ($_=function(t,params) { return {_hx_index:8,t:t,params:params,__enum__:"stx.g.lang.expr.GExprSum",toString:$estr}; },$_._hx_name="GENew",$_.__params__ = ["t","params"],$_)
	,GEUnop: ($_=function(op,postFix,e) { return {_hx_index:9,op:op,postFix:postFix,e:e,__enum__:"stx.g.lang.expr.GExprSum",toString:$estr}; },$_._hx_name="GEUnop",$_.__params__ = ["op","postFix","e"],$_)
	,GEVars: ($_=function(vars) { return {_hx_index:10,vars:vars,__enum__:"stx.g.lang.expr.GExprSum",toString:$estr}; },$_._hx_name="GEVars",$_.__params__ = ["vars"],$_)
	,GEFunction: ($_=function(kind,f) { return {_hx_index:11,kind:kind,f:f,__enum__:"stx.g.lang.expr.GExprSum",toString:$estr}; },$_._hx_name="GEFunction",$_.__params__ = ["kind","f"],$_)
	,GEBlock: ($_=function(exprs) { return {_hx_index:12,exprs:exprs,__enum__:"stx.g.lang.expr.GExprSum",toString:$estr}; },$_._hx_name="GEBlock",$_.__params__ = ["exprs"],$_)
	,GEFor: ($_=function(it,eexpr) { return {_hx_index:13,it:it,eexpr:eexpr,__enum__:"stx.g.lang.expr.GExprSum",toString:$estr}; },$_._hx_name="GEFor",$_.__params__ = ["it","eexpr"],$_)
	,GEIf: ($_=function(econd,eif,eelse) { return {_hx_index:14,econd:econd,eif:eif,eelse:eelse,__enum__:"stx.g.lang.expr.GExprSum",toString:$estr}; },$_._hx_name="GEIf",$_.__params__ = ["econd","eif","eelse"],$_)
	,GEWhile: ($_=function(econd,e,normalWhile) { return {_hx_index:15,econd:econd,e:e,normalWhile:normalWhile,__enum__:"stx.g.lang.expr.GExprSum",toString:$estr}; },$_._hx_name="GEWhile",$_.__params__ = ["econd","e","normalWhile"],$_)
	,GESwitch: ($_=function(e,cases,edef) { return {_hx_index:16,e:e,cases:cases,edef:edef,__enum__:"stx.g.lang.expr.GExprSum",toString:$estr}; },$_._hx_name="GESwitch",$_.__params__ = ["e","cases","edef"],$_)
	,GETry: ($_=function(e,catches) { return {_hx_index:17,e:e,catches:catches,__enum__:"stx.g.lang.expr.GExprSum",toString:$estr}; },$_._hx_name="GETry",$_.__params__ = ["e","catches"],$_)
	,GEReturn: ($_=function(e) { return {_hx_index:18,e:e,__enum__:"stx.g.lang.expr.GExprSum",toString:$estr}; },$_._hx_name="GEReturn",$_.__params__ = ["e"],$_)
	,GEBreak: {_hx_name:"GEBreak",_hx_index:19,__enum__:"stx.g.lang.expr.GExprSum",toString:$estr}
	,GEContinue: {_hx_name:"GEContinue",_hx_index:20,__enum__:"stx.g.lang.expr.GExprSum",toString:$estr}
	,GEUntyped: ($_=function(e) { return {_hx_index:21,e:e,__enum__:"stx.g.lang.expr.GExprSum",toString:$estr}; },$_._hx_name="GEUntyped",$_.__params__ = ["e"],$_)
	,GEThrow: ($_=function(e) { return {_hx_index:22,e:e,__enum__:"stx.g.lang.expr.GExprSum",toString:$estr}; },$_._hx_name="GEThrow",$_.__params__ = ["e"],$_)
	,GECast: ($_=function(e,t) { return {_hx_index:23,e:e,t:t,__enum__:"stx.g.lang.expr.GExprSum",toString:$estr}; },$_._hx_name="GECast",$_.__params__ = ["e","t"],$_)
	,GETernary: ($_=function(econd,eif,eelse) { return {_hx_index:24,econd:econd,eif:eif,eelse:eelse,__enum__:"stx.g.lang.expr.GExprSum",toString:$estr}; },$_._hx_name="GETernary",$_.__params__ = ["econd","eif","eelse"],$_)
	,GECheckType: ($_=function(e,t) { return {_hx_index:25,e:e,t:t,__enum__:"stx.g.lang.expr.GExprSum",toString:$estr}; },$_._hx_name="GECheckType",$_.__params__ = ["e","t"],$_)
	,GEMeta: ($_=function(s,e) { return {_hx_index:26,s:s,e:e,__enum__:"stx.g.lang.expr.GExprSum",toString:$estr}; },$_._hx_name="GEMeta",$_.__params__ = ["s","e"],$_)
	,GEIs: ($_=function(e,t) { return {_hx_index:27,e:e,t:t,__enum__:"stx.g.lang.expr.GExprSum",toString:$estr}; },$_._hx_name="GEIs",$_.__params__ = ["e","t"],$_)
};
stx_g_lang_expr_GExprSum.__constructs__ = [stx_g_lang_expr_GExprSum.GEConst,stx_g_lang_expr_GExprSum.GEArray,stx_g_lang_expr_GExprSum.GEBinop,stx_g_lang_expr_GExprSum.GEField,stx_g_lang_expr_GExprSum.GEParenthesis,stx_g_lang_expr_GExprSum.GEObjectDecl,stx_g_lang_expr_GExprSum.GEArrayDecl,stx_g_lang_expr_GExprSum.GECall,stx_g_lang_expr_GExprSum.GENew,stx_g_lang_expr_GExprSum.GEUnop,stx_g_lang_expr_GExprSum.GEVars,stx_g_lang_expr_GExprSum.GEFunction,stx_g_lang_expr_GExprSum.GEBlock,stx_g_lang_expr_GExprSum.GEFor,stx_g_lang_expr_GExprSum.GEIf,stx_g_lang_expr_GExprSum.GEWhile,stx_g_lang_expr_GExprSum.GESwitch,stx_g_lang_expr_GExprSum.GETry,stx_g_lang_expr_GExprSum.GEReturn,stx_g_lang_expr_GExprSum.GEBreak,stx_g_lang_expr_GExprSum.GEContinue,stx_g_lang_expr_GExprSum.GEUntyped,stx_g_lang_expr_GExprSum.GEThrow,stx_g_lang_expr_GExprSum.GECast,stx_g_lang_expr_GExprSum.GETernary,stx_g_lang_expr_GExprSum.GECheckType,stx_g_lang_expr_GExprSum.GEMeta,stx_g_lang_expr_GExprSum.GEIs];
var stx_g_lang_expr_GExprCtr = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["stx.g.lang.expr.GExprCtr"] = stx_g_lang_expr_GExprCtr;
stx_g_lang_expr_GExprCtr.__name__ = "stx.g.lang.expr.GExprCtr";
stx_g_lang_expr_GExprCtr.unit = function() {
	return new stx_g_lang_expr_GExprCtr();
};
stx_g_lang_expr_GExprCtr.__super__ = stx_pico_Clazz;
stx_g_lang_expr_GExprCtr.prototype = $extend(stx_pico_Clazz.prototype,{
	lift: function(self) {
		return stx_g_lang_expr_GExpr.lift(self);
	}
	,Const: function(c) {
		return this.lift(stx_g_lang_expr_GExprSum.GEConst(c(stx_g_lang_expr_GConstant.__)));
	}
	,Path: function(string) {
		var _gthis = this;
		var parts = string.split(".");
		return stx_lift_ArrayLift.lfold(stx_lift_ArrayLift.tail(parts),function(next,memo) {
			return _gthis.Field(function(_) {
				return memo;
			},next);
		},this.Const(function(_) {
			return _.Ident(stx_pico_OptionLift.fudge(stx_lift_ArrayLift.head(parts)));
		}));
	}
	,FieldPath: function(name,pack) {
		var _gthis = this;
		var self = stx_nano_ClusterLift.head(pack);
		var head;
		if(self._hx_index == 0) {
			var v = self.v;
			head = v;
		} else {
			head = name;
		}
		var value = stx_nano_Cluster.toIterable(pack);
		return stx_nano_lift_LiftNano.if_else((((value) instanceof Array) ? value : null).length > 0,function() {
			return stx_nano_ClusterLift.lfold(stx_nano_ClusterLift.snoc(stx_nano_ClusterLift.tail(pack),name),function(next,memo) {
				return _gthis.Field(function(_) {
					return memo;
				},next);
			},_gthis.Const(function(_) {
				return _.Ident(head);
			}));
		},function() {
			return _gthis.Const(function(_) {
				return _.Ident(head);
			});
		});
	}
	,Array: function(lhs,rhs) {
		return this.lift(stx_g_lang_expr_GExprSum.GEArray(lhs(this),rhs(this)));
	}
	,Binop: function(op,l,r) {
		return this.lift(stx_g_lang_expr_GExprSum.GEBinop(op,l(this),r(this)));
	}
	,Field: function(e,field,kind) {
		return this.lift(stx_g_lang_expr_GExprSum.GEField(e(this),field,kind));
	}
	,Parenthesis: function(e) {
		return this.lift(stx_g_lang_expr_GExprSum.GEParenthesis(e(this)));
	}
	,Parens: function(e) {
		return this.lift(stx_g_lang_expr_GExprSum.GEParenthesis(e(this)));
	}
	,ObjectDecl: function(fields) {
		return this.lift(stx_g_lang_expr_GExprSum.GEObjectDecl(fields(stx_g_lang_expr_GObjectField.__)));
	}
	,ArrayDecl: function(values) {
		return this.lift(stx_g_lang_expr_GExprSum.GEArrayDecl(values(this)));
	}
	,Call: function(e,params) {
		return this.lift(stx_g_lang_expr_GExprSum.GECall(e(this),params(this)));
	}
	,New: function(t,params) {
		return this.lift(stx_g_lang_expr_GExprSum.GENew(t(stx_g_lang_expr_GTypePath.__),params(this)));
	}
	,Unop: function(op,postFix,e) {
		return this.lift(stx_g_lang_expr_GExprSum.GEUnop(op,postFix,e(this)));
	}
	,Vars: function(vars) {
		return this.lift(stx_g_lang_expr_GExprSum.GEVars(vars(stx_g_lang_expr_GVar.__)));
	}
	,Function: function(f,kind) {
		return this.lift(stx_g_lang_expr_GExprSum.GEFunction(kind,f(stx_g_lang_expr_GFunction.__)));
	}
	,Block: function(exprs) {
		return this.lift(stx_g_lang_expr_GExprSum.GEBlock(exprs(this)));
	}
	,For: function(it,expr) {
		return this.lift(stx_g_lang_expr_GExprSum.GEFor(it(this),expr(this)));
	}
	,If: function(it,expr,eelse) {
		var _gthis = this;
		var tmp = it(this);
		var tmp1 = expr(this);
		var self = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,eelse),function(f) {
			return f(_gthis);
		});
		var tmp2;
		if(self._hx_index == 0) {
			var v = self.v;
			tmp2 = v;
		} else {
			tmp2 = null;
		}
		return this.lift(stx_g_lang_expr_GExprSum.GEIf(tmp,tmp1,tmp2));
	}
	,While: function(econd,expr,normalWhile) {
		return this.lift(stx_g_lang_expr_GExprSum.GEWhile(econd(this),expr(this),normalWhile));
	}
	,Switch: function(e,cases,edef) {
		var _gthis = this;
		var tmp = e(this);
		var tmp1 = cases(stx_g_lang_expr_GCase.__);
		var self = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,edef),function(f) {
			return f(_gthis);
		});
		var tmp2;
		if(self._hx_index == 0) {
			var v = self.v;
			tmp2 = v;
		} else {
			tmp2 = null;
		}
		return this.lift(stx_g_lang_expr_GExprSum.GESwitch(tmp,tmp1,tmp2));
	}
	,Try: function(e,catches) {
		return this.lift(stx_g_lang_expr_GExprSum.GETry(e(this),catches(stx_g_lang_expr_GCatch.__)));
	}
	,Return: function(e) {
		var _gthis = this;
		var self = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,e),function(f) {
			return f(_gthis);
		});
		var tmp;
		if(self._hx_index == 0) {
			var v = self.v;
			tmp = v;
		} else {
			tmp = null;
		}
		return this.lift(stx_g_lang_expr_GExprSum.GEReturn(tmp));
	}
	,Break: function() {
		return this.lift(stx_g_lang_expr_GExprSum.GEBreak);
	}
	,Continue: function() {
		return this.lift(stx_g_lang_expr_GExprSum.GEContinue);
	}
	,Untyped: function(e) {
		return this.lift(stx_g_lang_expr_GExprSum.GEUntyped(e(this)));
	}
	,Throw: function(e) {
		return this.lift(stx_g_lang_expr_GExprSum.GEThrow(e(this)));
	}
	,Cast: function(e,t) {
		var tmp = e(this);
		var self = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,t),function(f) {
			return f(stx_g_lang_expr_GComplexType.__);
		});
		var tmp1;
		if(self._hx_index == 0) {
			var v = self.v;
			tmp1 = v;
		} else {
			tmp1 = null;
		}
		return this.lift(stx_g_lang_expr_GExprSum.GECast(tmp,tmp1));
	}
	,Ternary: function(cond,eif,eelse) {
		return this.lift(stx_g_lang_expr_GExprSum.GETernary(cond(this),eif(this),eelse(this)));
	}
	,CheckType: function(e,t) {
		return this.lift(stx_g_lang_expr_GExprSum.GECheckType(e(this),t(stx_g_lang_expr_GComplexType.__)));
	}
	,Meta: function(s,e) {
		return this.lift(stx_g_lang_expr_GExprSum.GEMeta(s(stx_g_lang_expr_GMetadataEntry.__),e(this)));
	}
	,Is: function(e,t) {
		return this.lift(stx_g_lang_expr_GExprSum.GEIs(e(this),t(stx_g_lang_expr_GComplexType.__)));
	}
	,__class__: stx_g_lang_expr_GExprCtr
});
var stx_g_lang_expr_GExpr = {};
stx_g_lang_expr_GExpr._new = function(self) {
	var this1 = self;
	return this1;
};
stx_g_lang_expr_GExpr.lift = function(self) {
	return stx_g_lang_expr_GExpr._new(self);
};
stx_g_lang_expr_GExpr.prj = function(this1) {
	return this1;
};
stx_g_lang_expr_GExpr.get_self = function(this1) {
	return stx_g_lang_expr_GExpr.lift(this1);
};
stx_g_lang_expr_GExpr.toSource = function(this1) {
	return stx_g_lang_Printer.get_ZERO().printExpr(stx_g_lang_expr_GExpr.get_self(this1));
};
var stx_g_lang_expr_GExprLift = function() { };
$hxClasses["stx.g.lang.expr.GExprLift"] = stx_g_lang_expr_GExprLift;
stx_g_lang_expr_GExprLift.__name__ = "stx.g.lang.expr.GExprLift";
stx_g_lang_expr_GExprLift.to_macro_at = function(self,pos) {
	var pos1 = pos;
	var f = function(self) {
		return stx_g_lang_expr_GExprLift.to_macro_at(self,pos1);
	};
	var pos2 = pos;
	var tmp;
	if(self == null) {
		tmp = null;
	} else {
		switch(self._hx_index) {
		case 0:
			var c = self.c;
			tmp = haxe_macro_ExprDef.EConst(stx_g_lang_expr_GConstantLift.to_macro_at(c,pos));
			break;
		case 1:
			var e1 = self.e1;
			var e2 = self.e2;
			tmp = haxe_macro_ExprDef.EArray(f(e1),f(e2));
			break;
		case 2:
			var op = self.op;
			var e1 = self.e1;
			var e2 = self.e2;
			tmp = haxe_macro_ExprDef.EBinop(stx_g_lang_expr_GBinopLift.to_macro_at(op,pos),f(e1),f(e2));
			break;
		case 3:
			var e = self.e;
			var field = self.field;
			var kind = self.kind;
			var tmp1 = f(e);
			var self1 = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,kind),function(x) {
				return stx_g_lang_expr_GEFieldKindLift.to_macro_at(x,pos);
			});
			var tmp2;
			if(self1._hx_index == 0) {
				var v = self1.v;
				tmp2 = v;
			} else {
				tmp2 = null;
			}
			tmp = haxe_macro_ExprDef.EField(tmp1,field,tmp2);
			break;
		case 4:
			var e = self.e;
			tmp = haxe_macro_ExprDef.EParenthesis(f(e));
			break;
		case 5:
			var fields = self.fields;
			tmp = haxe_macro_ExprDef.EObjectDecl(stx_nano_Cluster.prj(stx_nano_ClusterLift.map(fields,function(e) {
				return stx_g_lang_expr_GObjectFieldLift.to_macro_at(e,pos);
			})));
			break;
		case 6:
			var values = self.values;
			tmp = haxe_macro_ExprDef.EArrayDecl(stx_nano_Cluster.prj(stx_nano_ClusterLift.map(values,function(e) {
				return stx_g_lang_expr_GExprLift.to_macro_at(e,pos);
			})));
			break;
		case 7:
			var e = self.e;
			var params = self.params;
			tmp = haxe_macro_ExprDef.ECall(f(e),stx_nano_Cluster.prj(stx_nano_ClusterLift.map(params,function(e) {
				return stx_g_lang_expr_GExprLift.to_macro_at(e,pos);
			})));
			break;
		case 8:
			var t = self.t;
			var params = self.params;
			tmp = haxe_macro_ExprDef.ENew(stx_g_lang_expr_GTypePathLift.to_macro_at(t,pos),stx_nano_Cluster.prj(stx_nano_ClusterLift.map(params,function(e) {
				return stx_g_lang_expr_GExprLift.to_macro_at(e,pos);
			})));
			break;
		case 9:
			var op = self.op;
			var postFix = self.postFix;
			var e = self.e;
			tmp = haxe_macro_ExprDef.EUnop(stx_g_lang_expr_GUnopLift.to_macro_at(op,pos),postFix,stx_g_lang_expr_GExprLift.to_macro_at(e,pos));
			break;
		case 10:
			var vars = self.vars;
			tmp = haxe_macro_ExprDef.EVars(stx_nano_Cluster.prj(stx_nano_ClusterLift.map(vars,function(e) {
				return stx_g_lang_expr_GVar._.to_macro_at(e,pos);
			})));
			break;
		case 11:
			var kind = self.kind;
			var f = self.f;
			var self1 = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,kind),function(x) {
				return stx_g_lang_expr_GFunctionKindLift.to_macro_at(x,pos);
			});
			var tmp1;
			if(self1._hx_index == 0) {
				var v = self1.v;
				tmp1 = v;
			} else {
				tmp1 = null;
			}
			tmp = haxe_macro_ExprDef.EFunction(tmp1,stx_g_lang_expr_GFunctionLift.to_macro_at(f,pos));
			break;
		case 12:
			var exprs = self.exprs;
			tmp = haxe_macro_ExprDef.EBlock(stx_nano_Cluster.prj(stx_nano_ClusterLift.map(exprs,function(e) {
				return stx_g_lang_expr_GExprLift.to_macro_at(e,pos);
			})));
			break;
		case 13:
			var i = self.it;
			var eexpr = self.eexpr;
			tmp = haxe_macro_ExprDef.EFor(stx_g_lang_expr_GExprLift.to_macro_at(i,pos),stx_g_lang_expr_GExprLift.to_macro_at(eexpr,pos));
			break;
		case 14:
			var econd = self.econd;
			var eif = self.eif;
			var eelse = self.eelse;
			var tmp1 = stx_g_lang_expr_GExprLift.to_macro_at(econd,pos);
			var tmp2 = stx_g_lang_expr_GExprLift.to_macro_at(eif,pos);
			var self1 = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,eelse),function(x) {
				return stx_g_lang_expr_GExprLift.to_macro_at(x,pos);
			});
			var tmp3;
			if(self1._hx_index == 0) {
				var v = self1.v;
				tmp3 = v;
			} else {
				tmp3 = null;
			}
			tmp = haxe_macro_ExprDef.EIf(tmp1,tmp2,tmp3);
			break;
		case 15:
			var econd = self.econd;
			var e = self.e;
			var normalWhile = self.normalWhile;
			tmp = haxe_macro_ExprDef.EWhile(stx_g_lang_expr_GExprLift.to_macro_at(econd,pos),stx_g_lang_expr_GExprLift.to_macro_at(e,pos),normalWhile);
			break;
		case 16:
			var e = self.e;
			var cases = self.cases;
			var edef = self.edef;
			var tmp1 = stx_g_lang_expr_GExprLift.to_macro_at(e,pos);
			var tmp2 = stx_nano_Cluster.prj(stx_nano_ClusterLift.map(cases,function(e) {
				return stx_g_lang_expr_GCaseLift.to_macro_at(e,pos);
			}));
			var self1 = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,edef),function(x) {
				return stx_g_lang_expr_GExprLift.to_macro_at(x,pos);
			});
			var tmp3;
			if(self1._hx_index == 0) {
				var v = self1.v;
				tmp3 = v;
			} else {
				tmp3 = null;
			}
			tmp = haxe_macro_ExprDef.ESwitch(tmp1,tmp2,tmp3);
			break;
		case 17:
			var e = self.e;
			var catches = self.catches;
			tmp = haxe_macro_ExprDef.ETry(stx_g_lang_expr_GExprLift.to_macro_at(e,pos),stx_nano_Cluster.prj(stx_nano_ClusterLift.map(catches,function(e) {
				return stx_g_lang_expr_GCatchLift.to_macro_at(e,pos);
			})));
			break;
		case 18:
			var e = self.e;
			var self1 = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,e),function(x) {
				return stx_g_lang_expr_GExprLift.to_macro_at(x,pos);
			});
			var tmp1;
			if(self1._hx_index == 0) {
				var v = self1.v;
				tmp1 = v;
			} else {
				tmp1 = null;
			}
			tmp = haxe_macro_ExprDef.EReturn(tmp1);
			break;
		case 19:
			tmp = haxe_macro_ExprDef.EBreak;
			break;
		case 20:
			tmp = haxe_macro_ExprDef.EContinue;
			break;
		case 21:
			var e = self.e;
			tmp = haxe_macro_ExprDef.EUntyped(stx_g_lang_expr_GExprLift.to_macro_at(e,pos));
			break;
		case 22:
			var e = self.e;
			tmp = haxe_macro_ExprDef.EThrow(stx_g_lang_expr_GExprLift.to_macro_at(e,pos));
			break;
		case 23:
			var e = self.e;
			var t = self.t;
			var tmp1 = stx_g_lang_expr_GExprLift.to_macro_at(e,pos);
			var self1 = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,t),function(x) {
				return stx_g_lang_expr_GComplexTypeLift.to_macro_at(x,pos);
			});
			var tmp2;
			if(self1._hx_index == 0) {
				var v = self1.v;
				tmp2 = v;
			} else {
				tmp2 = null;
			}
			tmp = haxe_macro_ExprDef.ECast(tmp1,tmp2);
			break;
		case 24:
			var econd = self.econd;
			var eif = self.eif;
			var eelse = self.eelse;
			tmp = haxe_macro_ExprDef.ETernary(stx_g_lang_expr_GExprLift.to_macro_at(econd,pos),stx_g_lang_expr_GExprLift.to_macro_at(eif,pos),stx_g_lang_expr_GExprLift.to_macro_at(eelse,pos));
			break;
		case 25:
			var e = self.e;
			var t = self.t;
			tmp = haxe_macro_ExprDef.ECheckType(stx_g_lang_expr_GExprLift.to_macro_at(e,pos),stx_g_lang_expr_GComplexTypeLift.to_macro_at(t,pos));
			break;
		case 26:
			var s = self.s;
			var e = self.e;
			tmp = haxe_macro_ExprDef.EMeta(stx_g_lang_expr_GMetadataEntryLift.to_macro_at(s,pos),stx_g_lang_expr_GExprLift.to_macro_at(e,pos));
			break;
		case 27:
			var e = self.e;
			var t = self.t;
			tmp = haxe_macro_ExprDef.EIs(stx_g_lang_expr_GExprLift.to_macro_at(e,pos),stx_g_lang_expr_GComplexTypeLift.to_macro_at(t,pos));
			break;
		}
	}
	return { pos : pos2, expr : tmp};
};
var stx_g_lang_expr_GFieldCtr = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["stx.g.lang.expr.GFieldCtr"] = stx_g_lang_expr_GFieldCtr;
stx_g_lang_expr_GFieldCtr.__name__ = "stx.g.lang.expr.GFieldCtr";
stx_g_lang_expr_GFieldCtr.unit = function() {
	return new stx_g_lang_expr_GFieldCtr();
};
stx_g_lang_expr_GFieldCtr.__super__ = stx_pico_Clazz;
stx_g_lang_expr_GFieldCtr.prototype = $extend(stx_pico_Clazz.prototype,{
	lift: function(self) {
		return stx_g_lang_expr_GField.lift(self);
	}
	,Make: function(name,kind,access,meta,doc) {
		var tmp = kind(stx_g_lang_expr_GFieldType.__);
		var self = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,access),function(f) {
			return f(stx_g_lang_expr_GAccess.__);
		});
		var tmp1;
		if(self._hx_index == 0) {
			var v = self.v;
			tmp1 = v;
		} else {
			tmp1 = null;
		}
		var self = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,meta),function(f) {
			return f(stx_g_lang_expr_GMetadataEntry.__);
		});
		var tmp2;
		if(self._hx_index == 0) {
			var v = self.v;
			tmp2 = v;
		} else {
			tmp2 = null;
		}
		return stx_g_lang_expr_GField.make(name,tmp,tmp1,tmp2,doc);
	}
	,__class__: stx_g_lang_expr_GFieldCtr
});
var stx_g_lang_expr_GField = {};
stx_g_lang_expr_GField._new = function(self) {
	var this1 = self;
	return this1;
};
stx_g_lang_expr_GField.lift = function(self) {
	return stx_g_lang_expr_GField._new(self);
};
stx_g_lang_expr_GField.make = function(name,kind,access,meta,doc) {
	return stx_g_lang_expr_GField.lift({ name : name, kind : kind, access : access, meta : meta, doc : doc});
};
stx_g_lang_expr_GField.prj = function(this1) {
	return this1;
};
stx_g_lang_expr_GField.get_self = function(this1) {
	return stx_g_lang_expr_GField.lift(this1);
};
stx_g_lang_expr_GField.toSource = function(this1) {
	return stx_g_lang_Printer.get_ZERO().printField(this1);
};
var stx_g_lang_expr_GFieldLift = function() { };
$hxClasses["stx.g.lang.expr.GFieldLift"] = stx_g_lang_expr_GFieldLift;
stx_g_lang_expr_GFieldLift.__name__ = "stx.g.lang.expr.GFieldLift";
stx_g_lang_expr_GFieldLift.to_macro_at = function(self,pos) {
	var self1 = self.name;
	var tmp = stx_g_lang_expr_GFieldTypeLift.to_macro_at(self.kind,pos);
	var self2 = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,self.access),function(x) {
		return stx_nano_Cluster.prj(stx_nano_ClusterLift.map(x,function(y) {
			return stx_g_lang_expr_GAccessLift.to_macro_at(y,pos);
		}));
	});
	var tmp1;
	if(self2._hx_index == 0) {
		var v = self2.v;
		tmp1 = v;
	} else {
		tmp1 = [];
	}
	var self2 = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,self.meta),function(x) {
		return stx_g_lang_expr_GMetadataLift.to_macro_at(x,pos);
	});
	var tmp2;
	if(self2._hx_index == 0) {
		var v = self2.v;
		tmp2 = v;
	} else {
		tmp2 = null;
	}
	return { name : self1, kind : tmp, access : tmp1, meta : tmp2, doc : self.doc, pos : pos};
};
var stx_g_lang_expr_GFieldTypeCtr = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["stx.g.lang.expr.GFieldTypeCtr"] = stx_g_lang_expr_GFieldTypeCtr;
stx_g_lang_expr_GFieldTypeCtr.__name__ = "stx.g.lang.expr.GFieldTypeCtr";
stx_g_lang_expr_GFieldTypeCtr.unit = function() {
	return new stx_g_lang_expr_GFieldTypeCtr();
};
stx_g_lang_expr_GFieldTypeCtr.__super__ = stx_pico_Clazz;
stx_g_lang_expr_GFieldTypeCtr.prototype = $extend(stx_pico_Clazz.prototype,{
	lift: function(self) {
		return stx_g_lang_expr_GFieldType.lift(self);
	}
	,Var: function(t,e) {
		var self = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,t),function(f) {
			return f(stx_g_lang_expr_GComplexTypeCtr.unit());
		});
		var tmp;
		if(self._hx_index == 0) {
			var v = self.v;
			tmp = v;
		} else {
			tmp = null;
		}
		var self = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,e),function(f) {
			return f(stx_g_lang_expr_GExprCtr.unit());
		});
		var tmp1;
		if(self._hx_index == 0) {
			var v = self.v;
			tmp1 = v;
		} else {
			tmp1 = null;
		}
		return this.lift(stx_g_lang_expr_GFieldTypeSum.GFVar(tmp,tmp1));
	}
	,Fun: function(f) {
		return this.lift(stx_g_lang_expr_GFieldTypeSum.GFFun(f(stx_g_lang_expr_GFunctionCtr.unit())));
	}
	,Prop: function(get,set,t,e) {
		var tmp = get(stx_g_lang_expr_GPropAccess.__);
		var tmp1 = set(stx_g_lang_expr_GPropAccess.__);
		var self = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,t),function(f) {
			return f(stx_g_lang_expr_GComplexType.__);
		});
		var tmp2;
		if(self._hx_index == 0) {
			var v = self.v;
			tmp2 = v;
		} else {
			tmp2 = null;
		}
		var self = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,e),function(f) {
			return f(stx_g_lang_expr_GExpr.__);
		});
		var tmp3;
		if(self._hx_index == 0) {
			var v = self.v;
			tmp3 = v;
		} else {
			tmp3 = null;
		}
		return this.lift(stx_g_lang_expr_GFieldTypeSum.GFProp(tmp,tmp1,tmp2,tmp3));
	}
	,__class__: stx_g_lang_expr_GFieldTypeCtr
});
var stx_g_lang_expr_GFieldTypeSum = $hxEnums["stx.g.lang.expr.GFieldTypeSum"] = { __ename__:"stx.g.lang.expr.GFieldTypeSum",__constructs__:null
	,GFVar: ($_=function(t,e) { return {_hx_index:0,t:t,e:e,__enum__:"stx.g.lang.expr.GFieldTypeSum",toString:$estr}; },$_._hx_name="GFVar",$_.__params__ = ["t","e"],$_)
	,GFFun: ($_=function(f) { return {_hx_index:1,f:f,__enum__:"stx.g.lang.expr.GFieldTypeSum",toString:$estr}; },$_._hx_name="GFFun",$_.__params__ = ["f"],$_)
	,GFProp: ($_=function(get,set,t,e) { return {_hx_index:2,get:get,set:set,t:t,e:e,__enum__:"stx.g.lang.expr.GFieldTypeSum",toString:$estr}; },$_._hx_name="GFProp",$_.__params__ = ["get","set","t","e"],$_)
};
stx_g_lang_expr_GFieldTypeSum.__constructs__ = [stx_g_lang_expr_GFieldTypeSum.GFVar,stx_g_lang_expr_GFieldTypeSum.GFFun,stx_g_lang_expr_GFieldTypeSum.GFProp];
var stx_g_lang_expr_GFieldType = {};
stx_g_lang_expr_GFieldType._new = function(self) {
	var this1 = self;
	return this1;
};
stx_g_lang_expr_GFieldType.lift = function(self) {
	return stx_g_lang_expr_GFieldType._new(self);
};
stx_g_lang_expr_GFieldType.prj = function(this1) {
	return this1;
};
stx_g_lang_expr_GFieldType.get_self = function(this1) {
	return stx_g_lang_expr_GFieldType.lift(this1);
};
var stx_g_lang_expr_GFieldTypeLift = function() { };
$hxClasses["stx.g.lang.expr.GFieldTypeLift"] = stx_g_lang_expr_GFieldTypeLift;
stx_g_lang_expr_GFieldTypeLift.__name__ = "stx.g.lang.expr.GFieldTypeLift";
stx_g_lang_expr_GFieldTypeLift.to_macro_at = function(self,pos) {
	switch(self._hx_index) {
	case 0:
		var t = self.t;
		var e = self.e;
		var self1 = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,t),function(ct) {
			return stx_g_lang_expr_GComplexTypeLift.to_macro_at(ct,pos);
		});
		var tmp;
		if(self1._hx_index == 0) {
			var v = self1.v;
			tmp = v;
		} else {
			tmp = null;
		}
		var self1 = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,e),function(e) {
			return stx_g_lang_expr_GExprLift.to_macro_at(e,pos);
		});
		var tmp1;
		if(self1._hx_index == 0) {
			var v = self1.v;
			tmp1 = v;
		} else {
			tmp1 = null;
		}
		return haxe_macro_FieldType.FVar(tmp,tmp1);
	case 1:
		var f = self.f;
		return haxe_macro_FieldType.FFun(stx_g_lang_expr_GFunction._.to_macro_at(f,pos));
	case 2:
		var get = self.get;
		var set = self.set;
		var t = self.t;
		var e = self.e;
		var tmp = stx_g_lang_expr_GPropAccessLift.getting(get);
		var tmp1 = stx_g_lang_expr_GPropAccessLift.setting(set);
		var self = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,t),function(x) {
			return stx_g_lang_expr_GComplexTypeLift.to_macro_at(x,pos);
		});
		var tmp2;
		if(self._hx_index == 0) {
			var v = self.v;
			tmp2 = v;
		} else {
			tmp2 = null;
		}
		var self = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,e),function(x) {
			return stx_g_lang_expr_GExprLift.to_macro_at(x,pos);
		});
		var tmp3;
		if(self._hx_index == 0) {
			var v = self.v;
			tmp3 = v;
		} else {
			tmp3 = null;
		}
		return haxe_macro_FieldType.FProp(tmp,tmp1,tmp2,tmp3);
	}
};
var stx_g_lang_expr_GFunctionCtr = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["stx.g.lang.expr.GFunctionCtr"] = stx_g_lang_expr_GFunctionCtr;
stx_g_lang_expr_GFunctionCtr.__name__ = "stx.g.lang.expr.GFunctionCtr";
stx_g_lang_expr_GFunctionCtr.unit = function() {
	return new stx_g_lang_expr_GFunctionCtr();
};
stx_g_lang_expr_GFunctionCtr.__super__ = stx_pico_Clazz;
stx_g_lang_expr_GFunctionCtr.prototype = $extend(stx_pico_Clazz.prototype,{
	lift: function(self) {
		return stx_g_lang_expr_GFunction.lift(self);
	}
	,Make: function(args,ret,expr,params) {
		var tmp = args(stx_g_lang_expr_GFunctionArgCtr.unit());
		var self = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,ret),function(f) {
			return f(stx_g_lang_expr_GComplexTypeCtr.unit());
		});
		var tmp1;
		if(self._hx_index == 0) {
			var v = self.v;
			tmp1 = v;
		} else {
			tmp1 = null;
		}
		var self = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,expr),function(f) {
			return f(stx_g_lang_expr_GExprCtr.unit());
		});
		var tmp2;
		if(self._hx_index == 0) {
			var v = self.v;
			tmp2 = v;
		} else {
			tmp2 = null;
		}
		var self = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,params),function(f) {
			return f(stx_g_lang_expr_GTypeParamDeclCtr.unit());
		});
		var tmp3;
		if(self._hx_index == 0) {
			var v = self.v;
			tmp3 = v;
		} else {
			tmp3 = null;
		}
		return stx_g_lang_expr_GFunction.make(tmp,tmp1,tmp2,tmp3);
	}
	,__class__: stx_g_lang_expr_GFunctionCtr
});
var stx_g_lang_expr_GFunctionLift = function() { };
$hxClasses["stx.g.lang.expr.GFunctionLift"] = stx_g_lang_expr_GFunctionLift;
stx_g_lang_expr_GFunctionLift.__name__ = "stx.g.lang.expr.GFunctionLift";
stx_g_lang_expr_GFunctionLift.to_macro_at = function(self,pos) {
	var tmp = stx_nano_Cluster.prj(stx_nano_ClusterLift.map(self.args,function(arg) {
		return stx_g_lang_expr_GFunctionArgLift.to_macro_at(arg,pos);
	}));
	var self1 = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,self.ret),function(ret) {
		return stx_g_lang_expr_GComplexTypeLift.to_macro_at(ret,pos);
	});
	var tmp1;
	if(self1._hx_index == 0) {
		var v = self1.v;
		tmp1 = v;
	} else {
		tmp1 = null;
	}
	var self1 = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,self.expr),function(x) {
		return stx_g_lang_expr_GExprLift.to_macro_at(x,pos);
	});
	var tmp2;
	if(self1._hx_index == 0) {
		var v = self1.v;
		tmp2 = v;
	} else {
		tmp2 = null;
	}
	var self1 = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,self.params),function(x) {
		return stx_nano_Cluster.prj(stx_nano_ClusterLift.map(x,function(y) {
			return stx_g_lang_expr_GTypeParamDeclLift.to_macro_at(y,pos);
		}));
	});
	var tmp3;
	if(self1._hx_index == 0) {
		var v = self1.v;
		tmp3 = v;
	} else {
		tmp3 = [];
	}
	return { args : tmp, ret : tmp1, expr : tmp2, params : tmp3};
};
var stx_g_lang_expr_GFunction = {};
stx_g_lang_expr_GFunction._new = function(self) {
	var this1 = self;
	return this1;
};
stx_g_lang_expr_GFunction.lift = function(self) {
	return stx_g_lang_expr_GFunction._new(self);
};
stx_g_lang_expr_GFunction.make = function(args,ret,expr,params) {
	return stx_g_lang_expr_GFunction.lift({ args : args, ret : ret, expr : expr, params : params});
};
stx_g_lang_expr_GFunction.prj = function(this1) {
	return this1;
};
stx_g_lang_expr_GFunction.get_self = function(this1) {
	return stx_g_lang_expr_GFunction.lift(this1);
};
stx_g_lang_expr_GFunction.toSource = function(this1) {
	return stx_g_lang_Printer.get_ZERO().printFunction(this1);
};
var stx_g_lang_expr_GFunctionArgCtr = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["stx.g.lang.expr.GFunctionArgCtr"] = stx_g_lang_expr_GFunctionArgCtr;
stx_g_lang_expr_GFunctionArgCtr.__name__ = "stx.g.lang.expr.GFunctionArgCtr";
stx_g_lang_expr_GFunctionArgCtr.unit = function() {
	return new stx_g_lang_expr_GFunctionArgCtr();
};
stx_g_lang_expr_GFunctionArgCtr.__super__ = stx_pico_Clazz;
stx_g_lang_expr_GFunctionArgCtr.prototype = $extend(stx_pico_Clazz.prototype,{
	lift: function(self) {
		return stx_g_lang_expr_GFunctionArg.lift(self);
	}
	,Make: function(name,type,opt,value,meta) {
		var tmp = type(stx_g_lang_expr_GComplexType.__);
		var self = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,value),function(f) {
			return f(stx_g_lang_expr_GExpr.__);
		});
		var tmp1;
		if(self._hx_index == 0) {
			var v = self.v;
			tmp1 = v;
		} else {
			tmp1 = null;
		}
		var self = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,meta),function(f) {
			return f(stx_g_lang_expr_GMetadataEntry.__);
		});
		var tmp2;
		if(self._hx_index == 0) {
			var v = self.v;
			tmp2 = v;
		} else {
			tmp2 = null;
		}
		return this.lift({ name : name, type : tmp, opt : opt, value : tmp1, meta : tmp2});
	}
	,__class__: stx_g_lang_expr_GFunctionArgCtr
});
var stx_g_lang_expr_GFunctionArg = {};
stx_g_lang_expr_GFunctionArg._new = function(self) {
	var this1 = self;
	return this1;
};
stx_g_lang_expr_GFunctionArg.lift = function(self) {
	return stx_g_lang_expr_GFunctionArg._new(self);
};
stx_g_lang_expr_GFunctionArg.make = function(name,type,opt,value,meta) {
	return stx_g_lang_expr_GFunctionArg.lift({ name : name, type : type, opt : opt, value : value, meta : meta});
};
stx_g_lang_expr_GFunctionArg.prj = function(this1) {
	return this1;
};
stx_g_lang_expr_GFunctionArg.get_self = function(this1) {
	return stx_g_lang_expr_GFunctionArg.lift(this1);
};
stx_g_lang_expr_GFunctionArg.toSource = function(this1) {
	return stx_g_lang_Printer.get_ZERO().printFunctionArg(this1);
};
var stx_g_lang_expr_GFunctionArgLift = function() { };
$hxClasses["stx.g.lang.expr.GFunctionArgLift"] = stx_g_lang_expr_GFunctionArgLift;
stx_g_lang_expr_GFunctionArgLift.__name__ = "stx.g.lang.expr.GFunctionArgLift";
stx_g_lang_expr_GFunctionArgLift.to_macro_at = function(self,pos) {
	var self1 = self.name;
	var self2 = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,self.type),function(e) {
		return stx_g_lang_expr_GComplexTypeLift.to_macro_at(e,pos);
	});
	var tmp;
	if(self2._hx_index == 0) {
		var v = self2.v;
		tmp = v;
	} else {
		tmp = null;
	}
	var self2 = self.opt;
	var self3 = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,self.value),function(e) {
		return stx_g_lang_expr_GExprLift.to_macro_at(e,pos);
	});
	var tmp1;
	if(self3._hx_index == 0) {
		var v = self3.v;
		tmp1 = v;
	} else {
		tmp1 = null;
	}
	var self3 = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,self.meta),function(x) {
		return stx_g_lang_expr_GMetadataLift.to_macro_at(x,pos);
	});
	var tmp2;
	if(self3._hx_index == 0) {
		var v = self3.v;
		tmp2 = v;
	} else {
		tmp2 = null;
	}
	return { name : self1, type : tmp, opt : self2, value : tmp1, meta : tmp2};
};
var stx_g_lang_expr_GFunctionKind = $hxEnums["stx.g.lang.expr.GFunctionKind"] = { __ename__:"stx.g.lang.expr.GFunctionKind",__constructs__:null
	,GFAnonymous: {_hx_name:"GFAnonymous",_hx_index:0,__enum__:"stx.g.lang.expr.GFunctionKind",toString:$estr}
	,GFNamed: ($_=function(name,inlined) { return {_hx_index:1,name:name,inlined:inlined,__enum__:"stx.g.lang.expr.GFunctionKind",toString:$estr}; },$_._hx_name="GFNamed",$_.__params__ = ["name","inlined"],$_)
	,GFArrow: {_hx_name:"GFArrow",_hx_index:2,__enum__:"stx.g.lang.expr.GFunctionKind",toString:$estr}
};
stx_g_lang_expr_GFunctionKind.__constructs__ = [stx_g_lang_expr_GFunctionKind.GFAnonymous,stx_g_lang_expr_GFunctionKind.GFNamed,stx_g_lang_expr_GFunctionKind.GFArrow];
var stx_g_lang_expr_GFunctionKindLift = function() { };
$hxClasses["stx.g.lang.expr.GFunctionKindLift"] = stx_g_lang_expr_GFunctionKindLift;
stx_g_lang_expr_GFunctionKindLift.__name__ = "stx.g.lang.expr.GFunctionKindLift";
stx_g_lang_expr_GFunctionKindLift.to_macro_at = function(self,pos) {
	switch(self._hx_index) {
	case 0:
		return haxe_macro_FunctionKind.FAnonymous;
	case 1:
		var name = self.name;
		var inlined = self.inlined;
		return haxe_macro_FunctionKind.FNamed(name,inlined);
	case 2:
		return haxe_macro_FunctionKind.FArrow;
	}
};
var stx_g_lang_expr_GMetadata = {};
stx_g_lang_expr_GMetadata._new = function(self) {
	var this1 = self;
	return this1;
};
stx_g_lang_expr_GMetadata.lift = function(self) {
	return stx_g_lang_expr_GMetadata._new(self);
};
stx_g_lang_expr_GMetadata.unit = function() {
	return stx_g_lang_expr_GMetadata.lift(stx_nano_Cluster.unit());
};
stx_g_lang_expr_GMetadata.prj = function(this1) {
	return this1;
};
stx_g_lang_expr_GMetadata.get_self = function(this1) {
	return stx_g_lang_expr_GMetadata.lift(this1);
};
stx_g_lang_expr_GMetadata.fromArray = function(self) {
	return stx_g_lang_expr_GMetadata.lift(stx_nano_Cluster.lift(self));
};
var stx_g_lang_expr_GMetadataLift = function() { };
$hxClasses["stx.g.lang.expr.GMetadataLift"] = stx_g_lang_expr_GMetadataLift;
stx_g_lang_expr_GMetadataLift.__name__ = "stx.g.lang.expr.GMetadataLift";
stx_g_lang_expr_GMetadataLift.to_macro_at = function(self,pos) {
	return stx_nano_Cluster.prj(stx_nano_ClusterLift.map(self,function(e) {
		return stx_g_lang_expr_GMetadataEntryLift.to_macro_at(e,pos);
	}));
};
var stx_g_lang_expr_GMetadataEntryCtr = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["stx.g.lang.expr.GMetadataEntryCtr"] = stx_g_lang_expr_GMetadataEntryCtr;
stx_g_lang_expr_GMetadataEntryCtr.__name__ = "stx.g.lang.expr.GMetadataEntryCtr";
stx_g_lang_expr_GMetadataEntryCtr.unit = function() {
	return new stx_g_lang_expr_GMetadataEntryCtr();
};
stx_g_lang_expr_GMetadataEntryCtr.__super__ = stx_pico_Clazz;
stx_g_lang_expr_GMetadataEntryCtr.prototype = $extend(stx_pico_Clazz.prototype,{
	lift: function(self) {
		return stx_g_lang_expr_GMetadataEntry.lift(self);
	}
	,Make: function(name,params) {
		var self = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,params),function(f) {
			return f(stx_g_lang_expr_GExprCtr.unit());
		});
		var tmp;
		if(self._hx_index == 0) {
			var v = self.v;
			tmp = v;
		} else {
			tmp = [];
		}
		return this.lift({ name : name, params : tmp});
	}
	,__class__: stx_g_lang_expr_GMetadataEntryCtr
});
var stx_g_lang_expr_GMetadataEntry = {};
stx_g_lang_expr_GMetadataEntry._new = function(self) {
	var this1 = self;
	return this1;
};
stx_g_lang_expr_GMetadataEntry.lift = function(self) {
	return stx_g_lang_expr_GMetadataEntry._new(self);
};
stx_g_lang_expr_GMetadataEntry.prj = function(this1) {
	return this1;
};
stx_g_lang_expr_GMetadataEntry.get_self = function(this1) {
	return stx_g_lang_expr_GMetadataEntry.lift(this1);
};
stx_g_lang_expr_GMetadataEntry.toSource = function(this1) {
	return stx_g_lang_Printer.get_ZERO().printMetadata(this1);
};
var stx_g_lang_expr_GMetadataEntryLift = function() { };
$hxClasses["stx.g.lang.expr.GMetadataEntryLift"] = stx_g_lang_expr_GMetadataEntryLift;
stx_g_lang_expr_GMetadataEntryLift.__name__ = "stx.g.lang.expr.GMetadataEntryLift";
stx_g_lang_expr_GMetadataEntryLift.to_macro_at = function(self,pos) {
	var self1 = self.name;
	var self2 = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,self.params),function(x) {
		return stx_nano_Cluster.prj(stx_nano_ClusterLift.map(x,function(y) {
			return stx_g_lang_expr_GExprLift.to_macro_at(y,pos);
		}));
	});
	var tmp;
	if(self2._hx_index == 0) {
		var v = self2.v;
		tmp = v;
	} else {
		tmp = [];
	}
	return { name : self1, params : tmp, pos : pos};
};
var stx_g_lang_expr_GObjectFieldCtr = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["stx.g.lang.expr.GObjectFieldCtr"] = stx_g_lang_expr_GObjectFieldCtr;
stx_g_lang_expr_GObjectFieldCtr.__name__ = "stx.g.lang.expr.GObjectFieldCtr";
stx_g_lang_expr_GObjectFieldCtr.unit = function() {
	return new stx_g_lang_expr_GObjectFieldCtr();
};
stx_g_lang_expr_GObjectFieldCtr.__super__ = stx_pico_Clazz;
stx_g_lang_expr_GObjectFieldCtr.prototype = $extend(stx_pico_Clazz.prototype,{
	lift: function(self) {
		return stx_g_lang_expr_GObjectField.lift(self);
	}
	,Make: function(field,expr,quotes) {
		var self = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,expr),function(f) {
			return f(stx_g_lang_expr_GExpr.__);
		});
		var tmp;
		if(self._hx_index == 0) {
			var v = self.v;
			tmp = v;
		} else {
			tmp = null;
		}
		return stx_g_lang_expr_GObjectField.make(field,tmp,quotes);
	}
	,__class__: stx_g_lang_expr_GObjectFieldCtr
});
var stx_g_lang_expr_GObjectFieldLift = function() { };
$hxClasses["stx.g.lang.expr.GObjectFieldLift"] = stx_g_lang_expr_GObjectFieldLift;
stx_g_lang_expr_GObjectFieldLift.__name__ = "stx.g.lang.expr.GObjectFieldLift";
stx_g_lang_expr_GObjectFieldLift.to_macro_at = function(self,pos) {
	var self1 = self.field;
	var tmp = stx_g_lang_expr_GExprLift.to_macro_at(self.expr,pos);
	var self2 = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,self.quotes),function(x) {
		return stx_g_lang_expr_GQuoteStatusLift.to_macro_at(x,pos);
	});
	var tmp1;
	if(self2._hx_index == 0) {
		var v = self2.v;
		tmp1 = v;
	} else {
		tmp1 = null;
	}
	return { field : self1, expr : tmp, quotes : tmp1};
};
var stx_g_lang_expr_GObjectField = {};
stx_g_lang_expr_GObjectField._new = function(self) {
	var this1 = self;
	return this1;
};
stx_g_lang_expr_GObjectField.lift = function(self) {
	return stx_g_lang_expr_GObjectField._new(self);
};
stx_g_lang_expr_GObjectField.make = function(field,expr,quotes) {
	return stx_g_lang_expr_GObjectField.lift({ field : field, expr : expr, quotes : quotes});
};
stx_g_lang_expr_GObjectField.prj = function(this1) {
	return this1;
};
stx_g_lang_expr_GObjectField.get_self = function(this1) {
	return stx_g_lang_expr_GObjectField.lift(this1);
};
stx_g_lang_expr_GObjectField.toSource = function(this1) {
	return stx_g_lang_Printer.get_ZERO().printObjectField(this1);
};
var stx_g_lang_expr_GPropAccessSum = $hxEnums["stx.g.lang.expr.GPropAccessSum"] = { __ename__:"stx.g.lang.expr.GPropAccessSum",__constructs__:null
	,GPAccFn: {_hx_name:"GPAccFn",_hx_index:0,__enum__:"stx.g.lang.expr.GPropAccessSum",toString:$estr}
	,GPAccDefault: {_hx_name:"GPAccDefault",_hx_index:1,__enum__:"stx.g.lang.expr.GPropAccessSum",toString:$estr}
	,GPAccNull: {_hx_name:"GPAccNull",_hx_index:2,__enum__:"stx.g.lang.expr.GPropAccessSum",toString:$estr}
	,GPAccNever: {_hx_name:"GPAccNever",_hx_index:3,__enum__:"stx.g.lang.expr.GPropAccessSum",toString:$estr}
};
stx_g_lang_expr_GPropAccessSum.__constructs__ = [stx_g_lang_expr_GPropAccessSum.GPAccFn,stx_g_lang_expr_GPropAccessSum.GPAccDefault,stx_g_lang_expr_GPropAccessSum.GPAccNull,stx_g_lang_expr_GPropAccessSum.GPAccNever];
var stx_g_lang_expr_GPropAccessCtr = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["stx.g.lang.expr.GPropAccessCtr"] = stx_g_lang_expr_GPropAccessCtr;
stx_g_lang_expr_GPropAccessCtr.__name__ = "stx.g.lang.expr.GPropAccessCtr";
stx_g_lang_expr_GPropAccessCtr.unit = function() {
	return new stx_g_lang_expr_GPropAccessCtr();
};
stx_g_lang_expr_GPropAccessCtr.__super__ = stx_pico_Clazz;
stx_g_lang_expr_GPropAccessCtr.prototype = $extend(stx_pico_Clazz.prototype,{
	lift: function(self) {
		return stx_g_lang_expr_GPropAccess.lift(self);
	}
	,Fn: function() {
		return stx_g_lang_expr_GPropAccessSum.GPAccFn;
	}
	,Default: function() {
		return stx_g_lang_expr_GPropAccessSum.GPAccDefault;
	}
	,Null: function() {
		return stx_g_lang_expr_GPropAccessSum.GPAccNull;
	}
	,Never: function() {
		return stx_g_lang_expr_GPropAccessSum.GPAccNever;
	}
	,__class__: stx_g_lang_expr_GPropAccessCtr
});
var stx_g_lang_expr_GPropAccess = {};
stx_g_lang_expr_GPropAccess._new = function(self) {
	var this1 = self;
	return this1;
};
stx_g_lang_expr_GPropAccess.lift = function(self) {
	return stx_g_lang_expr_GPropAccess._new(self);
};
stx_g_lang_expr_GPropAccess.prj = function(this1) {
	return this1;
};
stx_g_lang_expr_GPropAccess.get_self = function(this1) {
	return stx_g_lang_expr_GPropAccess.lift(this1);
};
var stx_g_lang_expr_GPropAccessLift = function() { };
$hxClasses["stx.g.lang.expr.GPropAccessLift"] = stx_g_lang_expr_GPropAccessLift;
stx_g_lang_expr_GPropAccessLift.__name__ = "stx.g.lang.expr.GPropAccessLift";
stx_g_lang_expr_GPropAccessLift.getting = function(self) {
	switch(self._hx_index) {
	case 0:
		return "get";
	case 1:
		return "default";
	case 2:
		return "null";
	case 3:
		return "never";
	}
};
stx_g_lang_expr_GPropAccessLift.setting = function(self) {
	switch(self._hx_index) {
	case 0:
		return "set";
	case 1:
		return "default";
	case 2:
		return "null";
	case 3:
		return "never";
	}
};
var stx_g_lang_expr_GQuoteStatus = $hxEnums["stx.g.lang.expr.GQuoteStatus"] = { __ename__:"stx.g.lang.expr.GQuoteStatus",__constructs__:null
	,GUnquoted: {_hx_name:"GUnquoted",_hx_index:0,__enum__:"stx.g.lang.expr.GQuoteStatus",toString:$estr}
	,GQuoted: {_hx_name:"GQuoted",_hx_index:1,__enum__:"stx.g.lang.expr.GQuoteStatus",toString:$estr}
};
stx_g_lang_expr_GQuoteStatus.__constructs__ = [stx_g_lang_expr_GQuoteStatus.GUnquoted,stx_g_lang_expr_GQuoteStatus.GQuoted];
var stx_g_lang_expr_GQuoteStatusLift = function() { };
$hxClasses["stx.g.lang.expr.GQuoteStatusLift"] = stx_g_lang_expr_GQuoteStatusLift;
stx_g_lang_expr_GQuoteStatusLift.__name__ = "stx.g.lang.expr.GQuoteStatusLift";
stx_g_lang_expr_GQuoteStatusLift.to_macro_at = function(self,pos) {
	switch(self._hx_index) {
	case 0:
		return haxe_macro_QuoteStatus.Unquoted;
	case 1:
		return haxe_macro_QuoteStatus.Quoted;
	}
};
var stx_g_lang_expr_GStringLiteralKind = $hxEnums["stx.g.lang.expr.GStringLiteralKind"] = { __ename__:"stx.g.lang.expr.GStringLiteralKind",__constructs__:null
	,GDoubleQuotes: {_hx_name:"GDoubleQuotes",_hx_index:0,__enum__:"stx.g.lang.expr.GStringLiteralKind",toString:$estr}
	,GSingleQuotes: {_hx_name:"GSingleQuotes",_hx_index:1,__enum__:"stx.g.lang.expr.GStringLiteralKind",toString:$estr}
};
stx_g_lang_expr_GStringLiteralKind.__constructs__ = [stx_g_lang_expr_GStringLiteralKind.GDoubleQuotes,stx_g_lang_expr_GStringLiteralKind.GSingleQuotes];
var stx_g_lang_expr_GStringLiteralKindLift = function() { };
$hxClasses["stx.g.lang.expr.GStringLiteralKindLift"] = stx_g_lang_expr_GStringLiteralKindLift;
stx_g_lang_expr_GStringLiteralKindLift.__name__ = "stx.g.lang.expr.GStringLiteralKindLift";
stx_g_lang_expr_GStringLiteralKindLift.to_macro_at = function(self,pos) {
	switch(self._hx_index) {
	case 0:
		return haxe_macro_StringLiteralKind.DoubleQuotes;
	case 1:
		return haxe_macro_StringLiteralKind.SingleQuotes;
	}
};
var stx_g_lang_expr_GTypeDefKindCtr = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["stx.g.lang.expr.GTypeDefKindCtr"] = stx_g_lang_expr_GTypeDefKindCtr;
stx_g_lang_expr_GTypeDefKindCtr.__name__ = "stx.g.lang.expr.GTypeDefKindCtr";
stx_g_lang_expr_GTypeDefKindCtr.unit = function() {
	return new stx_g_lang_expr_GTypeDefKindCtr();
};
stx_g_lang_expr_GTypeDefKindCtr.__super__ = stx_pico_Clazz;
stx_g_lang_expr_GTypeDefKindCtr.prototype = $extend(stx_pico_Clazz.prototype,{
	lift: function(self) {
		return stx_g_lang_expr_GTypeDefKind.lift(self);
	}
	,Enum: function() {
		return this.lift(stx_g_lang_expr_GTypeDefKindSum.GTDEnum);
	}
	,Structure: function() {
		return this.lift(stx_g_lang_expr_GTypeDefKindSum.GTDStructure);
	}
	,Class: function(superClass,interfaces,isInterface,isFinal,isAbstract) {
		var self = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,superClass),function(f) {
			return f(stx_g_lang_expr_GTypePath.__);
		});
		var tmp;
		if(self._hx_index == 0) {
			var v = self.v;
			tmp = v;
		} else {
			tmp = null;
		}
		var self = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,interfaces),function(f) {
			return f(stx_g_lang_expr_GTypePath.__);
		});
		var tmp1;
		if(self._hx_index == 0) {
			var v = self.v;
			tmp1 = v;
		} else {
			tmp1 = null;
		}
		return this.lift(stx_g_lang_expr_GTypeDefKindSum.GTDClass(tmp,tmp1,isInterface,isFinal,isAbstract));
	}
	,Alias: function(t) {
		return this.lift(stx_g_lang_expr_GTypeDefKindSum.GTDAlias(t(stx_g_lang_expr_GComplexType.__)));
	}
	,Abstract: function(tthis,from,to) {
		var self = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,tthis),function(f) {
			return f(stx_g_lang_expr_GComplexType.__);
		});
		var tmp;
		if(self._hx_index == 0) {
			var v = self.v;
			tmp = v;
		} else {
			tmp = null;
		}
		var self = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,from),function(f) {
			return f(stx_g_lang_expr_GComplexType.__);
		});
		var tmp1;
		if(self._hx_index == 0) {
			var v = self.v;
			tmp1 = v;
		} else {
			tmp1 = null;
		}
		var self = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,to),function(f) {
			return f(stx_g_lang_expr_GComplexType.__);
		});
		var tmp2;
		if(self._hx_index == 0) {
			var v = self.v;
			tmp2 = v;
		} else {
			tmp2 = null;
		}
		return this.lift(stx_g_lang_expr_GTypeDefKindSum.GTDAbstract(tmp,tmp1,tmp2));
	}
	,Field: function(kind,access) {
		return this.lift(stx_g_lang_expr_GTypeDefKindSum.GTDField(kind(stx_g_lang_expr_GFieldType.__),access(stx_g_lang_expr_GAccess.__)));
	}
	,__class__: stx_g_lang_expr_GTypeDefKindCtr
});
var stx_g_lang_expr_GTypeDefKindSum = $hxEnums["stx.g.lang.expr.GTypeDefKindSum"] = { __ename__:"stx.g.lang.expr.GTypeDefKindSum",__constructs__:null
	,GTDEnum: {_hx_name:"GTDEnum",_hx_index:0,__enum__:"stx.g.lang.expr.GTypeDefKindSum",toString:$estr}
	,GTDStructure: {_hx_name:"GTDStructure",_hx_index:1,__enum__:"stx.g.lang.expr.GTypeDefKindSum",toString:$estr}
	,GTDClass: ($_=function(superClass,interfaces,isInterface,isFinal,isAbstract) { return {_hx_index:2,superClass:superClass,interfaces:interfaces,isInterface:isInterface,isFinal:isFinal,isAbstract:isAbstract,__enum__:"stx.g.lang.expr.GTypeDefKindSum",toString:$estr}; },$_._hx_name="GTDClass",$_.__params__ = ["superClass","interfaces","isInterface","isFinal","isAbstract"],$_)
	,GTDAlias: ($_=function(t) { return {_hx_index:3,t:t,__enum__:"stx.g.lang.expr.GTypeDefKindSum",toString:$estr}; },$_._hx_name="GTDAlias",$_.__params__ = ["t"],$_)
	,GTDAbstract: ($_=function(tthis,from,to) { return {_hx_index:4,tthis:tthis,from:from,to:to,__enum__:"stx.g.lang.expr.GTypeDefKindSum",toString:$estr}; },$_._hx_name="GTDAbstract",$_.__params__ = ["tthis","from","to"],$_)
	,GTDField: ($_=function(kind,access) { return {_hx_index:5,kind:kind,access:access,__enum__:"stx.g.lang.expr.GTypeDefKindSum",toString:$estr}; },$_._hx_name="GTDField",$_.__params__ = ["kind","access"],$_)
};
stx_g_lang_expr_GTypeDefKindSum.__constructs__ = [stx_g_lang_expr_GTypeDefKindSum.GTDEnum,stx_g_lang_expr_GTypeDefKindSum.GTDStructure,stx_g_lang_expr_GTypeDefKindSum.GTDClass,stx_g_lang_expr_GTypeDefKindSum.GTDAlias,stx_g_lang_expr_GTypeDefKindSum.GTDAbstract,stx_g_lang_expr_GTypeDefKindSum.GTDField];
var stx_g_lang_expr_GTypeDefKind = {};
stx_g_lang_expr_GTypeDefKind._new = function(self) {
	var this1 = self;
	return this1;
};
stx_g_lang_expr_GTypeDefKind.lift = function(self) {
	return stx_g_lang_expr_GTypeDefKind._new(self);
};
stx_g_lang_expr_GTypeDefKind.prj = function(this1) {
	return this1;
};
stx_g_lang_expr_GTypeDefKind.get_self = function(this1) {
	return stx_g_lang_expr_GTypeDefKind.lift(this1);
};
var stx_g_lang_expr_GTypeDefKindLift = function() { };
$hxClasses["stx.g.lang.expr.GTypeDefKindLift"] = stx_g_lang_expr_GTypeDefKindLift;
stx_g_lang_expr_GTypeDefKindLift.__name__ = "stx.g.lang.expr.GTypeDefKindLift";
stx_g_lang_expr_GTypeDefKindLift.to_macro_at = function(self,pos) {
	switch(self._hx_index) {
	case 0:
		return haxe_macro_TypeDefKind.TDEnum;
	case 1:
		return haxe_macro_TypeDefKind.TDStructure;
	case 2:
		var superClass = self.superClass;
		var interfaces = self.interfaces;
		var isInterface = self.isInterface;
		var isFinal = self.isFinal;
		var isAbstract = self.isAbstract;
		var self1 = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,superClass),function(x) {
			return stx_g_lang_expr_GTypePathLift.to_macro_at(x,pos);
		});
		var tmp;
		if(self1._hx_index == 0) {
			var v = self1.v;
			tmp = v;
		} else {
			tmp = null;
		}
		var self1 = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,interfaces),function(x) {
			return stx_nano_Cluster.prj(stx_nano_ClusterLift.map(x,function(y) {
				return stx_g_lang_expr_GTypePathLift.to_macro_at(y,pos);
			}));
		});
		var tmp1;
		if(self1._hx_index == 0) {
			var v = self1.v;
			tmp1 = v;
		} else {
			tmp1 = [];
		}
		return haxe_macro_TypeDefKind.TDClass(tmp,tmp1,isInterface,isFinal,isAbstract);
	case 3:
		var t = self.t;
		return haxe_macro_TypeDefKind.TDAlias(stx_g_lang_expr_GComplexTypeLift.to_macro_at(t,pos));
	case 4:
		var tthis = self.tthis;
		var from = self.from;
		var to = self.to;
		var self1 = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,tthis),function(x) {
			return stx_g_lang_expr_GComplexTypeLift.to_macro_at(x,pos);
		});
		var tmp;
		if(self1._hx_index == 0) {
			var v = self1.v;
			tmp = v;
		} else {
			tmp = null;
		}
		var self1 = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,from),function(x) {
			return stx_nano_Cluster.prj(stx_nano_ClusterLift.map(x,function(y) {
				return stx_g_lang_expr_GComplexTypeLift.to_macro_at(y,pos);
			}));
		});
		var tmp1;
		if(self1._hx_index == 0) {
			var v = self1.v;
			tmp1 = v;
		} else {
			tmp1 = [];
		}
		var self1 = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,to),function(x) {
			return stx_nano_Cluster.prj(stx_nano_ClusterLift.map(x,function(y) {
				return stx_g_lang_expr_GComplexTypeLift.to_macro_at(y,pos);
			}));
		});
		var tmp2;
		if(self1._hx_index == 0) {
			var v = self1.v;
			tmp2 = v;
		} else {
			tmp2 = [];
		}
		return haxe_macro_TypeDefKind.TDAbstract(tmp,tmp1,tmp2);
	case 5:
		var kind = self.kind;
		var access = self.access;
		return haxe_macro_TypeDefKind.TDField(stx_g_lang_expr_GFieldTypeLift.to_macro_at(kind,pos),stx_nano_Cluster.prj(stx_nano_ClusterLift.map(access,function(x) {
			return stx_g_lang_expr_GAccessLift.to_macro_at(x,pos);
		})));
	}
};
var stx_g_lang_expr_GTypeDefinitionCtr = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["stx.g.lang.expr.GTypeDefinitionCtr"] = stx_g_lang_expr_GTypeDefinitionCtr;
stx_g_lang_expr_GTypeDefinitionCtr.__name__ = "stx.g.lang.expr.GTypeDefinitionCtr";
stx_g_lang_expr_GTypeDefinitionCtr.unit = function() {
	return new stx_g_lang_expr_GTypeDefinitionCtr();
};
stx_g_lang_expr_GTypeDefinitionCtr.__super__ = stx_pico_Clazz;
stx_g_lang_expr_GTypeDefinitionCtr.prototype = $extend(stx_pico_Clazz.prototype,{
	lift: function(self) {
		return stx_g_lang_expr_GTypeDefinition.lift(self);
	}
	,Make: function(name,pack,kind,fields,params,meta,isExtern,doc) {
		var tmp = kind(stx_g_lang_expr_GTypeDefKind.__);
		var tmp1 = fields(stx_g_lang_expr_GField.__);
		var self = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,params),function(f) {
			return f(stx_g_lang_expr_GTypeParamDecl.__);
		});
		var tmp2;
		if(self._hx_index == 0) {
			var v = self.v;
			tmp2 = v;
		} else {
			tmp2 = [];
		}
		var self = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,meta),function(f) {
			return f(stx_g_lang_expr_GMetadataEntry.__);
		});
		var v = stx_g_lang_expr_GMetadata.unit();
		var tmp3;
		if(self._hx_index == 0) {
			var v1 = self.v;
			tmp3 = v1;
		} else {
			tmp3 = v;
		}
		return stx_g_lang_expr_GTypeDefinition.make(name,pack,tmp,tmp1,tmp2,tmp3,isExtern,doc);
	}
	,__class__: stx_g_lang_expr_GTypeDefinitionCtr
});
var stx_g_lang_expr_GTypeDefinitionLift = function() { };
$hxClasses["stx.g.lang.expr.GTypeDefinitionLift"] = stx_g_lang_expr_GTypeDefinitionLift;
stx_g_lang_expr_GTypeDefinitionLift.__name__ = "stx.g.lang.expr.GTypeDefinitionLift";
stx_g_lang_expr_GTypeDefinitionLift.to_macro_at = function(self,pos) {
	var this1 = stx_Log.ZERO;
	var fn = function(pos) {
		return pos.with_stamp(function(stamp) {
			return stamp.relevel(2);
		});
	};
	(function(value,pos) {
		this1(value,fn(pos));
	})(stx_log_Stringify.fromString("gtypedefinition.to_macro_at")(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/g/lang/expr/GTypeDefinition.hx", lineNumber : 71, className : "stx.g.lang.expr.GTypeDefinitionLift", methodName : "to_macro_at"}));
	var self1 = self.name;
	var tmp = stx_nano_Cluster.prj(self.pack);
	var tmp1 = stx_g_lang_expr_GTypeDefKindLift.to_macro_at(self.kind,pos);
	var tmp2 = stx_nano_Cluster.prj(stx_nano_ClusterLift.map(self.fields,function(x) {
		return stx_g_lang_expr_GFieldLift.to_macro_at(x,pos);
	}));
	var self2 = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,self.params),function(x) {
		return stx_nano_Cluster.prj(stx_nano_ClusterLift.map(x,function(y) {
			return stx_g_lang_expr_GTypeParamDeclLift.to_macro_at(y,pos);
		}));
	});
	var tmp3;
	if(self2._hx_index == 0) {
		var v = self2.v;
		tmp3 = v;
	} else {
		tmp3 = [];
	}
	var self2 = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,self.meta),function(x) {
		return stx_g_lang_expr_GMetadataLift.to_macro_at(x,pos);
	});
	var tmp4;
	if(self2._hx_index == 0) {
		var v = self2.v;
		tmp4 = v;
	} else {
		tmp4 = [];
	}
	return { name : self1, pack : tmp, kind : tmp1, fields : tmp2, params : tmp3, meta : tmp4, isExtern : self.isExtern, doc : self.doc, pos : pos};
};
var stx_g_lang_expr_GTypeDefinition = {};
stx_g_lang_expr_GTypeDefinition._new = function(self) {
	var this1 = self;
	return this1;
};
stx_g_lang_expr_GTypeDefinition.lift = function(self) {
	return stx_g_lang_expr_GTypeDefinition._new(self);
};
stx_g_lang_expr_GTypeDefinition.make = function(name,pack,kind,fields,params,meta,isExtern,doc) {
	var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,pack);
	var v = stx_nano_Cluster.lift([]);
	var tmp;
	if(self._hx_index == 0) {
		var v1 = self.v;
		tmp = v1;
	} else {
		tmp = v;
	}
	return stx_g_lang_expr_GTypeDefinition.lift({ name : name, pack : tmp, kind : kind, fields : fields, params : params, meta : meta, isExtern : isExtern, doc : doc});
};
stx_g_lang_expr_GTypeDefinition.prj = function(this1) {
	return this1;
};
stx_g_lang_expr_GTypeDefinition.get_self = function(this1) {
	return stx_g_lang_expr_GTypeDefinition.lift(this1);
};
stx_g_lang_expr_GTypeDefinition.toSource = function(this1) {
	return stx_g_lang_Printer.get_ZERO().printTypeDefinition(this1);
};
stx_g_lang_expr_GTypeDefinition.ident = function(this1) {
	return stx_nano_Ident.make(this1.name,this1.pack);
};
var stx_g_lang_expr_GTypeParamCtr = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["stx.g.lang.expr.GTypeParamCtr"] = stx_g_lang_expr_GTypeParamCtr;
stx_g_lang_expr_GTypeParamCtr.__name__ = "stx.g.lang.expr.GTypeParamCtr";
stx_g_lang_expr_GTypeParamCtr.unit = function() {
	return new stx_g_lang_expr_GTypeParamCtr();
};
stx_g_lang_expr_GTypeParamCtr.__super__ = stx_pico_Clazz;
stx_g_lang_expr_GTypeParamCtr.prototype = $extend(stx_pico_Clazz.prototype,{
	lift: function(self) {
		return stx_g_lang_expr_GTypeParam.lift(self);
	}
	,CType: function(type) {
		return this.lift(stx_g_lang_expr_GTypeParamSum.GTPType(type(stx_g_lang_expr_GComplexType.__)));
	}
	,ComplexType: function(type) {
		return this.lift(stx_g_lang_expr_GTypeParamSum.GTPType(type(stx_g_lang_expr_GComplexType.__)));
	}
	,Expr: function(expr) {
		return this.lift(stx_g_lang_expr_GTypeParamSum.GTPExpr(expr(stx_g_lang_expr_GExpr.__)));
	}
	,__class__: stx_g_lang_expr_GTypeParamCtr
});
var stx_g_lang_expr_GTypeParamSum = $hxEnums["stx.g.lang.expr.GTypeParamSum"] = { __ename__:"stx.g.lang.expr.GTypeParamSum",__constructs__:null
	,GTPType: ($_=function(t) { return {_hx_index:0,t:t,__enum__:"stx.g.lang.expr.GTypeParamSum",toString:$estr}; },$_._hx_name="GTPType",$_.__params__ = ["t"],$_)
	,GTPExpr: ($_=function(e) { return {_hx_index:1,e:e,__enum__:"stx.g.lang.expr.GTypeParamSum",toString:$estr}; },$_._hx_name="GTPExpr",$_.__params__ = ["e"],$_)
};
stx_g_lang_expr_GTypeParamSum.__constructs__ = [stx_g_lang_expr_GTypeParamSum.GTPType,stx_g_lang_expr_GTypeParamSum.GTPExpr];
var stx_g_lang_expr_GTypeParam = {};
stx_g_lang_expr_GTypeParam._new = function(self) {
	var this1 = self;
	return this1;
};
stx_g_lang_expr_GTypeParam.lift = function(self) {
	return stx_g_lang_expr_GTypeParam._new(self);
};
stx_g_lang_expr_GTypeParam.prj = function(this1) {
	return this1;
};
stx_g_lang_expr_GTypeParam.get_self = function(this1) {
	return stx_g_lang_expr_GTypeParam.lift(this1);
};
stx_g_lang_expr_GTypeParam.toSource = function(this1) {
	return stx_g_lang_Printer.get_ZERO().printTypeParam(this1);
};
var stx_g_lang_expr_GTypeParamLift = function() { };
$hxClasses["stx.g.lang.expr.GTypeParamLift"] = stx_g_lang_expr_GTypeParamLift;
stx_g_lang_expr_GTypeParamLift.__name__ = "stx.g.lang.expr.GTypeParamLift";
stx_g_lang_expr_GTypeParamLift.to_macro_at = function(self,pos) {
	switch(self._hx_index) {
	case 0:
		var t = self.t;
		return haxe_macro_TypeParam.TPType(stx_g_lang_expr_GComplexTypeLift.to_macro_at(t,pos));
	case 1:
		var e = self.e;
		return haxe_macro_TypeParam.TPExpr(stx_g_lang_expr_GExprLift.to_macro_at(e,pos));
	}
};
var stx_g_lang_expr_GTypeParamDeclCtr = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["stx.g.lang.expr.GTypeParamDeclCtr"] = stx_g_lang_expr_GTypeParamDeclCtr;
stx_g_lang_expr_GTypeParamDeclCtr.__name__ = "stx.g.lang.expr.GTypeParamDeclCtr";
stx_g_lang_expr_GTypeParamDeclCtr.unit = function() {
	return new stx_g_lang_expr_GTypeParamDeclCtr();
};
stx_g_lang_expr_GTypeParamDeclCtr.__super__ = stx_pico_Clazz;
stx_g_lang_expr_GTypeParamDeclCtr.prototype = $extend(stx_pico_Clazz.prototype,{
	Make: function(name,constraints,params,meta,defaultType) {
		var self = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,constraints),function(f) {
			return f(stx_g_lang_expr_GComplexType.__);
		});
		var tmp;
		if(self._hx_index == 0) {
			var v = self.v;
			tmp = v;
		} else {
			tmp = null;
		}
		var self = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,params),function(f) {
			return f(stx_g_lang_expr_GTypeParamDecl.__);
		});
		var tmp1;
		if(self._hx_index == 0) {
			var v = self.v;
			tmp1 = v;
		} else {
			tmp1 = null;
		}
		var self = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,meta),function(f) {
			return f(stx_g_lang_expr_GMetadataEntry.__);
		});
		var tmp2;
		if(self._hx_index == 0) {
			var v = self.v;
			tmp2 = v;
		} else {
			tmp2 = null;
		}
		var self = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,defaultType),function(f) {
			return f(stx_g_lang_expr_GComplexType.__);
		});
		var tmp3;
		if(self._hx_index == 0) {
			var v = self.v;
			tmp3 = v;
		} else {
			tmp3 = null;
		}
		return stx_g_lang_expr_GTypeParamDecl.make(name,tmp,tmp1,tmp2,tmp3);
	}
	,__class__: stx_g_lang_expr_GTypeParamDeclCtr
});
var stx_g_lang_expr_GTypeParamDecl = {};
stx_g_lang_expr_GTypeParamDecl._new = function(self) {
	var this1 = self;
	return this1;
};
stx_g_lang_expr_GTypeParamDecl.lift = function(self) {
	return stx_g_lang_expr_GTypeParamDecl._new(self);
};
stx_g_lang_expr_GTypeParamDecl.make = function(name,constraints,params,meta,defaultType) {
	return stx_g_lang_expr_GTypeParamDecl.lift({ name : name, constraints : constraints, params : params, meta : meta, defaultType : defaultType});
};
stx_g_lang_expr_GTypeParamDecl.prj = function(this1) {
	return this1;
};
stx_g_lang_expr_GTypeParamDecl.get_self = function(this1) {
	return stx_g_lang_expr_GTypeParamDecl.lift(this1);
};
stx_g_lang_expr_GTypeParamDecl.toSource = function(this1) {
	return stx_g_lang_Printer.get_ZERO().printTypeParamDecl(this1);
};
var stx_g_lang_expr_GTypeParamDeclLift = function() { };
$hxClasses["stx.g.lang.expr.GTypeParamDeclLift"] = stx_g_lang_expr_GTypeParamDeclLift;
stx_g_lang_expr_GTypeParamDeclLift.__name__ = "stx.g.lang.expr.GTypeParamDeclLift";
stx_g_lang_expr_GTypeParamDeclLift.to_macro_at = function(self,pos) {
	var self1 = self.name;
	var self2 = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,self.constraints),function(x) {
		return stx_nano_Cluster.prj(stx_nano_ClusterLift.map(x,function(y) {
			return stx_g_lang_expr_GComplexTypeLift.to_macro_at(y,pos);
		}));
	});
	var tmp;
	if(self2._hx_index == 0) {
		var v = self2.v;
		tmp = v;
	} else {
		tmp = [];
	}
	var self2 = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,self.params),function(x) {
		return stx_nano_Cluster.prj(stx_nano_ClusterLift.map(x,function(y) {
			return stx_g_lang_expr_GTypeParamDeclLift.to_macro_at(y,pos);
		}));
	});
	var tmp1;
	if(self2._hx_index == 0) {
		var v = self2.v;
		tmp1 = v;
	} else {
		tmp1 = [];
	}
	var self2 = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,self.meta),function(x) {
		return stx_nano_Cluster.prj(stx_nano_ClusterLift.map(x,function(y) {
			return stx_g_lang_expr_GMetadataEntryLift.to_macro_at(y,pos);
		}));
	});
	var tmp2;
	if(self2._hx_index == 0) {
		var v = self2.v;
		tmp2 = v;
	} else {
		tmp2 = [];
	}
	var self2 = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,self.defaultType),function(x) {
		return stx_g_lang_expr_GComplexTypeLift.to_macro_at(x,pos);
	});
	var tmp3;
	if(self2._hx_index == 0) {
		var v = self2.v;
		tmp3 = v;
	} else {
		tmp3 = null;
	}
	return { name : self1, constraints : tmp, params : tmp1, meta : tmp2, defaultType : tmp3};
};
var stx_g_lang_expr_GTypePathCtr = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["stx.g.lang.expr.GTypePathCtr"] = stx_g_lang_expr_GTypePathCtr;
stx_g_lang_expr_GTypePathCtr.__name__ = "stx.g.lang.expr.GTypePathCtr";
stx_g_lang_expr_GTypePathCtr.unit = function() {
	return new stx_g_lang_expr_GTypePathCtr();
};
stx_g_lang_expr_GTypePathCtr.__super__ = stx_pico_Clazz;
stx_g_lang_expr_GTypePathCtr.prototype = $extend(stx_pico_Clazz.prototype,{
	lift: function(self) {
		return stx_g_lang_expr_GTypePath.lift(self);
	}
	,Make: function(name,pack,sub,params) {
		var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,pack);
		var v = stx_nano_Cluster.lift([]);
		var tmp;
		if(self._hx_index == 0) {
			var v1 = self.v;
			tmp = v1;
		} else {
			tmp = v;
		}
		var self = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,params),function(f) {
			return f(stx_g_lang_expr_GTypeParamCtr.unit());
		});
		var tmp1;
		if(self._hx_index == 0) {
			var v = self.v;
			tmp1 = v;
		} else {
			tmp1 = null;
		}
		return stx_g_lang_expr_GTypePath.make(name,tmp,sub,tmp1);
	}
	,Ident: function(ident) {
		return this.Make(ident.name,ident.pack);
	}
	,fromIdent: function(ident) {
		return this.Make(ident.name,ident.pack);
	}
	,fromString: function(str) {
		var arr = str.split(".");
		var name = arr.pop();
		return this.Make(name,arr);
	}
	,__class__: stx_g_lang_expr_GTypePathCtr
});
var stx_g_lang_expr_GTypePath = {};
stx_g_lang_expr_GTypePath._new = function(self) {
	var this1 = self;
	return this1;
};
stx_g_lang_expr_GTypePath.lift = function(self) {
	return stx_g_lang_expr_GTypePath._new(self);
};
stx_g_lang_expr_GTypePath.make = function(name,pack,sub,params) {
	var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,pack);
	var v = stx_nano_Cluster.lift([]);
	var tmp;
	if(self._hx_index == 0) {
		var v1 = self.v;
		tmp = v1;
	} else {
		tmp = v;
	}
	return stx_g_lang_expr_GTypePath.lift({ name : name, pack : tmp, params : params, sub : sub});
};
stx_g_lang_expr_GTypePath.prj = function(this1) {
	return this1;
};
stx_g_lang_expr_GTypePath.get_self = function(this1) {
	return stx_g_lang_expr_GTypePath.lift(this1);
};
stx_g_lang_expr_GTypePath.fromString = function(self) {
	return stx_g_lang_expr_GTypePath.__.fromString(self);
};
stx_g_lang_expr_GTypePath.toSource = function(this1) {
	return stx_g_lang_Printer.get_ZERO().printTypePath(this1);
};
stx_g_lang_expr_GTypePath.toComplexType = function(this1) {
	return stx_g_Lang.g(stx_nano_Wildcard.__).ctype().Path(stx_nano_CTR.fromR(this1));
};
stx_g_lang_expr_GTypePath.toTypeParam = function(this1) {
	return stx_g_lang_expr_GComplexType.toTypeParam(stx_g_lang_expr_GTypePath.toComplexType(this1));
};
var stx_g_lang_expr_GTypePathLift = function() { };
$hxClasses["stx.g.lang.expr.GTypePathLift"] = stx_g_lang_expr_GTypePathLift;
stx_g_lang_expr_GTypePathLift.__name__ = "stx.g.lang.expr.GTypePathLift";
stx_g_lang_expr_GTypePathLift.to_macro_at = function(self,pos) {
	var self1 = self.name;
	var self2 = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,self.pack),function(x) {
		return stx_nano_Cluster.prj(x);
	});
	var tmp;
	if(self2._hx_index == 0) {
		var v = self2.v;
		tmp = v;
	} else {
		tmp = [];
	}
	var self2 = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,self.params),function(x) {
		return stx_nano_Cluster.prj(stx_nano_ClusterLift.map(x,function(y) {
			return stx_g_lang_expr_GTypeParamLift.to_macro_at(y,pos);
		}));
	});
	var tmp1;
	if(self2._hx_index == 0) {
		var v = self2.v;
		tmp1 = v;
	} else {
		tmp1 = [];
	}
	return { name : self1, pack : tmp, params : tmp1, sub : self.sub};
};
var stx_g_lang_expr_GUnopSum = $hxEnums["stx.g.lang.expr.GUnopSum"] = { __ename__:"stx.g.lang.expr.GUnopSum",__constructs__:null
	,GOpIncrement: {_hx_name:"GOpIncrement",_hx_index:0,__enum__:"stx.g.lang.expr.GUnopSum",toString:$estr}
	,GOpDecrement: {_hx_name:"GOpDecrement",_hx_index:1,__enum__:"stx.g.lang.expr.GUnopSum",toString:$estr}
	,GOpNot: {_hx_name:"GOpNot",_hx_index:2,__enum__:"stx.g.lang.expr.GUnopSum",toString:$estr}
	,GOpNeg: {_hx_name:"GOpNeg",_hx_index:3,__enum__:"stx.g.lang.expr.GUnopSum",toString:$estr}
	,GOpNegBits: {_hx_name:"GOpNegBits",_hx_index:4,__enum__:"stx.g.lang.expr.GUnopSum",toString:$estr}
	,GOpSpread: {_hx_name:"GOpSpread",_hx_index:5,__enum__:"stx.g.lang.expr.GUnopSum",toString:$estr}
};
stx_g_lang_expr_GUnopSum.__constructs__ = [stx_g_lang_expr_GUnopSum.GOpIncrement,stx_g_lang_expr_GUnopSum.GOpDecrement,stx_g_lang_expr_GUnopSum.GOpNot,stx_g_lang_expr_GUnopSum.GOpNeg,stx_g_lang_expr_GUnopSum.GOpNegBits,stx_g_lang_expr_GUnopSum.GOpSpread];
var stx_g_lang_expr_GUnop = {};
stx_g_lang_expr_GUnop._new = function(self) {
	var this1 = self;
	return this1;
};
stx_g_lang_expr_GUnop.lift = function(self) {
	return stx_g_lang_expr_GUnop._new(self);
};
stx_g_lang_expr_GUnop.prj = function(this1) {
	return this1;
};
stx_g_lang_expr_GUnop.get_self = function(this1) {
	return stx_g_lang_expr_GUnop.lift(this1);
};
stx_g_lang_expr_GUnop.toSource = function(this1) {
	return stx_g_lang_Printer.get_ZERO().printUnop(this1);
};
var stx_g_lang_expr_GUnopLift = function() { };
$hxClasses["stx.g.lang.expr.GUnopLift"] = stx_g_lang_expr_GUnopLift;
stx_g_lang_expr_GUnopLift.__name__ = "stx.g.lang.expr.GUnopLift";
stx_g_lang_expr_GUnopLift.to_macro_at = function(self,pos) {
	switch(self._hx_index) {
	case 0:
		return haxe_macro_Unop.OpIncrement;
	case 1:
		return haxe_macro_Unop.OpDecrement;
	case 2:
		return haxe_macro_Unop.OpNot;
	case 3:
		return haxe_macro_Unop.OpNeg;
	case 4:
		return haxe_macro_Unop.OpNegBits;
	case 5:
		return haxe_macro_Unop.OpSpread;
	}
};
var stx_g_lang_expr_GVarCtr = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["stx.g.lang.expr.GVarCtr"] = stx_g_lang_expr_GVarCtr;
stx_g_lang_expr_GVarCtr.__name__ = "stx.g.lang.expr.GVarCtr";
stx_g_lang_expr_GVarCtr.unit = function() {
	return new stx_g_lang_expr_GVarCtr();
};
stx_g_lang_expr_GVarCtr.__super__ = stx_pico_Clazz;
stx_g_lang_expr_GVarCtr.prototype = $extend(stx_pico_Clazz.prototype,{
	lift: function(self) {
		return stx_g_lang_expr_GVar.lift(self);
	}
	,Make: function(name,type,expr,meta,isFinal,isStatic) {
		var self = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,type),function(f) {
			return f(stx_g_lang_expr_GComplexType.__);
		});
		var tmp;
		if(self._hx_index == 0) {
			var v = self.v;
			tmp = v;
		} else {
			tmp = null;
		}
		var self = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,expr),function(f) {
			return f(stx_g_lang_expr_GExpr.__);
		});
		var tmp1;
		if(self._hx_index == 0) {
			var v = self.v;
			tmp1 = v;
		} else {
			tmp1 = null;
		}
		var self = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,meta),function(f) {
			return f(stx_g_lang_expr_GMetadataEntry.__);
		});
		var tmp2;
		if(self._hx_index == 0) {
			var v = self.v;
			tmp2 = v;
		} else {
			tmp2 = null;
		}
		return stx_g_lang_expr_GVar.make(name,tmp,tmp1,tmp2,isFinal,isStatic);
	}
	,__class__: stx_g_lang_expr_GVarCtr
});
var stx_g_lang_expr_GVarLift = function() { };
$hxClasses["stx.g.lang.expr.GVarLift"] = stx_g_lang_expr_GVarLift;
stx_g_lang_expr_GVarLift.__name__ = "stx.g.lang.expr.GVarLift";
stx_g_lang_expr_GVarLift.to_macro_at = function(self,pos) {
	var self1 = self.name;
	var self2 = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,self.type),function(x) {
		return stx_g_lang_expr_GComplexTypeLift.to_macro_at(x,pos);
	});
	var tmp;
	if(self2._hx_index == 0) {
		var v = self2.v;
		tmp = v;
	} else {
		tmp = null;
	}
	var self2 = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,self.expr),function(x) {
		return stx_g_lang_expr_GExprLift.to_macro_at(x,pos);
	});
	var tmp1;
	if(self2._hx_index == 0) {
		var v = self2.v;
		tmp1 = v;
	} else {
		tmp1 = null;
	}
	var self2 = self.isFinal;
	var self3 = self.isStatic;
	var self4 = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,self.meta),function(x) {
		return stx_g_lang_expr_GMetadataLift.to_macro_at(x,pos);
	});
	var tmp2;
	if(self4._hx_index == 0) {
		var v = self4.v;
		tmp2 = v;
	} else {
		tmp2 = null;
	}
	return { name : self1, type : tmp, expr : tmp1, isFinal : self2, isStatic : self3, meta : tmp2};
};
var stx_g_lang_expr_GVar = {};
stx_g_lang_expr_GVar._new = function(self) {
	var this1 = self;
	return this1;
};
stx_g_lang_expr_GVar.lift = function(self) {
	return stx_g_lang_expr_GVar._new(self);
};
stx_g_lang_expr_GVar.make = function(name,type,expr,meta,isFinal,isStatic) {
	if(isStatic == null) {
		isStatic = true;
	}
	if(isFinal == null) {
		isFinal = false;
	}
	return stx_g_lang_expr_GVar.lift({ name : name, type : type, expr : expr, isFinal : isFinal, isStatic : isStatic, meta : meta});
};
stx_g_lang_expr_GVar.prj = function(this1) {
	return this1;
};
stx_g_lang_expr_GVar.get_self = function(this1) {
	return stx_g_lang_expr_GVar.lift(this1);
};
stx_g_lang_expr_GVar.toSource = function(this1) {
	return stx_g_lang_Printer.get_ZERO().printVar(this1);
};
var stx_io_InputLift = function() { };
$hxClasses["stx.io.InputLift"] = stx_io_InputLift;
stx_io_InputLift.__name__ = "stx.io.InputLift";
stx_io_InputLift.mandate = function(self,req,fn) {
	var source = stx_nano_Pledge.trigger();
	var sent = false;
	var done = false;
	var f = null;
	f = function(self) {
		switch(self._hx_index) {
		case 0:
			var o = self.o;
			var next = self.next;
			if(sent) {
				if(!done) {
					done = true;
					fn(stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,o));
				}
				return next;
			} else {
				return stx_coroutine_core_CoroutineSum.Emit(o,f(next));
			}
			break;
		case 1:
			var tran = self.tran;
			if(!sent) {
				sent = true;
				return f(tran(stx_coroutine_core_Control.push(req)));
			} else {
				return stx_coroutine_core_CoroutineSum.Wait(stx_coroutine_core_TransmissionLift.mod(tran,f));
			}
			break;
		case 2:
			var held = self.held;
			return stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held._new(eu_ohmrun_fletcher_Provide._.convert(held,eu_ohmrun_fletcher_Convert.Fun(f))));
		case 3:
			var _g = self.r;
			switch(_g._hx_index) {
			case 0:
				var _g1 = _g.c;
				switch(_g1._hx_index) {
				case 0:
					return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Stop));
				case 1:
					var e = _g1.err;
					return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Exit(e)));
				}
				break;
			case 1:
				var _g1 = _g.v;
				if(!done) {
					var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/io/Input.hx", lineNumber : 61, className : "stx.io.InputLift", methodName : "mandate"});
					return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_Cause.fromRefuse(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_IoFailureSum.E_Io_Exhausted(stx_nano_Retry.unit(),true))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1)))));
				} else {
					return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Production(null));
				}
				break;
			}
			break;
		}
	};
	return stx_io_Input.lift(f(self));
};
var stx_io_Input = {};
stx_io_Input._new = function(self) {
	var this1 = self;
	return this1;
};
stx_io_Input.make0 = function(ipt) {
	var this1 = stx_io_StdIn.reply(ipt);
	return this1;
};
stx_io_Input.lift = function(self) {
	var this1 = self;
	return this1;
};
stx_io_Input.Keyboard = function(shell) {
	return stx_io_Input.lift(stx_io_input_term_Keyboard.make(shell));
};
stx_io_Input.fromTunnel = function(self) {
	return stx_io_Input.lift(stx_coroutine_pack_Tunnel.prj(self));
};
stx_io_Input.provide = function(this1,req) {
	return stx_io_Input.lift(stx_coroutine_core_CoroutineLift.provide(this1,req));
};
stx_io_Input.prj = function(this1) {
	return this1;
};
stx_io_Input.get_self = function(this1) {
	return stx_io_Input.lift(this1);
};
var stx_io_Logging = function() { };
$hxClasses["stx.io.Logging"] = stx_io_Logging;
stx_io_Logging.__name__ = "stx.io.Logging";
stx_io_Logging.log = function(wildcard) {
	var self = stx_pico_OptionLift.map(stx_pkg_Pkg.source(stx_PkgLift.pkg(stx_nano_Wildcard.__,{ fileName : "stx/io/Logging.hx", lineNumber : 9, className : "stx.io.Logging", methodName : "log"})),function(scope) {
		var this1 = stx_Log.unit();
		var tag = scope.pack.join("/");
		var this2 = this1;
		var fn = function(pos) {
			return pos.with_stamp(function(stamp) {
				return stamp.tag(tag);
			});
		};
		return function(value,pos) {
			this2(value,fn(pos));
		};
	});
	if(self._hx_index == 0) {
		var v = self.v;
		return v;
	} else {
		return stx_Log.unit();
	}
};
var stx_io_OutputLift = function() { };
$hxClasses["stx.io.OutputLift"] = stx_io_OutputLift;
stx_io_OutputLift.__name__ = "stx.io.OutputLift";
stx_io_OutputLift.relate = function(self) {
	return stx_coroutine_core_Coroutine._.relate(self,function(x) {
		return x;
	});
};
var stx_io_Output = {};
stx_io_Output.pure = function(self) {
	return stx_io_Output._new(self);
};
stx_io_Output._new = function(self) {
	var this1 = stx_io_StdOut.reply(self);
	return this1;
};
var stx_io_StdInLift = function() { };
$hxClasses["stx.io.StdInLift"] = stx_io_StdInLift;
stx_io_StdInLift.__name__ = "stx.io.StdInLift";
var stx_io_StdIn = {};
stx_io_StdIn.lift = function(self) {
	return stx_io_StdIn._new(self);
};
stx_io_StdIn._new = function(self) {
	var this1 = self;
	return this1;
};
stx_io_StdIn.reply = function(this1) {
	var state = stx_io_input_InputStateSum.Io_Input_Unknown;
	var apply = function(ip,un) {
		switch(un._hx_index) {
		case 0:
			return stx_io_input_InputResponse.IResState(state);
		case 1:
			var buffer_size = un.buffer_size;
			var bytes = ip.readAll(buffer_size);
			return stx_io_input_InputResponse.IResBytes(bytes);
		case 2:
			var x = un.bs;
			var prim;
			switch(x) {
			case "dbe":
				ip.set_bigEndian(true);
				prim = stx_nano_SprigSum.Byteal(stx_nano_NumericSum.NFloat(ip.readDouble()));
				break;
			case "dle":
				ip.set_bigEndian(false);
				prim = stx_nano_SprigSum.Byteal(stx_nano_NumericSum.NFloat(ip.readDouble()));
				break;
			case "fbe":
				ip.set_bigEndian(true);
				prim = stx_nano_SprigSum.Byteal(stx_nano_NumericSum.NFloat(ip.readFloat()));
				break;
			case "fle":
				ip.set_bigEndian(false);
				prim = stx_nano_SprigSum.Byteal(stx_nano_NumericSum.NFloat(ip.readFloat()));
				break;
			case "i16+":
				ip.set_bigEndian(true);
				prim = stx_nano_SprigSum.Byteal(stx_nano_NumericSum.NInt(ip.readInt16()));
				break;
			case "i16-":
				ip.set_bigEndian(false);
				prim = stx_nano_SprigSum.Byteal(stx_nano_NumericSum.NInt(ip.readInt16()));
				break;
			case "i24+":
				ip.set_bigEndian(true);
				prim = stx_nano_SprigSum.Byteal(stx_nano_NumericSum.NInt(ip.readInt24()));
				break;
			case "i24-":
				ip.set_bigEndian(false);
				prim = stx_nano_SprigSum.Byteal(stx_nano_NumericSum.NInt(ip.readInt24()));
				break;
			case "i32+":
				ip.set_bigEndian(true);
				prim = stx_nano_SprigSum.Byteal(stx_nano_NumericSum.NInt(ip.readInt32()));
				break;
			case "i32-":
				ip.set_bigEndian(false);
				prim = stx_nano_SprigSum.Byteal(stx_nano_NumericSum.NInt(ip.readInt32()));
				break;
			case "i8":
				prim = stx_nano_SprigSum.Byteal(stx_nano_NumericSum.NInt(ip.readInt8()));
				break;
			case "ln":
				prim = stx_nano_SprigSum.Textal(ip.readLine());
				break;
			case "ui16+":
				ip.set_bigEndian(true);
				prim = stx_nano_SprigSum.Byteal(stx_nano_NumericSum.NInt(ip.readUInt16()));
				break;
			case "ui16-":
				ip.set_bigEndian(false);
				prim = stx_nano_SprigSum.Byteal(stx_nano_NumericSum.NInt(ip.readUInt16()));
				break;
			case "ui24+":
				ip.set_bigEndian(true);
				prim = stx_nano_SprigSum.Byteal(stx_nano_NumericSum.NInt(ip.readUInt24()));
				break;
			case "ui24-":
				ip.set_bigEndian(false);
				prim = stx_nano_SprigSum.Byteal(stx_nano_NumericSum.NInt(ip.readUInt24()));
				break;
			}
			return stx_io_input_InputResponse.IResValue({ data : prim, type : x});
		case 3:
			var pos = un.pos;
			var len = un.len;
			var bytes = new haxe_io_Bytes(new ArrayBuffer(len));
			ip.readBytes(bytes,pos,len);
			return stx_io_input_InputResponse.IResBytes(bytes);
		case 4:
			if(state._hx_index == 3) {
				var _g = state.error;
				var _g = state.external;
			} else {
				state = stx_io_input_InputStateSum.Io_Input_Closed(haxe_ds_Option.None,true);
				ip.close();
			}
			return stx_io_input_InputResponse.IResStarved;
		}
	};
	var pull = function(un) {
		var this2 = stx_io_Logging.log(stx_nano_Wildcard.__);
		var fn = function(pos) {
			return pos.with_stamp(function(stamp) {
				return stamp.relevel(1);
			});
		};
		(function(value,pos) {
			this2(value,fn(pos));
		})(stx_log_Stringify.fromString("pulling")(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/io/StdIn.hx", lineNumber : 56, className : "stx.io._StdIn.StdIn_Impl_", methodName : "reply"}));
		var prim = null;
		var err = null;
		try {
			prim = apply(this1,un);
			var this3 = stx_io_Logging.log(stx_nano_Wildcard.__);
			var fn1 = function(pos) {
				return pos.with_stamp(function(stamp) {
					return stamp.relevel(1);
				});
			};
			(function(value,pos) {
				this3(value,fn1(pos));
			})(stx_log_Stringify.fromString("pull ok")(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/io/StdIn.hx", lineNumber : 61, className : "stx.io._StdIn.StdIn_Impl_", methodName : "reply"}));
		} catch( _g ) {
			var _g1 = haxe_Exception.caught(_g).unwrap();
			if(((_g1) instanceof haxe_io_Eof)) {
				var e = _g1;
				var this4 = stx_io_Logging.log(stx_nano_Wildcard.__);
				var fn2 = function(pos) {
					return pos.with_stamp(function(stamp) {
						return stamp.relevel(5);
					});
				};
				(function(value,pos) {
					this4(value,fn2(pos));
				})(stx_log_Stringify.fromString("pull fail " + Std.string(e))(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/io/StdIn.hx", lineNumber : 63, className : "stx.io._StdIn.StdIn_Impl_", methodName : "reply"}));
				state = stx_io_input_InputStateSum.Io_Input_Closed(haxe_ds_Option.None,false);
				prim = stx_io_input_InputResponse.IResStarved;
			} else if(js_Boot.__instanceof(_g1,haxe_io_Error)) {
				var e = _g1;
				var this5 = stx_io_Logging.log(stx_nano_Wildcard.__);
				var fn3 = function(pos) {
					return pos.with_stamp(function(stamp) {
						return stamp.relevel(5);
					});
				};
				(function(value,pos) {
					this5(value,fn3(pos));
				})(stx_log_Stringify.fromString("pull fail " + Std.string(e))(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/io/StdIn.hx", lineNumber : 67, className : "stx.io._StdIn.StdIn_Impl_", methodName : "reply"}));
				state = stx_io_input_InputStateSum.Io_Input_Closed(haxe_ds_Option.Some(stx_fail_Error.make(haxe_ds_Option.Some(Std.string(e)),haxe_ds_Option.None,haxe_ds_Option.None)),false);
				var this6 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/io/StdIn.hx", lineNumber : 69, className : "stx.io._StdIn.StdIn_Impl_", methodName : "reply"});
				err = stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_IoFailureSum.E_Io_Subsystem(e))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this6));
			} else {
				var e = _g1;
				state = stx_io_input_InputStateSum.Io_Input_Closed(haxe_ds_Option.Some(stx_fail_Error.make(haxe_ds_Option.Some(Std.string(e)),haxe_ds_Option.None,haxe_ds_Option.None)),false);
				var this6 = stx_io_Logging.log(stx_nano_Wildcard.__);
				var fn4 = function(pos) {
					return pos.with_stamp(function(stamp) {
						return stamp.relevel(5);
					});
				};
				(function(value,pos) {
					this6(value,fn4(pos));
				})(stx_log_Stringify.fromString("pull fail " + Std.string(e))(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/io/StdIn.hx", lineNumber : 72, className : "stx.io._StdIn.StdIn_Impl_", methodName : "reply"}));
				var this7 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/io/StdIn.hx", lineNumber : 73, className : "stx.io._StdIn.StdIn_Impl_", methodName : "reply"});
				err = stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_IoFailureSum.E_Io_Subsystem(haxe_io_Error.Custom(e)))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this7));
			}
		}
		var this7 = stx_io_Logging.log(stx_nano_Wildcard.__);
		var fn5 = function(pos) {
			return pos.with_stamp(function(stamp) {
				return stamp.relevel(1);
			});
		};
		(function(value,pos) {
			this7(value,fn5(pos));
		})(stx_log_Stringify.fromString("pulled: " + Std.string(prim))(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/io/StdIn.hx", lineNumber : 75, className : "stx.io._StdIn.StdIn_Impl_", methodName : "reply"}));
		var self = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,err),function(e) {
			return stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(e),{ fileName : "stx/io/StdIn.hx", lineNumber : 76, className : "stx.io._StdIn.StdIn_Impl_", methodName : "reply"});
		});
		var out;
		if(self._hx_index == 0) {
			var v = self.v;
			out = v;
		} else {
			out = stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,prim);
		}
		return out;
	};
	var rec = null;
	rec = function(ipt) {
		switch(ipt._hx_index) {
		case 0:
			var fn = rec;
			return stx_coroutine_core_CoroutineSum.Emit(stx_io_input_InputResponse.IResState(state),stx_coroutine_core_CoroutineSum.Wait(stx_coroutine_core_Transmission.lift(function(control) {
				return stx_coroutine_core_ControlLift.fold(control,fn,function(e) {
					return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_Cause.fromRefuse(stx_nano_lift_LiftErrorDigestToRefuse.toRefuse(e))));
				},function() {
					return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Stop));
				});
			})));
		case 1:
			var _g = ipt.buffer_size;
			if(state._hx_index == 3) {
				var _g = state.error;
				var _g = state.external;
				var this2 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/io/StdIn.hx", lineNumber : 89, className : "stx.io._StdIn.StdIn_Impl_", methodName : "reply"});
				return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Exit(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_IoFailureSum.E_Io_EndOfFile)),haxe_ds_Option.None,stx_pico_Option.fromNullT(this2)))));
			} else {
				var x = ipt;
				var self = pull(x);
				switch(self._hx_index) {
				case 0:
					var t = self.t;
					var fn1 = rec;
					return stx_coroutine_core_CoroutineSum.Emit(t,stx_coroutine_core_CoroutineSum.Wait(stx_coroutine_core_Transmission.lift(function(control) {
						return stx_coroutine_core_ControlLift.fold(control,fn1,function(e) {
							return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_Cause.fromRefuse(stx_nano_lift_LiftErrorDigestToRefuse.toRefuse(e))));
						},function() {
							return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Stop));
						});
					})));
				case 1:
					var e = self.e;
					return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Exit(e)));
				}
			}
			break;
		case 2:
			var _g = ipt.bs;
			if(state._hx_index == 3) {
				var _g = state.error;
				var _g = state.external;
				var this2 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/io/StdIn.hx", lineNumber : 86, className : "stx.io._StdIn.StdIn_Impl_", methodName : "reply"});
				return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Exit(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_IoFailureSum.E_Io_EndOfFile)),haxe_ds_Option.None,stx_pico_Option.fromNullT(this2)))));
			} else {
				var x = ipt;
				var self = pull(x);
				switch(self._hx_index) {
				case 0:
					var t = self.t;
					var fn2 = rec;
					return stx_coroutine_core_CoroutineSum.Emit(t,stx_coroutine_core_CoroutineSum.Wait(stx_coroutine_core_Transmission.lift(function(control) {
						return stx_coroutine_core_ControlLift.fold(control,fn2,function(e) {
							return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_Cause.fromRefuse(stx_nano_lift_LiftErrorDigestToRefuse.toRefuse(e))));
						},function() {
							return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Stop));
						});
					})));
				case 1:
					var e = self.e;
					return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Exit(e)));
				}
			}
			break;
		case 3:
			var _g = ipt.pos;
			var _g = ipt.len;
			if(state._hx_index == 3) {
				var _g = state.error;
				var _g = state.external;
				var this2 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/io/StdIn.hx", lineNumber : 87, className : "stx.io._StdIn.StdIn_Impl_", methodName : "reply"});
				return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Exit(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_IoFailureSum.E_Io_EndOfFile)),haxe_ds_Option.None,stx_pico_Option.fromNullT(this2)))));
			} else {
				var x = ipt;
				var self = pull(x);
				switch(self._hx_index) {
				case 0:
					var t = self.t;
					var fn3 = rec;
					return stx_coroutine_core_CoroutineSum.Emit(t,stx_coroutine_core_CoroutineSum.Wait(stx_coroutine_core_Transmission.lift(function(control) {
						return stx_coroutine_core_ControlLift.fold(control,fn3,function(e) {
							return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_Cause.fromRefuse(stx_nano_lift_LiftErrorDigestToRefuse.toRefuse(e))));
						},function() {
							return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Stop));
						});
					})));
				case 1:
					var e = self.e;
					return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Exit(e)));
				}
			}
			break;
		case 4:
			if(state._hx_index == 3) {
				var _g = state.error;
				var _g = state.external;
				return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Stop));
			} else {
				if(state._hx_index == 3) {
					var _g = state.error;
					var _g = state.external;
				} else {
					this1.close();
					state = stx_io_input_InputStateSum.Io_Input_Closed(haxe_ds_Option.None,true);
				}
				return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Stop));
			}
			break;
		}
	};
	var fn = rec;
	return stx_coroutine_pack_Tunnel.lift(stx_coroutine_core_CoroutineSum.Wait(stx_coroutine_core_Transmission.lift(function(control) {
		return stx_coroutine_core_ControlLift.fold(control,fn,function(e) {
			return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_Cause.fromRefuse(stx_nano_lift_LiftErrorDigestToRefuse.toRefuse(e))));
		},function() {
			return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Stop));
		});
	})));
};
stx_io_StdIn.prj = function(this1) {
	return this1;
};
var stx_io_StdOutLift = function() { };
$hxClasses["stx.io.StdOutLift"] = stx_io_StdOutLift;
stx_io_StdOutLift.__name__ = "stx.io.StdOutLift";
var stx_io_StdOut = {};
stx_io_StdOut.lift = function(self) {
	return stx_io_StdOut._new(self);
};
stx_io_StdOut._new = function(self) {
	var this1 = self;
	return this1;
};
stx_io_StdOut.reply = function(this1) {
	var fn = function(value) {
		var this2 = stx_io_Logging.log(stx_nano_Wildcard.__);
		var fn = function(pos) {
			return pos.with_stamp(function(stamp) {
				return stamp.relevel(2);
			});
		};
		(function(value,pos) {
			this2(value,fn(pos));
		})(stx_log_Stringify.fromString("pushing")(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/io/StdOut.hx", lineNumber : 15, className : "stx.io._StdOut.StdOut_Impl_", methodName : "reply"}));
		var output = stx_nano_ReportSum.Happened;
		var valAsInt = stx_pico_Option.unit();
		var valAsString = stx_pico_Option.unit();
		var valAsFloat = stx_pico_Option.unit();
		switch(value._hx_index) {
		case 0:
			var packet = value.packet;
			var _g = packet.data;
			switch(_g._hx_index) {
			case 0:
				var str = _g.str;
				valAsString = haxe_ds_Option.Some(str);
				break;
			case 1:
				var _g1 = _g.byte;
				switch(_g1._hx_index) {
				case 0:
					var fl = _g1.int;
					valAsInt = haxe_ds_Option.Some(fl);
					break;
				case 2:
					var fl = _g1.f;
					valAsFloat = haxe_ds_Option.Some(fl);
					break;
				default:
					var this3 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/io/StdOut.hx", lineNumber : 35, className : "stx.io._StdOut.StdOut_Impl_", methodName : "reply"});
					stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_IoFailureSum.E_Io_UnsupportedValue)),haxe_ds_Option.None,stx_pico_Option.fromNullT(this3));
				}
				break;
			}
			try {
				switch(packet.type) {
				case "dbe":
					this1.set_bigEndian(true);
					var val = $iterator(stx_pico_OptionLift)(valAsFloat);
					while(val.hasNext()) {
						var val1 = val.next();
						this1.writeDouble(val1);
					}
					break;
				case "dle":
					this1.set_bigEndian(false);
					var val = $iterator(stx_pico_OptionLift)(valAsFloat);
					while(val.hasNext()) {
						var val1 = val.next();
						this1.writeDouble(val1);
					}
					break;
				case "fbe":
					this1.set_bigEndian(true);
					var val = $iterator(stx_pico_OptionLift)(valAsFloat);
					while(val.hasNext()) {
						var val1 = val.next();
						this1.writeFloat(val1);
					}
					break;
				case "fle":
					this1.set_bigEndian(false);
					var val = $iterator(stx_pico_OptionLift)(valAsFloat);
					while(val.hasNext()) {
						var val1 = val.next();
						this1.writeFloat(val1);
					}
					break;
				case "i16+":
					this1.set_bigEndian(true);
					var val = $iterator(stx_pico_OptionLift)(valAsInt);
					while(val.hasNext()) {
						var val1 = val.next();
						this1.writeInt16(val1);
					}
					break;
				case "i16-":
					this1.set_bigEndian(false);
					var val = $iterator(stx_pico_OptionLift)(valAsInt);
					while(val.hasNext()) {
						var val1 = val.next();
						this1.writeInt16(val1);
					}
					break;
				case "i24+":
					this1.set_bigEndian(true);
					var val = $iterator(stx_pico_OptionLift)(valAsInt);
					while(val.hasNext()) {
						var val1 = val.next();
						this1.writeInt24(val1);
					}
					break;
				case "i24-":
					this1.set_bigEndian(false);
					var val = $iterator(stx_pico_OptionLift)(valAsInt);
					while(val.hasNext()) {
						var val1 = val.next();
						this1.writeInt24(val1);
					}
					break;
				case "i32+":
					this1.set_bigEndian(true);
					var val = $iterator(stx_pico_OptionLift)(valAsInt);
					while(val.hasNext()) {
						var val1 = val.next();
						this1.writeInt32(val1);
					}
					break;
				case "i32-":
					this1.set_bigEndian(false);
					var val = $iterator(stx_pico_OptionLift)(valAsInt);
					while(val.hasNext()) {
						var val1 = val.next();
						this1.writeInt32(val1);
					}
					break;
				case "i8":
					var val = $iterator(stx_pico_OptionLift)(valAsInt);
					while(val.hasNext()) {
						var val1 = val.next();
						this1.writeInt8(val1);
					}
					break;
				case "ln":
					var val = $iterator(stx_pico_OptionLift)(valAsString);
					while(val.hasNext()) {
						var val1 = val.next();
						this1.writeString(val1);
					}
					break;
				case "ui16+":
					this1.set_bigEndian(true);
					var val = $iterator(stx_pico_OptionLift)(valAsInt);
					while(val.hasNext()) {
						var val1 = val.next();
						this1.writeInt16(val1);
					}
					break;
				case "ui16-":
					this1.set_bigEndian(false);
					var val = $iterator(stx_pico_OptionLift)(valAsInt);
					while(val.hasNext()) {
						var val1 = val.next();
						this1.writeUInt16(val1);
					}
					break;
				case "ui24+":
					this1.set_bigEndian(true);
					var val = $iterator(stx_pico_OptionLift)(valAsInt);
					while(val.hasNext()) {
						var val1 = val.next();
						this1.writeUInt24(val1);
					}
					break;
				case "ui24-":
					this1.set_bigEndian(false);
					var val = $iterator(stx_pico_OptionLift)(valAsInt);
					while(val.hasNext()) {
						var val1 = val.next();
						this1.writeUInt24(val1);
					}
					break;
				}
			} catch( _g ) {
				var e = haxe_Exception.caught(_g).unwrap();
				var this3 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/io/StdOut.hx", lineNumber : 87, className : "stx.io._StdOut.StdOut_Impl_", methodName : "reply"});
				output = stx_nano_Report.pure(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_IoFailureSum.E_Io_Subsystem(e))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this3)));
			}
			break;
		case 1:
			var bytes = value.bytes;
			this1.write(bytes);
			output = stx_nano_Report.unit();
			break;
		case 2:
			this1.close();
			output = stx_nano_Report.unit();
			break;
		}
		var this3 = stx_io_Logging.log(stx_nano_Wildcard.__);
		var fn1 = function(pos) {
			return pos.with_stamp(function(stamp) {
				return stamp.relevel(2);
			});
		};
		(function(value,pos) {
			this3(value,fn1(pos));
		})(stx_log_Stringify.fromString("pushed " + Std.string(output))(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/io/StdOut.hx", lineNumber : 90, className : "stx.io._StdOut.StdOut_Impl_", methodName : "reply"}));
		return output;
	};
	return stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held.Guard(tink_core_Future.irreversible(function(cb) {
		var rec = null;
		rec = function(value) {
			var self = fn(value);
			if(self == null) {
				var fn1 = rec;
				return stx_coroutine_core_CoroutineSum.Wait(stx_coroutine_core_Transmission.lift(function(control) {
					return stx_coroutine_core_ControlLift.fold(control,fn1,function(e) {
						return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_Cause.fromRefuse(stx_nano_lift_LiftErrorDigestToRefuse.toRefuse(e))));
					},function() {
						return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Stop));
					});
				}));
			} else {
				switch(self._hx_index) {
				case 0:
					var v = self.v;
					var head = stx_fail_RefuseLift.report(v);
					var fn2 = rec;
					return stx_coroutine_core_CoroutineSum.Emit(head,stx_coroutine_core_CoroutineSum.Wait(stx_coroutine_core_Transmission.lift(function(control) {
						return stx_coroutine_core_ControlLift.fold(control,fn2,function(e) {
							return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_Cause.fromRefuse(stx_nano_lift_LiftErrorDigestToRefuse.toRefuse(e))));
						},function() {
							return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Stop));
						});
					})));
				case 1:
					var fn3 = rec;
					return stx_coroutine_core_CoroutineSum.Wait(stx_coroutine_core_Transmission.lift(function(control) {
						return stx_coroutine_core_ControlLift.fold(control,fn3,function(e) {
							return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_Cause.fromRefuse(stx_nano_lift_LiftErrorDigestToRefuse.toRefuse(e))));
						},function() {
							return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Stop));
						});
					}));
				}
			}
		};
		var fn1 = rec;
		cb(stx_coroutine_core_CoroutineSum.Wait(stx_coroutine_core_Transmission.lift(function(control) {
			return stx_coroutine_core_ControlLift.fold(control,fn1,function(e) {
				return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_Cause.fromRefuse(stx_nano_lift_LiftErrorDigestToRefuse.toRefuse(e))));
			},function() {
				return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Stop));
			});
		})));
	}),{ fileName : "stx/io/StdOut.hx", lineNumber : 94, className : "stx.io._StdOut.StdOut_Impl_", methodName : "reply"}));
};
var stx_io_input_InputRequestSum = $hxEnums["stx.io.input.InputRequestSum"] = { __ename__:"stx.io.input.InputRequestSum",__constructs__:null
	,IReqState: {_hx_name:"IReqState",_hx_index:0,__enum__:"stx.io.input.InputRequestSum",toString:$estr}
	,IReqTotal: ($_=function(buffer_size) { return {_hx_index:1,buffer_size:buffer_size,__enum__:"stx.io.input.InputRequestSum",toString:$estr}; },$_._hx_name="IReqTotal",$_.__params__ = ["buffer_size"],$_)
	,IReqValue: ($_=function(bs) { return {_hx_index:2,bs:bs,__enum__:"stx.io.input.InputRequestSum",toString:$estr}; },$_._hx_name="IReqValue",$_.__params__ = ["bs"],$_)
	,IReqBytes: ($_=function(pos,len) { return {_hx_index:3,pos:pos,len:len,__enum__:"stx.io.input.InputRequestSum",toString:$estr}; },$_._hx_name="IReqBytes",$_.__params__ = ["pos","len"],$_)
	,IReqClose: {_hx_name:"IReqClose",_hx_index:4,__enum__:"stx.io.input.InputRequestSum",toString:$estr}
};
stx_io_input_InputRequestSum.__constructs__ = [stx_io_input_InputRequestSum.IReqState,stx_io_input_InputRequestSum.IReqTotal,stx_io_input_InputRequestSum.IReqValue,stx_io_input_InputRequestSum.IReqBytes,stx_io_input_InputRequestSum.IReqClose];
var stx_io_input_InputRequest = {};
stx_io_input_InputRequest._new = function(self) {
	var this1 = self;
	return this1;
};
stx_io_input_InputRequest.lift = function(self) {
	return stx_io_input_InputRequest._new(self);
};
stx_io_input_InputRequest.fromIReqValue = function(bs) {
	return stx_io_input_InputRequest.lift(stx_io_input_InputRequestSum.IReqValue(bs));
};
stx_io_input_InputRequest.prj = function(this1) {
	return this1;
};
stx_io_input_InputRequest.get_self = function(this1) {
	return stx_io_input_InputRequest.lift(this1);
};
var stx_io_input_InputResponse = $hxEnums["stx.io.input.InputResponse"] = { __ename__:"stx.io.input.InputResponse",__constructs__:null
	,IResValue: ($_=function(packet) { return {_hx_index:0,packet:packet,__enum__:"stx.io.input.InputResponse",toString:$estr}; },$_._hx_name="IResValue",$_.__params__ = ["packet"],$_)
	,IResBytes: ($_=function(b,type) { return {_hx_index:1,b:b,type:type,__enum__:"stx.io.input.InputResponse",toString:$estr}; },$_._hx_name="IResBytes",$_.__params__ = ["b","type"],$_)
	,IResStarved: {_hx_name:"IResStarved",_hx_index:2,__enum__:"stx.io.input.InputResponse",toString:$estr}
	,IResState: ($_=function(state) { return {_hx_index:3,state:state,__enum__:"stx.io.input.InputResponse",toString:$estr}; },$_._hx_name="IResState",$_.__params__ = ["state"],$_)
};
stx_io_input_InputResponse.__constructs__ = [stx_io_input_InputResponse.IResValue,stx_io_input_InputResponse.IResBytes,stx_io_input_InputResponse.IResStarved,stx_io_input_InputResponse.IResState];
var stx_io_input_InputStateSum = $hxEnums["stx.io.input.InputStateSum"] = { __ename__:"stx.io.input.InputStateSum",__constructs__:null
	,Io_Input_Unknown: {_hx_name:"Io_Input_Unknown",_hx_index:0,__enum__:"stx.io.input.InputStateSum",toString:$estr}
	,Io_Input_Eager: {_hx_name:"Io_Input_Eager",_hx_index:1,__enum__:"stx.io.input.InputStateSum",toString:$estr}
	,Io_Input_Blocked: {_hx_name:"Io_Input_Blocked",_hx_index:2,__enum__:"stx.io.input.InputStateSum",toString:$estr}
	,Io_Input_Closed: ($_=function(error,external) { return {_hx_index:3,error:error,external:external,__enum__:"stx.io.input.InputStateSum",toString:$estr}; },$_._hx_name="Io_Input_Closed",$_.__params__ = ["error","external"],$_)
	,Io_Input_Error: ($_=function(f) { return {_hx_index:4,f:f,__enum__:"stx.io.input.InputStateSum",toString:$estr}; },$_._hx_name="Io_Input_Error",$_.__params__ = ["f"],$_)
};
stx_io_input_InputStateSum.__constructs__ = [stx_io_input_InputStateSum.Io_Input_Unknown,stx_io_input_InputStateSum.Io_Input_Eager,stx_io_input_InputStateSum.Io_Input_Blocked,stx_io_input_InputStateSum.Io_Input_Closed,stx_io_input_InputStateSum.Io_Input_Error];
var stx_io_input_InputState = {};
stx_io_input_InputState._new = function(self) {
	var this1 = self;
	return this1;
};
stx_io_input_InputState.lift = function(self) {
	return stx_io_input_InputState._new(self);
};
stx_io_input_InputState.prj = function(this1) {
	return this1;
};
stx_io_input_InputState.get_self = function(this1) {
	return stx_io_input_InputState.lift(this1);
};
stx_io_input_InputState.is_open = function(this1) {
	if(this1._hx_index == 3) {
		var _g = this1.error;
		var _g = this1.external;
		return false;
	} else {
		return true;
	}
};
var stx_io_input_term_KeyboardLift = function() { };
$hxClasses["stx.io.input.term.KeyboardLift"] = stx_io_input_term_KeyboardLift;
stx_io_input_term_KeyboardLift.__name__ = "stx.io.input.term.KeyboardLift";
stx_io_input_term_KeyboardLift.lift = function(self) {
	var this1 = self;
	return this1;
};
var stx_io_input_term_Keyboard = {};
stx_io_input_term_Keyboard._new = function(self) {
	var this1 = self;
	return this1;
};
stx_io_input_term_Keyboard.lift = function(self) {
	var this1 = self;
	return this1;
};
stx_io_input_term_Keyboard.prj = function(this1) {
	return this1;
};
stx_io_input_term_Keyboard.get_self = function(this1) {
	var this2 = this1;
	return this2;
};
stx_io_input_term_Keyboard.make = function(shell) {
	var turn = null;
	turn = function(stdin) {
		var rec = null;
		rec = function(x) {
			if(x._hx_index == 2) {
				var bs = x.bs;
				if(bs == "i8") {
					return stx_coroutine_core_CoroutineSum.Hold(stx_coroutine_core_Held.fromProvide(eu_ohmrun_fletcher_ProduceLift.recover(eu_ohmrun_fletcher_ProduceLift.map(shell.byte(),function(x) {
						var head = stx_io_input_InputResponse.IResValue(stx_asys_Packet.make(stx_nano_SprigSum.Byteal(stx_nano_NumericSum.NInt(x)),"i8"));
						var fn = rec;
						return stx_coroutine_core_CoroutineSum.Emit(head,stx_coroutine_core_CoroutineSum.Wait(stx_coroutine_core_Transmission.lift(function(control) {
							return stx_coroutine_core_ControlLift.fold(control,fn,function(e) {
								return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_Cause.fromRefuse(stx_nano_lift_LiftErrorDigestToRefuse.toRefuse(e))));
							},function() {
								return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Stop));
							});
						})));
					}),eu_ohmrun_fletcher_Recover.fromFunErrR(function(e) {
						return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_Cause.fromRefuse(e)));
					}))));
				} else {
					return stx_coroutine_pack_Tunnel._.mod(stx_coroutine_core_Coroutine.prj(stx_coroutine_core_CoroutineLift.provide(stdin,x)),turn);
				}
			} else {
				var x1 = x;
				return stx_coroutine_pack_Tunnel._.mod(stx_coroutine_core_CoroutineLift.provide(stdin,x1),turn);
			}
		};
		var fn = rec;
		return stx_coroutine_core_CoroutineSum.Wait(stx_coroutine_core_Transmission.lift(function(control) {
			return stx_coroutine_core_ControlLift.fold(control,fn,function(e) {
				return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_Cause.fromRefuse(stx_nano_lift_LiftErrorDigestToRefuse.toRefuse(e))));
			},function() {
				return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Stop));
			});
		}));
	};
	var this1 = turn(shell.stdin());
	return this1;
};
var stx_io_lift_LiftInputResponse = function() { };
$hxClasses["stx.io.lift.LiftInputResponse"] = stx_io_lift_LiftInputResponse;
stx_io_lift_LiftInputResponse.__name__ = "stx.io.lift.LiftInputResponse";
stx_io_lift_LiftInputResponse.toOutputRequest = function(self) {
	switch(self._hx_index) {
	case 0:
		var p = self.packet;
		return haxe_ds_Option.Some(stx_io_output_OutputRequestSum.OReqValue(p));
	case 1:
		var _g = self.type;
		var b = self.b;
		return haxe_ds_Option.Some(stx_io_output_OutputRequestSum.OReqBytes(b));
	case 2:
		return haxe_ds_Option.Some(stx_io_output_OutputRequestSum.OReqClose);
	case 3:
		var _g = self.state;
		return haxe_ds_Option.None;
	}
};
var stx_io_output_OutputRequestSum = $hxEnums["stx.io.output.OutputRequestSum"] = { __ename__:"stx.io.output.OutputRequestSum",__constructs__:null
	,OReqValue: ($_=function(packet) { return {_hx_index:0,packet:packet,__enum__:"stx.io.output.OutputRequestSum",toString:$estr}; },$_._hx_name="OReqValue",$_.__params__ = ["packet"],$_)
	,OReqBytes: ($_=function(bytes) { return {_hx_index:1,bytes:bytes,__enum__:"stx.io.output.OutputRequestSum",toString:$estr}; },$_._hx_name="OReqBytes",$_.__params__ = ["bytes"],$_)
	,OReqClose: {_hx_name:"OReqClose",_hx_index:2,__enum__:"stx.io.output.OutputRequestSum",toString:$estr}
};
stx_io_output_OutputRequestSum.__constructs__ = [stx_io_output_OutputRequestSum.OReqValue,stx_io_output_OutputRequestSum.OReqBytes,stx_io_output_OutputRequestSum.OReqClose];
var stx_io_output_OutputRequest = {};
stx_io_output_OutputRequest._new = function(self) {
	var this1 = self;
	return this1;
};
stx_io_output_OutputRequest.lift = function(self) {
	return stx_io_output_OutputRequest._new(self);
};
stx_io_output_OutputRequest.fromPacket = function(self) {
	return stx_io_output_OutputRequestSum.OReqValue(self);
};
stx_io_output_OutputRequest.prj = function(this1) {
	return this1;
};
stx_io_output_OutputRequest.get_self = function(this1) {
	return stx_io_output_OutputRequest.lift(this1);
};
var stx_io_process_ExitCode = {};
stx_io_process_ExitCode._new = function(self) {
	var this1 = self;
	return this1;
};
stx_io_process_ExitCode.lift = function(self) {
	return stx_io_process_ExitCode._new(self);
};
stx_io_process_ExitCode.unit = function() {
	return stx_io_process_ExitCode.lift(haxe_ds_Option.None);
};
stx_io_process_ExitCode.make = function(self) {
	return stx_io_process_ExitCode.lift(haxe_ds_Option.Some(self));
};
stx_io_process_ExitCode.prj = function(this1) {
	return this1;
};
stx_io_process_ExitCode.get_self = function(this1) {
	return stx_io_process_ExitCode.lift(this1);
};
stx_io_process_ExitCode.has_error = function(this1) {
	switch(this1._hx_index) {
	case 0:
		if(this1.v == 0) {
			return false;
		} else {
			return true;
		}
		break;
	case 1:
		return false;
	}
};
stx_io_process_ExitCode.is_ready = function(this1) {
	return stx_pico_OptionLift.is_defined(this1);
};
var stx_io_process_ProcessClientLift = function() { };
$hxClasses["stx.io.process.ProcessClientLift"] = stx_io_process_ProcessClientLift;
stx_io_process_ProcessClientLift.__name__ = "stx.io.process.ProcessClientLift";
stx_io_process_ProcessClientLift.lift = function(self) {
	var this1 = self;
	return this1;
};
var stx_io_process_ProcessClient = {};
stx_io_process_ProcessClient._new = function(self) {
	var this1 = self;
	return this1;
};
stx_io_process_ProcessClient.lift = function(self) {
	var this1 = self;
	return this1;
};
stx_io_process_ProcessClient.prj = function(this1) {
	return this1;
};
stx_io_process_ProcessClient.get_self = function(this1) {
	var this2 = this1;
	return this2;
};
stx_io_process_ProcessClient.Reply = function() {
	var this1 = stx_io_process_client_term_Reply._new();
	return this1;
};
var stx_io_process_ProcessProxy = {};
stx_io_process_ProcessProxy._new = function(self) {
	var this1 = self;
	return this1;
};
stx_io_process_ProcessProxy.lift = function(self) {
	return stx_io_process_ProcessProxy._new(self);
};
stx_io_process_ProcessProxy.prj = function(this1) {
	return this1;
};
stx_io_process_ProcessProxy.get_self = function(this1) {
	return stx_io_process_ProcessProxy.lift(this1);
};
var stx_io_process_ProcessRequest = $hxEnums["stx.io.process.ProcessRequest"] = { __ename__:"stx.io.process.ProcessRequest",__constructs__:null
	,PReqTouch: {_hx_name:"PReqTouch",_hx_index:0,__enum__:"stx.io.process.ProcessRequest",toString:$estr}
	,PReqState: ($_=function(block) { return {_hx_index:1,block:block,__enum__:"stx.io.process.ProcessRequest",toString:$estr}; },$_._hx_name="PReqState",$_.__params__ = ["block"],$_)
	,PReqInput: ($_=function(req,err) { return {_hx_index:2,req:req,err:err,__enum__:"stx.io.process.ProcessRequest",toString:$estr}; },$_._hx_name="PReqInput",$_.__params__ = ["req","err"],$_)
	,PReqOutput: ($_=function(req) { return {_hx_index:3,req:req,__enum__:"stx.io.process.ProcessRequest",toString:$estr}; },$_._hx_name="PReqOutput",$_.__params__ = ["req"],$_)
};
stx_io_process_ProcessRequest.__constructs__ = [stx_io_process_ProcessRequest.PReqTouch,stx_io_process_ProcessRequest.PReqState,stx_io_process_ProcessRequest.PReqInput,stx_io_process_ProcessRequest.PReqOutput];
var stx_io_process_ProcessResponse = $hxEnums["stx.io.process.ProcessResponse"] = { __ename__:"stx.io.process.ProcessResponse",__constructs__:null
	,PResState: ($_=function(state) { return {_hx_index:0,state:state,__enum__:"stx.io.process.ProcessResponse",toString:$estr}; },$_._hx_name="PResState",$_.__params__ = ["state"],$_)
	,PResValue: ($_=function(res) { return {_hx_index:1,res:res,__enum__:"stx.io.process.ProcessResponse",toString:$estr}; },$_._hx_name="PResValue",$_.__params__ = ["res"],$_)
	,PResError: ($_=function(raw) { return {_hx_index:2,raw:raw,__enum__:"stx.io.process.ProcessResponse",toString:$estr}; },$_._hx_name="PResError",$_.__params__ = ["raw"],$_)
	,PResOffer: ($_=function(req) { return {_hx_index:3,req:req,__enum__:"stx.io.process.ProcessResponse",toString:$estr}; },$_._hx_name="PResOffer",$_.__params__ = ["req"],$_)
};
stx_io_process_ProcessResponse.__constructs__ = [stx_io_process_ProcessResponse.PResState,stx_io_process_ProcessResponse.PResValue,stx_io_process_ProcessResponse.PResError,stx_io_process_ProcessResponse.PResOffer];
var stx_io_process_ProcessServerLift = function() { };
$hxClasses["stx.io.process.ProcessServerLift"] = stx_io_process_ProcessServerLift;
stx_io_process_ProcessServerLift.__name__ = "stx.io.process.ProcessServerLift";
stx_io_process_ProcessServerLift.lift = function(self) {
	return stx_io_process_ProcessServer.lift(self);
};
stx_io_process_ProcessServerLift.provide = function(self,req) {
	return stx_io_process_ProcessServer.lift(stx_proxy_core_Server._.provide(stx_io_process_ProcessServer.prj(self),req));
};
stx_io_process_ProcessServerLift.drain = function(self,buffer) {
	var that = stx_io_process_ProcessServerLift.provide(self,stx_io_process_ProcessRequest.PReqInput(stx_io_input_InputRequestSum.IReqTotal(buffer),false));
	return that;
};
var stx_io_process_ProcessServer = {};
stx_io_process_ProcessServer._new = function(self) {
	var this1 = self;
	return this1;
};
stx_io_process_ProcessServer.lift = function(self) {
	return stx_io_process_ProcessServer._new(self);
};
stx_io_process_ProcessServer.prj = function(this1) {
	return this1;
};
stx_io_process_ProcessServer.get_self = function(this1) {
	return stx_io_process_ProcessServer.lift(this1);
};
stx_io_process_ProcessServer.makeI = function(command,detached) {
	return stx_io_process_ProcessServer.lift(stx_io_process_server_term_Impl.makeI(command,detached).reply());
};
stx_io_process_ProcessServer.toProxy = function(this1) {
	return stx_proxy_core_Server.prj(this1);
};
var stx_io_process_ProcessServerCat = {};
stx_io_process_ProcessServerCat._new = function() {
	var this1 = function(args) {
		return stx_io_process_ProcessServer.makeI(args.command,args.detached);
	};
	return this1;
};
stx_io_process_ProcessServerCat.prj = function(this1) {
	return this1;
};
var stx_io_process_ProcessState = {};
stx_io_process_ProcessState._new = function(self) {
	var this1 = self;
	return this1;
};
stx_io_process_ProcessState.lift = function(self) {
	return stx_io_process_ProcessState._new(self);
};
stx_io_process_ProcessState.make = function(status,exit_code,stderr,stdout) {
	if(stdout == null) {
		stdout = stx_io_input_InputStateSum.Io_Input_Unknown;
	}
	if(stderr == null) {
		stderr = stx_io_input_InputStateSum.Io_Input_Unknown;
	}
	var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,exit_code);
	var tmp;
	if(self._hx_index == 0) {
		var v = self.v;
		tmp = v;
	} else {
		tmp = stx_io_process_ExitCode.unit();
	}
	return stx_io_process_ProcessState.lift({ status : status, exit_code : tmp, stderr : stderr, stdout : stdout});
};
stx_io_process_ProcessState.copy = function(this1,status,exit_code,stderr,stdout) {
	var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,status);
	var tmp;
	if(self._hx_index == 0) {
		var v = self.v;
		tmp = v;
	} else {
		tmp = this1.status;
	}
	var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,exit_code);
	var tmp1;
	if(self._hx_index == 0) {
		var v = self.v;
		tmp1 = v;
	} else {
		tmp1 = this1.exit_code;
	}
	var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stderr);
	var tmp2;
	if(self._hx_index == 0) {
		var v = self.v;
		tmp2 = v;
	} else {
		tmp2 = this1.stderr;
	}
	var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stdout);
	var tmp3;
	if(self._hx_index == 0) {
		var v = self.v;
		tmp3 = v;
	} else {
		tmp3 = this1.stdout;
	}
	return stx_io_process_ProcessState.lift({ status : tmp, exit_code : tmp1, stderr : tmp2, stdout : tmp3});
};
stx_io_process_ProcessState.prj = function(this1) {
	return this1;
};
stx_io_process_ProcessState.get_self = function(this1) {
	return stx_io_process_ProcessState.lift(this1);
};
stx_io_process_ProcessState.with_status = function(this1,status) {
	return stx_io_process_ProcessState.copy(this1,status);
};
stx_io_process_ProcessState.with_exit_code = function(this1,code) {
	return stx_io_process_ProcessState.copy(this1,null,code);
};
stx_io_process_ProcessState.with_stdout = function(this1,state) {
	return stx_io_process_ProcessState.copy(this1,null,null,state);
};
stx_io_process_ProcessState.with_stderr = function(this1,state) {
	return stx_io_process_ProcessState.copy(this1,null,null,null,state);
};
var stx_io_process_ProcessStatusSum = $hxEnums["stx.io.process.ProcessStatusSum"] = { __ename__:"stx.io.process.ProcessStatusSum",__constructs__:null
	,Io_Process_Init: {_hx_name:"Io_Process_Init",_hx_index:0,__enum__:"stx.io.process.ProcessStatusSum",toString:$estr}
	,Io_Process_Open: {_hx_name:"Io_Process_Open",_hx_index:1,__enum__:"stx.io.process.ProcessStatusSum",toString:$estr}
	,Io_Process_Hung: ($_=function(num_calls,last_timestamp) { return {_hx_index:2,num_calls:num_calls,last_timestamp:last_timestamp,__enum__:"stx.io.process.ProcessStatusSum",toString:$estr}; },$_._hx_name="Io_Process_Hung",$_.__params__ = ["num_calls","last_timestamp"],$_)
};
stx_io_process_ProcessStatusSum.__constructs__ = [stx_io_process_ProcessStatusSum.Io_Process_Init,stx_io_process_ProcessStatusSum.Io_Process_Open,stx_io_process_ProcessStatusSum.Io_Process_Hung];
var stx_io_process_ProcessStatus = {};
stx_io_process_ProcessStatus._new = function(self) {
	var this1 = self;
	return this1;
};
stx_io_process_ProcessStatus.lift = function(self) {
	return stx_io_process_ProcessStatus._new(self);
};
stx_io_process_ProcessStatus.prj = function(this1) {
	return this1;
};
stx_io_process_ProcessStatus.get_self = function(this1) {
	return stx_io_process_ProcessStatus.lift(this1);
};
stx_io_process_ProcessStatus.hang = function(this1) {
	var tmp;
	if(this1._hx_index == 2) {
		var calls = this1.num_calls;
		var last = this1.last_timestamp;
		var self = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,calls),function(x) {
			return x + 1;
		});
		var tmp1;
		if(self._hx_index == 0) {
			var v = self.v;
			tmp1 = v;
		} else {
			tmp1 = 1;
		}
		tmp = stx_io_process_ProcessStatusSum.Io_Process_Hung(tmp1,last == null ? HxOverrides.now() / 1000 : last);
	} else {
		tmp = stx_io_process_ProcessStatusSum.Io_Process_Hung(1,HxOverrides.now() / 1000);
	}
	return stx_io_process_ProcessStatus.lift(tmp);
};
stx_io_process_ProcessStatus.is_open = function(this1) {
	if(this1._hx_index == 2) {
		var _g = this1.num_calls;
		var _g = this1.last_timestamp;
		return false;
	} else {
		return true;
	}
};
var stx_io_process_client_term_Reply = {};
stx_io_process_client_term_Reply._new = function() {
	var rec = null;
	rec = function(res) {
		switch(res._hx_index) {
		case 0:
			var state = res.state;
			var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/io/process/client/term/Reply.hx", lineNumber : 16, className : "stx.io.process.client.term._Reply.Reply_Impl_", methodName : "_new"});
			return stx_proxy_core_ProxySum.Ended(stx_nano_ChunkSum.End(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_ProcessFailureSum.E_ProcessState(state))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1))));
		case 1:
			var _g = res.res;
			switch(_g._hx_index) {
			case 0:
				var _g1 = _g.t;
				if(_g1._hx_index == 1) {
					var _g2 = _g1.type;
					var bytes = _g1.b;
					return stx_proxy_core_ProxySum.Ended(stx_nano_ChunkSum.Val(bytes));
				} else {
					var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/io/process/client/term/Reply.hx", lineNumber : 17, className : "stx.io.process.client.term._Reply.Reply_Impl_", methodName : "_new"});
					return stx_proxy_core_ProxySum.Ended(stx_nano_ChunkSum.End(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_ProcessFailureSum.E_Process_Unsupported("" + Std.string(res)))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1))));
				}
				break;
			case 1:
				var _g1 = _g.e;
				if(_g1._hx_index == 1) {
					var _g = _g1.type;
					var bytes = _g1.b;
					var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/io/process/client/term/Reply.hx", lineNumber : 12, className : "stx.io.process.client.term._Reply.Reply_Impl_", methodName : "_new"});
					return stx_proxy_core_ProxySum.Ended(stx_nano_ChunkSum.End(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_ProcessFailureSum.E_Process_Raw(bytes))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1))));
				} else {
					var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/io/process/client/term/Reply.hx", lineNumber : 17, className : "stx.io.process.client.term._Reply.Reply_Impl_", methodName : "_new"});
					return stx_proxy_core_ProxySum.Ended(stx_nano_ChunkSum.End(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_ProcessFailureSum.E_Process_Unsupported("" + Std.string(res)))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1))));
				}
				break;
			}
			break;
		case 2:
			var raw = res.raw;
			return stx_proxy_core_ProxySum.Ended(stx_nano_ChunkSum.End(raw));
		case 3:
			var req = res.req;
			return stx_proxy_core_ProxySum.Await(req,rec);
		}
	};
	var this1 = stx_proxy_core_ProxySum.Await(stx_io_process_ProcessRequest.PReqInput(stx_io_input_InputRequestSum.IReqTotal(),false),rec);
	return this1;
};
var stx_io_process_server_term_Impl = function(proc,stdin,stdout,stderr,state) {
	this.proc = proc;
	this.stdin = stdin;
	this.stdout = stdout;
	this.stderr = stderr;
	var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,state);
	var self1 = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,null);
	var v;
	if(self1._hx_index == 0) {
		var v1 = self1.v;
		v = v1;
	} else {
		v = stx_io_process_ExitCode.unit();
	}
	var v1 = stx_io_process_ProcessState.lift({ status : stx_io_process_ProcessStatusSum.Io_Process_Init, exit_code : v, stderr : stx_io_input_InputStateSum.Io_Input_Unknown, stdout : stx_io_input_InputStateSum.Io_Input_Unknown});
	var tmp;
	if(self._hx_index == 0) {
		var v = self.v;
		tmp = v;
	} else {
		tmp = v1;
	}
	this.state = tmp;
};
$hxClasses["stx.io.process.server.term.Impl"] = stx_io_process_server_term_Impl;
stx_io_process_server_term_Impl.__name__ = "stx.io.process.server.term.Impl";
stx_io_process_server_term_Impl.makeI = function(command,detached) {
	var proc = stx_pico_OptionLift.fudge(stx_nano_ClusterLift.head(command));
	var value = stx_nano_Cluster.toIterable(stx_nano_ClusterLift.tail(command));
	var proc1 = new sys.io.Process(proc,((value) instanceof Array) ? value : null,detached);
	var ins = stx_io_StdOut.reply(stx_io_StdOut.lift(proc1.stdin));
	var outs = stx_io_Input.fromTunnel(stx_io_StdIn.reply(stx_io_StdIn.lift(proc1.stdout)));
	var errs = stx_io_Input.fromTunnel(stx_io_StdIn.reply(stx_io_StdIn.lift(proc1.stderr)));
	return new stx_io_process_server_term_Impl(proc1,ins,outs,errs);
};
stx_io_process_server_term_Impl.prototype = {
	proc: null
	,stdin: null
	,stdout: null
	,stderr: null
	,state: null
	,get_state: function(block) {
		if(block == null) {
			block = false;
		}
		var _gthis = this;
		this.stdout = stx_io_InputLift.mandate(this.stdout,stx_io_input_InputRequestSum.IReqState,function(res) {
			switch(res._hx_index) {
			case 0:
				var _g = res.t;
				if(_g._hx_index == 3) {
					var s = _g.state;
					_gthis.state = stx_io_process_ProcessState.with_stdout(_gthis.state,s);
				} else {
					_gthis.state = stx_io_process_ProcessState.with_stdout(_gthis.state,stx_io_input_InputStateSum.Io_Input_Error(stx_fail_IoFailureSum.E_Io_UnsupportedValue));
				}
				break;
			case 1:
				var err = res.e;
				var self = err.get_data();
				var tmp;
				switch(self._hx_index) {
				case 0:
					var t = self.v;
					tmp = stx_fail_DeclineLift.fold(t,function(e) {
						return stx_io_process_ProcessState.with_stdout(_gthis.state,stx_io_input_InputStateSum.Io_Input_Error(e));
					},function(d) {
						return stx_io_process_ProcessState.with_stdout(_gthis.state,stx_io_input_InputStateSum.Io_Input_Error(stx_fail_IoFailureSum.E_Io_Digest(d)));
					});
					break;
				case 1:
					tmp = stx_io_process_ProcessState.with_stdout(_gthis.state,stx_io_input_InputStateSum.Io_Input_Error(stx_fail_IoFailureSum.E_Io_UnsupportedValue));
					break;
				}
				_gthis.state = tmp;
				break;
			}
		});
		this.stderr = stx_io_InputLift.mandate(this.stderr,stx_io_input_InputRequestSum.IReqState,function(res) {
			switch(res._hx_index) {
			case 0:
				var _g = res.t;
				if(_g._hx_index == 3) {
					var s = _g.state;
					_gthis.state = stx_io_process_ProcessState.with_stderr(_gthis.state,s);
				} else {
					_gthis.state = stx_io_process_ProcessState.with_stderr(_gthis.state,stx_io_input_InputStateSum.Io_Input_Error(stx_fail_IoFailureSum.E_Io_UnsupportedValue));
				}
				break;
			case 1:
				var err = res.e;
				var self = err.get_data();
				var tmp;
				switch(self._hx_index) {
				case 0:
					var t = self.v;
					tmp = stx_fail_DeclineLift.fold(t,function(e) {
						return stx_io_process_ProcessState.with_stderr(_gthis.state,stx_io_input_InputStateSum.Io_Input_Error(e));
					},function(d) {
						return stx_io_process_ProcessState.with_stderr(_gthis.state,stx_io_input_InputStateSum.Io_Input_Error(stx_fail_IoFailureSum.E_Io_Digest(d)));
					});
					break;
				case 1:
					tmp = stx_io_process_ProcessState.with_stderr(_gthis.state,stx_io_input_InputStateSum.Io_Input_Error(stx_fail_IoFailureSum.E_Io_UnsupportedValue));
					break;
				}
				_gthis.state = tmp;
				break;
			}
		});
		this.state = stx_io_process_ProcessState.with_exit_code(this.state,stx_io_process_ExitCode.lift(stx_pico_Option.fromNullT(this.proc.exitCode(block))));
	}
	,reply: function() {
		var _gthis = this;
		var rec = null;
		rec = function(req) {
			var _g = _gthis.state;
			var _g1 = _g.exit_code;
			var _g1 = _g.status;
			var _g2 = _g.stderr;
			var _g2 = _g.stdout;
			var _g2 = stx_io_process_ProcessState.get_self(_g);
			switch(_g1._hx_index) {
			case 0:case 1:
				switch(req._hx_index) {
				case 0:
					return _gthis.reply();
				case 1:
					var block = req.block;
					_gthis.get_state(block);
					return _gthis.reply();
				case 2:
					var _g = req.req;
					if(req.err) {
						var req1 = _g;
						var source = new tink_core_FutureTrigger();
						_gthis.stderr = stx_io_InputLift.mandate(_gthis.stderr,req1,function(res) {
							switch(res._hx_index) {
							case 0:
								var t = res.t;
								source.trigger(stx_proxy_core_ProxySum.Yield(stx_io_process_ProcessResponse.PResValue(stx_pico_OutcomeSum.Failure(t)),rec));
								break;
							case 1:
								var e = res.e;
								source.trigger(stx_proxy_core_ProxySum.Ended(stx_nano_ChunkSum.End(stx_fail_Refuse.errate(e,stx_fail_ProcessFailureSum.E_Process_Io))));
								break;
							}
						});
						return stx_proxy_core_ProxySum.Defer(stx_proxy_core_Belay.fromFuture(function() {
							return source;
						}));
					} else {
						var req1 = _g;
						var source1 = new tink_core_FutureTrigger();
						_gthis.stdout = stx_io_InputLift.mandate(_gthis.stdout,req1,function(res) {
							switch(res._hx_index) {
							case 0:
								var t = res.t;
								source1.trigger(stx_proxy_core_ProxySum.Yield(stx_io_process_ProcessResponse.PResValue(stx_pico_OutcomeSum.Success(t)),rec));
								break;
							case 1:
								var e = res.e;
								source1.trigger(stx_proxy_core_ProxySum.Ended(stx_nano_ChunkSum.End(stx_fail_Refuse.errate(e,stx_fail_ProcessFailureSum.E_Process_Io))));
								break;
							}
						});
						return stx_proxy_core_ProxySum.Defer(stx_proxy_core_Belay.fromFuture(function() {
							return source1;
						}));
					}
					break;
				case 3:
					var req1 = req.req;
					_gthis.stdin = stx_coroutine_core_Coroutine.provide(_gthis.stdin,req1);
					return _gthis.reply();
				}
				break;
			default:
				var x = _g1;
				return stx_proxy_core_ProxySum.Yield(stx_io_process_ProcessResponse.PResState(_gthis.state),rec);
			}
		};
		return stx_proxy_core_ProxySum.Yield(stx_io_process_ProcessResponse.PResState(this.state),rec);
	}
	,__class__: stx_io_process_server_term_Impl
};
var stx_lift_IterableLift = function() { };
$hxClasses["stx.lift.IterableLift"] = stx_lift_IterableLift;
stx_lift_IterableLift.__name__ = "stx.lift.IterableLift";
stx_lift_IterableLift.make = function(self) {
	return { iterator : self};
};
stx_lift_IterableLift.concat = function(self,that) {
	return stx_lift_IterableLift.make(function() {
		var rest = false;
		var lhs = $getIterator(self);
		var rhs = $getIterator(that);
		return stx_lift_IteratorLift.make(function() {
			if(!rest) {
				if(lhs.hasNext()) {
					return true;
				} else {
					rest = true;
					return rhs.hasNext();
				}
			} else {
				return rhs.hasNext();
			}
		},function() {
			if(!rest) {
				return lhs.next();
			} else {
				return rhs.next();
			}
		});
	});
};
var stx_lift_IteratorLift = function() { };
$hxClasses["stx.lift.IteratorLift"] = stx_lift_IteratorLift;
stx_lift_IteratorLift.__name__ = "stx.lift.IteratorLift";
stx_lift_IteratorLift.make = function(hasNext,next) {
	return { hasNext : hasNext, next : next};
};
var stx_log_EntryCtr = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["stx.log.EntryCtr"] = stx_log_EntryCtr;
stx_log_EntryCtr.__name__ = "stx.log.EntryCtr";
stx_log_EntryCtr.__super__ = stx_pico_Clazz;
stx_log_EntryCtr.prototype = $extend(stx_pico_Clazz.prototype,{
	make: function(val,ctr) {
		return { val : val, ctr : ctr};
	}
	,pure: function(val) {
		return { val : val, ctr : Std.string};
	}
	,thunk: function(fn) {
		return { val : null, ctr : function(_) {
			return Std.string(fn());
		}};
	}
	,json: function(val) {
		return { val : val, ctr : function(x) {
			return JSON.stringify(x,null," ");
		}};
	}
	,show: function(val) {
		return { val : val, ctr : function(x) {
			return stx_Show.show(stx_nano_Wildcard.__,x);
		}};
	}
	,__class__: stx_log_EntryCtr
});
var stx_log_Includes = {};
stx_log_Includes.clear = function(this1) {
	while(this1.length > 0) this1.pop();
};
stx_log_Includes.match = function(this1,string) {
	return stx_lift_ArrayLift.lfold(this1,function(next,memo) {
		return stx_LiftIf.if_else(memo,function() {
			return true;
		},function() {
			var str = hx_files_GlobPatterns.toRegEx(next);
			var opt = "";
			if(opt == null) {
				opt = "";
			}
			return (str == null ? null : new EReg(str,opt)).match(string);
		});
	},false);
};
var stx_log_LevelSum = {};
stx_log_LevelSum.prj = function(this1) {
	return this1;
};
var stx_log_LogPositionCls = function(pos,stamp) {
	this.pos = pos;
	this.stamp = stamp;
};
$hxClasses["stx.log.LogPositionCls"] = stx_log_LogPositionCls;
stx_log_LogPositionCls.__name__ = "stx.log.LogPositionCls";
stx_log_LogPositionCls.is_runtime = function() {
	return true;
};
stx_log_LogPositionCls.prototype = {
	pos: null
	,stamp: null
	,scoping: null
	,get_scoping: function() {
		var self = stx_pico_OptionLift.map(this.pos,function(x) {
			return stx_nano_Position.get_methodName(x);
		});
		var methodName;
		if(self._hx_index == 0) {
			var v = self.v;
			methodName = v;
		} else {
			methodName = "";
		}
		var self = stx_pico_OptionLift.map(this.pos,function(x) {
			return stx_nano_Position.get_className(x);
		});
		var className;
		if(self._hx_index == 0) {
			var v = self.v;
			className = v;
		} else {
			className = "";
		}
		var self = stx_pico_OptionLift.map(this.pos,function(x) {
			return stx_nano_Position.get_fileName(x);
		});
		var fileName;
		if(self._hx_index == 0) {
			var v = self.v;
			fileName = v;
		} else {
			fileName = "";
		}
		return new stx_log_Scoping(methodName,className,fileName);
	}
	,match: function(race) {
		switch(race.scope._hx_index) {
		case 0:
			var self = stx_pico_OptionLift.map(this.pos,function(x) {
				return stx_nano_Position.get_methodName(x) == race.scoping.method;
			});
			if(self._hx_index == 0) {
				var v = self.v;
				return v;
			} else {
				return false;
			}
			break;
		case 1:
			var self = stx_pico_OptionLift.map(this.pos,function(x) {
				return stx_nano_Position.get_className(x) == race.scoping.type;
			});
			if(self._hx_index == 0) {
				var v = self.v;
				return v;
			} else {
				return false;
			}
			break;
		case 2:
			var self = stx_pico_OptionLift.map(this.pos,function(x) {
				return stx_nano_Position.get_fileName(x) == race.scoping.module;
			});
			if(self._hx_index == 0) {
				var v = self.v;
				return v;
			} else {
				return false;
			}
			break;
		}
	}
	,copy: function(pos,stamp) {
		var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,pos);
		var tmp;
		if(self._hx_index == 0) {
			var v = self.v;
			tmp = v;
		} else {
			tmp = this.pos;
		}
		var tmp1 = stx_pico_OptionLift.map(tmp,function(x) {
			return stx_nano_PositionLift.copy(x);
		});
		var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stamp);
		var tmp;
		if(self._hx_index == 0) {
			var v = self.v;
			tmp = v;
		} else {
			tmp = this.stamp;
		}
		return new stx_log_LogPositionCls(tmp1,tmp);
	}
	,with_stamp: function(fn) {
		return this.copy(null,fn(this.stamp));
	}
	,__class__: stx_log_LogPositionCls
};
var stx_log_LogPosition = {};
stx_log_LogPosition._new = function(self) {
	var this1 = self;
	return this1;
};
stx_log_LogPosition.lift = function(self) {
	return stx_log_LogPosition._new(self);
};
stx_log_LogPosition.pure = function(pos) {
	return new stx_log_LogPositionCls(haxe_ds_Option.Some(pos),new stx_log_Stamp());
};
stx_log_LogPosition.fromPos = function(pos) {
	return new stx_log_LogPositionCls(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,pos),new stx_log_Stamp());
};
stx_log_LogPosition.unit = function() {
	return new stx_log_LogPositionCls(haxe_ds_Option.None,new stx_log_Stamp());
};
stx_log_LogPosition.prj = function(this1) {
	return this1;
};
stx_log_LogPosition.get_self = function(this1) {
	return stx_log_LogPosition.lift(this1);
};
var stx_log_Logger = function() { };
$hxClasses["stx.log.Logger"] = stx_log_Logger;
stx_log_Logger.__name__ = "stx.log.Logger";
stx_log_Logger.spur = function(value) {
	var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/log/Logger.hx", lineNumber : 6, className : "stx.log.Logger", methodName : "spur"});
	return stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_LogFailure.E_Log_Zero)),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1))),{ fileName : "stx/log/Logger.hx", lineNumber : 6, className : "stx.log.Logger", methodName : "spur"});
};
stx_log_Logger.ZERO = null;
stx_log_Logger.get_ZERO = function() {
	var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_log_Logger.ZERO);
	if(self._hx_index == 0) {
		var v = self.v;
	} else {
		stx_log_Logger.ZERO = new stx_log_logger_Unit();
	}
	return stx_log_Logger.ZERO;
};
var stx_log_ScopeSum = $hxEnums["stx.log.ScopeSum"] = { __ename__:"stx.log.ScopeSum",__constructs__:null
	,ScopeMethod: {_hx_name:"ScopeMethod",_hx_index:0,__enum__:"stx.log.ScopeSum",toString:$estr}
	,ScopeClass: {_hx_name:"ScopeClass",_hx_index:1,__enum__:"stx.log.ScopeSum",toString:$estr}
	,ScopeModule: {_hx_name:"ScopeModule",_hx_index:2,__enum__:"stx.log.ScopeSum",toString:$estr}
};
stx_log_ScopeSum.__constructs__ = [stx_log_ScopeSum.ScopeMethod,stx_log_ScopeSum.ScopeClass,stx_log_ScopeSum.ScopeModule];
var stx_log_Scoping = function(method,type,$module) {
	this.method = method;
	this.type = type;
	this.module = $module;
};
$hxClasses["stx.log.Scoping"] = stx_log_Scoping;
stx_log_Scoping.__name__ = "stx.log.Scoping";
stx_log_Scoping.prototype = {
	method: null
	,type: null
	,module: null
	,copy: function(method,type,$module) {
		var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,method);
		var tmp;
		if(self._hx_index == 0) {
			var v = self.v;
			tmp = v;
		} else {
			tmp = this.method;
		}
		var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,type);
		var tmp1;
		if(self._hx_index == 0) {
			var v = self.v;
			tmp1 = v;
		} else {
			tmp1 = this.type;
		}
		var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,$module);
		var tmp2;
		if(self._hx_index == 0) {
			var v = self.v;
			tmp2 = v;
		} else {
			tmp2 = this.module;
		}
		return new stx_log_Scoping(tmp,tmp1,tmp2);
	}
	,with_method: function(name) {
		return this.copy(name);
	}
	,toString: function() {
		return "(" + this.module + "::" + this.type + "::" + this.method + ")";
	}
	,__class__: stx_log_Scoping
};
var stx_log__$Signal_NullSignalCls = function() {
	stx_log__$Signal_SignalCls.call(this);
};
$hxClasses["stx.log._Signal.NullSignalCls"] = stx_log__$Signal_NullSignalCls;
stx_log__$Signal_NullSignalCls.__name__ = "stx.log._Signal.NullSignalCls";
stx_log__$Signal_NullSignalCls.__super__ = stx_log__$Signal_SignalCls;
stx_log__$Signal_NullSignalCls.prototype = $extend(stx_log__$Signal_SignalCls.prototype,{
	trigger: function(v) {
	}
	,__class__: stx_log__$Signal_NullSignalCls
});
var stx_log_DebugLogger = function(logic,format) {
	stx_log_logger_Base.call(this,logic,format);
};
$hxClasses["stx.log.DebugLogger"] = stx_log_DebugLogger;
stx_log_DebugLogger.__name__ = "stx.log.DebugLogger";
stx_log_DebugLogger.__super__ = stx_log_logger_Base;
stx_log_DebugLogger.prototype = $extend(stx_log_logger_Base.prototype,{
	__class__: stx_log_DebugLogger
});
var stx_log_Stamp = function(id,level,timestamp,tags,hidden) {
	if(hidden == null) {
		hidden = false;
	}
	var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,id);
	var tmp;
	if(self._hx_index == 0) {
		var v = self.v;
		tmp = v;
	} else {
		var _g = function(value) {
			return stx_nano_lift_LiftNano.uuid(stx_nano_Wildcard.__,value);
		};
		var value = "xxxxx";
		tmp = (function() {
			return _g(value);
		})();
	}
	this.id = tmp;
	var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,level);
	var tmp;
	if(self._hx_index == 0) {
		var v = self.v;
		tmp = v;
	} else {
		tmp = 0;
	}
	this.level = tmp;
	var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,timestamp);
	var tmp;
	if(self._hx_index == 0) {
		var v = self.v;
		tmp = v;
	} else {
		tmp = _$Date_Date_$Impl_$.now();
	}
	this.timestamp = tmp;
	var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,tags);
	var tmp;
	if(self._hx_index == 0) {
		var v = self.v;
		tmp = v;
	} else {
		tmp = [];
	}
	this.tags = tmp;
	this.hidden = hidden;
};
$hxClasses["stx.log.Stamp"] = stx_log_Stamp;
stx_log_Stamp.__name__ = "stx.log.Stamp";
stx_log_Stamp.prototype = {
	id: null
	,level: null
	,timestamp: null
	,tags: null
	,hidden: null
	,copy: function(id,level,timestamp,tags,hidden) {
		var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,id);
		var tmp;
		if(self._hx_index == 0) {
			var v = self.v;
			tmp = v;
		} else {
			tmp = this.id;
		}
		var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,level);
		var tmp1;
		if(self._hx_index == 0) {
			var v = self.v;
			tmp1 = v;
		} else {
			tmp1 = this.level;
		}
		var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,timestamp);
		var tmp2;
		if(self._hx_index == 0) {
			var v = self.v;
			tmp2 = v;
		} else {
			tmp2 = this.timestamp;
		}
		var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,tags);
		var tmp3;
		if(self._hx_index == 0) {
			var v = self.v;
			tmp3 = v;
		} else {
			tmp3 = this.tags;
		}
		var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,hidden);
		var tmp4;
		if(self._hx_index == 0) {
			var v = self.v;
			tmp4 = v;
		} else {
			tmp4 = this.hidden;
		}
		return new stx_log_Stamp(tmp,tmp1,tmp2,tmp3,tmp4);
	}
	,relevel: function(level) {
		return this.copy(null,level);
	}
	,tag: function(tag) {
		return this.copy(null,null,null,stx_lift_ArrayLift.snoc(this.tags,tag));
	}
	,hide: function() {
		return this.copy(this.id,this.level,this.timestamp,this.tags,true);
	}
	,toString: function() {
		var time = HxOverrides.dateStr(this.timestamp);
		var lev = stx_log_Level.toString(this.level);
		var out = "Stamp(" + lev + " " + time + ")";
		return out;
	}
	,is_zero: function() {
		return this == stx_log_Stamp.ZERO;
	}
	,__class__: stx_log_Stamp
};
var stx_log_StringCtr = {};
stx_log_StringCtr._new = function(self) {
	var this1 = self;
	return this1;
};
stx_log_StringCtr.unit = function() {
	return stx_log_StringCtr.lift({ ctr : Std.string});
};
stx_log_StringCtr.lift = function(self) {
	return stx_log_StringCtr._new(self);
};
stx_log_StringCtr.capture = function(this1,val) {
	return { ctr : $bind(this1,this1.ctr), val : val};
};
stx_log_StringCtr.prj = function(this1) {
	return this1;
};
stx_log_StringCtr.get_self = function(this1) {
	return stx_log_StringCtr.lift(this1);
};
var stx_log_Stringify = {};
stx_log_Stringify.fromString = function(str) {
	return function(ctr) {
		return stx_log_core_Entry.fromString(str);
	};
};
stx_log_Stringify.fromInt = function(self) {
	return function(ctr) {
		return stx_log_core_Entry.fromString("" + self);
	};
};
stx_log_Stringify.fromFloat = function(self) {
	return function(ctr) {
		return stx_log_core_Entry.fromString("" + self);
	};
};
stx_log_Stringify.fromBool = function(self) {
	return function(ctr) {
		return stx_log_core_Entry.fromString("" + (self == null ? "null" : "" + self));
	};
};
var stx_log_core_Entry = {};
stx_log_core_Entry._new = function(self) {
	var this1 = self;
	return this1;
};
stx_log_core_Entry.fromString = function(str) {
	return stx_log_core_Entry._new({ ctr : function(_) {
		return str;
	}, val : null});
};
stx_log_core_Entry.toString = function(this1) {
	return this1.ctr(this1.val);
};
var stx_log_filter_term_PosPredicate = function(delegate) {
	stx_log_Filter.call(this);
	this.delegate = delegate;
};
$hxClasses["stx.log.filter.term.PosPredicate"] = stx_log_filter_term_PosPredicate;
stx_log_filter_term_PosPredicate.__name__ = "stx.log.filter.term.PosPredicate";
stx_log_filter_term_PosPredicate.__super__ = stx_log_Filter;
stx_log_filter_term_PosPredicate.prototype = $extend(stx_log_Filter.prototype,{
	delegate: null
	,apply: function(value) {
		return this.delegate.apply(value.source);
	}
	,__class__: stx_log_filter_term_PosPredicate
});
var stx_log_filter_term_Race = function() {
	stx_log_Filter.call(this);
	this.races = [];
};
$hxClasses["stx.log.filter.term.Race"] = stx_log_filter_term_Race;
stx_log_filter_term_Race.__name__ = "stx.log.filter.term.Race";
stx_log_filter_term_Race.__super__ = stx_log_Filter;
stx_log_filter_term_Race.prototype = $extend(stx_log_Filter.prototype,{
	races: null
	,apply: function(value) {
		var race = Lambda.fold(this.races,function(next,memo) {
			var race;
			switch(memo._hx_index) {
			case 0:
				var t = memo.v;
				var v = t;
				race = stx_LiftIf.if_else(next.timestamp > v.timestamp,function() {
					return haxe_ds_Option.Some(next);
				},function() {
					return haxe_ds_Option.Some(v);
				});
				break;
			case 1:
				race = haxe_ds_Option.Some(next);
				break;
			}
			return race;
		},haxe_ds_Option.None);
		if(race._hx_index == 0) {
			var v = race.v;
			haxe_Log.trace("wins race",{ fileName : "stx/log/filter/term/Race.hx", lineNumber : 24, className : "stx.log.filter.term.Race", methodName : "apply"});
			var out = value.source.match(v);
			if(out) {
				haxe_Log.trace("wins race",{ fileName : "stx/log/filter/term/Race.hx", lineNumber : 27, className : "stx.log.filter.term.Race", methodName : "apply"});
			}
			return stx_LiftIf.if_else(out,function() {
				return stx_nano_Report.unit();
			},function() {
				var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/log/filter/term/Race.hx", lineNumber : 29, className : "stx.log.filter.term.Race", methodName : "apply"});
				return stx_nano_Report.pure(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_LogFailure.E_Log_LosesRace)),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1)));
			});
		} else {
			var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/log/filter/term/Race.hx", lineNumber : 30, className : "stx.log.filter.term.Race", methodName : "apply"});
			return stx_nano_Report.pure(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_LogFailure.E_Log_LosesRace)),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1)));
		}
	}
	,__class__: stx_log_filter_term_Race
});
var stx_log_filter_term_race_Stamp = {};
stx_log_filter_term_race_Stamp._new = function(self) {
	var this1 = self;
	return this1;
};
stx_log_filter_term_race_Stamp.lift = function(self) {
	return stx_log_filter_term_race_Stamp._new(self);
};
stx_log_filter_term_race_Stamp.make = function(scoping,timestamp,scope) {
	var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,scope);
	var tmp;
	if(self._hx_index == 0) {
		var v = self.v;
		tmp = v;
	} else {
		tmp = stx_log_ScopeSum.ScopeMethod;
	}
	return { scoping : scoping, timestamp : timestamp, scope : tmp};
};
stx_log_filter_term_race_Stamp.prj = function(this1) {
	return this1;
};
stx_log_filter_term_race_Stamp.get_self = function(this1) {
	return stx_log_filter_term_race_Stamp.lift(this1);
};
var stx_log_output_term_Js = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["stx.log.output.term.Js"] = stx_log_output_term_Js;
stx_log_output_term_Js.__name__ = "stx.log.output.term.Js";
stx_log_output_term_Js.__interfaces__ = [stx_log_OutputApi];
stx_log_output_term_Js.__super__ = stx_pico_Clazz;
stx_log_output_term_Js.prototype = $extend(stx_pico_Clazz.prototype,{
	render: function(v,pos) {
		var msg = "";
		msg += js_Boot.__string_rec(v,"");
		var d;
		var tmp;
		if(typeof(document) != "undefined") {
			d = document.getElementById("haxe:trace");
			tmp = d != null;
		} else {
			tmp = false;
		}
		if(tmp) {
			d.innerHTML += __unhtml(msg) + "<br/>";
		} else if(typeof console != "undefined" && console.log != null) {
			console.log(msg);
		}
	}
	,__class__: stx_log_output_term_Js
});
var stx_nano_APP = {};
stx_nano_APP._new = function(self) {
	var this1 = self;
	return this1;
};
stx_nano_APP.lift = function(self) {
	return stx_nano_APP._new(self);
};
stx_nano_APP.prj = function(this1) {
	return this1;
};
stx_nano_APP.get_self = function(this1) {
	return stx_nano_APP.lift(this1);
};
stx_nano_APP.fromR = function(r) {
	return stx_nano_APP.lift(stx_Tup2.tuple2(function(_) {
		return r;
	},null));
};
stx_nano_APP.reply = function(this1) {
	var f = this1.l;
	var p = this1.r;
	return f(p);
};
var stx_nano_AccrualLift = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["stx.nano.AccrualLift"] = stx_nano_AccrualLift;
stx_nano_AccrualLift.__name__ = "stx.nano.AccrualLift";
stx_nano_AccrualLift.make = function() {
	return new stx_nano_AccrualLift();
};
stx_nano_AccrualLift.lift = function(self) {
	return stx_nano_Accrual.lift(self);
};
stx_nano_AccrualLift.errata = function(self,fn) {
	return stx_nano_Accrual.lift(tink_core_Future.map(self,function(x) {
		return stx_nano_ReceiptLift.errata(x,fn);
	}));
};
stx_nano_AccrualLift.errate = function(self,fn) {
	return stx_nano_Accrual.lift(tink_core_Future.map(self,function(x) {
		return stx_nano_ReceiptLift.errate(x,fn);
	}));
};
stx_nano_AccrualLift.flat_map = function(self,fn) {
	return tink_core_Future.flatMap(self,function(x) {
		var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,x.value);
		switch(self._hx_index) {
		case 0:
			var t = self.v;
			return stx_nano_AccrualLift.errata(fn(t),function(e) {
				return x.get_error().toError().concat(e);
			});
		case 1:
			return stx_nano_Accrual.fromReceipt(stx_nano_Receipt.fromDefect(x.toDefect()));
		}
	});
};
stx_nano_AccrualLift.map = function(self,fn) {
	return tink_core_Future.map(self,function(x) {
		return stx_nano_ReceiptLift.map(x,fn);
	});
};
stx_nano_AccrualLift.escape = function(self,fn) {
	return tink_core_Future.map(self,fn);
};
stx_nano_AccrualLift.__super__ = stx_pico_Clazz;
stx_nano_AccrualLift.prototype = $extend(stx_pico_Clazz.prototype,{
	__class__: stx_nano_AccrualLift
});
var stx_nano_Accrual = {};
stx_nano_Accrual._new = function(self) {
	var this1 = self;
	return this1;
};
stx_nano_Accrual.unit = function() {
	return tink_core_Future.irreversible(function(cb) {
		cb(stx_nano_Receipt.unit());
	});
};
stx_nano_Accrual.fromReceipt = function(self) {
	return stx_nano_Accrual.lift(tink_core_Future.irreversible(function(cb) {
		cb(self);
	}));
};
stx_nano_Accrual.pure = function(self) {
	return stx_nano_Accrual.make(self);
};
stx_nano_Accrual.make = function(value,error) {
	return stx_nano_Accrual.lift(tink_core_Future.irreversible(function(cb) {
		cb(stx_nano_Receipt.make(value,error));
	}));
};
stx_nano_Accrual.ok = function(self) {
	return stx_nano_Accrual.pure(self);
};
stx_nano_Accrual.no = function(self) {
	return stx_nano_Accrual.make(null,self);
};
stx_nano_Accrual.lift = function(self) {
	var this1 = self;
	return this1;
};
stx_nano_Accrual.prj = function(this1) {
	return this1;
};
stx_nano_Accrual.get_self = function(this1) {
	return stx_nano_Accrual.lift(this1);
};
var stx_nano_AlertLift = function() { };
$hxClasses["stx.nano.AlertLift"] = stx_nano_AlertLift;
stx_nano_AlertLift.__name__ = "stx.nano.AlertLift";
stx_nano_AlertLift.fold = function(self,pure,unit) {
	return tink_core_Future.map(self,function(report) {
		if(report == null) {
			return unit();
		} else {
			switch(report._hx_index) {
			case 0:
				var v = report.v;
				return pure(v);
			case 1:
				return unit();
			}
		}
	});
};
stx_nano_AlertLift.execute = function(self,fn) {
	return tink_core_Future.flatMap(self,function(report) {
		var tmp;
		if(report == null) {
			tmp = fn();
		} else {
			switch(report._hx_index) {
			case 0:
				var v = report.v;
				tmp = stx_nano_Alert.pure(v);
				break;
			case 1:
				tmp = fn();
				break;
			}
		}
		return tmp;
	});
};
stx_nano_AlertLift.adjust = function(self,fn) {
	return stx_nano_Alert.lift(tink_core_Future.flatMap(self,function(report) {
		return fn(report);
	}));
};
stx_nano_AlertLift.tap = function(self,fn,pos) {
	return stx_nano_Alert.lift(tink_core_Future.map(self,function(report) {
		fn(report,pos);
		return report;
	}));
};
stx_nano_AlertLift.flat_fold = function(self,ers,nil) {
	return tink_core_Future.flatMap(self,function(report) {
		if(report == null) {
			return nil();
		} else {
			switch(report._hx_index) {
			case 0:
				var v = report.v;
				return ers(v);
			case 1:
				return nil();
			}
		}
	});
};
stx_nano_AlertLift.resolve = function(self,val) {
	return stx_nano_Pledge.lift(stx_nano_AlertLift.fold(self,function(e) {
		return stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(e),{ fileName : "stx/nano/Alert.hx", lineNumber : 94, className : "stx.nano.AlertLift", methodName : "resolve"});
	},function() {
		return stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,val);
	}));
};
stx_nano_AlertLift.ignore = function(self,fn) {
	return stx_nano_Alert.lift(tink_core_Future.map(self,function(report) {
		return stx_nano_ReportLift.ignore(report,fn);
	}));
};
stx_nano_AlertLift.anyway = function(self,fn) {
	return tink_core_Future.flatMap(self,function(report) {
		return stx_nano_Alert.prj(fn(report));
	});
};
stx_nano_AlertLift.toTinkPromise = function(self) {
	return stx_nano_AlertLift.fold(self,function(er) {
		return tink_core_Outcome.Failure(stx_nano_lift_LiftError.toTinkError(er));
	},function() {
		return tink_core_Outcome.Success(null);
	});
};
stx_nano_AlertLift.zip = function(self,that) {
	var out = tink_core_Future.map(stx_nano_lift_LiftNano.nano(stx_nano_Wildcard.__).Ft().zip(self,stx_nano_Alert.prj(that)),function(tp) {
		return stx_nano_ReportLift.concat(stx_nano_CoupleLift.fst(tp),stx_nano_CoupleLift.snd(tp));
	});
	return out;
};
var stx_nano_Alert = {};
stx_nano_Alert.unit = function() {
	return tink_core_Future.irreversible(function(cb) {
		cb(stx_nano_Report.unit());
	});
};
stx_nano_Alert.pure = function(e) {
	return tink_core_Future.irreversible(function(cb) {
		cb(stx_nano_Report.pure(e));
	});
};
stx_nano_Alert.make = function(self) {
	return tink_core_Future.irreversible(function(cb) {
		cb(self);
	});
};
stx_nano_Alert.any = function(arr) {
	return stx_nano_Alert.lift(stx_nano_lift_LiftNano.nano(stx_nano_Wildcard.__).Ft().bind_fold(stx_nano_Cluster.toIter(arr),function(next,memo) {
		return tink_core_Future.map(stx_nano_Alert.prj(next),function(report) {
			return stx_nano_ReportLift.concat(memo,report);
		});
	},stx_nano_Report.unit()));
};
stx_nano_Alert.seq = function(arr,fn) {
	return stx_nano_Alert.lift(stx_nano_lift_LiftNano.nano(stx_nano_Wildcard.__).Ft().bind_fold(stx_nano_Cluster.toIter(arr),function(next,memo) {
		var tmp;
		if(memo == null) {
			tmp = fn(next);
		} else {
			switch(memo._hx_index) {
			case 0:
				var v = memo.v;
				tmp = stx_nano_Report.alert(stx_fail_RefuseLift.report(v));
				break;
			case 1:
				tmp = fn(next);
				break;
			}
		}
		return tmp;
	},stx_nano_Report.unit()));
};
stx_nano_Alert._new = function(self) {
	var this1 = self;
	return this1;
};
stx_nano_Alert.lift = function(self) {
	return stx_nano_Alert._new(self);
};
stx_nano_Alert.prj = function(this1) {
	return this1;
};
stx_nano_Alert.get_self = function(this1) {
	return stx_nano_Alert.lift(this1);
};
stx_nano_Alert.errata = function(this1,fn) {
	return tink_core_Future.map(this1,function(report) {
		return stx_nano_Report.errata(report,fn);
	});
};
stx_nano_Alert.errate = function(this1,fn) {
	return stx_nano_Alert.errata(this1,function(err) {
		return stx_fail_Refuse.errate(err,fn);
	});
};
stx_nano_Alert.handle = function(this1,fn) {
	return this1.handle(fn);
};
var stx_nano_Blob = {};
stx_nano_Blob.asInt = function(this1) {
	return this1;
};
stx_nano_Blob.asString = function(this1) {
	return this1;
};
stx_nano_Blob.asBool = function(this1) {
	return this1;
};
stx_nano_Blob.asFloat = function(this1) {
	return this1;
};
stx_nano_Blob.typeof = function(this1) {
	return Type.typeof(this1);
};
var stx_nano_Bools = function() { };
$hxClasses["stx.nano.Bools"] = stx_nano_Bools;
stx_nano_Bools.__name__ = "stx.nano.Bools";
stx_nano_Bools.truthiness = function(str) {
	var self = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,str),StringTools.trim);
	var _g;
	if(self._hx_index == 0) {
		var v = self.v;
		_g = v;
	} else {
		_g = null;
	}
	if(_g == null) {
		return false;
	} else {
		switch(_g) {
		case "0":
			return false;
		case "1":
			return true;
		case "false":
			return false;
		case "true":
			return true;
		default:
			return true;
		}
	}
};
stx_nano_Bools.existishness = function(str) {
	if(str == null) {
		return false;
	} else if(str == "") {
		return false;
	} else {
		return true;
	}
};
var stx_nano_ByteSize = {};
stx_nano_ByteSize.endianness = function(this1) {
	switch(this1) {
	case "dbe":case "fbe":case "i16+":case "i24+":case "i32+":case "ui16+":case "ui24+":
		return haxe_ds_Option.Some(stx_nano_Endianness.BIG_ENDIAN);
	case "dle":case "fle":case "i16-":case "i24-":case "i32-":case "ui16-":case "ui24-":
		return haxe_ds_Option.Some(stx_nano_Endianness.LITTLE_ENDIAN);
	default:
		return haxe_ds_Option.None;
	}
};
stx_nano_ByteSize.get_length = function(this1) {
	switch(this1) {
	case "dbe":case "dle":
		return 8;
	case "fbe":case "fle":case "i32+":case "i32-":
		return 4;
	case "i8":
		return 1;
	case "i16+":case "i16-":case "ui16+":case "ui16-":
		return 2;
	case "i24+":case "i24-":case "ui24+":case "ui24-":
		return 3;
	default:
		return -1;
	}
};
stx_nano_ByteSize.get_width = function(this1) {
	var l = stx_nano_ByteSize.get_length(this1);
	if(l == -1) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(l);
	}
};
var stx_nano_Cell = {};
stx_nano_Cell.get_value = function(this1) {
	return this1.pop();
};
stx_nano_Cell._new = function(self) {
	var this1 = self;
	return this1;
};
stx_nano_Cell.lift = function(self) {
	var this1 = self;
	return this1;
};
stx_nano_Cell.make = function(fn) {
	return stx_nano_Cell.lift({ pop : fn});
};
stx_nano_Cell.many = function(self) {
	return stx_nano_Cell.lift({ pop : function() {
		var out = [];
		var _g_current = 0;
		var _g_array = self;
		while(_g_current < _g_array.length) {
			var x = _g_array[_g_current++];
			out.push(x());
		}
		return stx_nano_Cluster.lift(out);
	}});
};
stx_nano_Cell.toString = function(this1) {
	return "@:[" + Std.string(this1.pop()) + "]";
};
stx_nano_Cell.pure = function(v) {
	return stx_nano_Cell.make(function() {
		return v;
	});
};
var stx_nano_Char = {};
stx_nano_Char._new = function(self) {
	var this1 = self;
	return this1;
};
stx_nano_Char.code = function(this1) {
	return HxOverrides.cca(this1,0);
};
var stx_nano_CharsLift = function() { };
$hxClasses["stx.nano.CharsLift"] = stx_nano_CharsLift;
stx_nano_CharsLift.__name__ = "stx.nano.CharsLift";
stx_nano_CharsLift.parse_bool = function(self) {
	var vLower = self.toLowerCase();
	switch(vLower) {
	case "false":
		return haxe_ds_Option.Some(false);
	case "true":
		switch(self) {
		case "0":
			return haxe_ds_Option.Some(false);
		case "1":
			return haxe_ds_Option.Some(true);
		default:
			return haxe_ds_Option.Some(true);
		}
		break;
	default:
		switch(self) {
		case "0":
			return haxe_ds_Option.Some(false);
		case "1":
			return haxe_ds_Option.Some(true);
		default:
			return haxe_ds_Option.None;
		}
	}
};
stx_nano_CharsLift.parse_int = function(self) {
	return stx_pico_OptionLift.filter(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,Std.parseInt(self)),function(i) {
		return !isNaN(i);
	});
};
stx_nano_CharsLift.parse_float = function(self) {
	return stx_pico_OptionLift.filter(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,parseFloat(self)),function(i) {
		return !isNaN(i);
	});
};
stx_nano_CharsLift.starts_with = function(self,frag) {
	if(self.length >= frag.length && frag == HxOverrides.substr(self,0,frag.length)) {
		return true;
	} else {
		return false;
	}
};
stx_nano_CharsLift.ends_with = function(self,frag) {
	if(self.length >= frag.length && frag == HxOverrides.substr(self,self.length - frag.length,null)) {
		return true;
	} else {
		return false;
	}
};
stx_nano_CharsLift.contains = function(self,substr) {
	return self.indexOf(substr) != -1;
};
stx_nano_CharsLift.replace = function(self,sub,by) {
	return StringTools.replace(self,sub,by);
};
stx_nano_CharsLift.brackets = function(self,l,r) {
	return "" + l + self + r;
};
stx_nano_CharsLift.prepend = function(self,before) {
	return stx_nano_Chars.add(before,self);
};
stx_nano_CharsLift.append = function(self,after) {
	return stx_nano_Chars.add(self,after);
};
stx_nano_CharsLift.cca = function(self,i) {
	return HxOverrides.cca(self,i);
};
stx_nano_CharsLift.at = function(self,i) {
	return self.charAt(i);
};
stx_nano_CharsLift.chunk = function(self,len) {
	if(len == null) {
		len = 1;
	}
	var start = 0;
	var end = Math.round(Math.min(start + len,self.length));
	if(end == 0) {
		return [];
	} else {
		var prefix = HxOverrides.substr(self,start,end);
		var rest = HxOverrides.substr(self,end,null);
		return [prefix].concat(stx_nano_CharsLift.chunk(rest,len));
	}
};
stx_nano_CharsLift.chars = function(self) {
	var a = [];
	var _g = 0;
	var _g1 = self.length;
	while(_g < _g1) {
		var i = _g++;
		a.push(self.charAt(i));
	}
	return a;
};
stx_nano_CharsLift.AlphaUpperAlphaPattern = function() {
	return new EReg("-([a-z])([A-Z])","g");
};
stx_nano_CharsLift.PascalcaseToSnakecase = function(self) {
};
stx_nano_CharsLift.split = function(self,sep) {
	return self.split(sep);
};
stx_nano_CharsLift.strip_white = function(self) {
	var l = self.length;
	var i = 0;
	var sb_b = "";
	while(i < l) {
		if(!stx_nano_CharsLift.is_space(self,i)) {
			sb_b += Std.string(self.charAt(i));
		}
		++i;
	}
	return sb_b;
};
stx_nano_CharsLift.replace_recurse = function(self,sub,by) {
	if(sub.length == 0) {
		return stx_nano_CharsLift.replace(self,sub,by);
	}
	if(by.indexOf(sub) >= 0) {
		throw haxe_Exception.thrown("Infinite recursion");
	}
	var ns = self.toString();
	var olen = 0;
	var nlen = ns.length;
	while(olen != nlen) {
		olen = ns.length;
		stx_nano_CharsLift.replace(sub,by,ns);
		nlen = ns.length;
	}
	return ns;
};
stx_nano_CharsLift.iterator = function(self) {
	var index = 0;
	return { hasNext : function() {
		return index < self.length;
	}, next : function() {
		if(index < self.length) {
			index += 1;
			return HxOverrides.substr(self,index - 1,1);
		} else {
			var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/nano/Chars.hx", lineNumber : 188, className : "stx.nano.CharsLift", methodName : "iterator"});
			throw haxe_Exception.thrown(stx_fail_Refuse.make(haxe_ds_Option.Some(stx_fail_DeclineSum.INTERIOR(stx_nano_CTR.apply(function(_) {
				return stx_nano_Digests.e_undefined(_);
			},stx_Nano.digests(stx_nano_Wildcard.__)))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1)));
		}
	}};
};
stx_nano_CharsLift.uncapitalize_first_letter = function(self) {
	self = HxOverrides.substr(self,0,1).toLowerCase() + HxOverrides.substr(self,1,self.length);
	return self;
};
stx_nano_CharsLift.capitalize_first_letter = function(self) {
	self = HxOverrides.substr(self,0,1).toUpperCase() + HxOverrides.substr(self,1,self.length);
	return self;
};
stx_nano_CharsLift.capitalize_hyphens = function(self) {
	return stx_nano_CharsLift.capitalize_delim(self,"-");
};
stx_nano_CharsLift.capitalize_delim = function(self,d) {
	var r = self;
	var n = r.indexOf(d);
	while(n != -1) {
		var before = HxOverrides.substr(r,0,n);
		var after = HxOverrides.substr(r,n + 1,r.length);
		r = before + stx_nano_CharsLift.capitalize_first_letter(after);
		n = r.indexOf(d,n + 1);
	}
	return r;
};
stx_nano_CharsLift.to_dashes = function(self,toLower) {
	if(toLower == null) {
		toLower = true;
	}
	var self1 = new EReg("([a-zA-Z])(?=[A-Z])","g").map(self,function(re) {
		return "" + re.matched(1) + "-";
	});
	if(toLower == true) {
		self1 = self1.toLowerCase();
	}
	return self1;
};
stx_nano_CharsLift.replace_vars = function(self,params) {
	if(params != null) {
		var h = params.h;
		var k_h = h;
		var k_keys = Object.keys(h);
		var k_length = k_keys.length;
		var k_current = 0;
		while(k_current < k_length) {
			var k = k_keys[k_current++];
			self = StringTools.replace(self,"${" + k + "}",params.h[k]);
		}
	}
	return self;
};
stx_nano_CharsLift.is_space = function(self,pos) {
	var c = HxOverrides.cca(self,pos);
	if(!(c >= 9 && c <= 13)) {
		return c == 32;
	} else {
		return true;
	}
};
stx_nano_CharsLift.is_defined = function(self) {
	return self != "";
};
stx_nano_CharsLift.chr = function(i) {
	return String.fromCodePoint(i);
};
stx_nano_CharsLift.underscore = function(s) {
	var _this_r = new RegExp("::","g".split("u").join(""));
	s = s.replace(_this_r,"/");
	var _this_r = new RegExp("([A-Z]+)([A-Z][a-z])","g".split("u").join(""));
	s = s.replace(_this_r,"$1_$2");
	var _this_r = new RegExp("([a-z\\d])([A-Z])","g".split("u").join(""));
	s = s.replace(_this_r,"$1_$2");
	var _this_r = new RegExp("-","g".split("u").join(""));
	s = s.replace(_this_r,"_");
	return s.toLowerCase();
};
stx_nano_CharsLift.after = function(self,sub) {
	var idx = self.indexOf(sub);
	if(idx < 0) {
		return "";
	}
	return self.substring(idx + sub.length,self.length);
};
stx_nano_CharsLift.before = function(self,sub) {
	return self.substring(0,self.indexOf(sub));
};
stx_nano_CharsLift.quote = function(str) {
	return "\"" + str + "\"";
};
stx_nano_CharsLift.requote = function(self) {
	return stx_nano_CharsLift.replace(self,"\"","\\\"");
};
stx_nano_CharsLift.truncate = function(self,int) {
	return HxOverrides.substr(self,0,int);
};
stx_nano_CharsLift.rdropn = function(self,int) {
	return HxOverrides.substr(self,0,self.length - int);
};
stx_nano_CharsLift.ldropn = function(self,int) {
	return HxOverrides.substr(self,int,null);
};
var stx_nano_Chars = {};
stx_nano_Chars.lift = function(self) {
	return stx_nano_Chars._new(self);
};
stx_nano_Chars._new = function(self) {
	var this1 = self;
	return this1;
};
stx_nano_Chars.char = function(this1,int) {
	return stx_nano_Char._new(this1.charAt(int));
};
stx_nano_Chars.add = function(this1,that) {
	return this1 + that;
};
var stx_nano_ChunkSum = $hxEnums["stx.nano.ChunkSum"] = { __ename__:"stx.nano.ChunkSum",__constructs__:null
	,Val: ($_=function(v) { return {_hx_index:0,v:v,__enum__:"stx.nano.ChunkSum",toString:$estr}; },$_._hx_name="Val",$_.__params__ = ["v"],$_)
	,Tap: {_hx_name:"Tap",_hx_index:1,__enum__:"stx.nano.ChunkSum",toString:$estr}
	,End: ($_=function(err) { return {_hx_index:2,err:err,__enum__:"stx.nano.ChunkSum",toString:$estr}; },$_._hx_name="End",$_.__params__ = ["err"],$_)
};
stx_nano_ChunkSum.__constructs__ = [stx_nano_ChunkSum.Val,stx_nano_ChunkSum.Tap,stx_nano_ChunkSum.End];
var stx_nano_ChunkLift = function() { };
$hxClasses["stx.nano.ChunkLift"] = stx_nano_ChunkLift;
stx_nano_ChunkLift.__name__ = "stx.nano.ChunkLift";
stx_nano_ChunkLift.def = function(self,fn) {
	switch(self._hx_index) {
	case 0:
		var v = self.v;
		return v;
	case 1:
		return fn();
	case 2:
		var e = self.err;
		throw haxe_Exception.thrown(e);
	}
};
stx_nano_ChunkLift.defv = function(self,t) {
	switch(self._hx_index) {
	case 0:
		var v = self.v;
		return v;
	case 1:
		return t;
	case 2:
		var e = self.err;
		throw haxe_Exception.thrown(e);
	}
};
stx_nano_ChunkLift.fold = function(chk,val,ers,tap) {
	switch(chk._hx_index) {
	case 0:
		var v = chk.v;
		return val(v);
	case 1:
		return tap();
	case 2:
		var e = chk.err;
		return ers(e);
	}
};
stx_nano_ChunkLift.map = function(self,fn) {
	switch(self._hx_index) {
	case 0:
		var v = self.v;
		var o = fn(v);
		return stx_nano_Chunk.pure(o);
	case 1:
		return stx_nano_ChunkSum.Tap;
	case 2:
		var err = self.err;
		return stx_nano_ChunkSum.End(err);
	}
};
stx_nano_ChunkLift.flatten = function(self) {
	return stx_nano_ChunkLift.flat_map(self,function(x) {
		return x;
	});
};
stx_nano_ChunkLift.flat_map = function(self,fn) {
	switch(self._hx_index) {
	case 0:
		var v = self.v;
		return fn(v);
	case 1:
		return stx_nano_ChunkSum.Tap;
	case 2:
		var err = self.err;
		return stx_nano_ChunkSum.End(err);
	}
};
stx_nano_ChunkLift.recover = function(self,fn) {
	switch(self._hx_index) {
	case 0:
		var v = self.v;
		return stx_nano_ChunkSum.Val(v);
	case 1:
		return stx_nano_ChunkSum.Tap;
	case 2:
		var err = self.err;
		return fn(err);
	}
};
stx_nano_ChunkLift.errata = function(self,fn) {
	return stx_nano_ChunkLift.recover(self,function(x) {
		return stx_nano_ChunkSum.End(fn(x));
	});
};
stx_nano_ChunkLift.errate = function(self,fn) {
	return stx_nano_ChunkLift.recover(self,function(x) {
		return stx_nano_ChunkSum.End(stx_fail_Refuse.errate(x,fn));
	});
};
stx_nano_ChunkLift.zip = function(self,that) {
	switch(self._hx_index) {
	case 0:
		var v = self.v;
		switch(that._hx_index) {
		case 0:
			var v0 = that.v;
			return stx_nano_ChunkSum.Val(stx_nano_lift_LiftNano.toCouple(stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,v,v0)));
		case 1:
			return stx_nano_ChunkSum.Tap;
		case 2:
			var err = that.err;
			return stx_nano_ChunkSum.End(err);
		}
		break;
	case 1:
		return stx_nano_ChunkSum.Tap;
	case 2:
		var err = self.err;
		if(that._hx_index == 2) {
			var err0 = that.err;
			return stx_nano_ChunkSum.End(stx_fail_Refuse.concat(err,err0));
		} else {
			return stx_nano_ChunkSum.Tap;
		}
		break;
	}
};
stx_nano_ChunkLift.option = function(chk) {
	switch(chk._hx_index) {
	case 0:
		var v = chk.v;
		return haxe_ds_Option.Some(v);
	case 1:
		return haxe_ds_Option.None;
	case 2:
		var _g = chk.err;
		return haxe_ds_Option.None;
	}
};
stx_nano_ChunkLift.is_defined = function(self) {
	switch(self._hx_index) {
	case 0:
		var v = self.v;
		return true;
	case 1:
		return false;
	case 2:
		var e = self.err;
		return false;
	}
};
stx_nano_ChunkLift.opt_else = function(self,_if,_else) {
	switch(self._hx_index) {
	case 0:
		var v = self.v;
		return _if(v);
	case 1:
		return _else(haxe_ds_Option.None);
	case 2:
		var e = self.err;
		return _else(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,e));
	}
};
stx_nano_ChunkLift.fudge = function(self,pos) {
	if(self == null) {
		throw haxe_Exception.thrown("no self to push on");
	} else {
		switch(self._hx_index) {
		case 0:
			var v = self.v;
			return v;
		case 1:
			throw haxe_Exception.thrown("Value not found on force");
		case 2:
			var _g = self.err;
			if(_g == null) {
				throw haxe_Exception.thrown("Value not found on force");
			} else {
				var err = _g;
				throw haxe_Exception.thrown(err);
			}
			break;
		}
	}
};
stx_nano_ChunkLift.iterator = function(self) {
	var done = false;
	return { hasNext : function() {
		switch(self._hx_index) {
		case 0:
			var _g = self.v;
			return !done;
		case 1:
			var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/nano/Chunk.hx", lineNumber : 232, className : "stx.nano.ChunkLift", methodName : "iterator"});
			stx_fail_Refuse.make(haxe_ds_Option.Some(stx_fail_DeclineSum.INTERIOR(stx_nano_CTR.apply(function(e) {
				return stx_nano_Digests.e_undefined(e);
			},stx_Nano.digests(stx_nano_Wildcard.__)))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1)).raise();
			return false;
		case 2:
			var e = self.err;
			if(e != null) {
				e.raise();
			}
			return false;
		}
	}, next : function() {
		done = true;
		if(self._hx_index == 0) {
			var v = self.v;
			return v;
		} else {
			return null;
		}
	}};
};
stx_nano_ChunkLift.secure = function(self) {
	var tmp;
	switch(self._hx_index) {
	case 0:
		var v = self.v;
		tmp = v == null ? stx_nano_ChunkSum.Tap : stx_nano_ChunkSum.Val(v);
		break;
	case 1:
		tmp = stx_nano_ChunkSum.Tap;
		break;
	case 2:
		var e = self.err;
		tmp = stx_nano_ChunkSum.End(e);
		break;
	}
	return tmp;
};
stx_nano_ChunkLift.toRes = function(self) {
	var tmp;
	switch(self._hx_index) {
	case 0:
		var v = self.v;
		tmp = stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,v);
		break;
	case 1:
		tmp = stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,function(f) {
			return stx_fail_Refuse.make(haxe_ds_Option.Some(stx_fail_DeclineSum.INTERIOR(stx_nano_CTR.apply(function(e) {
				return stx_nano_Digests.e_undefined(e);
			},stx_Nano.digests(stx_nano_Wildcard.__)))),haxe_ds_Option.None,stx_pico_Option.fromNullT(f));
		},{ fileName : "stx/nano/Chunk.hx", lineNumber : 255, className : "stx.nano.ChunkLift", methodName : "toRes"});
		break;
	case 2:
		var e = self.err;
		tmp = stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(e),{ fileName : "stx/nano/Chunk.hx", lineNumber : 254, className : "stx.nano.ChunkLift", methodName : "toRes"});
		break;
	}
	return tmp;
};
stx_nano_ChunkLift.toResOpt = function(self) {
	var tmp;
	switch(self._hx_index) {
	case 0:
		var v = self.v;
		tmp = stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,haxe_ds_Option.Some(v));
		break;
	case 1:
		tmp = stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,haxe_ds_Option.None);
		break;
	case 2:
		var e = self.err;
		tmp = stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(e),{ fileName : "stx/nano/Chunk.hx", lineNumber : 261, className : "stx.nano.ChunkLift", methodName : "toResOpt"});
		break;
	}
	return tmp;
};
stx_nano_ChunkLift.toError = function(self) {
	if(self._hx_index == 2) {
		var _g = self.err;
		if(_g == null) {
			return haxe_ds_Option.None;
		} else {
			var e = _g;
			return haxe_ds_Option.Some(e);
		}
	} else {
		return haxe_ds_Option.None;
	}
};
stx_nano_ChunkLift.or = function(self,thunk) {
	var tmp;
	switch(self._hx_index) {
	case 0:
		var v = self.v;
		tmp = stx_nano_ChunkSum.Val(v);
		break;
	case 1:
		tmp = thunk();
		break;
	case 2:
		var e = self.err;
		tmp = stx_nano_ChunkSum.End(e);
		break;
	}
	return tmp;
};
var stx_nano_Chunk = {};
stx_nano_Chunk._new = function(self) {
	var this1 = self;
	return this1;
};
stx_nano_Chunk.fromRefuse = function(e) {
	return stx_nano_ChunkSum.End(e);
};
stx_nano_Chunk.fromError = function(e) {
	return stx_nano_ChunkSum.End(stx_fail_Refuse.lift(stx_fail_Error.errate(e,stx_fail_DeclineSum.EXTERIOR)));
};
stx_nano_Chunk.fromNull_T = function(v) {
	return stx_nano_Chunk.pure(v);
};
stx_nano_Chunk.lift = function(v) {
	return stx_nano_Chunk._new(v);
};
stx_nano_Chunk.pure = function(c) {
	if(c == null) {
		return stx_nano_ChunkSum.Tap;
	} else {
		return stx_nano_ChunkSum.Val(c);
	}
};
stx_nano_Chunk.unit = function() {
	return stx_nano_ChunkSum.Tap;
};
stx_nano_Chunk.fromTinkOutcome = function(outcome) {
	var tmp;
	switch(outcome._hx_index) {
	case 0:
		var v = outcome.data;
		tmp = stx_nano_Chunk.pure(v);
		break;
	case 1:
		var e = outcome.failure;
		tmp = stx_nano_ChunkSum.End(stx_fail_Refuse.lift(stx_fail_Error.errate(e.toError(),stx_fail_DeclineSum.EXTERIOR)));
		break;
	}
	return stx_nano_Chunk._new(tmp);
};
stx_nano_Chunk.fromOption = function(opt) {
	switch(opt._hx_index) {
	case 0:
		var v = opt.v;
		return stx_nano_ChunkSum.Val(v);
	case 1:
		return stx_nano_ChunkSum.Tap;
	}
};
stx_nano_Chunk.fromOptionRefuse = function(opt) {
	switch(opt._hx_index) {
	case 0:
		var v = opt.v;
		return stx_nano_ChunkSum.End(v);
	case 1:
		return stx_nano_ChunkSum.Tap;
	}
};
stx_nano_Chunk.all = function(arr,TapFail) {
	return stx_lift_ArrayLift.lfold(arr,function(next,memo) {
		switch(memo._hx_index) {
		case 0:
			var _g = memo.v;
			switch(next._hx_index) {
			case 0:
				var next1 = next.v;
				var memo1 = _g;
				memo1.push(next1);
				return stx_nano_ChunkSum.Val(memo1);
			case 1:
				var v = _g;
				if(TapFail == null) {
					return stx_nano_ChunkSum.Tap;
				} else {
					return stx_nano_ChunkSum.End(TapFail);
				}
				break;
			case 2:
				var e = next.err;
				var memo1 = _g;
				return stx_nano_ChunkSum.End(e);
			}
			break;
		case 2:
			var _g = memo.err;
			switch(next._hx_index) {
			case 1:
				var e = _g;
				var self = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,e),function(e) {
					return stx_fail_Refuse.concat(e,TapFail);
				});
				var err;
				if(self._hx_index == 0) {
					var v = self.v;
					err = v;
				} else {
					err = TapFail;
				}
				return stx_nano_ChunkSum.End(err);
			case 2:
				var e0 = next.err;
				var e = _g;
				var err = stx_lift_ArrayLift.lfold(stx_pico_OptionLift.toArray(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,e)).concat(stx_pico_OptionLift.toArray(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,e0))),function(nx,mm) {
					return stx_fail_Refuse.concat(mm,nx);
				},TapFail);
				return stx_nano_ChunkSum.End(err);
			default:
				var e = _g;
				return stx_nano_ChunkSum.End(e);
			}
			break;
		default:
			if(TapFail == null) {
				return stx_nano_ChunkSum.Tap;
			} else {
				return stx_nano_ChunkSum.End(TapFail);
			}
		}
	},stx_nano_ChunkSum.Val([]));
};
stx_nano_Chunk.available = function(rest) {
	return stx_lift_ArrayLift.lfold(rest,function(next,memo) {
		if(memo._hx_index == 0) {
			var xs = memo.v;
			switch(next._hx_index) {
			case 0:
				var x = next.v;
				xs.push(x);
				return stx_nano_ChunkSum.Val(xs);
			case 1:
				return stx_nano_ChunkSum.Val(xs);
			case 2:
				var e = next.err;
				return stx_nano_ChunkSum.End(e);
			}
		} else {
			return memo;
		}
	},stx_nano_ChunkSum.Val([]));
};
stx_nano_Chunk.get_self = function(this1) {
	return this1;
};
var stx_nano_Clustered = {};
stx_nano_Clustered._new = function(self) {
	var this1 = self;
	return this1;
};
stx_nano_Clustered.lift = function(self) {
	return stx_nano_Clustered._new(self);
};
stx_nano_Clustered.prj = function(this1) {
	return this1;
};
stx_nano_Clustered.get_self = function(this1) {
	return stx_nano_Clustered.lift(this1);
};
stx_nano_Clustered.toCluster = function(this1) {
	return stx_nano_Cluster.lift(this1);
};
stx_nano_Clustered.fromT = function(v) {
	return stx_nano_Clustered.lift(stx_nano_Cluster.prj(stx_nano_Cluster.lift([v])));
};
var stx_nano_CompilerTargetSum = $hxEnums["stx.nano.CompilerTargetSum"] = { __ename__:"stx.nano.CompilerTargetSum",__constructs__:null
	,Js: {_hx_name:"Js",_hx_index:0,__enum__:"stx.nano.CompilerTargetSum",toString:$estr}
	,Lua: {_hx_name:"Lua",_hx_index:1,__enum__:"stx.nano.CompilerTargetSum",toString:$estr}
	,Swf: {_hx_name:"Swf",_hx_index:2,__enum__:"stx.nano.CompilerTargetSum",toString:$estr}
	,Neko: {_hx_name:"Neko",_hx_index:3,__enum__:"stx.nano.CompilerTargetSum",toString:$estr}
	,Php: {_hx_name:"Php",_hx_index:4,__enum__:"stx.nano.CompilerTargetSum",toString:$estr}
	,Cpp: {_hx_name:"Cpp",_hx_index:5,__enum__:"stx.nano.CompilerTargetSum",toString:$estr}
	,Cppia: {_hx_name:"Cppia",_hx_index:6,__enum__:"stx.nano.CompilerTargetSum",toString:$estr}
	,Cs: {_hx_name:"Cs",_hx_index:7,__enum__:"stx.nano.CompilerTargetSum",toString:$estr}
	,Java: {_hx_name:"Java",_hx_index:8,__enum__:"stx.nano.CompilerTargetSum",toString:$estr}
	,Python: {_hx_name:"Python",_hx_index:9,__enum__:"stx.nano.CompilerTargetSum",toString:$estr}
	,Hl: {_hx_name:"Hl",_hx_index:10,__enum__:"stx.nano.CompilerTargetSum",toString:$estr}
	,Interp: {_hx_name:"Interp",_hx_index:11,__enum__:"stx.nano.CompilerTargetSum",toString:$estr}
};
stx_nano_CompilerTargetSum.__constructs__ = [stx_nano_CompilerTargetSum.Js,stx_nano_CompilerTargetSum.Lua,stx_nano_CompilerTargetSum.Swf,stx_nano_CompilerTargetSum.Neko,stx_nano_CompilerTargetSum.Php,stx_nano_CompilerTargetSum.Cpp,stx_nano_CompilerTargetSum.Cppia,stx_nano_CompilerTargetSum.Cs,stx_nano_CompilerTargetSum.Java,stx_nano_CompilerTargetSum.Python,stx_nano_CompilerTargetSum.Hl,stx_nano_CompilerTargetSum.Interp];
var stx_nano_CompilerTargetLift = function() { };
$hxClasses["stx.nano.CompilerTargetLift"] = stx_nano_CompilerTargetLift;
stx_nano_CompilerTargetLift.__name__ = "stx.nano.CompilerTargetLift";
stx_nano_CompilerTargetLift.list = function() {
	return stx_nano_Enum.constructs(stx_nano_Enum._new(stx_nano_CompilerTargetSum));
};
stx_nano_CompilerTargetLift.toBuildDirective = function(target) {
	switch(target._hx_index) {
	case 0:
		return haxe_ds_Option.Some("js");
	case 1:
		return haxe_ds_Option.Some("lua");
	case 2:
		return haxe_ds_Option.Some("swf");
	case 3:
		return haxe_ds_Option.Some("neko");
	case 4:
		return haxe_ds_Option.Some("php");
	case 5:
		return haxe_ds_Option.Some("cpp");
	case 6:
		return haxe_ds_Option.Some("cppia");
	case 7:
		return haxe_ds_Option.Some("cs");
	case 8:
		return haxe_ds_Option.Some("java");
	case 9:
		return haxe_ds_Option.Some("python");
	case 10:
		return haxe_ds_Option.Some("hl");
	case 11:
		return haxe_ds_Option.Some("interp");
	}
};
stx_nano_CompilerTargetLift.uses_directory = function(self) {
	switch(self._hx_index) {
	case 4:case 5:case 7:case 8:
		return true;
	case 0:case 1:case 2:case 3:case 6:case 9:case 10:case 11:
		return false;
	}
};
stx_nano_CompilerTargetLift.uses_file = function(self) {
	switch(self._hx_index) {
	case 0:case 1:case 2:case 3:case 6:case 9:case 10:
		return true;
	case 4:case 5:case 7:case 8:case 11:
		return false;
	}
};
stx_nano_CompilerTargetLift.extension = function(self) {
	switch(self._hx_index) {
	case 0:
		return haxe_ds_Option.Some("js");
	case 1:
		return haxe_ds_Option.Some("lua");
	case 2:
		return haxe_ds_Option.Some("swf");
	case 3:
		return haxe_ds_Option.Some("n");
	case 4:
		return haxe_ds_Option.Some("php");
	case 5:
		return haxe_ds_Option.None;
	case 6:
		return haxe_ds_Option.Some("cppia");
	case 7:
		return haxe_ds_Option.None;
	case 8:
		return haxe_ds_Option.None;
	case 9:
		return haxe_ds_Option.Some("py");
	case 10:
		return haxe_ds_Option.Some("hl");
	case 11:
		return haxe_ds_Option.None;
	}
};
stx_nano_CompilerTargetLift.canonical = function(target) {
	return stx_nano_EnumValue.ctr(stx_nano_EnumValue._new(stx_nano_CompilerTarget.prj(target)));
};
var stx_nano_CompilerTarget = {};
stx_nano_CompilerTarget._new = function(self) {
	var this1 = self;
	return this1;
};
stx_nano_CompilerTarget.lift = function(self) {
	return stx_nano_CompilerTarget._new(self);
};
stx_nano_CompilerTarget.prj = function(this1) {
	return this1;
};
stx_nano_CompilerTarget.get_self = function(this1) {
	return stx_nano_CompilerTarget.lift(this1);
};
stx_nano_CompilerTarget.fromString = function(str) {
	switch(str) {
	case "Cppia":
		return stx_nano_CompilerTargetSum.Cppia;
	case "cpp":
		return stx_nano_CompilerTargetSum.Cpp;
	case "cs":
		return stx_nano_CompilerTargetSum.Cs;
	case "hl":
		return stx_nano_CompilerTargetSum.Hl;
	case "interp":
		return stx_nano_CompilerTargetSum.Interp;
	case "java":
		return stx_nano_CompilerTargetSum.Java;
	case "js":
		return stx_nano_CompilerTargetSum.Js;
	case "lua":
		return stx_nano_CompilerTargetSum.Lua;
	case "neko":
		return stx_nano_CompilerTargetSum.Neko;
	case "php":
		return stx_nano_CompilerTargetSum.Php;
	case "python":
		return stx_nano_CompilerTargetSum.Python;
	case "swf":
		return stx_nano_CompilerTargetSum.Swf;
	default:
		haxe_Log.trace(str,{ fileName : "stx/nano/CompilerTarget.hx", lineNumber : 50, className : "stx.nano._CompilerTarget.CompilerTarget_Impl_", methodName : "fromString"});
		var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/nano/CompilerTarget.hx", lineNumber : 51, className : "stx.nano._CompilerTarget.CompilerTarget_Impl_", methodName : "fromString"});
		throw haxe_Exception.thrown(stx_fail_Refuse.make(haxe_ds_Option.Some(stx_fail_DeclineSum.INTERIOR(stx_nano_CTR.apply(function(_) {
			return stx_nano_Digests.e_undefined(_);
		},stx_Nano.digests(stx_nano_Wildcard.__)))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1)));
	}
};
var stx_nano_ContractLift = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["stx.nano.ContractLift"] = stx_nano_ContractLift;
stx_nano_ContractLift.__name__ = "stx.nano.ContractLift";
stx_nano_ContractLift.lift = function(self) {
	return stx_nano_Contract.lift(self);
};
stx_nano_ContractLift.toJsPromise = function(self) {
	var promise = new Promise(function(resolve,reject) {
		try {
			stx_nano_Contract.handle(self,function(res) {
				switch(res._hx_index) {
				case 0:
					var v = res.v;
					resolve(stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,haxe_ds_Option.Some(v)));
					break;
				case 1:
					resolve(stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,haxe_ds_Option.None));
					break;
				case 2:
					var e = res.err;
					reject(stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(e),{ fileName : "stx/nano/Contract.hx", lineNumber : 161, className : "stx.nano.ContractLift", methodName : "toJsPromise"}));
					break;
				}
			});
		} catch( _g ) {
			var _g1 = haxe_Exception.caught(_g).unwrap();
			if(js_Boot.__implements(_g1,stx_fail_ErrorApi)) {
				var e = _g1;
				var reject1 = reject;
				var _g2 = stx_fail_Refuse.catcher(e);
				var promise;
				switch(_g2._hx_index) {
				case 0:
					var e = _g2.v;
					promise = stx_fail_ErrorLift.digest_with(e,function(x) {
						return Std.string(x);
					});
					break;
				case 1:
					var e = _g2.v;
					promise = e;
					break;
				}
				reject1(promise);
			} else if(((_g1) instanceof Error)) {
				var e = _g1;
				var reject1 = reject;
				var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/nano/Contract.hx", lineNumber : 176, className : "stx.nano.ContractLift", methodName : "toJsPromise"});
				reject1(stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.make(haxe_ds_Option.Some(stx_fail_DeclineSum.INTERIOR(stx_nano_CTR.apply(function(_) {
					return stx_nano_Digests.e_js_error(_,e);
				},stx_Nano.digests(stx_nano_Wildcard.__)))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1))),{ fileName : "stx/nano/Contract.hx", lineNumber : 176, className : "stx.nano.ContractLift", methodName : "toJsPromise"}));
			} else {
				throw _g;
			}
		}
	});
	return promise;
};
stx_nano_ContractLift.zip = function(self,that) {
	var out = tink_core_Future.map(stx_nano_lift_LiftNano.nano(stx_nano_Wildcard.__).Ft().zip(self,that),function(tp) {
		return stx_nano_ChunkLift.zip(stx_nano_CoupleLift.fst(tp),stx_nano_CoupleLift.snd(tp));
	});
	return out;
};
stx_nano_ContractLift.map = function(self,fn) {
	return stx_nano_ContractLift.lift(tink_core_Future.map(self,function(x) {
		switch(x._hx_index) {
		case 0:
			var v = x.v;
			return stx_nano_ChunkSum.Val(fn(v));
		case 1:
			return stx_nano_ChunkSum.Tap;
		case 2:
			var err = x.err;
			return stx_nano_ChunkSum.End(err);
		}
	}));
};
stx_nano_ContractLift.flat_map = function(self,fn) {
	var ft = stx_nano_Contract.prj(self);
	return tink_core_Future.flatMap(ft,function(x) {
		switch(x._hx_index) {
		case 0:
			var v = x.v;
			return stx_nano_Contract.prj(fn(v));
		case 1:
			return stx_nano_Contract.prj(stx_nano_Contract._new(tink_core_Future.irreversible(function(cb) {
				cb(stx_nano_ChunkSum.Tap);
			})));
		case 2:
			var err = x.err;
			return stx_nano_Contract.prj(stx_nano_Contract.fromChunk(stx_nano_ChunkSum.End(err)));
		}
	});
};
stx_nano_ContractLift.flat_fold = function(self,val,ers,nil) {
	return tink_core_Future.flatMap(self,function(chunk) {
		switch(chunk._hx_index) {
		case 0:
			var v = chunk.v;
			return val(v);
		case 1:
			return nil();
		case 2:
			var e = chunk.err;
			return ers(e);
		}
	});
};
stx_nano_ContractLift.fold = function(self,val,ers,nil) {
	var val1 = val;
	var ers1 = ers;
	var tap = nil;
	var tmp = function(chk) {
		switch(chk._hx_index) {
		case 0:
			var v = chk.v;
			return val1(v);
		case 1:
			return tap();
		case 2:
			var e = chk.err;
			return ers1(e);
		}
	};
	return tink_core_Future.map(stx_nano_Contract.prj(self),tmp);
};
stx_nano_ContractLift.recover = function(self,fn) {
	return stx_nano_ContractLift.lift(stx_nano_ContractLift.fold(self,function(x) {
		return stx_nano_ChunkSum.Val(x);
	},function(e) {
		return fn(e);
	},function() {
		return stx_nano_ChunkSum.Tap;
	}));
};
stx_nano_ContractLift.adjust = function(self,fn) {
	return stx_nano_ContractLift.lift(stx_nano_ContractLift.fold(self,function(x) {
		return fn(x);
	},function(v) {
		return stx_nano_ChunkSum.End(v);
	},function() {
		return stx_nano_ChunkSum.Tap;
	}));
};
stx_nano_ContractLift.receive = function(self,fn) {
	return tink_core_Future.map(stx_nano_Contract.prj(self),function(chk) {
		switch(chk._hx_index) {
		case 0:
			var v = chk.v;
			fn(v);
			return haxe_ds_Option.None;
		case 1:
			return haxe_ds_Option.None;
		case 2:
			var e = chk.err;
			return stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,e);
		}
	});
};
stx_nano_ContractLift.now = function(self) {
	var out = null;
	stx_nano_Contract.prj(self).handle(function(v) {
		out = v;
	});
	if(out == null) {
		out = stx_nano_ChunkSum.Tap;
	}
	return out;
};
stx_nano_ContractLift.errata = function(self,fn) {
	return tink_core_Future.map(stx_nano_Contract.prj(self),function(chk) {
		return stx_nano_ChunkLift.errata(chk,fn);
	});
};
stx_nano_ContractLift.errate = function(self,fn) {
	return stx_nano_ContractLift.errata(self,function(x) {
		return stx_fail_Refuse.errate(x,fn);
	});
};
stx_nano_ContractLift.tap = function(self,fn,pos) {
	return stx_nano_ContractLift.lift(tink_core_Future.map(stx_nano_Contract.prj(self),function(x) {
		fn(x,pos);
		return x;
	}));
};
stx_nano_ContractLift.__super__ = stx_pico_Clazz;
stx_nano_ContractLift.prototype = $extend(stx_pico_Clazz.prototype,{
	__class__: stx_nano_ContractLift
});
var stx_nano_Contract = $hx_exports["stx"]["nano"]["Contract"] = {};
stx_nano_Contract._new = function(v) {
	var this1 = v;
	return this1;
};
stx_nano_Contract.lift = function(self) {
	return stx_nano_Contract._new(self);
};
stx_nano_Contract.unit = function() {
	return stx_nano_Contract.pure(stx_nano_ChunkSum.Tap);
};
stx_nano_Contract.sync = function(ch) {
	return stx_nano_Contract.lift(tink_core_Future.irreversible(function(cb) {
		cb(ch);
	}));
};
stx_nano_Contract.pure = function(ch) {
	return tink_core_Future.irreversible(function(f) {
		f(ch);
	});
};
stx_nano_Contract.accept = function(ch) {
	return tink_core_Future.irreversible(function(f) {
		f(stx_nano_ChunkSum.Val(ch));
	});
};
stx_nano_Contract.reject = function(ch) {
	return tink_core_Future.irreversible(function(f) {
		f(stx_nano_ChunkSum.End(ch));
	});
};
stx_nano_Contract.bind_fold = function(it,fm,start) {
	return stx_nano_Contract._new(stx_nano_lift_LiftNano.nano(stx_nano_Wildcard.__).Ft().bind_fold(it,function(next,memo) {
		switch(memo._hx_index) {
		case 0:
			var v = memo.v;
			return stx_nano_Contract.prj(fm(next,v));
		case 1:
			return stx_nano_Contract.prj(stx_nano_Contract.unit());
		case 2:
			var err = memo.err;
			return stx_nano_Contract.prj(stx_nano_Contract.end(err));
		}
	},stx_nano_ChunkSum.Val(start)));
};
stx_nano_Contract.lazy = function(fn) {
	return stx_nano_Contract.lift(tink_core_Future.irreversible(function(f) {
		f(stx_nano_ChunkSum.Val(fn()));
	}));
};
stx_nano_Contract.fromLazyError = function(fn) {
	return stx_nano_Contract.fromLazyChunk(function() {
		return stx_nano_ChunkSum.End(stx_fail_Refuse.lift(stx_fail_Error.errate(fn(),stx_fail_DeclineSum.EXTERIOR)));
	});
};
stx_nano_Contract.fromLazyRefuse = function(fn) {
	return stx_nano_Contract.fromLazyChunk(function() {
		return stx_nano_ChunkSum.End(fn());
	});
};
stx_nano_Contract.fromLazyChunk = function(fn) {
	return tink_core_Future.irreversible(function(f) {
		f(fn());
	});
};
stx_nano_Contract.end = function(e) {
	return stx_nano_Contract.pure(stx_nano_ChunkSum.End(e));
};
stx_nano_Contract.tap = function() {
	return stx_nano_Contract.unit();
};
stx_nano_Contract.fromChunk = function(chk) {
	return tink_core_Future.irreversible(function(cb) {
		cb(chk);
	});
};
stx_nano_Contract.fromOption = function(m) {
	var val;
	switch(m._hx_index) {
	case 0:
		var t = m.v;
		val = stx_nano_ChunkSum.Val(t);
		break;
	case 1:
		val = stx_nano_ChunkSum.Tap;
		break;
	}
	var val1 = val;
	return stx_nano_Contract.fromChunk(val1);
};
stx_nano_Contract.fromRes = function(self) {
	var tmp;
	switch(self._hx_index) {
	case 0:
		var t = self.t;
		tmp = stx_nano_ChunkSum.Val(t);
		break;
	case 1:
		var e = self.e;
		tmp = stx_nano_ChunkSum.End(e);
		break;
	}
	return stx_nano_Contract.pure(tmp);
};
stx_nano_Contract.toTinkSurprise = function(this1) {
	return stx_nano_Contract._.fold(this1,tink_core_Outcome.Success,function(e) {
		var tmp = e.toString();
		var self = e.get_data();
		var tmp1;
		if(self._hx_index == 0) {
			var v = self.v;
			tmp1 = v;
		} else {
			tmp1 = null;
		}
		var self = e.get_pos();
		var tmp2;
		if(self._hx_index == 0) {
			var v = self.v;
			tmp2 = v;
		} else {
			tmp2 = null;
		}
		return tink_core_Outcome.Failure(tink_core_TypedError.withData(500,tmp,tmp1,tmp2));
	},function() {
		return tink_core_Outcome.Failure(new tink_core_TypedError(500,"empty",{ fileName : "stx/nano/Contract.hx", lineNumber : 103, className : "stx.nano._Contract.Contract_Impl_", methodName : "toTinkSurprise"}));
	});
};
stx_nano_Contract.fromJsPromise = function(self,pos) {
	return stx_nano_Contract.lift(tink_core_Future.map(tink_core_Future.ofJsPromise(self),function(outcome) {
		switch(outcome._hx_index) {
		case 0:
			var v = outcome.data;
			return stx_nano_ChunkSum.Val(v);
		case 1:
			var e = outcome.failure;
			var _g = Type.typeof(e.data);
			if(_g._hx_index == 6) {
				if(_g.c == Error) {
					var er = e.data;
					var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,pos);
					return stx_nano_ChunkSum.End(stx_fail_Refuse.make(haxe_ds_Option.Some(stx_fail_DeclineSum.INTERIOR(stx_nano_CTR.apply(function(_) {
						return stx_nano_Digests.e_js_error(_,er);
					},stx_Nano.digests(stx_nano_Wildcard.__)))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1)));
				} else {
					var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,pos);
					return stx_nano_ChunkSum.End(stx_fail_Refuse.make(haxe_ds_Option.Some(stx_fail_DeclineSum.INTERIOR(stx_nano_CTR.apply(function(_) {
						return stx_nano_Digests.e_js_error(_,new Error("" + (e.data == null ? "null" : Std.string(e.data))));
					},stx_Nano.digests(stx_nano_Wildcard.__)))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1)));
				}
			} else {
				var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,pos);
				return stx_nano_ChunkSum.End(stx_fail_Refuse.make(haxe_ds_Option.Some(stx_fail_DeclineSum.INTERIOR(stx_nano_CTR.apply(function(_) {
					return stx_nano_Digests.e_js_error(_,new Error("" + (e.data == null ? "null" : Std.string(e.data))));
				},stx_Nano.digests(stx_nano_Wildcard.__)))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1)));
			}
			break;
		}
	}));
};
stx_nano_Contract.prj = function(this1) {
	return this1;
};
stx_nano_Contract.handle = function(this1,fn) {
	return this1.handle(fn);
};
stx_nano_Contract.seq = function(iter) {
	return stx_nano_Contract.bind_fold(iter,function(next,memo) {
		return stx_nano_ContractLift.map(next,function(a) {
			return stx_lift_ArrayLift.snoc(memo,a);
		});
	},[]);
};
var stx_nano_Counter = function(value) {
	if(value == null) {
		value = 0;
	}
	this.value = value;
};
$hxClasses["stx.nano.Counter"] = stx_nano_Counter;
stx_nano_Counter.__name__ = "stx.nano.Counter";
stx_nano_Counter.unit = function() {
	return new stx_nano_Counter();
};
stx_nano_Counter.prototype = {
	value: null
	,next: function() {
		var result = this.value;
		this.value += 1;
		return result;
	}
	,__class__: stx_nano_Counter
};
var stx_nano_CoupleLift = function() { };
$hxClasses["stx.nano.CoupleLift"] = stx_nano_CoupleLift;
stx_nano_CoupleLift.__name__ = "stx.nano.CoupleLift";
stx_nano_CoupleLift.map = function(self,fn) {
	return function(tp) {
		self(function(ti,tii) {
			tp(ti,fn(tii));
		});
	};
};
stx_nano_CoupleLift.mapl = function(self,fn) {
	return function(tp) {
		self(function(ti,tii) {
			tp(fn(ti),tii);
		});
	};
};
stx_nano_CoupleLift.mapr = function(self,fn) {
	return stx_nano_CoupleLift.map(self,fn);
};
stx_nano_CoupleLift.fst = function(self) {
	return stx_nano_CoupleLift.decouple(self,function(tI,_) {
		return tI;
	});
};
stx_nano_CoupleLift.snd = function(self) {
	return stx_nano_CoupleLift.decouple(self,function(_,tII) {
		return tII;
	});
};
stx_nano_CoupleLift.swap = function(self) {
	return function(tp) {
		self(function(ti,tii) {
			tp(tii,ti);
		});
	};
};
stx_nano_CoupleLift.equals = function(lhs,rhs) {
	return stx_nano_CoupleLift.decouple(lhs,function(t0l,t0r) {
		return stx_nano_CoupleLift.decouple(rhs,function(t1l,t1r) {
			if(t0l == t1l) {
				return t0r == t1r;
			} else {
				return false;
			}
		});
	});
};
stx_nano_CoupleLift.reduce = function(self,flhs,frhs,plus) {
	return stx_nano_CoupleLift.decouple(self,function(tI,tII) {
		return plus(flhs(tI),frhs(tII));
	});
};
stx_nano_CoupleLift.decouple = function(self,fn) {
	var out = null;
	self(function(ti,tii) {
		out = fn(ti,tii);
	});
	return out;
};
stx_nano_CoupleLift.cat = function(self) {
	return stx_nano_CoupleLift.decouple(self,function(l,r) {
		return [haxe_ds_Either.Left(l),haxe_ds_Either.Right(r)];
	});
};
stx_nano_CoupleLift.tup = function(self) {
	return stx_nano_CoupleLift.decouple(self,stx_Tup2.tuple2);
};
stx_nano_CoupleLift.toString = function(self) {
	return stx_nano_CoupleLift.decouple(self,function(l,r) {
		return "(" + Std.string(l) + " " + Std.string(r) + ")";
	});
};
var stx_nano_Couple = {};
stx_nano_Couple.make = function(lhs,rhs) {
	return function(cb) {
		cb(lhs,rhs);
	};
};
stx_nano_Couple.toString = function(this1) {
	return stx_nano_CoupleLift.toString(this1);
};
var stx_nano_DefectApi = function() { };
$hxClasses["stx.nano.DefectApi"] = stx_nano_DefectApi;
stx_nano_DefectApi.__name__ = "stx.nano.DefectApi";
stx_nano_DefectApi.__isInterface__ = true;
stx_nano_DefectApi.prototype = {
	error: null
	,get_error: null
	,toDefect: null
	,raise: null
	,__class__: stx_nano_DefectApi
};
var stx_nano_DefectCls = function(error) {
	var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,error);
	var tmp;
	if(self._hx_index == 0) {
		var v = self.v;
		tmp = v;
	} else {
		tmp = stx_fail_Refuse.unit();
	}
	this.error = tmp;
};
$hxClasses["stx.nano.DefectCls"] = stx_nano_DefectCls;
stx_nano_DefectCls.__name__ = "stx.nano.DefectCls";
stx_nano_DefectCls.__interfaces__ = [stx_nano_DefectApi];
stx_nano_DefectCls.prototype = {
	error: null
	,get_error: function() {
		return this.error;
	}
	,toDefect: function() {
		return this;
	}
	,raise: function() {
		throw haxe_Exception.thrown(this);
	}
	,__class__: stx_nano_DefectCls
};
var stx_nano_DefectLift = function() { };
$hxClasses["stx.nano.DefectLift"] = stx_nano_DefectLift;
stx_nano_DefectLift.__name__ = "stx.nano.DefectLift";
stx_nano_DefectLift.concat = function(self,that) {
	return stx_nano_Defect.make(stx_fail_Refuse.concat(self.get_error(),that.get_error()));
};
stx_nano_DefectLift.has_error = function(self) {
	return self.get_error().is_defined();
};
var stx_nano_Defect = {};
stx_nano_Defect._new = function(self) {
	var this1 = self;
	return this1;
};
stx_nano_Defect.lift = function(self) {
	return stx_nano_Defect._new(self);
};
stx_nano_Defect.unit = function() {
	return stx_nano_Defect.lift(new stx_nano_DefectCls(stx_fail_Refuse.unit()));
};
stx_nano_Defect.pure = function(e) {
	return stx_nano_Defect.make(stx_fail_Refuse.pure(e));
};
stx_nano_Defect.make = function(data) {
	var self = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,data),function(x) {
		return stx_nano_Defect.lift(new stx_nano_DefectCls(x));
	});
	if(self._hx_index == 0) {
		var v = self.v;
		return v;
	} else {
		return stx_nano_Defect.unit();
	}
};
stx_nano_Defect.fromRefuse = function(self) {
	return stx_nano_Defect.make(stx_fail_Refuse.lift(self));
};
stx_nano_Defect.elide = function(this1) {
	return this1;
};
stx_nano_Defect.entype = function(this1) {
	return this1;
};
stx_nano_Defect.toRefuse = function(this1) {
	return this1.get_error().toError();
};
stx_nano_Defect.prj = function(this1) {
	return this1;
};
var stx_nano_Embed = {};
stx_nano_Embed._new = function() {
	var this1 = stx_nano__$Embed_Constructor.embed();
	return this1;
};
var stx_nano__$Embed_Constructor = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["stx.nano._Embed.Constructor"] = stx_nano__$Embed_Constructor;
stx_nano__$Embed_Constructor.__name__ = "stx.nano._Embed.Constructor";
stx_nano__$Embed_Constructor.embed = function() {
	var r = haxe_ds_Option.None;
	var unpack = null;
	unpack = function(fn) {
		r = haxe_ds_Option.None;
		fn();
		return r;
	};
	var pull = null;
	pull = function(fn) {
		r = haxe_ds_Option.None;
		fn();
		return stx_pico_OptionLift.fudge(r);
	};
	var pack = null;
	pack = function(v) {
		var o = haxe_ds_Option.Some(v);
		return function() {
			r = o;
		};
	};
	var check = null;
	check = function(fn) {
		var _g = unpack(fn);
		switch(_g._hx_index) {
		case 0:
			var _g1 = _g.v;
			return true;
		case 1:
			return false;
		}
	};
	return { pack : pack, unpack : unpack, pull : pull, check : check};
};
stx_nano__$Embed_Constructor.__super__ = stx_pico_Clazz;
stx_nano__$Embed_Constructor.prototype = $extend(stx_pico_Clazz.prototype,{
	__class__: stx_nano__$Embed_Constructor
});
var stx_nano_Endianness = $hxEnums["stx.nano.Endianness"] = { __ename__:"stx.nano.Endianness",__constructs__:null
	,BIG_ENDIAN: {_hx_name:"BIG_ENDIAN",_hx_index:0,__enum__:"stx.nano.Endianness",toString:$estr}
	,LITTLE_ENDIAN: {_hx_name:"LITTLE_ENDIAN",_hx_index:1,__enum__:"stx.nano.Endianness",toString:$estr}
};
stx_nano_Endianness.__constructs__ = [stx_nano_Endianness.BIG_ENDIAN,stx_nano_Endianness.LITTLE_ENDIAN];
var stx_nano_Enquire = {};
stx_nano_Enquire._new = function(self) {
	var this1 = self;
	return this1;
};
stx_nano_Enquire.lift = function(self) {
	return stx_nano_Enquire._new(self);
};
stx_nano_Enquire.prj = function(this1) {
	return this1;
};
stx_nano_Enquire.get_self = function(this1) {
	return stx_nano_Enquire.lift(this1);
};
var stx_nano_EnquireLift = function() { };
$hxClasses["stx.nano.EnquireLift"] = stx_nano_EnquireLift;
stx_nano_EnquireLift.__name__ = "stx.nano.EnquireLift";
var stx_nano_Ensemble = {};
stx_nano_Ensemble.object_access = function(self,str) {
	return stx_nano_Ensemble.prj(self)[str];
};
stx_nano_Ensemble._new = function(self) {
	var this1 = self;
	return this1;
};
stx_nano_Ensemble.lift = function(self) {
	return stx_nano_Ensemble._new(self);
};
stx_nano_Ensemble.unit = function() {
	return stx_nano_Ensemble.lift({ });
};
stx_nano_Ensemble.fromMap = function(self) {
	var data = { };
	var h = self.h;
	var _g_h = h;
	var _g_keys = Object.keys(h);
	var _g_length = _g_keys.length;
	var _g_current = 0;
	while(_g_current < _g_length) {
		var key = _g_keys[_g_current++];
		var _g_key = key;
		var _g_value = _g_h[key];
		var k = _g_key;
		var v = _g_value;
		data[k] = v;
	}
	return stx_nano_Ensemble.lift(data);
};
stx_nano_Ensemble.fromIterKV = function(self) {
	var data = { };
	var v = $getIterator(self);
	while(v.hasNext()) {
		var v1 = v.next();
		data[v1.key] = v1.val;
	}
	return stx_nano_Ensemble.lift(data);
};
stx_nano_Ensemble.prj = function(this1) {
	return this1;
};
stx_nano_Ensemble.get_self = function(this1) {
	return stx_nano_Ensemble.lift(this1);
};
stx_nano_Ensemble.set = function(this1,key,val) {
	var next = stx_nano_Ensemble.prj(stx_nano_Ensemble.copy(this1));
	next[key] = val;
	return stx_nano_Ensemble.lift(next);
};
stx_nano_Ensemble.concat = function(this1,that) {
	var next = stx_nano_Ensemble.prj(stx_nano_Ensemble.copy(this1));
	var _g = $getKeyValueIterator(that);
	while(_g.hasNext()) {
		var _g1 = _g.next();
		var k = _g1.key;
		var v = _g1.value;
		next[k] = v;
	}
	return stx_nano_Ensemble.lift(next);
};
stx_nano_Ensemble.copy = function(this1) {
	var next = { };
	var access = this1;
	var _g_access = access;
	var _g_keys = Reflect.fields(access);
	var _g_index = 0;
	while(_g_index < _g_keys.length) {
		var key = _g_keys[_g_index++];
		var _g_value = _g_access[key];
		var _g_key = key;
		var k = _g_key;
		var v = _g_value;
		next[k] = v;
	}
	return stx_nano_Ensemble.lift(next);
};
stx_nano_Ensemble.fromClusterCouple = function(self) {
	var thiz = { };
	var _g_current = 0;
	var _g_array = self;
	while(_g_current < _g_array.length) {
		var tup = _g_array[_g_current++];
		tup(function(l,r) {
			thiz[l] = r;
		});
	}
	return stx_nano_Ensemble.lift(thiz);
};
stx_nano_Ensemble.toCluster = function(this1) {
	var next = [];
	var access = this1;
	var _g_access = access;
	var _g_keys = Reflect.fields(access);
	var _g_index = 0;
	while(_g_index < _g_keys.length) {
		var key = _g_keys[_g_index++];
		var _g_value = _g_access[key];
		var _g_key = key;
		var k = _g_key;
		var v = _g_value;
		next.push(stx_nano_Field.make(k,v));
	}
	return stx_nano_Cluster.lift(next);
};
stx_nano_Ensemble.toClusterCouple = function(this1) {
	var next = [];
	var access = this1;
	var _g_access = access;
	var _g_keys = Reflect.fields(access);
	var _g_index = 0;
	while(_g_index < _g_keys.length) {
		var key = _g_keys[_g_index++];
		var _g_value = _g_access[key];
		var _g_key = key;
		var k = _g_key;
		var v = _g_value;
		next.push(stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,k,v));
	}
	return stx_nano_Cluster.lift(next);
};
stx_nano_Ensemble.toIterKV = function(this1) {
	return stx_nano_IterKV.fromEnsemble(this1);
};
var stx_nano_EnsembleLift = function() { };
$hxClasses["stx.nano.EnsembleLift"] = stx_nano_EnsembleLift;
stx_nano_EnsembleLift.__name__ = "stx.nano.EnsembleLift";
var stx_nano_Enum = {};
stx_nano_Enum._new = function(self) {
	var this1 = self;
	return this1;
};
stx_nano_Enum.constructs = function(this1) {
	var _this = this1.__constructs__;
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = _this[i]._hx_name;
	}
	return result;
};
stx_nano_Enum.$name = function(this1) {
	return this1.__ename__;
};
stx_nano_Enum.construct = function(this1,cons,args) {
	switch(cons._hx_index) {
	case 0:
		var i = cons.v;
		return stx_pico_Option.fromNullT(Type.createEnumIndex(this1,i,args));
	case 1:
		var s = cons.v;
		return stx_pico_Option.fromNullT(Type.createEnum(this1,s,args));
	}
};
var stx_nano_EnumValue = {};
stx_nano_EnumValue.pure = function(self) {
	return stx_nano_EnumValue._new(self);
};
stx_nano_EnumValue.lift = function(self) {
	return stx_nano_EnumValue._new(self);
};
stx_nano_EnumValue._new = function(self) {
	var this1 = self;
	return this1;
};
stx_nano_EnumValue.params = function(this1) {
	return Type.enumParameters(this1);
};
stx_nano_EnumValue.ctr = function(this1) {
	return $hxEnums[this1.__enum__].__constructs__[this1._hx_index]._hx_name;
};
stx_nano_EnumValue.get_index = function(this1) {
	return this1._hx_index;
};
stx_nano_EnumValue.alike = function(this1,that) {
	if(stx_nano_EnumValue.ctr(this1) == stx_nano_EnumValue.ctr(that)) {
		return stx_nano_EnumValue.get_index(this1) == stx_nano_EnumValue.get_index(that);
	} else {
		return false;
	}
};
stx_nano_EnumValue.prj = function(this1) {
	return this1;
};
var stx_nano_ReceiptApi = function() { };
$hxClasses["stx.nano.ReceiptApi"] = stx_nano_ReceiptApi;
stx_nano_ReceiptApi.__name__ = "stx.nano.ReceiptApi";
stx_nano_ReceiptApi.__isInterface__ = true;
stx_nano_ReceiptApi.__interfaces__ = [stx_nano_DefectApi];
stx_nano_ReceiptApi.prototype = {
	value: null
	,iterator: null
	,__class__: stx_nano_ReceiptApi
};
var stx_nano_EquityApi = function() { };
$hxClasses["stx.nano.EquityApi"] = stx_nano_EquityApi;
stx_nano_EquityApi.__name__ = "stx.nano.EquityApi";
stx_nano_EquityApi.__isInterface__ = true;
stx_nano_EquityApi.__interfaces__ = [stx_nano_ReceiptApi];
stx_nano_EquityApi.prototype = {
	asset: null
	,toEquity: null
	,__class__: stx_nano_EquityApi
};
var stx_nano_ReceiptCls = function(error,value) {
	stx_nano_DefectCls.call(this,error);
	this.value = value;
};
$hxClasses["stx.nano.ReceiptCls"] = stx_nano_ReceiptCls;
stx_nano_ReceiptCls.__name__ = "stx.nano.ReceiptCls";
stx_nano_ReceiptCls.__interfaces__ = [stx_nano_ReceiptApi];
stx_nano_ReceiptCls.__super__ = stx_nano_DefectCls;
stx_nano_ReceiptCls.prototype = $extend(stx_nano_DefectCls.prototype,{
	value: null
	,iterator: function() {
		var _gthis = this;
		var done = false;
		var test = function() {
			done = true;
			if(_gthis.get_error().is_defined()) {
				_gthis.get_error().raise();
			} else if(_gthis.value == null) {
				throw haxe_Exception.thrown("undefined");
			}
		};
		return { next : function() {
			test();
			return _gthis.value;
		}, hasNext : function() {
			if(!done) {
				test();
				return true;
			} else {
				return false;
			}
		}};
	}
	,__class__: stx_nano_ReceiptCls
});
var stx_nano_EquityCls = function(error,value,asset) {
	stx_nano_ReceiptCls.call(this,error,value);
	this.asset = asset;
};
$hxClasses["stx.nano.EquityCls"] = stx_nano_EquityCls;
stx_nano_EquityCls.__name__ = "stx.nano.EquityCls";
stx_nano_EquityCls.__interfaces__ = [stx_nano_EquityApi];
stx_nano_EquityCls.__super__ = stx_nano_ReceiptCls;
stx_nano_EquityCls.prototype = $extend(stx_nano_ReceiptCls.prototype,{
	asset: null
	,toEquity: function() {
		return this;
	}
	,__class__: stx_nano_EquityCls
});
var stx_nano_EquityLift = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["stx.nano.EquityLift"] = stx_nano_EquityLift;
stx_nano_EquityLift.__name__ = "stx.nano.EquityLift";
stx_nano_EquityLift.make = function() {
	return new stx_nano_EquityLift();
};
stx_nano_EquityLift.lift = function(self) {
	return stx_nano_Equity.lift(self);
};
stx_nano_EquityLift.errate = function(self,fn) {
	return stx_nano_EquityLift.errata(self,function(x) {
		return stx_fail_Refuse.errate(x,fn);
	});
};
stx_nano_EquityLift.errata = function(self,fn) {
	return stx_nano_Equity.make(self.asset,self.value,stx_fail_Error.errata(self.get_error(),fn));
};
stx_nano_EquityLift.copy = function(self,asset,value,error) {
	var self1 = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,error);
	var v = self.get_error();
	var tmp;
	if(self1._hx_index == 0) {
		var v1 = self1.v;
		tmp = v1;
	} else {
		tmp = v;
	}
	var self1 = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,value);
	var tmp1;
	if(self1._hx_index == 0) {
		var v = self1.v;
		tmp1 = v;
	} else {
		tmp1 = self.value;
	}
	var self1 = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,asset);
	var tmp2;
	if(self1._hx_index == 0) {
		var v = self1.v;
		tmp2 = v;
	} else {
		tmp2 = self.asset;
	}
	return stx_nano_EquityLift.lift(new stx_nano_EquityCls(tmp,tmp1,tmp2).toEquity());
};
stx_nano_EquityLift.map = function(self,fn) {
	var self1 = self.asset;
	var self2 = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,self.value);
	var tmp;
	switch(self2._hx_index) {
	case 0:
		var t = self2.v;
		tmp = fn(t);
		break;
	case 1:
		tmp = null;
		break;
	}
	return stx_nano_Equity.make(self1,tmp,self.get_error());
};
stx_nano_EquityLift.mapi = function(self,fn) {
	return stx_nano_Equity.make(fn(self.asset),self.value,self.get_error());
};
stx_nano_EquityLift.is_defined = function(self) {
	return self.value != null;
};
stx_nano_EquityLift.has_error = function(self) {
	return self.get_error().is_defined();
};
stx_nano_EquityLift.has_value = function(self) {
	return self.value != null;
};
stx_nano_EquityLift.has_asset = function(self) {
	return self.asset != null;
};
stx_nano_EquityLift.is_ok = function(self) {
	return !self.get_error().is_defined();
};
stx_nano_EquityLift.defect = function(self,error) {
	return stx_nano_EquityLift.copy(self,null,null,stx_fail_Refuse.concat(self.get_error(),error));
};
stx_nano_EquityLift.relate = function(self,value) {
	if(stx_nano_EquityLift.has_error(stx_nano_EquityLift.lift(self))) {
		return self;
	} else {
		return stx_nano_EquityLift.copy(self,null,value);
	}
};
stx_nano_EquityLift.clear = function(self) {
	return stx_nano_Equity.make(self.asset,null,self.get_error());
};
stx_nano_EquityLift.refuse = function(self,error) {
	return stx_nano_Equity.make(self.asset,self.value,stx_fail_Refuse.concat(self.get_error(),error));
};
stx_nano_EquityLift.defuse = function(self) {
	return stx_nano_Equity.make(self.asset,self.value,stx_fail_Refuse.unit());
};
stx_nano_EquityLift.toChunk = function(self) {
	if(stx_nano_EquityLift.has_value(self)) {
		return stx_nano_ChunkSum.Val(self.value);
	} else if(stx_nano_EquityLift.has_error(self)) {
		return stx_nano_ChunkSum.End(self.get_error().toError());
	} else {
		return stx_nano_ChunkSum.Tap;
	}
};
stx_nano_EquityLift.rebase = function(self,chunk) {
	switch(chunk._hx_index) {
	case 0:
		var oII = chunk.v;
		return stx_nano_EquityLift.relate(stx_nano_EquityLift.clear(self),oII);
	case 1:
		return stx_nano_EquityLift.clear(self);
	case 2:
		var e = chunk.err;
		return stx_nano_EquityLift.refuse(stx_nano_EquityLift.clear(self),e);
	}
};
stx_nano_EquityLift.adjust = function(self,fn) {
	return stx_nano_lift_LiftNano.if_else(stx_nano_EquityLift.has_value(stx_nano_EquityLift.lift(self)),function() {
		var self1 = fn(self.value);
		switch(self1._hx_index) {
		case 0:
			var t = self1.t;
			return stx_nano_EquityLift.relate(stx_nano_EquityLift.clear(stx_nano_EquityLift.lift(self)),t);
		case 1:
			var e = self1.e;
			return stx_nano_EquityLift.refuse(stx_nano_EquityLift.clear(stx_nano_EquityLift.lift(self)),e);
		}
	},function() {
		return stx_nano_EquityLift.clear(stx_nano_EquityLift.lift(self));
	});
};
stx_nano_EquityLift.__super__ = stx_pico_Clazz;
stx_nano_EquityLift.prototype = $extend(stx_pico_Clazz.prototype,{
	__class__: stx_nano_EquityLift
});
var stx_nano_Equity = {};
stx_nano_Equity._new = function(self) {
	var this1 = self;
	return this1;
};
stx_nano_Equity.lift = function(self) {
	return stx_nano_Equity._new(self);
};
stx_nano_Equity.prj = function(this1) {
	return this1;
};
stx_nano_Equity.get_self = function(this1) {
	return stx_nano_Equity.lift(this1);
};
stx_nano_Equity.make = function(asset,value,error) {
	return stx_nano_Equity.lift(new stx_nano_EquityCls(error,value,asset).toEquity());
};
stx_nano_Equity.toError = function(this1) {
	return this1.get_error().toError();
};
var stx_nano_FPath = {};
stx_nano_FPath.lift = function(self) {
	return stx_nano_FPath._new(self);
};
stx_nano_FPath._new = function(self) {
	var this1 = self;
	return this1;
};
stx_nano_FPath.unit = function() {
	return stx_nano_FPath.lift("/");
};
stx_nano_FPath.pure = function(str) {
	return stx_nano_FPath._new(str);
};
stx_nano_FPath.into = function(this1,str) {
	return stx_nano_FPath._new(stx_nano_lift_LiftNano.if_else(stx_nano_FPath.has_end_slash(this1),function() {
		return "" + this1 + str;
	},function() {
		return "" + this1 + "/" + str;
	}));
};
stx_nano_FPath.trim_end_slash = function(this1) {
	return stx_nano_lift_LiftNano.if_else(stx_nano_FPath.has_end_slash(this1),function() {
		return stx_nano_FPath.lift(stx_nano_CharsLift.rdropn(this1,1));
	},function() {
		return stx_nano_FPath.lift(this1);
	});
};
stx_nano_FPath.has_end_slash = function(this1) {
	return StringTools.endsWith(this1,"/");
};
stx_nano_FPath.is_absolute = function(this1) {
	return StringTools.startsWith(this1,"/");
};
stx_nano_FPath.fromString = function(str) {
	return stx_nano_FPath.lift(str);
};
stx_nano_FPath.toString = function(this1) {
	return this1;
};
stx_nano_FPath.toArray = function(this1) {
	var splut = this1.split("/");
	if(stx_nano_FPath.is_absolute(this1)) {
		splut.shift();
	}
	if(stx_nano_FPath.has_end_slash(this1)) {
		splut.pop();
	}
	return splut;
};
stx_nano_FPath.head = function(this1) {
	return stx_lift_ArrayLift.head(stx_nano_FPath.toArray(this1));
};
stx_nano_FPath.prj = function(this1) {
	return this1;
};
var stx_nano_Floats = function() { };
$hxClasses["stx.nano.Floats"] = stx_nano_Floats;
stx_nano_Floats.__name__ = "stx.nano.Floats";
stx_nano_Floats.delta = function(n0,n1) {
	return n1 - n0;
};
stx_nano_Floats.normalize = function(v,n0,n1) {
	return (v - n0) / (n1 - n0);
};
stx_nano_Floats.interpolate = function(v,n0,n1) {
	return n0 + (n1 - n0) * v;
};
stx_nano_Floats.map = function(v,min0,max0,min1,max1) {
	return min1 + (max1 - min1) * ((v - min0) / (max0 - min0));
};
stx_nano_Floats.round = function(n,c) {
	if(c == null) {
		c = 1;
	}
	var r = Math.pow(10,c);
	return stx_nano_Floats.int(Math.round(n * r) / r);
};
stx_nano_Floats.ceil = function(n,c) {
	if(c == null) {
		c = 1;
	}
	var r = Math.pow(10,c);
	return stx_nano_Floats.int(Math.ceil(n * r) / r);
};
stx_nano_Floats.floor = function(n,c) {
	if(c == null) {
		c = 1;
	}
	var r = Math.pow(10,c);
	return stx_nano_Floats.int(Math.floor(n * r) / r);
};
stx_nano_Floats.clamp = function(n,min,max) {
	if(n > max) {
		n = max;
	} else if(n < min) {
		n = min;
	}
	return n;
};
stx_nano_Floats.sgn = function(n) {
	if(n == 0) {
		return 0;
	} else {
		return Math.abs(n) / n;
	}
};
stx_nano_Floats.max = function(v1,v2) {
	if(v2 > v1) {
		return v2;
	} else {
		return v1;
	}
};
stx_nano_Floats.min = function(v1,v2) {
	if(v2 < v1) {
		return v2;
	} else {
		return v1;
	}
};
stx_nano_Floats.int = function(v) {
	return v | 0;
};
stx_nano_Floats.compare = function(v1,v2) {
	if(v1 < v2) {
		return -1;
	} else if(v1 > v2) {
		return 1;
	} else {
		return 0;
	}
};
stx_nano_Floats.equals = function(v1,v2) {
	return v1 == v2;
};
stx_nano_Floats.toString = function(v) {
	return "" + v;
};
stx_nano_Floats.toInt = function(v) {
	return v | 0;
};
stx_nano_Floats.add = function(a,b) {
	return a + b;
};
stx_nano_Floats.sub = function(a,b) {
	return a - b;
};
stx_nano_Floats.div = function(a,b) {
	return a / b;
};
stx_nano_Floats.mul = function(a,b) {
	return a * b;
};
stx_nano_Floats.mod = function(a,b) {
	return a % b;
};
var stx_nano_Generator = function(f,stack) {
	this.fn = function(i) {
		var o = stack[i] == null ? stack[i] = f() : stack[i];
		return o;
	};
	this.index = 0;
};
$hxClasses["stx.nano.Generator"] = stx_nano_Generator;
stx_nano_Generator.__name__ = "stx.nano.Generator";
stx_nano_Generator.pure = function(fn) {
	return stx_nano_Generator.make(fn,[]);
};
stx_nano_Generator.make = function(fn,stack) {
	return new stx_nano_Generator(fn,stack);
};
stx_nano_Generator.prototype = {
	fn: null
	,index: null
	,restart: function() {
		var next = new stx_nano_Generator(null,null);
		next.fn = this.fn;
		return next;
	}
	,next: function() {
		var o;
		var _g = this.fn(this.index);
		switch(_g._hx_index) {
		case 0:
			var v = _g.v;
			o = v;
			break;
		case 1:
			o = null;
			break;
		}
		this.index++;
		return o;
	}
	,hasNext: function() {
		var o;
		var _g = this.fn(this.index);
		switch(_g._hx_index) {
		case 0:
			var _g1 = _g.v;
			o = true;
			break;
		case 1:
			o = false;
			break;
		}
		return o;
	}
	,iterator: function() {
		return { next : $bind(this,this.next), hasNext : $bind(this,this.hasNext)};
	}
	,toIter: function() {
		var _gthis = this;
		return stx_nano_Iter.lift({ iterator : function() {
			return _gthis.iterator();
		}});
	}
	,__class__: stx_nano_Generator
};
var stx_nano_Ident = {};
stx_nano_Ident._new = function(self) {
	var this1 = self;
	return this1;
};
stx_nano_Ident.lift = function(self) {
	return stx_nano_Ident._new(self);
};
stx_nano_Ident.make = function(name,pack) {
	return stx_nano_Ident.lift({ name : name, pack : pack});
};
stx_nano_Ident.prj = function(this1) {
	return this1;
};
stx_nano_Ident.get_self = function(this1) {
	return stx_nano_Ident.lift(this1);
};
stx_nano_Ident.toWay = function(this1) {
	return stx_nano_lift_LiftNano.if_else(this1.pack == null,function() {
		return stx_nano_Way.snoc(stx_nano_Way.unit(),this1.name);
	},function() {
		return stx_nano_Way.snoc(this1.pack,this1.name);
	});
};
stx_nano_Ident.fromObject = function(self) {
	return stx_nano_Ident.lift({ name : self.name, pack : stx_nano_Way.lift(stx_nano_Cluster.lift(self.pack))});
};
stx_nano_Ident.fromIdentifier = function(self) {
	var n = stx_pico_Identifier.get_name(self);
	var p = stx_pico_Identifier.get_pack(self);
	return { name : n, pack : stx_nano_Way.lift(p)};
};
stx_nano_Ident.toIdentifier = function(this1) {
	var _g = this1.name;
	var _g1 = this1.pack;
	if(_g1 == null) {
		var n = _g;
		return stx_pico_Identifier.lift(n);
	} else {
		var pack = _g1;
		var n = _g;
		if(stx_nano_Cluster.get_length(pack) == 0) {
			return stx_pico_Identifier.lift(n);
		} else {
			var p = _g1;
			var n = _g;
			return stx_pico_Identifier.lift(stx_nano_Way.snoc(p,n).join("."));
		}
	}
};
stx_nano_Ident.toString_with_sep = function(this1,sep) {
	var _g = this1.name;
	var _g1 = this1.pack;
	if(_g1 == null) {
		var n = _g;
		return n;
	} else {
		var pack = _g1;
		var n = _g;
		if(stx_nano_Cluster.get_length(pack) == 0) {
			return n;
		} else {
			var p = _g1;
			var n = _g;
			return stx_pico_Identifier.lift(stx_nano_Way.snoc(p,n).join(sep));
		}
	}
};
stx_nano_Ident.toString_underscored = function(this1) {
	return stx_nano_Ident.toString_with_sep(this1,"_");
};
stx_nano_Ident.into = function(this1) {
	var next_path = stx_nano_Chars._.uncapitalize_first_letter(this1.name);
	return stx_nano_Way.snoc(this1.pack,next_path);
};
var stx_nano_Introspectable = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["stx.nano.Introspectable"] = stx_nano_Introspectable;
stx_nano_Introspectable.__name__ = "stx.nano.Introspectable";
stx_nano_Introspectable.__super__ = stx_pico_Clazz;
stx_nano_Introspectable.prototype = $extend(stx_pico_Clazz.prototype,{
	locals: function() {
		return stx_nano_lift_LiftNano.locals(stx_nano_lift_LiftNano.definition(stx_nano_Wildcard.__,this));
	}
	,__class__: stx_nano_Introspectable
});
var stx_nano_Ints = function() { };
$hxClasses["stx.nano.Ints"] = stx_nano_Ints;
stx_nano_Ints.__name__ = "stx.nano.Ints";
stx_nano_Ints.max = function(v1,v2) {
	if(v2 > v1) {
		return v2;
	} else {
		return v1;
	}
};
stx_nano_Ints.min = function(v1,v2) {
	if(v2 < v1) {
		return v2;
	} else {
		return v1;
	}
};
stx_nano_Ints.toBool = function(v) {
	if(v == 0) {
		return false;
	} else {
		return true;
	}
};
stx_nano_Ints.toFloat = function(v) {
	return v;
};
stx_nano_Ints.compare = function(v1,v2) {
	if(v1 < v2) {
		return -1;
	} else if(v1 > v2) {
		return 1;
	} else {
		return 0;
	}
};
stx_nano_Ints.equals = function(v1,v2) {
	return v1 == v2;
};
stx_nano_Ints.isOdd = function(n) {
	if(n % 2 == 0) {
		return false;
	} else {
		return true;
	}
};
stx_nano_Ints.isEven = function(n) {
	return (n % 2 == 0 ? false : true) == false;
};
stx_nano_Ints.isInteger = function(n) {
	return n % 1 == 0;
};
stx_nano_Ints.isNatural = function(n) {
	if(n > 0) {
		return n % 1 == 0;
	} else {
		return false;
	}
};
stx_nano_Ints.isPrime = function(n) {
	if(n == 1) {
		return false;
	}
	if(n == 2) {
		return false;
	}
	if(n % 2 == 0) {
		return false;
	}
	var itr_min = 3;
	var itr_max = Math.ceil(Math.sqrt(n)) + 1;
	while(itr_min < itr_max) {
		var i = itr_min++;
		if(n % 1 == 0) {
			return false;
		}
		++i;
	}
	return true;
};
stx_nano_Ints.factorial = function(n) {
	if(!(n > 0 && n % 1 == 0)) {
		throw haxe_Exception.thrown("function factorial requires natural number as input");
	}
	if(n == 0) {
		return 1;
	}
	var i = n - 1;
	while(i > 0) {
		n *= i;
		--i;
	}
	return n;
};
stx_nano_Ints.divisors = function(n) {
	var r = [];
	var iter_min = 1;
	var iter_max = Math.ceil(n / 2 + 1);
	while(iter_min < iter_max) {
		var i = iter_min++;
		if(n % i == 0) {
			r.push(i);
		}
	}
	if(n != 0) {
		r.push(n);
	}
	return r;
};
stx_nano_Ints.clamp = function(n,min,max) {
	if(n > max) {
		n = max;
	} else if(n < min) {
		n = min;
	}
	return n;
};
stx_nano_Ints.half = function(n) {
	return n / 2;
};
stx_nano_Ints.sum = function(xs) {
	var o = 0;
	var val = $getIterator(xs);
	while(val.hasNext()) {
		var val1 = val.next();
		o += val1;
	}
	return o;
};
stx_nano_Ints.add = function(a,b) {
	return a + b;
};
stx_nano_Ints.sub = function(a,b) {
	return a - b;
};
stx_nano_Ints.div = function(a,b) {
	return a / b;
};
stx_nano_Ints.mul = function(a,b) {
	return a * b;
};
stx_nano_Ints.mod = function(a,b) {
	return a % b;
};
stx_nano_Ints.inv = function(n) {
	return -n;
};
stx_nano_Ints.and = function(a,b) {
	return a & b;
};
stx_nano_Ints.eq = function(a,b) {
	return a == b;
};
stx_nano_Ints.gt = function(a,b) {
	return a > b;
};
stx_nano_Ints.gteq = function(a,b) {
	return a >= b;
};
stx_nano_Ints.lt = function(a,b) {
	return a < b;
};
stx_nano_Ints.lteq = function(a,b) {
	return a <= b;
};
stx_nano_Ints.ushr = function(v,bits) {
	return v >>> bits;
};
stx_nano_Ints.xor = function(a,b) {
	return a ^ b;
};
stx_nano_Ints.shl = function(v,bits) {
	return v << bits;
};
stx_nano_Ints.shr = function(v,bits) {
	return v >> bits;
};
stx_nano_Ints.abs = function(v) {
	return Math.abs(v) | 0;
};
stx_nano_Ints.toString = function(a) {
	return "" + a;
};
stx_nano_Ints.is_between = function(n,l,h) {
	if(n > l) {
		return n < h;
	} else {
		return false;
	}
};
stx_nano_Ints.is_of_range = function(n,l,h) {
	if(n >= l) {
		return n <= h;
	} else {
		return false;
	}
};
var stx_nano_IterLift = function() { };
$hxClasses["stx.nano.IterLift"] = stx_nano_IterLift;
stx_nano_IterLift.__name__ = "stx.nano.IterLift";
stx_nano_IterLift.cross = function(self,that) {
	return { iterator : function() {
		var l_it = $getIterator(self);
		var r_it = $getIterator(that);
		var l_val = null;
		var rec = null;
		rec = function() {
			if(l_val != null && l_it.hasNext()) {
				l_val = l_it.next();
			}
			if(r_it.hasNext()) {
				return stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,l_val,r_it.next());
			} else {
				if(l_it.hasNext()) {
					r_it = $getIterator(that);
				}
				l_val = null;
				return rec();
			}
		};
		return { next : rec, hasNext : function() {
			if(!l_it.hasNext()) {
				return r_it.hasNext();
			} else {
				return false;
			}
		}};
	}};
};
stx_nano_IterLift.zip = function(l,r) {
	return { iterator : function() {
		var lit = $getIterator(l);
		var rit = $getIterator(r);
		return { next : function() {
			return stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,lit.next(),rit.next());
		}, hasNext : function() {
			if(lit.hasNext()) {
				return rit.hasNext();
			} else {
				return false;
			}
		}};
	}};
};
stx_nano_IterLift.ldrop = function(it,n) {
	return { iterator : function() {
		var iter = $getIterator(it);
		while(n > 0) {
			iter.next();
			n -= 1;
		}
		return iter;
	}};
};
stx_nano_IterLift.toMap = function(iter,fn,map) {
	var i = $getIterator(iter);
	while(i.hasNext()) {
		var i1 = i.next();
		var kv = fn(i1);
		stx_nano_CoupleLift.decouple(kv,$bind(map,map.set));
	}
	return map;
};
stx_nano_IterLift.map = function(iter,fn) {
	return { iterator : function() {
		var i = $getIterator(iter);
		return { next : function() {
			return fn(i.next());
		}, hasNext : function() {
			return i.hasNext();
		}};
	}};
};
stx_nano_IterLift.head = function(iter) {
	var it = $getIterator(iter);
	if(it.hasNext()) {
		return haxe_ds_Option.Some(it.next());
	} else {
		return haxe_ds_Option.None;
	}
};
stx_nano_IterLift.lfold = function(iter,mapper,seed) {
	var folded = seed;
	var e = $getIterator(iter);
	while(e.hasNext()) {
		var e1 = e.next();
		folded = mapper(e1,folded);
	}
	return folded;
};
stx_nano_IterLift.lfold1 = function(iter,mapper) {
	var it = $getIterator(iter);
	var memo = haxe_ds_Option.None;
	if(!it.hasNext()) {
		return haxe_ds_Option.None;
	} else {
		memo = haxe_ds_Option.Some(it.next());
		while(true) if(!it.hasNext()) {
			break;
		} else {
			memo = stx_pico_OptionLift.flat_map(memo,function(lhs) {
				return haxe_ds_Option.Some(mapper(lhs,it.next()));
			});
		}
		return memo;
	}
};
stx_nano_IterLift.toGenerator = function(self) {
	var iter = haxe_ds_Option.None;
	return function() {
		if(iter == haxe_ds_Option.None) {
			iter = haxe_ds_Option.Some($getIterator(self));
		}
		return stx_pico_OptionLift.flat_map(iter,function(x) {
			if(x.hasNext()) {
				return haxe_ds_Option.Some(x.next());
			} else {
				return haxe_ds_Option.None;
			}
		});
	};
};
stx_nano_IterLift.toArray = function(self) {
	var arr = [];
	var v = $getIterator(self);
	while(v.hasNext()) {
		var v1 = v.next();
		arr.push(v1);
	}
	return arr;
};
stx_nano_IterLift.toCluster = function(self) {
	return stx_nano_Cluster.lift(stx_nano_IterLift.toArray(self));
};
stx_nano_IterLift.foldr = function(iter,fn,init) {
	var data = init;
	var iterator = $getIterator(iter);
	var eff = null;
	eff = function() {
		if(iterator.hasNext()) {
			var next = iterator.next();
			eff();
			data = fn(next,data);
		}
	};
	eff();
	return data;
};
stx_nano_IterLift.search = function(iter,fn) {
	return stx_nano_IterLift.lfold(iter,function(next,memo) {
		var tmp;
		switch(memo._hx_index) {
		case 0:
			var t = memo.v;
			tmp = haxe_ds_Option.Some(t);
			break;
		case 1:
			tmp = stx_nano_lift_LiftNano.if_else(fn(next),function() {
				return haxe_ds_Option.Some(next);
			},function() {
				return haxe_ds_Option.None;
			});
			break;
		}
		return tmp;
	},haxe_ds_Option.None);
};
stx_nano_IterLift.map_filter = function(self,fn) {
	return stx_nano_IterLift.lfold(self,function(next,memo) {
		var _g = fn(next);
		if(_g._hx_index == 0) {
			var v = _g.v;
			return stx_lift_ArrayLift.snoc(memo,v);
		} else {
			return memo;
		}
	},[]);
};
stx_nano_IterLift.concat = function(self,that) {
	return stx_nano_Iter.lift(stx_lift_IterableLift.concat(self,that));
};
stx_nano_IterLift.is_defined = function(self) {
	return $getIterator(self).hasNext();
};
stx_nano_IterLift.count = function(self,fn) {
	return stx_nano_IterLift.lfold(self,function(n,m) {
		return m + (fn(n) ? 1 : 0);
	},0);
};
stx_nano_IterLift.last = function(self) {
	return stx_nano_IterLift.lfold1(self,function(n,m) {
		return n;
	});
};
stx_nano_IterLift.size = function(self) {
	return stx_nano_IterLift.count(self,function(_) {
		return true;
	});
};
var stx_nano_Iter = {};
stx_nano_Iter.unit = function() {
	return stx_nano_Iter.lift({ iterator : function() {
		return { hasNext : function() {
			return false;
		}, next : function() {
			return null;
		}};
	}});
};
stx_nano_Iter.lift = function(self) {
	return stx_nano_Iter._new(self);
};
stx_nano_Iter.make = function(self) {
	return stx_nano_Iter.lift({ iterator : function() {
		return self;
	}});
};
stx_nano_Iter.fromThunkIterator = function(self) {
	return stx_nano_Iter.lift({ iterator : self});
};
stx_nano_Iter.make0 = function(self) {
	return stx_nano_Iter.make({ hasNext : function() {
		return (stx_nano_CoupleLift.fst(self()))();
	}, next : function() {
		return (stx_nano_CoupleLift.snd(self()))();
	}});
};
stx_nano_Iter._new = function(self) {
	var this1 = self;
	return this1;
};
stx_nano_Iter.prj = function(this1) {
	return this1;
};
var stx_nano_IterKV = {};
stx_nano_IterKV._new = function(self) {
	var this1 = self;
	return this1;
};
stx_nano_IterKV.lift = function(self) {
	return stx_nano_IterKV._new(self);
};
stx_nano_IterKV.prj = function(this1) {
	return this1;
};
stx_nano_IterKV.get_self = function(this1) {
	return stx_nano_IterKV.lift(this1);
};
stx_nano_IterKV.toIter = function(this1) {
	return stx_nano_IterLift.map({ iterator : $keyValueIterator(this1)},function(t) {
		return stx_nano_KV.make(t.key,t.value);
	});
};
stx_nano_IterKV.fromEnsemble = function(self) {
	return stx_nano_IterKV.lift({ keyValueIterator : function() {
		return new haxe_iterators_DynamicAccessKeyValueIterator(stx_nano_Ensemble.prj(self));
	}});
};
var stx_nano_Json = function() { };
$hxClasses["stx.nano.Json"] = stx_nano_Json;
stx_nano_Json.__name__ = "stx.nano.Json";
stx_nano_Json.encode = function(v,replacer,space) {
	var out = null;
	var err = null;
	try {
		out = JSON.stringify(v,replacer,space);
	} catch( _g ) {
		var e = haxe_Exception.caught(_g).unwrap();
		err = stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,e),haxe_ds_Option.None,stx_pico_Option.fromNullT(stx_nano_lift_LiftNano.here(stx_nano_Wildcard.__,{ fileName : "stx/nano/Json.hx", lineNumber : 10, className : "stx.nano.Json", methodName : "encode"})));
	}
	if(err == null) {
		return stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,out);
	} else {
		return stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(err),{ fileName : "stx/nano/Json.hx", lineNumber : 12, className : "stx.nano.Json", methodName : "encode"});
	}
};
stx_nano_Json.decode = function(str) {
	var out = null;
	var err = null;
	try {
		out = JSON.parse(str);
	} catch( _g ) {
		var e = haxe_Exception.caught(_g).unwrap();
		err = stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,e),haxe_ds_Option.None,stx_pico_Option.fromNullT(stx_nano_lift_LiftNano.here(stx_nano_Wildcard.__,{ fileName : "stx/nano/Json.hx", lineNumber : 20, className : "stx.nano.Json", methodName : "decode"})));
	}
	if(err == null) {
		return stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,out);
	} else {
		return stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(err),{ fileName : "stx/nano/Json.hx", lineNumber : 22, className : "stx.nano.Json", methodName : "decode"});
	}
};
var stx_nano_JunctionCtr = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["stx.nano.JunctionCtr"] = stx_nano_JunctionCtr;
stx_nano_JunctionCtr.__name__ = "stx.nano.JunctionCtr";
stx_nano_JunctionCtr.__super__ = stx_pico_Clazz;
stx_nano_JunctionCtr.prototype = $extend(stx_pico_Clazz.prototype,{
	At: function(v) {
		var this1 = stx_nano_JunctionSum.There(v);
		return this1;
	}
	,Of: function(v) {
		var this1 = stx_nano_JunctionSum.Whole(stx_nano_APP.reply(v));
		return this1;
	}
	,__class__: stx_nano_JunctionCtr
});
var stx_nano_JunctionSum = $hxEnums["stx.nano.JunctionSum"] = { __ename__:"stx.nano.JunctionSum",__constructs__:null
	,There: ($_=function(r) { return {_hx_index:0,r:r,__enum__:"stx.nano.JunctionSum",toString:$estr}; },$_._hx_name="There",$_.__params__ = ["r"],$_)
	,Whole: ($_=function(v) { return {_hx_index:1,v:v,__enum__:"stx.nano.JunctionSum",toString:$estr}; },$_._hx_name="Whole",$_.__params__ = ["v"],$_)
};
stx_nano_JunctionSum.__constructs__ = [stx_nano_JunctionSum.There,stx_nano_JunctionSum.Whole];
var stx_nano_JunctionLift = function() { };
$hxClasses["stx.nano.JunctionLift"] = stx_nano_JunctionLift;
stx_nano_JunctionLift.__name__ = "stx.nano.JunctionLift";
stx_nano_JunctionLift.lift = function(self) {
	var this1 = self;
	return this1;
};
var stx_nano_Junction = {};
stx_nano_Junction._new = function(self) {
	var this1 = self;
	return this1;
};
stx_nano_Junction.lift = function(self) {
	var this1 = self;
	return this1;
};
stx_nano_Junction.prj = function(this1) {
	return this1;
};
stx_nano_Junction.get_self = function(this1) {
	var this2 = this1;
	return this2;
};
stx_nano_Junction.fromRegister = function(r) {
	var this1 = stx_nano_JunctionSum.There(r);
	return this1;
};
stx_nano_Junction.fromT = function(r) {
	var this1 = stx_nano_JunctionSum.Whole(r);
	return this1;
};
var stx_nano_KVLift = function() { };
$hxClasses["stx.nano.KVLift"] = stx_nano_KVLift;
stx_nano_KVLift.__name__ = "stx.nano.KVLift";
stx_nano_KVLift.map = function(self,fn) {
	return { key : self.key, val : fn(self.val)};
};
stx_nano_KVLift.fst = function(self) {
	return self.key;
};
stx_nano_KVLift.snd = function(self) {
	return self.val;
};
stx_nano_KVLift.into = function(self,fn) {
	return fn(self.key,self.val);
};
stx_nano_KVLift.decouple = function(self,fn) {
	return fn(self.key,self.val);
};
var stx_nano_KV = {};
stx_nano_KV._new = function(self) {
	var this1 = self;
	return this1;
};
stx_nano_KV.lift = function(self) {
	return stx_nano_KV._new(self);
};
stx_nano_KV.make = function(k,v) {
	return stx_nano_KV.lift({ key : k, val : v});
};
stx_nano_KV.fromObj = function(self) {
	return stx_nano_KV._new(self);
};
stx_nano_KV.fromTup = function(tp) {
	return stx_nano_KV._new({ key : stx_nano_CoupleLift.fst(tp), val : stx_nano_CoupleLift.snd(tp)});
};
stx_nano_KV.toKeyValue = function(this1) {
	return { key : this1.key, value : this1.val};
};
var stx_nano_KnuckleSum = $hxEnums["stx.nano.KnuckleSum"] = { __ename__:"stx.nano.KnuckleSum",__constructs__:null
	,Ordinal: ($_=function(idx) { return {_hx_index:0,idx:idx,__enum__:"stx.nano.KnuckleSum",toString:$estr}; },$_._hx_name="Ordinal",$_.__params__ = ["idx"],$_)
	,Nominal: ($_=function(str,idx) { return {_hx_index:1,str:str,idx:idx,__enum__:"stx.nano.KnuckleSum",toString:$estr}; },$_._hx_name="Nominal",$_.__params__ = ["str","idx"],$_)
};
stx_nano_KnuckleSum.__constructs__ = [stx_nano_KnuckleSum.Ordinal,stx_nano_KnuckleSum.Nominal];
var stx_nano_KnuckleLift = function() { };
$hxClasses["stx.nano.KnuckleLift"] = stx_nano_KnuckleLift;
stx_nano_KnuckleLift.__name__ = "stx.nano.KnuckleLift";
stx_nano_KnuckleLift.lift = function(self) {
	var this1 = self;
	return this1;
};
var stx_nano_Knuckle = {};
stx_nano_Knuckle._new = function(self) {
	var this1 = self;
	return this1;
};
stx_nano_Knuckle.lift = function(self) {
	var this1 = self;
	return this1;
};
stx_nano_Knuckle.prj = function(this1) {
	return this1;
};
stx_nano_Knuckle.get_self = function(this1) {
	var this2 = this1;
	return this2;
};
stx_nano_Knuckle.fromRegister = function(self) {
	var this1 = stx_nano_KnuckleSum.Ordinal(self);
	return this1;
};
stx_nano_Knuckle.fromString = function(self) {
	var this1 = stx_nano_KnuckleSum.Nominal(self,stx_nano_Register.unit());
	return this1;
};
stx_nano_Knuckle.fromNull = function(self) {
	var this1 = stx_nano_KnuckleSum.Ordinal(stx_nano_Register.unit());
	return this1;
};
stx_nano_Knuckle.toString = function(this1) {
	switch(this1._hx_index) {
	case 0:
		var i = this1.idx;
		return "[" + Std.string(i) + "]";
	case 1:
		var str = this1.str;
		var i = this1.idx;
		return "." + str + "@" + Std.string(i);
	}
};
stx_nano_Knuckle.equals = function(this1,r) {
	var l = this1;
	switch(l._hx_index) {
	case 0:
		if(r._hx_index == 0) {
			var r1 = r.idx;
			var l1 = l.idx;
			return stx_nano_Register.equals(l1,r1);
		} else {
			return false;
		}
		break;
	case 1:
		if(r._hx_index == 1) {
			var r1 = r.str;
			var rI = r.idx;
			var lI = l.idx;
			var l1 = l.str;
			if(l1 == r1) {
				return stx_nano_Register.equals(lI,rI);
			} else {
				return false;
			}
		} else {
			return false;
		}
		break;
	}
};
var stx_nano_LedgerLift = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["stx.nano.LedgerLift"] = stx_nano_LedgerLift;
stx_nano_LedgerLift.__name__ = "stx.nano.LedgerLift";
stx_nano_LedgerLift.make = function() {
	return new stx_nano_LedgerLift();
};
stx_nano_LedgerLift.lift = function(self) {
	return stx_nano_Ledger.lift(self);
};
stx_nano_LedgerLift.errata = function(self,fn) {
	return tink_core_Future.map(self,function(x) {
		return stx_nano_EquityLift.errata(x,fn);
	});
};
stx_nano_LedgerLift.errate = function(self,fn) {
	return stx_nano_LedgerLift.lift(tink_core_Future.map(self,function(x) {
		return stx_nano_EquityLift.errate(x,fn);
	}));
};
stx_nano_LedgerLift.flat_map = function(self,fn) {
	return tink_core_Future.flatMap(self,function(x) {
		var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,x.value);
		switch(self._hx_index) {
		case 0:
			var t = self.v;
			return stx_nano_LedgerLift.errata(fn(t),function(e) {
				return x.get_error().toError().concat(e);
			});
		case 1:
			return stx_nano_Ledger.fromEquity(stx_nano_Equity.make(x.asset,null,x.get_error()));
		}
	});
};
stx_nano_LedgerLift.map = function(self,fn) {
	return tink_core_Future.map(self,function(x) {
		return stx_nano_EquityLift.map(x,fn);
	});
};
stx_nano_LedgerLift.escape = function(self,fn) {
	return tink_core_Future.map(self,fn);
};
stx_nano_LedgerLift.__super__ = stx_pico_Clazz;
stx_nano_LedgerLift.prototype = $extend(stx_pico_Clazz.prototype,{
	__class__: stx_nano_LedgerLift
});
var stx_nano_Ledger = {};
stx_nano_Ledger._new = function(self) {
	var this1 = self;
	return this1;
};
stx_nano_Ledger.lift = function(self) {
	return stx_nano_Ledger._new(self);
};
stx_nano_Ledger.prj = function(this1) {
	return this1;
};
stx_nano_Ledger.get_self = function(this1) {
	return stx_nano_Ledger.lift(this1);
};
stx_nano_Ledger.fromEquity = function(self) {
	return stx_nano_Ledger.lift(tink_core_Future.irreversible(function(cb) {
		cb(self);
	}));
};
var stx_nano_LogicalClock = function() { };
$hxClasses["stx.nano.LogicalClock"] = stx_nano_LogicalClock;
stx_nano_LogicalClock.__name__ = "stx.nano.LogicalClock";
stx_nano_LogicalClock.previous = null;
stx_nano_LogicalClock.get = function() {
	var st = stx_nano_TimeStamp.pure;
	if(stx_nano_LogicalClock.previous == null) {
		return st({ realm : stx_nano_LogicalClock.previous = HxOverrides.now() / 1000, index : stx_nano_LogicalClock.counter, exact : ++stx_nano_LogicalClock.lifetime});
	} else {
		var stamp = HxOverrides.now() / 1000;
		if(stamp == stx_nano_LogicalClock.previous) {
			return st({ realm : stamp, index : stx_nano_LogicalClock.counter++, exact : ++stx_nano_LogicalClock.lifetime});
		} else {
			stx_nano_LogicalClock.previous = stamp;
			stx_nano_LogicalClock.counter = 0;
			return st({ realm : stamp, index : stx_nano_LogicalClock.counter, exact : ++stx_nano_LogicalClock.lifetime});
		}
	}
};
var stx_nano_Math = function() { };
$hxClasses["stx.nano.Math"] = stx_nano_Math;
stx_nano_Math.__name__ = "stx.nano.Math";
stx_nano_Math.rndOne = function(weight) {
	if(weight == null) {
		weight = 0.5;
	}
	return Math.random() - weight | 0;
};
stx_nano_Math.radians = function(v) {
	return v * (Math.PI / 180);
};
stx_nano_Math.degrees = function(v) {
	return v * (180 / Math.PI);
};
stx_nano_Math.random = function(max,min) {
	if(min == null) {
		min = 0;
	}
	if(max == null) {
		max = 1;
	}
	return Math.random() * (max - min) + min;
};
stx_nano_Math.isNaN = function(fl) {
	return isNaN(fl);
};
stx_nano_Math.unique_unordered_pair = function(x,y) {
	if(x < y) {
		return x * (y - 1) + Math.floor(Math.pow(y - x - 2,2) / 4);
	} else {
		return (x - 1) * y + Math.floor(Math.pow(x - y - 2,2) / 4);
	}
};
var stx_nano_Module = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["stx.nano.Module"] = stx_nano_Module;
stx_nano_Module.__name__ = "stx.nano.Module";
stx_nano_Module.__super__ = stx_pico_Clazz;
stx_nano_Module.prototype = $extend(stx_pico_Clazz.prototype,{
	Ft: function() {
		return new stx_nano__$Module_Ft();
	}
	,Map: function() {
		return new stx_nano__$Module_Map();
	}
	,command: function(fn) {
		return function(v) {
			fn(v);
			return v;
		};
	}
	,__class__: stx_nano_Module
});
var stx_nano__$Module_Ft = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["stx.nano._Module.Ft"] = stx_nano__$Module_Ft;
stx_nano__$Module_Ft.__name__ = "stx.nano._Module.Ft";
stx_nano__$Module_Ft.__super__ = stx_pico_Clazz;
stx_nano__$Module_Ft.prototype = $extend(stx_pico_Clazz.prototype,{
	bind_fold: function(arr,fn,init) {
		return stx_nano_IterLift.lfold(arr,function(next,memo) {
			haxe_Log.trace(next,{ fileName : "stx/nano/Module.hx", lineNumber : 26, className : "stx.nano._Module.Ft", methodName : "bind_fold"});
			return tink_core_Future.flatMap(memo,function(tt) {
				var result = fn(next,tt);
				return result;
			});
		},tink_core_Future.irreversible(function(cb) {
			var pos = { fileName : "stx/nano/Module.hx", lineNumber : 35, className : "stx.nano._Module.Ft", methodName : "bind_fold"};
			cb((function(t) {
				haxe_Log.trace(t,pos);
				return t;
			})(init));
		}));
	}
	,zip: function(self,that) {
		var left = haxe_ds_Option.None;
		var right = haxe_ds_Option.None;
		var trigger = new tink_core_FutureTrigger();
		var on_done = function() {
			if(left._hx_index == 0) {
				if(right._hx_index == 0) {
					var r = right.v;
					var l = left.v;
					trigger.trigger(stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,l,r));
				}
			}
		};
		var l_handler = function(l) {
			left = haxe_ds_Option.Some(l);
			on_done();
		};
		var r_handler = function(r) {
			right = haxe_ds_Option.Some(r);
			on_done();
		};
		self.handle(l_handler);
		that.handle(r_handler);
		return trigger;
	}
	,tryAndThenCancelIfNotAvailable: function(ft) {
		var output = haxe_ds_Option.None;
		var canceller = ft.handle(function(x) {
			output = haxe_ds_Option.Some(x);
		});
		if(!stx_pico_OptionLift.is_defined(output)) {
			if(canceller != null) {
				canceller.cancel();
			}
		}
		return output;
	}
	,squeeze: function(ft) {
		return this.tryAndThenCancelIfNotAvailable(ft);
	}
	,option: function(ft) {
		var output = haxe_ds_Option.None;
		var finished = false;
		ft.handle(function(x) {
			if(!finished) {
				output = haxe_ds_Option.Some(x);
			}
		});
		finished = true;
		return output;
	}
	,__class__: stx_nano__$Module_Ft
});
var stx_nano__$Module_Sig = function() { };
$hxClasses["stx.nano._Module.Sig"] = stx_nano__$Module_Sig;
stx_nano__$Module_Sig.__name__ = "stx.nano._Module.Sig";
var stx_nano__$Module_Map = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["stx.nano._Module.Map"] = stx_nano__$Module_Map;
stx_nano__$Module_Map.__name__ = "stx.nano._Module.Map";
stx_nano__$Module_Map.__super__ = stx_pico_Clazz;
stx_nano__$Module_Map.prototype = $extend(stx_pico_Clazz.prototype,{
	String: function() {
		return new haxe_ds_StringMap();
	}
	,__class__: stx_nano__$Module_Map
});
var stx_nano_NuggetApi = function() { };
$hxClasses["stx.nano.NuggetApi"] = stx_nano_NuggetApi;
stx_nano_NuggetApi.__name__ = "stx.nano.NuggetApi";
stx_nano_NuggetApi.__isInterface__ = true;
stx_nano_NuggetApi.prototype = {
	put: null
	,use: null
	,__class__: stx_nano_NuggetApi
};
var stx_nano_NuggetCls = function(val) {
	this.val = val;
};
$hxClasses["stx.nano.NuggetCls"] = stx_nano_NuggetCls;
stx_nano_NuggetCls.__name__ = "stx.nano.NuggetCls";
stx_nano_NuggetCls.__interfaces__ = [stx_nano_NuggetApi];
stx_nano_NuggetCls.prototype = {
	val: null
	,put: function(v) {
		if(this.val != null) {
			throw haxe_Exception.thrown("already set value on Nugget");
		}
	}
	,use: function(fn) {
		if(this.val == null) {
			throw haxe_Exception.thrown("val on Nugget unset");
		}
	}
	,__class__: stx_nano_NuggetCls
};
var stx_nano__$Nugget_Delegate = function(delegate) {
	this.delegate = delegate;
};
$hxClasses["stx.nano._Nugget.Delegate"] = stx_nano__$Nugget_Delegate;
stx_nano__$Nugget_Delegate.__name__ = "stx.nano._Nugget.Delegate";
stx_nano__$Nugget_Delegate.prototype = {
	delegate: null
	,__class__: stx_nano__$Nugget_Delegate
};
var stx_nano_FutureNugget = function(fut) {
	stx_nano_NuggetCls.call(this);
	this.fut = fut;
};
$hxClasses["stx.nano.FutureNugget"] = stx_nano_FutureNugget;
stx_nano_FutureNugget.__name__ = "stx.nano.FutureNugget";
stx_nano_FutureNugget.__super__ = stx_nano_NuggetCls;
stx_nano_FutureNugget.prototype = $extend(stx_nano_NuggetCls.prototype,{
	fut: null
	,put: function(v) {
		throw haxe_Exception.thrown("Future Nugget resolves internally");
	}
	,use: function(fn) {
		this.fut.handle(fn);
	}
	,__class__: stx_nano_FutureNugget
});
var stx_nano_Nugget = {};
stx_nano_Nugget._new = function(self) {
	var this1 = self;
	return this1;
};
stx_nano_Nugget.lift = function(self) {
	return stx_nano_Nugget._new(self);
};
stx_nano_Nugget.prj = function(this1) {
	return this1;
};
stx_nano_Nugget.get_self = function(this1) {
	return stx_nano_Nugget.lift(this1);
};
var stx_nano_Absorbable = {};
stx_nano_Absorbable._new = function(self) {
	var this1 = self;
	return this1;
};
stx_nano_Absorbable.lift = function(self) {
	return stx_nano_Absorbable._new(self);
};
stx_nano_Absorbable.pure = function(v) {
	return stx_nano_Absorbable.lift(new stx_nano_NuggetCls(v));
};
stx_nano_Absorbable.later = function(ft) {
	return stx_nano_Absorbable.lift(new stx_nano_FutureNugget(ft));
};
var stx_nano_Producable = {};
stx_nano_Producable._new = function(self) {
	var this1 = self;
	return this1;
};
stx_nano_Producable.lift = function(self) {
	return stx_nano_Producable._new(self);
};
stx_nano_Producable.unit = function() {
	return stx_nano_Producable.lift(new stx_nano_NuggetCls());
};
stx_nano_Producable.go = function(this1,v) {
	this1.put(v);
	return stx_nano_Absorbable.lift(this1);
};
var stx_nano_NumericSum = $hxEnums["stx.nano.NumericSum"] = { __ename__:"stx.nano.NumericSum",__constructs__:null
	,NInt: ($_=function(int) { return {_hx_index:0,int:int,__enum__:"stx.nano.NumericSum",toString:$estr}; },$_._hx_name="NInt",$_.__params__ = ["int"],$_)
	,NInt64: ($_=function(int) { return {_hx_index:1,int:int,__enum__:"stx.nano.NumericSum",toString:$estr}; },$_._hx_name="NInt64",$_.__params__ = ["int"],$_)
	,NFloat: ($_=function(f) { return {_hx_index:2,f:f,__enum__:"stx.nano.NumericSum",toString:$estr}; },$_._hx_name="NFloat",$_.__params__ = ["f"],$_)
};
stx_nano_NumericSum.__constructs__ = [stx_nano_NumericSum.NInt,stx_nano_NumericSum.NInt64,stx_nano_NumericSum.NFloat];
var stx_nano_Numeric = {};
stx_nano_Numeric._new = function(self) {
	var this1 = self;
	return this1;
};
stx_nano_Numeric.lift = function(self) {
	return stx_nano_Numeric._new(self);
};
stx_nano_Numeric.prj = function(this1) {
	return this1;
};
stx_nano_Numeric.get_self = function(this1) {
	return stx_nano_Numeric.lift(this1);
};
stx_nano_Numeric.toString = function(this1) {
	var _g = stx_nano_Numeric.get_self(this1);
	switch(_g._hx_index) {
	case 0:
		var v = _g.int;
		return "" + v;
	case 1:
		var v = _g.int;
		return "" + (v == null ? "null" : haxe_Int64.toString(v));
	case 2:
		var v = _g.f;
		return "" + v;
	}
};
stx_nano_Numeric.get_width = function(this1) {
	switch(this1._hx_index) {
	case 0:
		var int = this1.int;
		return 4;
	case 1:
		var int = this1.int;
		return 8;
	case 2:
		var f = this1.f;
		return 8;
	}
};
stx_nano_Numeric.intoBytes = function(this1) {
};
var stx_nano_OneOrManySum = $hxEnums["stx.nano.OneOrManySum"] = { __ename__:"stx.nano.OneOrManySum",__constructs__:null
	,OneOf: ($_=function(v) { return {_hx_index:0,v:v,__enum__:"stx.nano.OneOrManySum",toString:$estr}; },$_._hx_name="OneOf",$_.__params__ = ["v"],$_)
	,ManyOf: ($_=function(arr) { return {_hx_index:1,arr:arr,__enum__:"stx.nano.OneOrManySum",toString:$estr}; },$_._hx_name="ManyOf",$_.__params__ = ["arr"],$_)
};
stx_nano_OneOrManySum.__constructs__ = [stx_nano_OneOrManySum.OneOf,stx_nano_OneOrManySum.ManyOf];
var stx_nano_OneOrMany = {};
stx_nano_OneOrMany._new = function(self) {
	var this1 = self;
	return this1;
};
stx_nano_OneOrMany.lift = function(self) {
	return stx_nano_OneOrMany._new(self);
};
stx_nano_OneOrMany.fromT = function(self) {
	return stx_nano_OneOrMany.lift(stx_nano_OneOrManySum.OneOf(self));
};
stx_nano_OneOrMany.fromArray = function(self) {
	return stx_nano_OneOrMany.lift(stx_nano_OneOrManySum.ManyOf(self));
};
stx_nano_OneOrMany.toArray = function(this1) {
	switch(this1._hx_index) {
	case 0:
		var v = this1.v;
		return [v];
	case 1:
		var arr = this1.arr;
		return arr;
	}
};
stx_nano_OneOrMany.prj = function(this1) {
	return this1;
};
stx_nano_OneOrMany.get_self = function(this1) {
	return stx_nano_OneOrMany.lift(this1);
};
var stx_nano_PartialFunctionApi = function() { };
$hxClasses["stx.nano.PartialFunctionApi"] = stx_nano_PartialFunctionApi;
stx_nano_PartialFunctionApi.__name__ = "stx.nano.PartialFunctionApi";
stx_nano_PartialFunctionApi.__isInterface__ = true;
stx_nano_PartialFunctionApi.__interfaces__ = [stx_pico_ApplyApi];
stx_nano_PartialFunctionApi.prototype = {
	guard: null
	,__class__: stx_nano_PartialFunctionApi
};
var stx_nano_PartialFunctionCls = function() { };
$hxClasses["stx.nano.PartialFunctionCls"] = stx_nano_PartialFunctionCls;
stx_nano_PartialFunctionCls.__name__ = "stx.nano.PartialFunctionCls";
stx_nano_PartialFunctionCls.__interfaces__ = [stx_nano_PartialFunctionApi];
stx_nano_PartialFunctionCls.prototype = {
	toApply: null
	,apply: null
	,guard: null
	,__class__: stx_nano_PartialFunctionCls
};
var stx_nano_PartialFunction = {};
stx_nano_PartialFunction._new = function(self) {
	var this1 = self;
	return this1;
};
stx_nano_PartialFunction.lift = function(self) {
	return stx_nano_PartialFunction._new(self);
};
stx_nano_PartialFunction.prj = function(this1) {
	return this1;
};
stx_nano_PartialFunction.get_self = function(this1) {
	return stx_nano_PartialFunction.lift(this1);
};
var stx_nano_PartialFunctions = {};
stx_nano_PartialFunctions._new = function(self) {
	var this1 = self;
	return this1;
};
stx_nano_PartialFunctions.lift = function(self) {
	return stx_nano_PartialFunctions._new(self);
};
stx_nano_PartialFunctions.prj = function(this1) {
	return this1;
};
stx_nano_PartialFunctions.get_self = function(this1) {
	return stx_nano_PartialFunctions.lift(this1);
};
stx_nano_PartialFunctions.apply = function(this1,v) {
	return stx_nano_ClusterLift.lfold(this1,function(next,memo) {
		if(memo._hx_index == 0) {
			var x = memo.v;
			return haxe_ds_Option.Some(x);
		} else if(next.guard(v)) {
			return haxe_ds_Option.Some(next.apply(v));
		} else {
			return haxe_ds_Option.None;
		}
	},haxe_ds_Option.None);
};
var stx_nano_PledgeLift = function() { };
$hxClasses["stx.nano.PledgeLift"] = stx_nano_PledgeLift;
stx_nano_PledgeLift.__name__ = "stx.nano.PledgeLift";
stx_nano_PledgeLift.toJsPromise = function(self) {
	var promise = new Promise(function(resolve,reject) {
		try {
			self.handle(function(res) {
				switch(res._hx_index) {
				case 0:
					var t = res.t;
					resolve(stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,t));
					break;
				case 1:
					var e = res.e;
					reject(stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(e),{ fileName : "stx/nano/Pledge.hx", lineNumber : 167, className : "stx.nano.PledgeLift", methodName : "toJsPromise"}));
					break;
				}
			});
		} catch( _g ) {
			var _g1 = haxe_Exception.caught(_g).unwrap();
			if(js_Boot.__implements(_g1,stx_fail_ErrorApi)) {
				var e = _g1;
				var _g2 = stx_fail_Refuse.catcher(e);
				var promise;
				switch(_g2._hx_index) {
				case 0:
					var e = _g2.v;
					promise = stx_nano_CTR.fromR(stx_fail_ErrorLift.digest_with(e,function(x) {
						return Std.string(x);
					}));
					break;
				case 1:
					var e = _g2.v;
					promise = stx_nano_CTR.fromR(e);
					break;
				}
				stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,promise,{ fileName : "stx/nano/Pledge.hx", lineNumber : 173, className : "stx.nano.PledgeLift", methodName : "toJsPromise"});
			} else if(((_g1) instanceof Error)) {
				var e = _g1;
				var reject1 = reject;
				var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/nano/Pledge.hx", lineNumber : 178, className : "stx.nano.PledgeLift", methodName : "toJsPromise"});
				reject1(stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.make(haxe_ds_Option.Some(stx_fail_DeclineSum.INTERIOR(stx_nano_CTR.apply(function(_) {
					return stx_nano_Digests.e_js_error(_,e);
				},stx_Nano.digests(stx_nano_Wildcard.__)))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1))),{ fileName : "stx/nano/Pledge.hx", lineNumber : 178, className : "stx.nano.PledgeLift", methodName : "toJsPromise"}));
			} else {
				throw _g;
			}
		}
	});
	return promise;
};
stx_nano_PledgeLift.toJsPromiseError = function(self) {
	return stx_nano_PledgeLift.toJsPromise(self).then(function(res) {
		return new Promise(function(resolve,reject) {
			switch(res._hx_index) {
			case 0:
				var t = res.t;
				resolve(t);
				break;
			case 1:
				var e = res.e;
				reject(e);
				break;
			}
		});
	});
};
stx_nano_PledgeLift.lift = function(self) {
	return stx_nano_Pledge.lift(self);
};
stx_nano_PledgeLift.zip = function(self,that) {
	var out = tink_core_Future.map(stx_nano_lift_LiftNano.nano(stx_nano_Wildcard.__).Ft().zip(stx_nano_Pledge.prj(self),stx_nano_Pledge.prj(that)),function(tp) {
		var self = stx_nano_CoupleLift.fst(tp);
		var that = stx_nano_CoupleLift.snd(tp);
		switch(self._hx_index) {
		case 0:
			var _g = self.t;
			switch(that._hx_index) {
			case 0:
				var tt = that.t;
				var t = _g;
				return stx_nano_ResSum.Accept(stx_nano_Couple.make(t,tt));
			case 1:
				var e = that.e;
				return stx_nano_ResSum.Reject(e);
			}
			break;
		case 1:
			var _g = self.e;
			if(that._hx_index == 1) {
				var ee = that.e;
				var e = _g;
				return stx_nano_ResSum.Reject(stx_fail_Refuse.concat(e,ee));
			} else {
				var e = _g;
				return stx_nano_ResSum.Reject(e);
			}
			break;
		}
	});
	return out;
};
stx_nano_PledgeLift.map = function(self,fn) {
	return stx_nano_PledgeLift.lift(tink_core_Future.map(stx_nano_Pledge.prj(self),function(x) {
		var tmp;
		switch(x._hx_index) {
		case 0:
			var t = x.t;
			tmp = stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,fn(t));
			break;
		case 1:
			var e = x.e;
			tmp = stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(e),{ fileName : "stx/nano/Pledge.hx", lineNumber : 209, className : "stx.nano.PledgeLift", methodName : "map"});
			break;
		}
		return tmp;
	}));
};
stx_nano_PledgeLift.flat_map = function(self,fn) {
	var ft = stx_nano_Pledge.prj(self);
	return tink_core_Future.flatMap(ft,function(x) {
		switch(x._hx_index) {
		case 0:
			var t = x.t;
			return stx_nano_Pledge.prj(fn(t));
		case 1:
			var e = x.e;
			return stx_nano_Pledge.prj(stx_nano_Pledge.fromRes(stx_nano_ResSum.Reject(e)));
		}
	});
};
stx_nano_PledgeLift.flat_fold = function(self,val,ers) {
	return tink_core_Future.flatMap(self,function(res) {
		switch(res._hx_index) {
		case 0:
			var t = res.t;
			return val(t);
		case 1:
			var e = res.e;
			return ers(e);
		}
	});
};
stx_nano_PledgeLift.fold = function(self,val,ers) {
	var fn = val;
	var er = ers;
	var tmp = function(self) {
		switch(self._hx_index) {
		case 0:
			var t = self.t;
			return fn(t);
		case 1:
			var e = self.e;
			return er(e);
		}
	};
	return tink_core_Future.map(stx_nano_Pledge.prj(self),tmp);
};
stx_nano_PledgeLift.recover = function(self,fn) {
	return stx_nano_PledgeLift.lift(stx_nano_PledgeLift.fold(self,function(x) {
		return stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,x);
	},function(e) {
		return fn(e);
	}));
};
stx_nano_PledgeLift.adjust = function(self,fn) {
	return stx_nano_PledgeLift.lift(stx_nano_PledgeLift.fold(self,function(x) {
		return fn(x);
	},function(v) {
		return stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(v),{ fileName : "stx/nano/Pledge.hx", lineNumber : 244, className : "stx.nano.PledgeLift", methodName : "adjust"});
	}));
};
stx_nano_PledgeLift.rectify = function(self,fn) {
	return stx_nano_PledgeLift.lift(tink_core_Future.map(stx_nano_Pledge.prj(self),function(res) {
		var fn1 = fn;
		switch(res._hx_index) {
		case 0:
			var t = res.t;
			return stx_nano_Res.accept(t);
		case 1:
			var e = res.e;
			return fn1(e);
		}
	}));
};
stx_nano_PledgeLift.receive = function(self,fn) {
	return tink_core_Future.map(stx_nano_Pledge.prj(self),function(res) {
		var tmp;
		switch(res._hx_index) {
		case 0:
			var t = res.t;
			fn(t);
			tmp = haxe_ds_Option.None;
			break;
		case 1:
			var e = res.e;
			tmp = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,e);
			break;
		}
		return tmp;
	});
};
stx_nano_PledgeLift.fudge = function(self) {
	var out = null;
	stx_nano_Pledge.prj(self).handle(function(v) {
		out = v;
	});
	if(out == null) {
		var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/nano/Pledge.hx", lineNumber : 271, className : "stx.nano.PledgeLift", methodName : "fudge"});
		throw haxe_Exception.thrown(stx_fail_Refuse.make(haxe_ds_Option.Some(stx_fail_DeclineSum.INTERIOR(stx_nano_CTR.apply(function(_) {
			return stx_nano_Digests.e_undefined(_);
		},stx_Nano.digests(stx_nano_Wildcard.__)))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1)));
	}
	return out;
};
stx_nano_PledgeLift.point = function(self,fn) {
	return stx_nano_Alert.lift(tink_core_Future.map(self,function(res) {
		switch(res._hx_index) {
		case 0:
			var t = res.t;
			return fn(t);
		case 1:
			var e = res.e;
			return stx_fail_RefuseLift.report(e);
		}
	}));
};
stx_nano_PledgeLift.errata = function(self,fn) {
	return tink_core_Future.map(stx_nano_Pledge.prj(self),function(chk) {
		var self;
		switch(chk._hx_index) {
		case 0:
			var t = chk.t;
			self = stx_nano_Res.accept(t);
			break;
		case 1:
			var e = chk.e;
			self = stx_nano_Res.reject(fn(e));
			break;
		}
		var this1 = self;
		return this1;
	});
};
stx_nano_PledgeLift.errate = function(self,fn) {
	return stx_nano_PledgeLift.errata(self,function(x) {
		return stx_fail_Refuse.errate(x,fn);
	});
};
stx_nano_PledgeLift.each = function(self,fn,err) {
	stx_nano_Pledge.prj(self).handle(function(res) {
		switch(res._hx_index) {
		case 0:
			var t = res.t;
			fn(t);
			break;
		case 1:
			var e = res.e;
			var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,err);
			switch(self._hx_index) {
			case 0:
				var t = self.v;
				t(e);
				break;
			case 1:
				throw haxe_Exception.thrown(e);
			}
			break;
		}
	});
};
stx_nano_PledgeLift.tap = function(self,fn,pos) {
	return stx_nano_PledgeLift.lift(tink_core_Future.map(stx_nano_Pledge.prj(self),function(x) {
		fn(x,pos);
		return x;
	}));
};
stx_nano_PledgeLift.command = function(self,fn) {
	return stx_nano_Pledge.flat_map(self,function(t) {
		return stx_nano_AlertLift.resolve(fn(t),t);
	});
};
stx_nano_PledgeLift.execute = function(self,fn) {
	return stx_nano_Pledge.flat_map(self,function(t) {
		return stx_nano_AlertLift.resolve(fn(),t);
	});
};
stx_nano_PledgeLift.anyway = function(self,fn) {
	return tink_core_Future.flatMap(self,function(res) {
		var tmp;
		switch(res._hx_index) {
		case 0:
			var t = res.t;
			var ok = t;
			var f = null;
			tmp = stx_nano_AlertLift.flat_fold(fn(f == null ? stx_nano_Report.unit() : stx_nano_Report.pure(f(stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/nano/Pledge.hx", lineNumber : 326, className : "stx.nano.PledgeLift", methodName : "anyway"})))),function(err) {
				return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(err),{ fileName : "stx/nano/Pledge.hx", lineNumber : 327, className : "stx.nano.PledgeLift", methodName : "anyway"})));
			},function() {
				return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,ok)));
			});
			break;
		case 1:
			var e = res.e;
			var err = e;
			tmp = stx_nano_AlertLift.flat_fold(fn(stx_fail_RefuseLift.report(err)),function(err0) {
				return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.concat(err,err0)),{ fileName : "stx/nano/Pledge.hx", lineNumber : 331, className : "stx.nano.PledgeLift", methodName : "anyway"})));
			},function() {
				return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(err),{ fileName : "stx/nano/Pledge.hx", lineNumber : 332, className : "stx.nano.PledgeLift", methodName : "anyway"})));
			});
			break;
		}
		return tmp;
	});
};
stx_nano_PledgeLift.toTinkPromise = function(self) {
	return stx_nano_PledgeLift.fold(self,function(ok) {
		return tink_core_Outcome.Success(ok);
	},function(no) {
		return tink_core_Outcome.Failure(stx_nano_lift_LiftError.toTinkError(no));
	});
};
var stx_nano_Pledge = {};
stx_nano_Pledge._new = function(self) {
	var this1 = self;
	return this1;
};
stx_nano_Pledge.lift = function(self) {
	return stx_nano_Pledge._new(self);
};
stx_nano_Pledge.make = function(ch) {
	var this1 = new tink_core__$Future_SuspendableFuture(function(f) {
		f(ch);
		return null;
	});
	return this1;
};
stx_nano_Pledge.pure = function(self) {
	return stx_nano_Pledge.make(stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,self));
};
stx_nano_Pledge.accept = function(ch) {
	return stx_nano_Pledge.make(stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,ch));
};
stx_nano_Pledge.reject = function(e) {
	return stx_nano_Pledge.make(stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.lift(stx_fail_Error.errate(e,stx_fail_DeclineSum.EXTERIOR))),{ fileName : "stx/nano/Pledge.hx", lineNumber : 23, className : "stx.nano._Pledge.Pledge_Impl_", methodName : "reject"}));
};
stx_nano_Pledge.bind_fold = function(it,fm,start) {
	return stx_nano_Pledge._new(stx_nano_lift_LiftNano.nano(stx_nano_Wildcard.__).Ft().bind_fold(it,function(next,memo) {
		switch(memo._hx_index) {
		case 0:
			var t = memo.t;
			return stx_nano_Pledge.prj(fm(next,t));
		case 1:
			var e = memo.e;
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(stx_nano_ResSum.Reject(e)));
		}
	},stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,start)));
};
stx_nano_Pledge.seq = function(iter) {
	return stx_nano_Pledge.bind_fold(iter,function(next,memo) {
		return stx_nano_Pledge.map(next,function(a) {
			return stx_lift_ArrayLift.snoc(memo,a);
		});
	},[]);
};
stx_nano_Pledge.lazy = function(fn) {
	return stx_nano_Pledge.lift(tink_core_Future.irreversible(function(f) {
		f(stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,fn()));
	}));
};
stx_nano_Pledge.fromLazyError = function(fn) {
	return stx_nano_Pledge.fromLazyRes(function() {
		return stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.lift(stx_fail_Error.errate(fn(),stx_fail_DeclineSum.EXTERIOR))),{ fileName : "stx/nano/Pledge.hx", lineNumber : 55, className : "stx.nano._Pledge.Pledge_Impl_", methodName : "fromLazyError"});
	});
};
stx_nano_Pledge.fromTinkPromise = function(promise) {
	return stx_nano_Pledge.lift(tink_core_Future.map(promise,function(outcome) {
		switch(outcome._hx_index) {
		case 0:
			var s = outcome.data;
			return stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,s);
		case 1:
			var f = outcome.failure;
			return stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.make(haxe_ds_Option.Some(stx_fail_DeclineSum.INTERIOR(stx_nano_Digests.e_tink_error(stx_Nano.digests(stx_nano_Wildcard.__),f.message,f.code))),haxe_ds_Option.None,stx_pico_Option.fromNullT(f.pos))),{ fileName : "stx/nano/Pledge.hx", lineNumber : 64, className : "stx.nano._Pledge.Pledge_Impl_", methodName : "fromTinkPromise"});
		}
	}));
};
stx_nano_Pledge.fromTinkFuture = function(future) {
	return stx_nano_Pledge.lift(tink_core_Future.map(future,function(t) {
		return stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,t);
	}));
};
stx_nano_Pledge.fromLazyRes = function(fn) {
	return tink_core_Future.irreversible(function(f) {
		f(fn());
	});
};
stx_nano_Pledge.err = function(e) {
	return stx_nano_Pledge.make(stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.lift(stx_fail_Error.errate(e,stx_fail_DeclineSum.EXTERIOR))),{ fileName : "stx/nano/Pledge.hx", lineNumber : 80, className : "stx.nano._Pledge.Pledge_Impl_", methodName : "err"}));
};
stx_nano_Pledge.fromRes = function(chk) {
	return tink_core_Future.irreversible(function(cb) {
		cb(chk);
	});
};
stx_nano_Pledge.fromOption = function(m) {
	var val;
	switch(m._hx_index) {
	case 0:
		var t = m.v;
		val = stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,t);
		break;
	case 1:
		var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/nano/Pledge.hx", lineNumber : 90, className : "stx.nano._Pledge.Pledge_Impl_", methodName : "fromOption"});
		val = stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.make(haxe_ds_Option.Some(stx_fail_DeclineSum.INTERIOR(stx_nano_CTR.apply(function(_) {
			return stx_nano_Digests.e_undefined(_);
		},stx_Nano.digests(stx_nano_Wildcard.__)))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1))),{ fileName : "stx/nano/Pledge.hx", lineNumber : 90, className : "stx.nano._Pledge.Pledge_Impl_", methodName : "fromOption"});
		break;
	}
	var val1 = val;
	return stx_nano_Pledge.fromRes(val1);
};
stx_nano_Pledge.prj = function(this1) {
	return this1;
};
stx_nano_Pledge.get_self = function(this1) {
	return stx_nano_Pledge.lift(this1);
};
stx_nano_Pledge.map = function(this1,fn) {
	return stx_nano_Pledge._.map(this1,fn);
};
stx_nano_Pledge.flat_map = function(this1,fn) {
	return stx_nano_Pledge._.flat_map(this1,fn);
};
stx_nano_Pledge.trigger = function() {
	return stx_nano_PledgeTrigger._new();
};
stx_nano_Pledge.fromJsPromise = function(self,pos) {
	return stx_nano_Pledge.lift(tink_core_Future.map(tink_core_Future.ofJsPromise(self),function(outcome) {
		switch(outcome._hx_index) {
		case 0:
			var v = outcome.data;
			return stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,v);
		case 1:
			var e = outcome.failure;
			var _g = Type.typeof(e.data);
			if(_g._hx_index == 6) {
				if(_g.c == Error) {
					var er = e.data;
					var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,pos);
					return stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.make(haxe_ds_Option.Some(stx_fail_DeclineSum.INTERIOR(stx_nano_CTR.apply(function(_) {
						return stx_nano_Digests.e_js_error(_,er);
					},stx_Nano.digests(stx_nano_Wildcard.__)))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1))),{ fileName : "stx/nano/Pledge.hx", lineNumber : 122, className : "stx.nano._Pledge.Pledge_Impl_", methodName : "fromJsPromise"});
				} else {
					var x = _g;
					var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,pos);
					return stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.make(haxe_ds_Option.Some(stx_fail_DeclineSum.INTERIOR(stx_nano_CTR.apply(function(_) {
						return stx_nano_Digests.e_js_error(_,new Error("" + (e.data == null ? "null" : Std.string(e.data))));
					},stx_Nano.digests(stx_nano_Wildcard.__)))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1))),{ fileName : "stx/nano/Pledge.hx", lineNumber : 124, className : "stx.nano._Pledge.Pledge_Impl_", methodName : "fromJsPromise"});
				}
			} else {
				var x = _g;
				var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,pos);
				return stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.make(haxe_ds_Option.Some(stx_fail_DeclineSum.INTERIOR(stx_nano_CTR.apply(function(_) {
					return stx_nano_Digests.e_js_error(_,new Error("" + (e.data == null ? "null" : Std.string(e.data))));
				},stx_Nano.digests(stx_nano_Wildcard.__)))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1))),{ fileName : "stx/nano/Pledge.hx", lineNumber : 124, className : "stx.nano._Pledge.Pledge_Impl_", methodName : "fromJsPromise"});
			}
			break;
		}
	}));
};
var stx_nano_PledgeTrigger = {};
stx_nano_PledgeTrigger._new = function() {
	var this1 = new tink_core_FutureTrigger();
	return this1;
};
stx_nano_PledgeTrigger.toPledge = function(this1) {
	return stx_nano_Pledge.lift(this1);
};
stx_nano_PledgeTrigger.prj = function(this1) {
	return this1;
};
var stx_nano_PositionLift = function() { };
$hxClasses["stx.nano.PositionLift"] = stx_nano_PositionLift;
stx_nano_PositionLift.__name__ = "stx.nano.PositionLift";
stx_nano_PositionLift.copy = function(p) {
	return stx_nano_Position.make(p.fileName,p.className,p.methodName,p.lineNumber,p.customParams);
};
stx_nano_PositionLift.withFragmentName = function(pos) {
	var f = pos.fileName;
	var cls = pos.className;
	var fn = pos.methodName;
	var ln = pos.lineNumber;
	return "" + cls + "." + fn;
};
stx_nano_PositionLift.toStringClassMethodLine = function(pos) {
	var f = pos.fileName;
	var cls = pos.className;
	var fn = pos.methodName;
	var ln = pos.lineNumber;
	var class_method = stx_nano_PositionLift.withFragmentName(pos);
	return "(" + class_method + "@" + pos.lineNumber + ")";
};
stx_nano_PositionLift.to_vscode_clickable_link = function(pos) {
	var f = pos.fileName;
	var cls = pos.className;
	var fn = pos.methodName;
	var ln = pos.lineNumber;
	var class_method = stx_nano_PositionLift.withFragmentName(pos);
	return "" + f + ":" + ln;
};
stx_nano_PositionLift.toString_name_method_line = function(pos) {
	var name = stx_pico_Identifier.get_name(stx_nano_lift_LiftNano.toIdentifier(stx_nano_Position.fromPos(pos)));
	var method = pos.methodName;
	var line = pos.lineNumber;
	return "" + name + "." + method + "@" + line;
};
stx_nano_PositionLift.withCustomParams = function(p,v) {
	p = stx_nano_PositionLift.copy(p);
	if(p.customParams == null) {
		p.customParams = [];
	}
	p.customParams.push(v);
	return p;
};
stx_nano_PositionLift.identifier = function(self) {
	var valid = stx_nano_Position.get_fileName(stx_nano_lift_LiftNano.toPosition(self)).split(".")[0].split(stx_nano_lift_LiftNano.sep(stx_nano_Wildcard.__)).join(".");
	return stx_pico_Identifier._new(valid);
};
stx_nano_PositionLift.toIdentfier = function(self) {
	var valid = stx_nano_Position.get_fileName(stx_nano_lift_LiftNano.toPosition(self)).split(".")[0].split(stx_nano_lift_LiftNano.sep(stx_nano_Wildcard.__)).join(".");
	return stx_pico_Identifier._new(valid);
};
var stx_nano_Position = {};
stx_nano_Position._new = function(self) {
	var this1 = self;
	return this1;
};
stx_nano_Position.lift = function(pos) {
	return stx_nano_Position.fromPos(pos);
};
stx_nano_Position.make = function(fileName,className,methodName,lineNumber,customParams) {
	return { fileName : fileName, className : className, methodName : methodName, lineNumber : lineNumber, customParams : customParams};
};
stx_nano_Position.fromPos = function(pos) {
	return stx_nano_Position._new(pos);
};
stx_nano_Position.toString = function(this1) {
	return stx_nano_Position._.toStringClassMethodLine(this1);
};
stx_nano_Position.here = function(pos) {
	return pos;
};
stx_nano_Position.get_customParams = function(this1) {
	return this1.customParams;
};
stx_nano_Position.toIdent = function(this1) {
	return stx_nano_Ident.fromIdentifier(stx_nano_lift_LiftNano.toIdentifier(this1));
};
stx_nano_Position.get_className = function(this1) {
	return this1.className;
};
stx_nano_Position.get_fileName = function(this1) {
	return this1.fileName;
};
stx_nano_Position.get_lineNumber = function(this1) {
	return this1.lineNumber;
};
stx_nano_Position.get_methodName = function(this1) {
	return this1.methodName;
};
stx_nano_Position.toPos = function(this1) {
	return this1;
};
var stx_nano_PrimitiveDef = $hxEnums["stx.nano.PrimitiveDef"] = { __ename__:"stx.nano.PrimitiveDef",__constructs__:null
	,PNull: {_hx_name:"PNull",_hx_index:0,__enum__:"stx.nano.PrimitiveDef",toString:$estr}
	,PBool: ($_=function(b) { return {_hx_index:1,b:b,__enum__:"stx.nano.PrimitiveDef",toString:$estr}; },$_._hx_name="PBool",$_.__params__ = ["b"],$_)
	,PSprig: ($_=function(sprig) { return {_hx_index:2,sprig:sprig,__enum__:"stx.nano.PrimitiveDef",toString:$estr}; },$_._hx_name="PSprig",$_.__params__ = ["sprig"],$_)
};
stx_nano_PrimitiveDef.__constructs__ = [stx_nano_PrimitiveDef.PNull,stx_nano_PrimitiveDef.PBool,stx_nano_PrimitiveDef.PSprig];
var stx_nano_Primitive = {};
stx_nano_Primitive.fromInt = function(i) {
	return stx_nano_PrimitiveDef.PSprig(stx_nano_SprigSum.Byteal(stx_nano_NumericSum.NInt(i)));
};
stx_nano_Primitive.fromFloat = function(i) {
	return stx_nano_PrimitiveDef.PSprig(stx_nano_SprigSum.Byteal(stx_nano_NumericSum.NFloat(i)));
};
stx_nano_Primitive.fromBool = function(i) {
	return stx_nano_PrimitiveDef.PBool(i);
};
stx_nano_Primitive.fromString = function(i) {
	return stx_nano_PrimitiveDef.PSprig(stx_nano_SprigSum.Textal(i));
};
stx_nano_Primitive.toAny = function(this1) {
	switch(this1._hx_index) {
	case 0:
		return null;
	case 1:
		var b = this1.b;
		return b;
	case 2:
		var _g = this1.sprig;
		switch(_g._hx_index) {
		case 0:
			var t = _g.str;
			return t;
		case 1:
			var _g1 = _g.byte;
			switch(_g1._hx_index) {
			case 0:
				var n = _g1.int;
				return n;
			case 1:
				var n = _g1.int;
				return n;
			case 2:
				var n = _g1.f;
				return n;
			}
			break;
		}
		break;
	}
};
stx_nano_Primitive.toString = function(this1) {
	switch(this1._hx_index) {
	case 0:
		return "null";
	case 1:
		var b = this1.b;
		return "" + (b == null ? "null" : "" + b);
	case 2:
		var _g = this1.sprig;
		switch(_g._hx_index) {
		case 0:
			var t = _g.str;
			return t;
		case 1:
			var _g1 = _g.byte;
			switch(_g1._hx_index) {
			case 0:
				var n = _g1.int;
				return "" + n;
			case 1:
				var n = _g1.int;
				return "" + (n == null ? "null" : haxe_Int64.toString(n));
			case 2:
				var n = _g1.f;
				return "" + n;
			}
			break;
		}
		break;
	}
};
stx_nano_Primitive.prj = function(this1) {
	return this1;
};
stx_nano_Primitive.lt = function(l,r) {
	switch(l._hx_index) {
	case 1:
		if(l.b == false) {
			if(r._hx_index == 1) {
				if(r.b == true) {
					return true;
				} else {
					return false;
				}
			} else {
				var x = l;
				var y = r;
				return x._hx_index < y._hx_index;
			}
		} else if(r._hx_index == 1) {
			var _g = r.b;
			return false;
		} else {
			var x = l;
			var y = r;
			return x._hx_index < y._hx_index;
		}
		break;
	case 2:
		var _g = l.sprig;
		switch(_g._hx_index) {
		case 0:
			if(r._hx_index == 2) {
				var _g1 = r.sprig;
				if(_g1._hx_index == 0) {
					var str0 = _g1.str;
					var str = _g.str;
					return str < str0;
				} else {
					var x = l;
					var y = r;
					return x._hx_index < y._hx_index;
				}
			} else {
				var x = l;
				var y = r;
				return x._hx_index < y._hx_index;
			}
			break;
		case 1:
			var _g1 = _g.byte;
			switch(_g1._hx_index) {
			case 0:
				if(r._hx_index == 2) {
					var _g = r.sprig;
					if(_g._hx_index == 1) {
						var _g2 = _g.byte;
						if(_g2._hx_index == 0) {
							var int0 = _g2.int;
							var int = _g1.int;
							return int < int0;
						} else {
							var x = l;
							var y = r;
							return x._hx_index < y._hx_index;
						}
					} else {
						var x = l;
						var y = r;
						return x._hx_index < y._hx_index;
					}
				} else {
					var x = l;
					var y = r;
					return x._hx_index < y._hx_index;
				}
				break;
			case 1:
				if(r._hx_index == 2) {
					var _g = r.sprig;
					if(_g._hx_index == 1) {
						var _g2 = _g.byte;
						if(_g2._hx_index == 1) {
							var int0 = _g2.int;
							var int = _g1.int;
							var v = int.high - int0.high | 0;
							if(v == 0) {
								v = haxe_Int32.ucompare(int.low,int0.low);
							}
							return (int.high < 0 ? int0.high < 0 ? v : -1 : int0.high >= 0 ? v : 1) < 0;
						} else {
							var x = l;
							var y = r;
							return x._hx_index < y._hx_index;
						}
					} else {
						var x = l;
						var y = r;
						return x._hx_index < y._hx_index;
					}
				} else {
					var x = l;
					var y = r;
					return x._hx_index < y._hx_index;
				}
				break;
			case 2:
				if(r._hx_index == 2) {
					var _g = r.sprig;
					if(_g._hx_index == 1) {
						var _g2 = _g.byte;
						if(_g2._hx_index == 2) {
							var fl0 = _g2.f;
							var fl = _g1.f;
							return fl < fl0;
						} else {
							var x = l;
							var y = r;
							return x._hx_index < y._hx_index;
						}
					} else {
						var x = l;
						var y = r;
						return x._hx_index < y._hx_index;
					}
				} else {
					var x = l;
					var y = r;
					return x._hx_index < y._hx_index;
				}
				break;
			}
			break;
		}
		break;
	default:
		var x = l;
		var y = r;
		return x._hx_index < y._hx_index;
	}
};
stx_nano_Primitive.eq = function(l,r) {
	switch(l._hx_index) {
	case 0:
		if(r._hx_index == 0) {
			return true;
		} else {
			return false;
		}
		break;
	case 1:
		if(l.b) {
			if(r._hx_index == 1) {
				if(r.b == true) {
					return true;
				} else {
					return false;
				}
			} else {
				return false;
			}
		} else if(r._hx_index == 1) {
			if(r.b == false) {
				return true;
			} else {
				return false;
			}
		} else {
			return false;
		}
		break;
	case 2:
		var _g = l.sprig;
		switch(_g._hx_index) {
		case 0:
			if(r._hx_index == 2) {
				var _g1 = r.sprig;
				if(_g1._hx_index == 0) {
					var str0 = _g1.str;
					var str = _g.str;
					return str == str0;
				} else {
					return false;
				}
			} else {
				return false;
			}
			break;
		case 1:
			var _g1 = _g.byte;
			switch(_g1._hx_index) {
			case 0:
				if(r._hx_index == 2) {
					var _g = r.sprig;
					if(_g._hx_index == 1) {
						var _g2 = _g.byte;
						if(_g2._hx_index == 0) {
							var int0 = _g2.int;
							var int = _g1.int;
							return int == int0;
						} else {
							return false;
						}
					} else {
						return false;
					}
				} else {
					return false;
				}
				break;
			case 1:
				if(r._hx_index == 2) {
					var _g = r.sprig;
					if(_g._hx_index == 1) {
						var _g2 = _g.byte;
						if(_g2._hx_index == 1) {
							var int0 = _g2.int;
							var int = _g1.int;
							if(int.high == int0.high) {
								return int.low == int0.low;
							} else {
								return false;
							}
						} else {
							return false;
						}
					} else {
						return false;
					}
				} else {
					return false;
				}
				break;
			case 2:
				if(r._hx_index == 2) {
					var _g = r.sprig;
					if(_g._hx_index == 1) {
						var _g2 = _g.byte;
						if(_g2._hx_index == 2) {
							var fl0 = _g2.f;
							var fl = _g1.f;
							return fl == fl0;
						} else {
							return false;
						}
					} else {
						return false;
					}
				} else {
					return false;
				}
				break;
			}
			break;
		}
		break;
	}
};
var stx_nano_PrimitiveTypeCtr = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["stx.nano.PrimitiveTypeCtr"] = stx_nano_PrimitiveTypeCtr;
stx_nano_PrimitiveTypeCtr.__name__ = "stx.nano.PrimitiveTypeCtr";
stx_nano_PrimitiveTypeCtr.__super__ = stx_pico_Clazz;
stx_nano_PrimitiveTypeCtr.prototype = $extend(stx_pico_Clazz.prototype,{
	blob: function() {
		return stx_nano_PrimitiveTypeSum.PTBlob;
	}
	,bool: function() {
		return stx_nano_PrimitiveTypeSum.PTBool;
	}
	,int: function() {
		return stx_nano_PrimitiveTypeSum.PTInt;
	}
	,uint: function() {
		return stx_nano_PrimitiveTypeSum.PTUint;
	}
	,float: function() {
		return stx_nano_PrimitiveTypeSum.PTFloat;
	}
	,int64: function() {
		return stx_nano_PrimitiveTypeSum.PTInt64;
	}
	,text: function() {
		return stx_nano_PrimitiveTypeSum.PTText;
	}
	,__class__: stx_nano_PrimitiveTypeCtr
});
var stx_nano_PrimitiveTypeSum = $hxEnums["stx.nano.PrimitiveTypeSum"] = { __ename__:"stx.nano.PrimitiveTypeSum",__constructs__:null
	,PTBlob: {_hx_name:"PTBlob",_hx_index:0,__enum__:"stx.nano.PrimitiveTypeSum",toString:$estr}
	,PTBool: {_hx_name:"PTBool",_hx_index:1,__enum__:"stx.nano.PrimitiveTypeSum",toString:$estr}
	,PTInt: {_hx_name:"PTInt",_hx_index:2,__enum__:"stx.nano.PrimitiveTypeSum",toString:$estr}
	,PTUint: {_hx_name:"PTUint",_hx_index:3,__enum__:"stx.nano.PrimitiveTypeSum",toString:$estr}
	,PTFloat: {_hx_name:"PTFloat",_hx_index:4,__enum__:"stx.nano.PrimitiveTypeSum",toString:$estr}
	,PTInt64: {_hx_name:"PTInt64",_hx_index:5,__enum__:"stx.nano.PrimitiveTypeSum",toString:$estr}
	,PTText: {_hx_name:"PTText",_hx_index:6,__enum__:"stx.nano.PrimitiveTypeSum",toString:$estr}
};
stx_nano_PrimitiveTypeSum.__constructs__ = [stx_nano_PrimitiveTypeSum.PTBlob,stx_nano_PrimitiveTypeSum.PTBool,stx_nano_PrimitiveTypeSum.PTInt,stx_nano_PrimitiveTypeSum.PTUint,stx_nano_PrimitiveTypeSum.PTFloat,stx_nano_PrimitiveTypeSum.PTInt64,stx_nano_PrimitiveTypeSum.PTText];
var stx_nano_PrimitiveTypeLift = function() { };
$hxClasses["stx.nano.PrimitiveTypeLift"] = stx_nano_PrimitiveTypeLift;
stx_nano_PrimitiveTypeLift.__name__ = "stx.nano.PrimitiveTypeLift";
stx_nano_PrimitiveTypeLift.lift = function(self) {
	var this1 = self;
	return this1;
};
var stx_nano_PrimitiveType = {};
stx_nano_PrimitiveType._new = function(self) {
	var this1 = self;
	return this1;
};
stx_nano_PrimitiveType.lift = function(self) {
	var this1 = self;
	return this1;
};
stx_nano_PrimitiveType.prj = function(this1) {
	return this1;
};
stx_nano_PrimitiveType.get_self = function(this1) {
	var this2 = this1;
	return this2;
};
var stx_nano_ReceiptLift = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["stx.nano.ReceiptLift"] = stx_nano_ReceiptLift;
stx_nano_ReceiptLift.__name__ = "stx.nano.ReceiptLift";
stx_nano_ReceiptLift.make = function() {
	return new stx_nano_ReceiptLift();
};
stx_nano_ReceiptLift.lift = function(self) {
	return stx_nano_Receipt.lift(self);
};
stx_nano_ReceiptLift.errate = function(self,fn) {
	return stx_nano_ReceiptLift.errata(self,function(x) {
		return stx_fail_Refuse.errate(x,fn);
	});
};
stx_nano_ReceiptLift.errata = function(self,fn) {
	return stx_nano_Receipt.make(self.value,stx_fail_Error.errata(self.get_error(),fn));
};
stx_nano_ReceiptLift.copy = function(self,value,error) {
	var self1 = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,value);
	var tmp;
	if(self1._hx_index == 0) {
		var v = self1.v;
		tmp = v;
	} else {
		tmp = self.value;
	}
	var self1 = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,error);
	var v = self.get_error();
	var tmp1;
	if(self1._hx_index == 0) {
		var v1 = self1.v;
		tmp1 = v1;
	} else {
		tmp1 = v;
	}
	return stx_nano_Receipt.make(tmp,tmp1);
};
stx_nano_ReceiptLift.map = function(self,fn) {
	var self1 = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,self.value);
	var tmp;
	switch(self1._hx_index) {
	case 0:
		var t = self1.v;
		tmp = fn(t);
		break;
	case 1:
		tmp = null;
		break;
	}
	return stx_nano_Receipt.make(tmp,self.get_error());
};
stx_nano_ReceiptLift.is_defined = function(self) {
	return self.value != null;
};
stx_nano_ReceiptLift.has_errors = function(self) {
	return self.get_error().is_defined();
};
stx_nano_ReceiptLift.has_error = function(self) {
	return self.get_error().is_defined();
};
stx_nano_ReceiptLift.has_value = function(self) {
	return self.value != null;
};
stx_nano_ReceiptLift.toRes = function(self) {
	if(stx_nano_ReceiptLift.has_errors(self)) {
		return stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_nano_Defect.toRefuse(self.toDefect())),{ fileName : "stx/nano/Receipt.hx", lineNumber : 113, className : "stx.nano.ReceiptLift", methodName : "toRes"});
	} else {
		return stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,self.value);
	}
};
stx_nano_ReceiptLift.__super__ = stx_pico_Clazz;
stx_nano_ReceiptLift.prototype = $extend(stx_pico_Clazz.prototype,{
	__class__: stx_nano_ReceiptLift
});
var stx_nano_Receipt = {};
stx_nano_Receipt._new = function(self) {
	var this1 = self;
	return this1;
};
stx_nano_Receipt.lift = function(self) {
	return stx_nano_Receipt._new(self);
};
stx_nano_Receipt.unit = function() {
	return stx_nano_Receipt.make(null,stx_fail_Refuse.unit());
};
stx_nano_Receipt.make = function(value,error) {
	var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,error);
	var v = stx_fail_Refuse.unit();
	var tmp;
	if(self._hx_index == 0) {
		var v1 = self.v;
		tmp = v1;
	} else {
		tmp = v;
	}
	return stx_nano_Receipt.lift(new stx_nano_ReceiptCls(tmp,value));
};
stx_nano_Receipt.prj = function(this1) {
	return this1;
};
stx_nano_Receipt.get_self = function(this1) {
	return stx_nano_Receipt.lift(this1);
};
stx_nano_Receipt.fromDefect = function(self) {
	return stx_nano_Receipt.make(null,self.get_error());
};
stx_nano_Receipt.pure = function(self) {
	return stx_nano_Receipt.make(self,stx_fail_Refuse.unit());
};
stx_nano_Receipt.toError = function(this1) {
	return this1.get_error().toError();
};
var stx_nano_RecordLift = function() { };
$hxClasses["stx.nano.RecordLift"] = stx_nano_RecordLift;
stx_nano_RecordLift.__name__ = "stx.nano.RecordLift";
stx_nano_RecordLift.ord = function(inner) {
	return new stx_assert_ord_term_Record(inner);
};
stx_nano_RecordLift.eq = function(inner) {
	return new stx_assert_eq_term_Record(inner);
};
var stx_nano_Record = {};
stx_nano_Record.unit = function() {
	return stx_nano_Record._new(stx_nano_Cluster.lift([]));
};
stx_nano_Record.lift = function(self) {
	return stx_nano_Record._new(self);
};
stx_nano_Record._new = function(self) {
	var this1 = self == null ? [] : self;
	return this1;
};
stx_nano_Record.size = function(this1) {
	return stx_nano_Cluster.get_length(this1);
};
stx_nano_Record.add = function(this1,that) {
	return stx_nano_Cluster.concat(this1,[that]);
};
stx_nano_Record.equals = function(this1,that,$with) {
	if(stx_nano_Cluster.get_length(this1) != stx_nano_Record.size(that)) {
		return false;
	} else {
		var ok = true;
		var _g_current = 0;
		var _g_array = this1;
		_hx_loop1: while(_g_current < _g_array.length) {
			var v = _g_array[_g_current++];
			var key = v.key;
			var other = stx_nano_Record.get(that,key);
			switch(other._hx_index) {
			case 0:
				var v0 = other.v;
				if(!stx_assert_EqualedSum.is_ok($with.comply(v.val(),v0()))) {
					ok = false;
					break _hx_loop1;
				}
				break;
			case 1:
				break;
			}
		}
		return ok;
	}
};
stx_nano_Record.get = function(this1,key) {
	var out = haxe_ds_Option.None;
	var _g_current = 0;
	var _g_array = this1;
	while(_g_current < _g_array.length) {
		var v = _g_array[_g_current++];
		if(v.key == key) {
			out = haxe_ds_Option.Some(v);
			break;
		}
	}
	if(out._hx_index == 0) {
		var v = out.v;
		return haxe_ds_Option.Some(v.val);
	} else {
		return haxe_ds_Option.None;
	}
};
stx_nano_Record.has = function(this1,key) {
	var self = stx_pico_OptionLift.map(stx_nano_Record.get(this1,key),function(_) {
		return true;
	});
	if(self._hx_index == 0) {
		var v = self.v;
		return v;
	} else {
		return false;
	}
};
stx_nano_Record.fold = function(this1,fn,i) {
	var current = i;
	var _g_current = 0;
	var _g_array = this1;
	while(_g_current < _g_array.length) {
		var v = _g_array[_g_current++];
		current = fn(v,current);
	}
	return current;
};
stx_nano_Record.reduct = function() {
	return function(next,memo) {
		return stx_nano_Record.add(memo,next);
	};
};
stx_nano_Record.map = function(this1,fn) {
	return stx_nano_ClusterLift.lfold(stx_nano_ClusterLift.map(this1,function(fld) {
		return stx_nano_Field.map(fld,function(thk) {
			return function() {
				return fn(thk());
			};
		});
	}),stx_nano_Record.reduct(),stx_nano_Record._new());
};
stx_nano_Record.concat = function(this1,that) {
	return stx_nano_Record.lift(stx_nano_Cluster.concat(this1,stx_nano_Record.prj(that)));
};
stx_nano_Record.imap = function(this1,fn) {
	return stx_nano_ClusterLift.lfold(stx_nano_ClusterLift.imap(this1,function(i,fld) {
		return stx_nano_Field.map(fld,function(thk) {
			return function() {
				return fn(i,thk());
			};
		});
	}),stx_nano_Record.reduct(),stx_nano_Record._new());
};
stx_nano_Record.fromUnderlying = function(arr) {
	return stx_nano_Record._new(arr);
};
stx_nano_Record.fromMap = function(self) {
	var arr = [];
	var h = self.h;
	var _g_h = h;
	var _g_keys = Object.keys(h);
	var _g_length = _g_keys.length;
	var _g_current = 0;
	while(_g_current < _g_length) {
		var key = _g_keys[_g_current++];
		var _g_key = key;
		var _g_value = _g_h[key];
		var key1 = _g_key;
		var val = [_g_value];
		arr.push(stx_nano_Field.make(key1,(function(val) {
			return function() {
				return val[0];
			};
		})(val)));
	}
	return stx_nano_Record._new(stx_nano_Cluster.lift(arr));
};
stx_nano_Record.prj = function(this1) {
	return this1;
};
stx_nano_Record.toCluster = function(this1) {
	return this1;
};
var stx_nano_RegisterCls = function(index,count) {
	this.index = index;
	this.count = count;
};
$hxClasses["stx.nano.RegisterCls"] = stx_nano_RegisterCls;
stx_nano_RegisterCls.__name__ = "stx.nano.RegisterCls";
stx_nano_RegisterCls.make = function(index,count) {
	return new stx_nano_RegisterCls(index,count);
};
stx_nano_RegisterCls.prototype = {
	index: null
	,count: null
	,equals: function(that) {
		if(this.index == that.index) {
			return this.count == that.count;
		} else {
			return false;
		}
	}
	,less_than: function(that) {
		if(UInt.gte(that.index,this.index)) {
			return UInt.gt(that.count,this.count);
		} else {
			return false;
		}
	}
	,__class__: stx_nano_RegisterCls
};
var stx_nano__$Register_RegisterLift = function() { };
$hxClasses["stx.nano._Register.RegisterLift"] = stx_nano__$Register_RegisterLift;
stx_nano__$Register_RegisterLift.__name__ = "stx.nano._Register.RegisterLift";
var stx_nano_Register = {};
stx_nano_Register._new = function() {
	var this1 = stx_nano__$Register_RegisterState.get_instance().next();
	return this1;
};
stx_nano_Register.less_than = function(this1,that) {
	return this1.less_than(that);
};
stx_nano_Register.equals = function(this1,that) {
	return this1.equals(that);
};
stx_nano_Register.unit = function() {
	return stx_nano_Register._new();
};
var stx_nano__$Register_RegisterState = function() {
	this.count = 0;
	this.index = 0;
};
$hxClasses["stx.nano._Register.RegisterState"] = stx_nano__$Register_RegisterState;
stx_nano__$Register_RegisterState.__name__ = "stx.nano._Register.RegisterState";
stx_nano__$Register_RegisterState.instance = null;
stx_nano__$Register_RegisterState.get_instance = function() {
	if(stx_nano__$Register_RegisterState.instance == null) {
		return stx_nano__$Register_RegisterState.instance = new stx_nano__$Register_RegisterState();
	} else {
		return stx_nano__$Register_RegisterState.instance;
	}
};
stx_nano__$Register_RegisterState.prototype = {
	next: function() {
		var next_index = this.index;
		var next_count = this.count;
		if(this.count == stx_nano__$Register_RegisterState.max) {
			this.index = this.index + 1;
			this.count = 0;
		} else {
			this.count = this.count + 1;
		}
		return new stx_nano_RegisterCls(next_index,next_count);
	}
	,index: null
	,count: null
	,__class__: stx_nano__$Register_RegisterState
};
var stx_nano_ReportLift = function() { };
$hxClasses["stx.nano.ReportLift"] = stx_nano_ReportLift;
stx_nano_ReportLift.__name__ = "stx.nano.ReportLift";
stx_nano_ReportLift.lift = function(self) {
	return stx_nano_Report._new(self);
};
stx_nano_ReportLift.resolve = function(self,fn) {
	var tmp;
	if(self == null) {
		tmp = stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,fn());
	} else {
		switch(self._hx_index) {
		case 0:
			var v = self.v;
			tmp = stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(v),{ fileName : "stx/nano/Report.hx", lineNumber : 104, className : "stx.nano.ReportLift", methodName : "resolve"});
			break;
		case 1:
			tmp = stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,fn());
			break;
		}
	}
	return tmp;
};
stx_nano_ReportLift.concat = function(self,that) {
	switch(self._hx_index) {
	case 0:
		var _g = self.v;
		switch(that._hx_index) {
		case 0:
			var r = that.v;
			var l = _g;
			return stx_nano_ReportSum.Reported(stx_fail_Refuse.concat(l,r));
		case 1:
			var l = _g;
			return stx_nano_ReportSum.Reported(l);
		}
		break;
	case 1:
		if(that._hx_index == 0) {
			var r = that.v;
			return stx_nano_ReportSum.Reported(r);
		} else {
			return stx_nano_ReportSum.Happened;
		}
		break;
	}
};
stx_nano_ReportLift.fold = function(self,val,nil) {
	if(self == null) {
		return nil();
	} else {
		switch(self._hx_index) {
		case 0:
			var v = self.v;
			return val(v);
		case 1:
			return nil();
		}
	}
};
stx_nano_ReportLift.def = function(self,fn) {
	var tmp;
	if(self == null) {
		tmp = fn();
	} else {
		switch(self._hx_index) {
		case 0:
			var v = self.v;
			tmp = v;
			break;
		case 1:
			tmp = fn();
			break;
		}
	}
	return tmp;
};
stx_nano_ReportLift.defv = function(self,v) {
	return stx_nano_ReportLift.def(self,function() {
		return v;
	});
};
stx_nano_ReportLift.is_defined = function(self) {
	if(self == null) {
		return false;
	} else {
		switch(self._hx_index) {
		case 0:
			var v = self.v;
			return true;
		case 1:
			return false;
		}
	}
};
stx_nano_ReportLift.ignore = function(self,fn) {
	var self1 = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,fn);
	if(self1._hx_index == 0) {
		var v = self1.v;
	} else {
		fn = function(x) {
			return true;
		};
	}
	if(self == null) {
		var f = null;
		if(f == null) {
			return stx_nano_Report.unit();
		} else {
			return stx_nano_Report.pure(f(stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/nano/Report.hx", lineNumber : 154, className : "stx.nano.ReportLift", methodName : "ignore"})));
		}
	} else {
		switch(self._hx_index) {
		case 0:
			var v = self.v;
			var err = v;
			var self = err.get_data();
			switch(self._hx_index) {
			case 0:
				var t = self.v;
				return stx_nano_lift_LiftNano.if_else(fn(t),function() {
					var f = null;
					if(f == null) {
						return stx_nano_Report.unit();
					} else {
						return stx_nano_Report.pure(f(stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/nano/Report.hx", lineNumber : 149, className : "stx.nano.ReportLift", methodName : "ignore"})));
					}
				},function() {
					return stx_fail_RefuseLift.report(err);
				});
			case 1:
				var f = null;
				if(f == null) {
					return stx_nano_Report.unit();
				} else {
					return stx_nano_Report.pure(f(stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/nano/Report.hx", lineNumber : 152, className : "stx.nano.ReportLift", methodName : "ignore"})));
				}
				break;
			}
			break;
		case 1:
			var f = null;
			if(f == null) {
				return stx_nano_Report.unit();
			} else {
				return stx_nano_Report.pure(f(stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/nano/Report.hx", lineNumber : 154, className : "stx.nano.ReportLift", methodName : "ignore"})));
			}
			break;
		}
	}
};
stx_nano_ReportLift.so = function(self,fn) {
	var tmp;
	if(self == null) {
		tmp = fn();
	} else {
		switch(self._hx_index) {
		case 0:
			var v = self.v;
			tmp = stx_fail_RefuseLift.report(v);
			break;
		case 1:
			tmp = fn();
			break;
		}
	}
	return tmp;
};
stx_nano_ReportLift.and = function(self,fn) {
	var tmp;
	if(self == null) {
		tmp = fn();
	} else {
		switch(self._hx_index) {
		case 0:
			var v = self.v;
			tmp = stx_fail_RefuseLift.report(v);
			break;
		case 1:
			tmp = fn();
			break;
		}
	}
	return tmp;
};
stx_nano_ReportLift.usher = function(self,fn) {
	if(self._hx_index == 0) {
		var refuse = self.v;
		return stx_fail_RefuseLift.usher(refuse,fn);
	} else {
		return fn(haxe_ds_Option.None);
	}
};
stx_nano_ReportLift.raise = function(self) {
	if(self != null) {
		switch(self._hx_index) {
		case 0:
			var v = self.v;
			v.raise();
			break;
		case 1:
			break;
		}
	}
};
var stx_nano_Report = {};
stx_nano_Report._new = function(self) {
	var this1 = self;
	return this1;
};
stx_nano_Report.lift = function(self) {
	return stx_nano_Report._new(self);
};
stx_nano_Report.make = function(data,pos) {
	var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,pos);
	return stx_nano_Report.pure(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(data)),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1)));
};
stx_nano_Report.make0 = function(data,pos) {
	return stx_nano_Report.pure(stx_fail_Refuse.make(haxe_ds_Option.Some(data),haxe_ds_Option.None,stx_pico_Option.fromNullT(stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,pos))));
};
stx_nano_Report.unit = function() {
	return stx_nano_Report._new(stx_nano_ReportSum.Happened);
};
stx_nano_Report.conf = function(e) {
	var self = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,e),stx_nano_ReportSum.Reported);
	var self1;
	if(self._hx_index == 0) {
		var v = self.v;
		self1 = v;
	} else {
		self1 = stx_nano_ReportSum.Happened;
	}
	return stx_nano_Report._new(self1);
};
stx_nano_Report.pure = function(e) {
	return stx_nano_Report._new(stx_nano_ReportSum.Reported(e));
};
stx_nano_Report.effects = function(this1,success,failure) {
	var tmp;
	if(this1 == null) {
		success();
		tmp = stx_nano_Report.unit();
	} else {
		switch(this1._hx_index) {
		case 0:
			var v = this1.v;
			failure();
			tmp = stx_nano_Report.pure(v);
			break;
		case 1:
			success();
			tmp = stx_nano_Report.unit();
			break;
		}
	}
	return tmp;
};
stx_nano_Report.crunch = function(this1) {
	if(this1._hx_index == 0) {
		var e = this1.v;
		throw haxe_Exception.thrown(e);
	}
};
stx_nano_Report.fromStdOption = function(opt) {
	var self;
	switch(opt._hx_index) {
	case 0:
		var t = opt.v;
		self = stx_nano_ReportSum.Reported(t);
		break;
	case 1:
		self = stx_nano_ReportSum.Happened;
		break;
	}
	return stx_nano_Report._new(self);
};
stx_nano_Report.fromOption = function(opt) {
	var self;
	switch(opt._hx_index) {
	case 0:
		var t = opt.v;
		self = stx_nano_ReportSum.Reported(t);
		break;
	case 1:
		self = stx_nano_ReportSum.Happened;
		break;
	}
	return stx_nano_Report._new(self);
};
stx_nano_Report.prj = function(this1) {
	return this1;
};
stx_nano_Report.option = function(this1) {
	var tmp;
	if(this1 == null) {
		tmp = haxe_ds_Option.None;
	} else {
		switch(this1._hx_index) {
		case 0:
			var v = this1.v;
			tmp = haxe_ds_Option.Some(v);
			break;
		case 1:
			tmp = haxe_ds_Option.None;
			break;
		}
	}
	return tmp;
};
stx_nano_Report.defv = function(this1,error) {
	var v = error;
	return stx_nano_ReportLift.def(this1,function() {
		return v;
	});
};
stx_nano_Report.or = function(this1,that) {
	var tmp;
	if(this1 == null) {
		tmp = that();
	} else {
		switch(this1._hx_index) {
		case 0:
			var v = this1.v;
			tmp = stx_nano_Report.pure(v);
			break;
		case 1:
			tmp = that();
			break;
		}
	}
	return tmp;
};
stx_nano_Report.errata = function(this1,fn) {
	var tmp;
	switch(this1._hx_index) {
	case 0:
		var v = this1.v;
		tmp = stx_nano_ReportSum.Reported(fn(v));
		break;
	case 1:
		tmp = stx_nano_ReportSum.Happened;
		break;
	}
	return stx_nano_Report._new(tmp);
};
stx_nano_Report.is_ok = function(this1) {
	if(this1._hx_index == 1) {
		return true;
	} else {
		return false;
	}
};
stx_nano_Report.promote = function(this1) {
	return stx_nano_Report._.resolve(this1,function() {
		return null;
	});
};
stx_nano_Report.alert = function(this1) {
	return stx_nano_Alert.make(this1);
};
var stx_nano_ReportSum = $hxEnums["stx.nano.ReportSum"] = { __ename__:"stx.nano.ReportSum",__constructs__:null
	,Reported: ($_=function(v) { return {_hx_index:0,v:v,__enum__:"stx.nano.ReportSum",toString:$estr}; },$_._hx_name="Reported",$_.__params__ = ["v"],$_)
	,Happened: {_hx_name:"Happened",_hx_index:1,__enum__:"stx.nano.ReportSum",toString:$estr}
};
stx_nano_ReportSum.__constructs__ = [stx_nano_ReportSum.Reported,stx_nano_ReportSum.Happened];
var stx_nano_ResSum = $hxEnums["stx.nano.ResSum"] = { __ename__:"stx.nano.ResSum",__constructs__:null
	,Accept: ($_=function(t) { return {_hx_index:0,t:t,__enum__:"stx.nano.ResSum",toString:$estr}; },$_._hx_name="Accept",$_.__params__ = ["t"],$_)
	,Reject: ($_=function(e) { return {_hx_index:1,e:e,__enum__:"stx.nano.ResSum",toString:$estr}; },$_._hx_name="Reject",$_.__params__ = ["e"],$_)
};
stx_nano_ResSum.__constructs__ = [stx_nano_ResSum.Accept,stx_nano_ResSum.Reject];
var stx_nano_ResSumLift = function() { };
$hxClasses["stx.nano.ResSumLift"] = stx_nano_ResSumLift;
stx_nano_ResSumLift.__name__ = "stx.nano.ResSumLift";
stx_nano_ResSumLift.toString = function(self) {
	return stx_nano_ResLift.toString(self);
};
var stx_nano_ResLift = function() { };
$hxClasses["stx.nano.ResLift"] = stx_nano_ResLift;
stx_nano_ResLift.__name__ = "stx.nano.ResLift";
stx_nano_ResLift.toString = function(self) {
	switch(self._hx_index) {
	case 0:
		var t = self.t;
		return "Accept(" + Std.string(t) + ")";
	case 1:
		var e = self.e;
		return "Reject(" + e.toString() + ")";
	}
};
stx_nano_ResLift.errata = function(self,fn) {
	var self1;
	switch(self._hx_index) {
	case 0:
		var t = self.t;
		self1 = stx_nano_Res.accept(t);
		break;
	case 1:
		var e = self.e;
		self1 = stx_nano_Res.reject(fn(e));
		break;
	}
	var this1 = self1;
	return this1;
};
stx_nano_ResLift.errate = function(self,fn) {
	var self1;
	switch(self._hx_index) {
	case 0:
		var t = self.t;
		self1 = stx_nano_Res.accept(t);
		break;
	case 1:
		var e = self.e;
		self1 = stx_nano_Res.reject(stx_fail_Refuse.errate(e,fn));
		break;
	}
	var this1 = self1;
	return this1;
};
stx_nano_ResLift.zip = function(self,that) {
	switch(self._hx_index) {
	case 0:
		var _g = self.t;
		switch(that._hx_index) {
		case 0:
			var tt = that.t;
			var t = _g;
			return stx_nano_ResSum.Accept(stx_nano_Couple.make(t,tt));
		case 1:
			var e = that.e;
			return stx_nano_ResSum.Reject(e);
		}
		break;
	case 1:
		var _g = self.e;
		if(that._hx_index == 1) {
			var ee = that.e;
			var e = _g;
			return stx_nano_ResSum.Reject(stx_fail_Refuse.concat(e,ee));
		} else {
			var e = _g;
			return stx_nano_ResSum.Reject(e);
		}
		break;
	}
};
stx_nano_ResLift.zip_with = function(self,that,$with) {
	switch(self._hx_index) {
	case 0:
		var _g = self.t;
		switch(that._hx_index) {
		case 0:
			var tt = that.t;
			var t = _g;
			return stx_nano_ResSum.Accept($with(t,tt));
		case 1:
			var e = that.e;
			return stx_nano_ResSum.Reject(e);
		}
		break;
	case 1:
		var _g = self.e;
		if(that._hx_index == 1) {
			var ee = that.e;
			var e = _g;
			return stx_nano_ResSum.Reject(stx_fail_Refuse.concat(e,ee));
		} else {
			var e = _g;
			return stx_nano_ResSum.Reject(e);
		}
		break;
	}
};
stx_nano_ResLift.map = function(self,fn) {
	var self1;
	switch(self._hx_index) {
	case 0:
		var t = self.t;
		self1 = stx_nano_ResSum.Accept(fn(t));
		break;
	case 1:
		var e = self.e;
		self1 = stx_nano_ResSum.Reject(e);
		break;
	}
	var this1 = self1;
	return this1;
};
stx_nano_ResLift.flat_map = function(self,fn) {
	var self1;
	switch(self._hx_index) {
	case 0:
		var t = self.t;
		self1 = fn(t);
		break;
	case 1:
		var e = self.e;
		self1 = stx_nano_ResSum.Reject(e);
		break;
	}
	var this1 = self1;
	return this1;
};
stx_nano_ResLift.adjust = function(self,fn) {
	var self1;
	switch(self._hx_index) {
	case 0:
		var t = self.t;
		self1 = fn(t);
		break;
	case 1:
		var e = self.e;
		self1 = stx_nano_ResSum.Reject(e);
		break;
	}
	var this1 = self1;
	return this1;
};
stx_nano_ResLift.fold = function(self,fn,er) {
	switch(self._hx_index) {
	case 0:
		var t = self.t;
		return fn(t);
	case 1:
		var e = self.e;
		return er(e);
	}
};
stx_nano_ResLift.fudge = function(self) {
	switch(self._hx_index) {
	case 0:
		var t = self.t;
		return t;
	case 1:
		var e = self.e;
		throw haxe_Exception.thrown(e);
	}
};
stx_nano_ResLift.elide = function(self) {
	var tmp;
	switch(self._hx_index) {
	case 0:
		var t = self.t;
		tmp = stx_nano_ResSum.Reject(t);
		break;
	case 1:
		var e = self.e;
		tmp = stx_nano_ResSum.Accept(e);
		break;
	}
	return tmp;
};
stx_nano_ResLift.option = function(self) {
	var tmp;
	switch(self._hx_index) {
	case 0:
		var t = self.t;
		tmp = haxe_ds_Option.Some(t);
		break;
	case 1:
		var e = self.e;
		tmp = haxe_ds_Option.None;
		break;
	}
	return tmp;
};
stx_nano_ResLift.report = function(self) {
	var tmp;
	switch(self._hx_index) {
	case 0:
		var t = self.t;
		tmp = stx_nano_Report.unit();
		break;
	case 1:
		var e = self.e;
		tmp = stx_nano_Report.pure(e);
		break;
	}
	return tmp;
};
stx_nano_ResLift.usher = function(self,fn) {
	var tmp;
	switch(self._hx_index) {
	case 0:
		var t = self.t;
		tmp = stx_nano_Report.unit();
		break;
	case 1:
		var e = self.e;
		tmp = stx_nano_Report.pure(e);
		break;
	}
	return stx_nano_ReportLift.usher(tmp,fn);
};
stx_nano_ResLift.rectify = function(self,fn) {
	var tmp;
	switch(self._hx_index) {
	case 0:
		var t = self.t;
		tmp = stx_nano_Res.accept(t);
		break;
	case 1:
		var e = self.e;
		tmp = fn(e);
		break;
	}
	return tmp;
};
stx_nano_ResLift.recover = function(self,fn) {
	switch(self._hx_index) {
	case 0:
		var t = self.t;
		return t;
	case 1:
		var e = self.e;
		return fn(e);
	}
};
stx_nano_ResLift.effects = function(self,success,failure) {
	var tmp;
	switch(self._hx_index) {
	case 0:
		var t = self.t;
		success(t);
		tmp = stx_nano_Res.accept(t);
		break;
	case 1:
		var e = self.e;
		failure(e);
		tmp = stx_nano_Res.reject(e);
		break;
	}
	return tmp;
};
stx_nano_ResLift.is_ok = function(self) {
	switch(self._hx_index) {
	case 0:
		var t = self.t;
		return true;
	case 1:
		var e = self.e;
		return false;
	}
};
stx_nano_ResLift.toPledge = function(self) {
	return stx_nano_Pledge.fromRes(self);
};
stx_nano_ResLift.pledge = function(self) {
	return stx_nano_Pledge.fromRes(self);
};
stx_nano_ResLift.point = function(self,fn) {
	switch(self._hx_index) {
	case 0:
		var t = self.t;
		return fn(t);
	case 1:
		var e = self.e;
		return stx_fail_RefuseLift.report(e);
	}
};
stx_nano_ResLift.toChunk = function(self) {
	if(self == null) {
		return stx_nano_ChunkSum.Tap;
	} else {
		switch(self._hx_index) {
		case 0:
			var _g = self.t;
			if(_g == null) {
				return stx_nano_ChunkSum.Tap;
			} else {
				var v = _g;
				return stx_nano_ChunkSum.Val(v);
			}
			break;
		case 1:
			var e = self.e;
			return stx_nano_ChunkSum.End(e);
		}
	}
};
var stx_nano_Res = {};
stx_nano_Res._new = function(self) {
	var this1 = self;
	return this1;
};
stx_nano_Res.get_self = function(this1) {
	var this2 = this1;
	return this2;
};
stx_nano_Res.lift = function(self) {
	var this1 = self;
	return this1;
};
stx_nano_Res.accept = function(t) {
	var this1 = stx_nano_ResSum.Accept(t);
	return this1;
};
stx_nano_Res.reject = function(e) {
	var this1 = stx_nano_ResSum.Reject(e);
	return this1;
};
stx_nano_Res.fromReport = function(self) {
	var self1;
	if(self == null) {
		self1 = stx_nano_Res.accept(null);
	} else {
		switch(self._hx_index) {
		case 0:
			var v = self.v;
			self1 = stx_nano_Res.reject(v);
			break;
		case 1:
			self1 = stx_nano_Res.accept(null);
			break;
		}
	}
	var this1 = self1;
	return this1;
};
stx_nano_Res.prj = function(this1) {
	return this1;
};
stx_nano_Res.fromOutcome = function(self) {
	var ocd;
	switch(self._hx_index) {
	case 0:
		var ok = self.t;
		ocd = stx_nano_ResSum.Accept(ok);
		break;
	case 1:
		var no = self.e;
		ocd = stx_nano_ResSum.Reject(no);
		break;
	}
	var this1 = ocd;
	return this1;
};
stx_nano_Res.toOutcome = function(this1) {
	switch(this1._hx_index) {
	case 0:
		var ok = this1.t;
		return stx_pico_OutcomeSum.Success(ok);
	case 1:
		var no = this1.e;
		return stx_pico_OutcomeSum.Failure(no);
	}
};
stx_nano_Res.bind_fold = function(arr,fn,init) {
	return stx_nano_IterLift.lfold(arr,function(next,memo) {
		switch(memo._hx_index) {
		case 0:
			var t = memo.t;
			return fn(next,t);
		case 1:
			var e = memo.e;
			return stx_nano_Res.reject(e);
		}
	},stx_nano_Res.accept(init));
};
stx_nano_Res.toStringable = function(this1) {
	var self = this1;
	return { toString : function() {
		return stx_nano_Res._.toString(self);
	}};
};
stx_nano_Res.toIterable = function(this1) {
	var _e = this1;
	return { iterator : function() {
		return $iterator(stx_nano_Res)(_e);
	}};
};
stx_nano_Res.iterator = function(this1) {
	var done = false;
	return { hasNext : function() {
		switch(this1._hx_index) {
		case 0:
			var t = this1.t;
			return !done;
		case 1:
			var e = this1.e;
			throw haxe_Exception.thrown(e);
		}
	}, next : function() {
		done = true;
		switch(this1._hx_index) {
		case 0:
			var t = this1.t;
			return t;
		case 1:
			var e = this1.e;
			throw haxe_Exception.thrown(e);
		}
	}};
};
var stx_nano_Retry = function(attempts,born) {
	this.attempts = attempts;
	this.born = born;
};
$hxClasses["stx.nano.Retry"] = stx_nano_Retry;
stx_nano_Retry.__name__ = "stx.nano.Retry";
stx_nano_Retry.make = function(attempts,born) {
	return new stx_nano_Retry(attempts,born);
};
stx_nano_Retry.unit = function() {
	return stx_nano_Retry.make(0,HxOverrides.now() / 1000);
};
stx_nano_Retry.prototype = {
	attempts: null
	,born: null
	,copy: function(attempts,born) {
		var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,attempts);
		var tmp;
		if(self._hx_index == 0) {
			var v = self.v;
			tmp = v;
		} else {
			tmp = this.attempts;
		}
		var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,born);
		var tmp1;
		if(self._hx_index == 0) {
			var v = self.v;
			tmp1 = v;
		} else {
			tmp1 = this.born;
		}
		return new stx_nano_Retry(tmp,tmp1);
	}
	,get_duration: function() {
		return HxOverrides.now() / 1000 - this.born;
	}
	,next: function() {
		return this.copy(this.attempts + 1);
	}
	,__class__: stx_nano_Retry
};
var stx_nano_Roster = {};
stx_nano_Roster._new = function(self) {
	var this1 = self;
	return this1;
};
stx_nano_Roster.lift = function(self) {
	return stx_nano_Roster._new(self);
};
stx_nano_Roster.get = function(this1,key) {
	return this1[key];
};
stx_nano_Roster.prj = function(this1) {
	return this1;
};
stx_nano_Roster.get_self = function(this1) {
	return stx_nano_Roster.lift(this1);
};
var stx_nano_SignalLift = function() { };
$hxClasses["stx.nano.SignalLift"] = stx_nano_SignalLift;
stx_nano_SignalLift.__name__ = "stx.nano.SignalLift";
stx_nano_SignalLift.lift = function(self) {
	return stx_nano_Signal.lift(self);
};
stx_nano_SignalLift.flat_map = function(self,fn) {
	var this1 = new tink_core__$Signal_Suspendable(function(cb) {
		var cancelled = false;
		var links = [];
		links.push(self.listen(function(t) {
			if(!cancelled) {
				var sI = fn(t);
				links.push(sI.listen(function(tI) {
					cb(tI);
				}));
			} else {
				throw haxe_Exception.thrown("stream already cancelled");
			}
		}));
		var this1 = new tink_core_SimpleLink(function() {
			cancelled = true;
			var _g = 0;
			while(_g < links.length) {
				var link = links[_g];
				++_g;
				var fn = $iterator(stx_pico_OptionLift)(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,link));
				while(fn.hasNext()) {
					var fn1 = fn.next();
					if(fn1 != null) {
						fn1.cancel();
					}
				}
			}
		});
		return this1;
	},null);
	return stx_nano_SignalLift.lift(this1);
};
stx_nano_SignalLift.lscan = function(self,fn,unit) {
	return stx_nano_Signal.map(self,function(t) {
		unit = fn(t,unit);
		return unit;
	});
};
stx_nano_SignalLift.next = function(self) {
	return tink_core_Signal.nextTime(stx_nano_Signal.prj(self));
};
stx_nano_SignalLift.latest = function(self) {
	var first = new tink_core_FutureTrigger();
	var has_triggered = false;
	var val = null;
	var cell = stx_nano_Cell.make(function() {
		return val;
	});
	self.listen(function(x) {
		val = x;
		if(!has_triggered) {
			first.trigger(cell);
			has_triggered = true;
		}
	});
	return first;
};
var stx_nano_Signal = {};
stx_nano_Signal._new = function(self) {
	var this1 = self;
	return this1;
};
stx_nano_Signal.lift = function(self) {
	return stx_nano_Signal._new(self);
};
stx_nano_Signal.make = function(f,init) {
	var this1 = new tink_core__$Signal_Suspendable(f,init);
	return stx_nano_Signal.lift(this1);
};
stx_nano_Signal.bind_fold = function(self,fn,init) {
	var this1 = new tink_core__$Signal_Suspendable(function(cb) {
		var self1 = self;
		var this1 = new tink_core__$Signal_Suspendable(function(cb) {
			cb(init);
			var this1 = new tink_core_SimpleLink(function() {
			});
			return this1;
		},null);
		return stx_nano_Signal._.flat_map(stx_nano_Signal._.lscan(self1,function(next,memo) {
			var _g = fn;
			var a1 = next;
			return stx_nano_Signal._.flat_map(memo,function(a2) {
				return _g(a1,a2);
			});
		},this1),function(z) {
			return z;
		}).listen(cb);
	},null);
	return stx_nano_Signal.lift(this1);
};
stx_nano_Signal.pure = function(v) {
	var this1 = new tink_core__$Signal_Suspendable(function(cb) {
		cb(v);
		var this1 = new tink_core_SimpleLink(function() {
		});
		return this1;
	},null);
	return stx_nano_Signal.lift(this1);
};
stx_nano_Signal.join = function(this1,that) {
	return tink_core_Signal.join(this1,that);
};
stx_nano_Signal.fromArray = function(arr) {
	return stx_nano_Signal.make(function(cb) {
		var _g = 0;
		while(_g < arr.length) {
			var v = arr[_g];
			++_g;
			cb(v);
		}
		var this1 = new tink_core_SimpleLink(function() {
		});
		return this1;
	});
};
stx_nano_Signal.fromFuture = function(ft) {
	return stx_nano_Signal.make(function(cb) {
		return ft.handle(function(x) {
			cb(x);
		});
	});
};
stx_nano_Signal.map_filter = function(this1,fn) {
	return stx_nano_Signal.map(stx_nano_Signal.filter(stx_nano_Signal.map(this1,fn),function(_) {
		return stx_pico_OptionLift.is_defined(_);
	}),function(_) {
		return stx_pico_OptionLift.fudge(_);
	});
};
stx_nano_Signal.filter = function(this1,fn) {
	return stx_nano_Signal.lift(tink_core_Signal.filter(this1,fn));
};
stx_nano_Signal.map = function(this1,fn) {
	return stx_nano_Signal.lift(tink_core_Signal.map(this1,fn));
};
stx_nano_Signal.tap = function(this1,fn) {
	return stx_nano_Signal.map(this1,function(x) {
		fn(x);
		return x;
	});
};
stx_nano_Signal.prj = function(this1) {
	return this1;
};
stx_nano_Signal.trigger = function() {
	return new tink_core_SignalTrigger();
};
var stx_nano_SlotCls = function(data,guard,pos) {
	this.data = data;
	this.ready = true;
	this.pos = pos;
	if(guard != null) {
		this.ready = false;
		this.guard = guard;
		guard.handle($bind(this,this.handler));
	}
};
$hxClasses["stx.nano.SlotCls"] = stx_nano_SlotCls;
stx_nano_SlotCls.__name__ = "stx.nano.SlotCls";
stx_nano_SlotCls.prototype = {
	handler: function(data) {
		this.ready = true;
		this.data = data;
	}
	,data: null
	,guard: null
	,ready: null
	,pos: null
	,toString: function() {
		var p = stx_nano_PositionLift.to_vscode_clickable_link(stx_nano_Position.fromPos(this.pos));
		return "Slot(" + Std.string(this.ready) + " " + p + ")";
	}
	,step: function() {
		return -1;
	}
	,__class__: stx_nano_SlotCls
};
var stx_nano_SlotLift = function() { };
$hxClasses["stx.nano.SlotLift"] = stx_nano_SlotLift;
stx_nano_SlotLift.__name__ = "stx.nano.SlotLift";
stx_nano_SlotLift.map = function(self,fn) {
	if(self.ready) {
		return stx_nano_Slot.Ready(fn(self.data),self.pos);
	} else {
		return stx_nano_Slot.Guard(tink_core_Future.map(self.guard,function(t) {
			return fn(t);
		}),self.pos);
	}
};
stx_nano_SlotLift.flat_map = function(self,fn) {
	if(self.ready) {
		return fn(self.data);
	} else {
		return stx_nano_Slot.Guard(tink_core_Future.flatMap(self.guard,function(t) {
			var val = fn(t);
			if(val.ready) {
				return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyFunc(function() {
					return val.data;
				}));
			} else {
				return val.guard;
			}
		}),{ fileName : "stx/nano/Slot.hx", lineNumber : 80, className : "stx.nano.SlotLift", methodName : "flat_map"});
	}
};
stx_nano_SlotLift.option = function(self) {
	if(self.ready == true) {
		return haxe_ds_Option.Some(self.data);
	} else {
		return haxe_ds_Option.None;
	}
};
stx_nano_SlotLift.handle = function(self,fn) {
	if(self.ready) {
		fn(self.data);
	} else {
		self.guard.handle(fn);
	}
};
stx_nano_SlotLift.toFuture = function(self) {
	if(self.ready) {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyFunc(function() {
			return self.data;
		}));
	} else {
		return self.guard;
	}
};
stx_nano_SlotLift.zip = function(self,that) {
	var _g = that.ready;
	if(self.ready) {
		if(_g) {
			return stx_nano_Slot.Ready(stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,self.data,that.data),{ fileName : "stx/nano/Slot.hx", lineNumber : 113, className : "stx.nano.SlotLift", methodName : "zip"});
		} else {
			var fn = function(rhs) {
				return stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,self.data,rhs);
			};
			if(that.ready) {
				return stx_nano_Slot.Ready(fn(that.data),that.pos);
			} else {
				return stx_nano_Slot.Guard(tink_core_Future.map(that.guard,function(t) {
					return fn(t);
				}),that.pos);
			}
		}
	} else if(_g) {
		var fn1 = function(lhs) {
			return stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,lhs,that.data);
		};
		if(self.ready) {
			return stx_nano_Slot.Ready(fn1(self.data),self.pos);
		} else {
			return stx_nano_Slot.Guard(tink_core_Future.map(self.guard,function(t) {
				return fn1(t);
			}),self.pos);
		}
	} else {
		return stx_nano_Slot.Guard(tink_core_Future.merge(self.guard,that.guard,function(tI,tII) {
			return stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,tI,tII);
		}),{ fileName : "stx/nano/Slot.hx", lineNumber : 116, className : "stx.nano.SlotLift", methodName : "zip"});
	}
};
var stx_nano_Slot = {};
stx_nano_Slot._new = function(self) {
	var this1 = self;
	return this1;
};
stx_nano_Slot.lift = function(self) {
	return stx_nano_Slot._new(self);
};
stx_nano_Slot.prj = function(this1) {
	return this1;
};
stx_nano_Slot.get_self = function(this1) {
	return stx_nano_Slot._new(this1);
};
stx_nano_Slot.Ready = function(v,pos) {
	return new stx_nano_SlotCls(v,null,pos);
};
stx_nano_Slot.Guard = function(v,pos) {
	return new stx_nano_SlotCls(null,v,pos);
};
stx_nano_Slot.toSlot = function(ft) {
	return new stx_nano_SlotCls(null,ft,{ fileName : "stx/nano/Slot.hx", lineNumber : 53, className : "stx.nano._Slot.Slot_Impl_", methodName : "toSlot"});
};
stx_nano_Slot.fromFunSinkVoid = function(fn) {
	var v = haxe_ds_Option.None;
	var handler = function(h) {
		v = haxe_ds_Option.Some(h);
	};
	fn(handler);
	switch(v._hx_index) {
	case 0:
		var v1 = v.v;
		return stx_nano_Slot.Ready(v1,{ fileName : "stx/nano/Slot.hx", lineNumber : 62, className : "stx.nano._Slot.Slot_Impl_", methodName : "fromFunSinkVoid"});
	case 1:
		return stx_nano_Slot.Guard(tink_core_Future.irreversible(fn),{ fileName : "stx/nano/Slot.hx", lineNumber : 63, className : "stx.nano._Slot.Slot_Impl_", methodName : "fromFunSinkVoid"});
	}
};
var stx_nano_SprigSum = $hxEnums["stx.nano.SprigSum"] = { __ename__:"stx.nano.SprigSum",__constructs__:null
	,Textal: ($_=function(str) { return {_hx_index:0,str:str,__enum__:"stx.nano.SprigSum",toString:$estr}; },$_._hx_name="Textal",$_.__params__ = ["str"],$_)
	,Byteal: ($_=function(byte) { return {_hx_index:1,byte:byte,__enum__:"stx.nano.SprigSum",toString:$estr}; },$_._hx_name="Byteal",$_.__params__ = ["byte"],$_)
};
stx_nano_SprigSum.__constructs__ = [stx_nano_SprigSum.Textal,stx_nano_SprigSum.Byteal];
var stx_nano_Sprig = {};
stx_nano_Sprig._new = function(self) {
	var this1 = self;
	return this1;
};
stx_nano_Sprig.lift = function(self) {
	return stx_nano_Sprig._new(self);
};
stx_nano_Sprig.toPrimitive = function(this1) {
	return stx_nano_PrimitiveDef.PSprig(this1);
};
stx_nano_Sprig.prj = function(this1) {
	return this1;
};
stx_nano_Sprig.get_self = function(this1) {
	return stx_nano_Sprig.lift(this1);
};
stx_nano_Sprig.toString = function(this1) {
	switch(this1._hx_index) {
	case 0:
		var str = this1.str;
		return str;
	case 1:
		var b = this1.byte;
		return stx_nano_Numeric.toString(b);
	}
};
stx_nano_Sprig.fold = function(this1,textal,byteal) {
	switch(this1._hx_index) {
	case 0:
		var txt = this1.str;
		return textal(txt);
	case 1:
		var num = this1.byte;
		return byteal(num);
	}
};
var stx_nano_Stringable = {};
stx_nano_Stringable.lift = function(self) {
	return stx_nano_Stringable._new(self);
};
stx_nano_Stringable._new = function(self) {
	var this1 = self;
	return this1;
};
var stx_nano_TimeStamp = {};
stx_nano_TimeStamp._new = function(self) {
	var this1 = self;
	return this1;
};
stx_nano_TimeStamp.pure = function(v) {
	return stx_nano_TimeStamp._new(v);
};
stx_nano_TimeStamp.compare_to = function(this1,that) {
	if(this1.realm > that.realm) {
		return 1;
	} else if(this1.realm == that.realm) {
		if(this1.exact > that.exact) {
			return 1;
		} else {
			return -1;
		}
	} else {
		return -1;
	}
};
var stx_nano_Timer = {};
stx_nano_Timer._new = function(self) {
	var this1;
	if(self == null) {
		this1 = stx_nano_Timer.unit();
	} else {
		this1 = self;
	}
	return this1;
};
stx_nano_Timer.pure = function(v) {
	return { created : v};
};
stx_nano_Timer.unit = function() {
	return stx_nano_Timer.pure(stx_nano_Timer.mark());
};
stx_nano_Timer.mark = function() {
	return HxOverrides.now() / 1000;
};
stx_nano_Timer.copy = function(this1,created) {
	return stx_nano_Timer.pure(created == null ? this1.created : created);
};
stx_nano_Timer.start = function(this1) {
	return stx_nano_Timer.copy(this1,stx_nano_Timer.mark());
};
stx_nano_Timer.since = function(this1) {
	return stx_nano_Timer.mark() - this1.created;
};
stx_nano_Timer.prj = function(this1) {
	return this1;
};
var stx_nano_TripleLift = function() { };
$hxClasses["stx.nano.TripleLift"] = stx_nano_TripleLift;
stx_nano_TripleLift.__name__ = "stx.nano.TripleLift";
stx_nano_TripleLift.map = function(self,fn) {
	return function(tp) {
		self(function(tI,tII,tIII) {
			tp(tI,tII,fn(tIII));
		});
	};
};
stx_nano_TripleLift.fst = function(self) {
	return stx_nano_TripleLift.detriple(self,function(tI,_,_1) {
		return tI;
	});
};
stx_nano_TripleLift.snd = function(self) {
	return stx_nano_TripleLift.detriple(self,function(_,tII,_1) {
		return tII;
	});
};
stx_nano_TripleLift.thd = function(self) {
	return stx_nano_TripleLift.detriple(self,function(_,_1,tIII) {
		return tIII;
	});
};
stx_nano_TripleLift.equals = function(lhs,rhs) {
	return stx_nano_TripleLift.detriple(lhs,function(t0I,t0II,t0III) {
		return stx_nano_TripleLift.detriple(rhs,function(t1I,t1II,t1III) {
			if(t0I == t1I && t0II == t1II) {
				return t0III == t1III;
			} else {
				return false;
			}
		});
	});
};
stx_nano_TripleLift.reduce = function(self,f_a,f_b,f_c,plus) {
	return stx_nano_TripleLift.detriple(self,function(tI,tII,tIII) {
		return plus(plus(f_a(tI),f_b(tII)),f_c(tIII));
	});
};
stx_nano_TripleLift.detriple = function(self,fn) {
	var out = null;
	self(function(tI,tII,tIII) {
		out = fn(tI,tII,tIII);
	});
	return out;
};
stx_nano_TripleLift.tup = function(self) {
	return stx_nano_TripleLift.detriple(self,stx_Tup3.tuple3);
};
stx_nano_TripleLift.toString = function(self) {
	return stx_nano_TripleLift.detriple(self,function(a,b,c) {
		return "(" + Std.string(a) + " " + Std.string(b) + " " + Std.string(c) + ")";
	});
};
var stx_nano_Triple = {};
stx_nano_Triple.toString = function(this1) {
	return stx_nano_TripleLift.toString(this1);
};
stx_nano_Triple.get__0 = function(this1) {
	return stx_nano_Triple._.fst(this1);
};
stx_nano_Triple.get__1 = function(this1) {
	return stx_nano_Triple._.snd(this1);
};
stx_nano_Triple.get__2 = function(this1) {
	return stx_nano_Triple._.thd(this1);
};
var stx_nano_TrivalentSum = $hxEnums["stx.nano.TrivalentSum"] = { __ename__:"stx.nano.TrivalentSum",__constructs__:null
	,Nay: {_hx_name:"Nay",_hx_index:0,__enum__:"stx.nano.TrivalentSum",toString:$estr}
	,Maybe: {_hx_name:"Maybe",_hx_index:1,__enum__:"stx.nano.TrivalentSum",toString:$estr}
	,Yay: {_hx_name:"Yay",_hx_index:2,__enum__:"stx.nano.TrivalentSum",toString:$estr}
};
stx_nano_TrivalentSum.__constructs__ = [stx_nano_TrivalentSum.Nay,stx_nano_TrivalentSum.Maybe,stx_nano_TrivalentSum.Yay];
var stx_nano_Trivalent = {};
stx_nano_Trivalent._new = function(self) {
	var this1 = self;
	return this1;
};
stx_nano_Trivalent.lift = function(self) {
	return stx_nano_Trivalent._new(self);
};
stx_nano_Trivalent.prj = function(this1) {
	return this1;
};
stx_nano_Trivalent.get_self = function(this1) {
	return stx_nano_Trivalent.lift(this1);
};
stx_nano_Trivalent.fromBool = function(b) {
	if(b) {
		return stx_nano_TrivalentSum.Yay;
	} else {
		return stx_nano_TrivalentSum.Nay;
	}
};
stx_nano_Trivalent.and = function(this1,that) {
	switch(this1._hx_index) {
	case 0:
		var tmp = that._hx_index == 0;
		break;
	case 1:
		var tmp = that._hx_index == 1;
		break;
	case 2:
		var tmp = that._hx_index == 2;
		break;
	}
};
stx_nano_Trivalent.or = function(this1,that) {
	switch(this1._hx_index) {
	case 0:
		var tmp = that._hx_index;
		break;
	case 1:
		var tmp = that._hx_index;
		break;
	case 2:
		var tmp = that._hx_index;
		break;
	}
};
var stx_nano_Unfold = {};
stx_nano_Unfold.fromFunction = function(fn) {
	var unfolder = fn;
	return function(initial) {
		var initial1 = initial;
		var unfolder1 = unfolder;
		return { iterator : function() {
			var _next = haxe_ds_Option.None;
			var _progress = initial1;
			var precomputeNext = function() {
				var _g = unfolder1(_progress);
				switch(_g._hx_index) {
				case 0:
					var tup = _g.v;
					_progress = stx_nano_CoupleLift.fst(tup);
					_next = haxe_ds_Option.Some(stx_nano_CoupleLift.snd(tup));
					break;
				case 1:
					_progress = null;
					_next = haxe_ds_Option.None;
					break;
				}
			};
			precomputeNext();
			return { hasNext : function() {
				if(_next._hx_index == 0) {
					var _g = _next.v;
					return true;
				} else {
					return false;
				}
			}, next : function() {
				var n;
				if(_next._hx_index == 0) {
					var v = _next.v;
					n = v;
				} else {
					n = null;
				}
				precomputeNext();
				return n;
			}};
		}};
	};
};
stx_nano_Unfold._new = function(v) {
	var this1 = v;
	return this1;
};
stx_nano_Unfold.unfold = function(initial,unfolder) {
	return { iterator : function() {
		var _next = haxe_ds_Option.None;
		var _progress = initial;
		var precomputeNext = function() {
			var _g = unfolder(_progress);
			switch(_g._hx_index) {
			case 0:
				var tup = _g.v;
				_progress = stx_nano_CoupleLift.fst(tup);
				_next = haxe_ds_Option.Some(stx_nano_CoupleLift.snd(tup));
				break;
			case 1:
				_progress = null;
				_next = haxe_ds_Option.None;
				break;
			}
		};
		precomputeNext();
		return { hasNext : function() {
			if(_next._hx_index == 0) {
				var _g = _next.v;
				return true;
			} else {
				return false;
			}
		}, next : function() {
			var n;
			if(_next._hx_index == 0) {
				var v = _next.v;
				n = v;
			} else {
				n = null;
			}
			precomputeNext();
			return n;
		}};
	}};
};
var stx_nano_Unique = {};
stx_nano_Unique._new = function(self) {
	var this1 = self;
	return this1;
};
stx_nano_Unique.lift = function(self) {
	return stx_nano_Unique._new(self);
};
stx_nano_Unique.pure = function(data) {
	return stx_nano_Unique.make(data,function() {
	});
};
stx_nano_Unique.make = function(data,rtid) {
	return stx_nano_Unique._new({ data : data, rtid : rtid});
};
stx_nano_Unique.prj = function(this1) {
	return this1;
};
stx_nano_Unique.get_self = function(this1) {
	return stx_nano_Unique._new(this1);
};
stx_nano_Unique.equals = function(this1,that) {
	return this1.rtid == that.rtid;
};
stx_nano_Unique.toT = function(this1) {
	return this1.data;
};
var stx_nano_VBlock = {};
stx_nano_VBlock.unit = function() {
	return function() {
	};
};
stx_nano_VBlock._new = function(self) {
	var this1 = self;
	return this1;
};
var stx_nano_Way = {};
stx_nano_Way._new = function(self) {
	var this1 = self;
	return this1;
};
stx_nano_Way.lift = function(self) {
	return stx_nano_Way._new(self);
};
stx_nano_Way.make = function(self) {
	return stx_nano_Way._new(self);
};
stx_nano_Way.unit = function() {
	return stx_nano_Way.lift(stx_nano_Cluster.unit());
};
stx_nano_Way.fromArray = function(self) {
	return stx_nano_Way.lift(stx_nano_Cluster.lift(self));
};
stx_nano_Way.fromPath = function(path) {
	var dir = haxe_io_Path.directory(path.toString());
	var ext = path.ext;
	var file = path.file;
	var name = ext == null ? file : "" + file + "." + ext;
	var sep = path.backslash ? "\\" : "/";
	var data = dir.split(sep);
	data.push(name);
	return stx_nano_Way.lift(stx_nano_Cluster.lift(data));
};
stx_nano_Way.fromStringDotted = function(self) {
	return stx_nano_Way.lift(self.split("."));
};
stx_nano_Way.prj = function(this1) {
	return this1;
};
stx_nano_Way.get_self = function(this1) {
	return stx_nano_Way.lift(this1);
};
stx_nano_Way.snoc = function(this1,that) {
	return stx_nano_Way.lift(stx_nano_ClusterLift.snoc(this1,that));
};
stx_nano_Way.concat = function(this1,that) {
	return stx_nano_Way.lift(stx_nano_Cluster.concat(this1,that));
};
stx_nano_Way.toOsString = function(this1) {
	var value = stx_nano_Cluster.toIterable(this1);
	return (((value) instanceof Array) ? value : null).join(stx_nano_lift_LiftNano.sep(stx_nano_Wildcard.__));
};
stx_nano_Way.into = function(this1,name) {
	return stx_nano_Ident.make(name,this1);
};
stx_nano_Way.get = function(this1,i) {
	return this1[i];
};
stx_nano_Way.toArray = function(this1) {
	var value = stx_nano_Cluster.toIterable(this1);
	if(((value) instanceof Array)) {
		return value;
	} else {
		return null;
	}
};
stx_nano_Way.up = function(this1) {
	return stx_nano_Way.lift(stx_nano_ClusterLift.rdropn(this1,1));
};
var stx_nano_digest_term_EDigestUUIDReserved = function(uuid) {
	stx_fail_Digest.call(this,"01FRQ557XM5KFRCSZ2Q0FFY069","Uuid \"" + uuid + "\" already registered.");
};
$hxClasses["stx.nano.digest.term.EDigestUUIDReserved"] = stx_nano_digest_term_EDigestUUIDReserved;
stx_nano_digest_term_EDigestUUIDReserved.__name__ = "stx.nano.digest.term.EDigestUUIDReserved";
stx_nano_digest_term_EDigestUUIDReserved.__super__ = stx_fail_Digest;
stx_nano_digest_term_EDigestUUIDReserved.prototype = $extend(stx_fail_Digest.prototype,{
	__class__: stx_nano_digest_term_EDigestUUIDReserved
});
var stx_nano_digest_term_EJsError = function(error) {
	stx_fail_Digest.call(this,error.name,error.message);
};
$hxClasses["stx.nano.digest.term.EJsError"] = stx_nano_digest_term_EJsError;
stx_nano_digest_term_EJsError.__name__ = "stx.nano.digest.term.EJsError";
stx_nano_digest_term_EJsError.__super__ = stx_fail_Digest;
stx_nano_digest_term_EJsError.prototype = $extend(stx_fail_Digest.prototype,{
	__class__: stx_nano_digest_term_EJsError
});
var stx_nano_digest_term_ENoField = function(field_name) {
	stx_fail_Digest.call(this,"01FRQ55MMVX2D7JEHJ6CE4X1NY","No field \"" + field_name + "\".");
};
$hxClasses["stx.nano.digest.term.ENoField"] = stx_nano_digest_term_ENoField;
stx_nano_digest_term_ENoField.__name__ = "stx.nano.digest.term.ENoField";
stx_nano_digest_term_ENoField.__super__ = stx_fail_Digest;
stx_nano_digest_term_ENoField.prototype = $extend(stx_fail_Digest.prototype,{
	__class__: stx_nano_digest_term_ENoField
});
var stx_nano_digest_term_ETinkError = function(msg,code) {
	stx_fail_Digest.call(this,"01FRQ5TP22YD13E22X767DTHJC",msg,code);
};
$hxClasses["stx.nano.digest.term.ETinkError"] = stx_nano_digest_term_ETinkError;
stx_nano_digest_term_ETinkError.__name__ = "stx.nano.digest.term.ETinkError";
stx_nano_digest_term_ETinkError.__super__ = stx_fail_Digest;
stx_nano_digest_term_ETinkError.prototype = $extend(stx_fail_Digest.prototype,{
	__class__: stx_nano_digest_term_ETinkError
});
var stx_nano_digest_term_EUndefined = function() {
	stx_fail_Digest.call(this,"01FRQ56BJH83N0QXF6ZFJ9Y4MN","Encountered Undefined.");
};
$hxClasses["stx.nano.digest.term.EUndefined"] = stx_nano_digest_term_EUndefined;
stx_nano_digest_term_EUndefined.__name__ = "stx.nano.digest.term.EUndefined";
stx_nano_digest_term_EUndefined.__super__ = stx_fail_Digest;
stx_nano_digest_term_EUndefined.prototype = $extend(stx_fail_Digest.prototype,{
	__class__: stx_nano_digest_term_EUndefined
});
var stx_nano_digest_term_EUnimplemented = function() {
	stx_fail_Digest.call(this,"01FRQ86121X4G17EEQ7DDNVEHH","Unimplemented");
};
$hxClasses["stx.nano.digest.term.EUnimplemented"] = stx_nano_digest_term_EUnimplemented;
stx_nano_digest_term_EUnimplemented.__name__ = "stx.nano.digest.term.EUnimplemented";
stx_nano_digest_term_EUnimplemented.__super__ = stx_fail_Digest;
stx_nano_digest_term_EUnimplemented.prototype = $extend(stx_fail_Digest.prototype,{
	__class__: stx_nano_digest_term_EUnimplemented
});
var stx_nano_lift_LiftArrayNano = function() { };
$hxClasses["stx.nano.lift.LiftArrayNano"] = stx_nano_lift_LiftArrayNano;
stx_nano_lift_LiftArrayNano.__name__ = "stx.nano.lift.LiftArrayNano";
stx_nano_lift_LiftArrayNano.cross = function(self,that) {
	return stx_lift_ArrayLift.cross_with(self,that,function(tI,tII) {
		return stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,tI,tII);
	});
};
stx_nano_lift_LiftArrayNano.zip = function(self,that) {
	return stx_lift_ArrayLift.zip_with(self,that,function(tI,tII) {
		return stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,tI,tII);
	});
};
var stx_nano_lift_LiftArrayToIter = function() { };
$hxClasses["stx.nano.lift.LiftArrayToIter"] = stx_nano_lift_LiftArrayToIter;
stx_nano_lift_LiftArrayToIter.__name__ = "stx.nano.lift.LiftArrayToIter";
stx_nano_lift_LiftArrayToIter.toIter = function(arr) {
	return arr;
};
var stx_nano_lift_LiftBytes = function() { };
$hxClasses["stx.nano.lift.LiftBytes"] = stx_nano_lift_LiftBytes;
stx_nano_lift_LiftBytes.__name__ = "stx.nano.lift.LiftBytes";
stx_nano_lift_LiftBytes.get = function(self,pos,quantity) {
	switch(quantity) {
	case "dbe":
		var a = self.b[pos];
		var b = self.b[pos + 1];
		var c = self.b[pos + 2];
		var d = self.b[pos + 3];
		var e = self.b[pos + 4];
		var f = self.b[pos + 5];
		var g = self.b[pos + 6];
		var h = self.b[pos + 7];
		var r = new haxe_io_Bytes(new ArrayBuffer(8));
		r.b[0] = h;
		r.b[1] = g;
		r.b[2] = f;
		r.b[3] = e;
		r.b[0] = d;
		r.b[1] = c;
		r.b[2] = b;
		r.b[3] = a;
		return stx_nano_SprigSum.Byteal(stx_nano_NumericSum.NFloat(r.getDouble(0)));
	case "dle":
		return stx_nano_SprigSum.Byteal(stx_nano_NumericSum.NFloat(self.getDouble(0)));
	case "fbe":
		var a = self.b[pos];
		var b = self.b[pos + 1];
		var c = self.b[pos + 2];
		var d = self.b[pos + 3];
		var r = new haxe_io_Bytes(new ArrayBuffer(4));
		r.b[0] = d;
		r.b[1] = c;
		r.b[2] = b;
		r.b[3] = a;
		return stx_nano_SprigSum.Byteal(stx_nano_NumericSum.NFloat(r.getFloat(0)));
	case "fle":
		return stx_nano_SprigSum.Byteal(stx_nano_NumericSum.NFloat(self.getFloat(0)));
	case "i16+":
		var a = self.b[pos];
		var b = self.b[pos + 1];
		var r = new haxe_io_Bytes(new ArrayBuffer(4));
		r.b[0] = b;
		r.b[1] = a;
		r.b[2] = 0;
		r.b[3] = 0;
		return stx_nano_SprigSum.Byteal(stx_nano_NumericSum.NInt(r.getInt32(0)));
	case "i16-":
		var a = self.b[pos];
		var b = self.b[pos + 1];
		var r = new haxe_io_Bytes(new ArrayBuffer(4));
		r.b[0] = 0;
		r.b[1] = 0;
		r.b[2] = a;
		r.b[3] = b;
		return stx_nano_SprigSum.Byteal(stx_nano_NumericSum.NInt(r.getInt32(0)));
	case "i24+":
		var a = self.b[pos];
		var b = self.b[pos + 1];
		var c = self.b[pos + 2];
		var r = new haxe_io_Bytes(new ArrayBuffer(4));
		r.b[0] = c;
		r.b[1] = b;
		r.b[2] = a;
		r.b[3] = 0;
		return stx_nano_SprigSum.Byteal(stx_nano_NumericSum.NInt(r.getInt32(0)));
	case "i24-":
		var a = self.b[pos];
		var b = self.b[pos + 1];
		var c = self.b[pos + 2];
		var r = new haxe_io_Bytes(new ArrayBuffer(4));
		r.b[0] = 0;
		r.b[1] = a;
		r.b[2] = b;
		r.b[3] = c;
		return stx_nano_SprigSum.Byteal(stx_nano_NumericSum.NInt(r.getInt32(0)));
	case "i32+":
		var a = self.b[pos];
		var b = self.b[pos + 1];
		var c = self.b[pos + 2];
		var d = self.b[pos + 3];
		var r = new haxe_io_Bytes(new ArrayBuffer(4));
		r.b[0] = d;
		r.b[1] = c;
		r.b[2] = b;
		r.b[3] = a;
		return stx_nano_SprigSum.Byteal(stx_nano_NumericSum.NInt(r.getInt32(0)));
	case "i32-":
		return stx_nano_SprigSum.Byteal(stx_nano_NumericSum.NInt(self.getInt32(0)));
	case "i8":
		return stx_nano_SprigSum.Byteal(stx_nano_NumericSum.NInt(self.b[pos]));
	case "ln":
		return stx_nano_SprigSum.Textal(self.toString());
	case "ui16+":
		var a = self.b[pos];
		var b = self.b[pos + 1];
		var r = new haxe_io_Bytes(new ArrayBuffer(4));
		r.b[0] = b;
		r.b[1] = a;
		return stx_nano_SprigSum.Byteal(stx_nano_NumericSum.NInt(r.getUInt16(0)));
	case "ui16-":
		return stx_nano_SprigSum.Byteal(stx_nano_NumericSum.NInt(self.getUInt16(0)));
	case "ui24+":
		var a = self.b[pos];
		var b = self.b[pos + 1];
		var c = self.b[pos + 2];
		var r = new haxe_io_Bytes(new ArrayBuffer(4));
		r.b[0] = c;
		r.b[1] = b;
		r.b[2] = a;
		r.b[3] = 0;
		return stx_nano_SprigSum.Byteal(stx_nano_NumericSum.NInt(r.getInt32(0)));
	case "ui24-":
		var a = self.b[pos];
		var b = self.b[pos + 1];
		var c = self.b[pos + 2];
		var r = new haxe_io_Bytes(new ArrayBuffer(4));
		r.b[0] = 0;
		r.b[1] = a;
		r.b[2] = b;
		r.b[3] = c;
		return stx_nano_SprigSum.Byteal(stx_nano_NumericSum.NInt(r.getInt32(0)));
	}
};
var stx_nano_lift_LiftContractToJsPromise = function() { };
$hxClasses["stx.nano.lift.LiftContractToJsPromise"] = stx_nano_lift_LiftContractToJsPromise;
stx_nano_lift_LiftContractToJsPromise.__name__ = "stx.nano.lift.LiftContractToJsPromise";
stx_nano_lift_LiftContractToJsPromise.toJsPromise = function(self) {
	return stx_nano_Contract._.toJsPromise(self);
};
var stx_nano_lift_LiftErrToChunk = function() { };
$hxClasses["stx.nano.lift.LiftErrToChunk"] = stx_nano_lift_LiftErrToChunk;
stx_nano_lift_LiftErrToChunk.__name__ = "stx.nano.lift.LiftErrToChunk";
stx_nano_lift_LiftErrToChunk.toChunk = function(err) {
	return stx_nano_Chunk.fromError(err);
};
var stx_nano_lift_LiftError = function() { };
$hxClasses["stx.nano.lift.LiftError"] = stx_nano_lift_LiftError;
stx_nano_lift_LiftError.__name__ = "stx.nano.lift.LiftError";
stx_nano_lift_LiftError.fault = function(self) {
	var self1 = self.get_pos();
	var tmp;
	if(self1._hx_index == 0) {
		var v = self1.v;
		tmp = v;
	} else {
		tmp = null;
	}
	return stx_nano_Fault.lift(tmp);
};
stx_nano_lift_LiftError.report = function(error) {
	return stx_nano_ReportSum.Reported(error);
};
stx_nano_lift_LiftError.toTinkError = function(self,code) {
	if(code == null) {
		code = 500;
	}
	var tmp = stx_nano_Iter.lift(stx_fail_Error.toIterable(self));
	var self1 = self.get_pos();
	var tmp1;
	if(self1._hx_index == 0) {
		var v = self1.v;
		tmp1 = v;
	} else {
		tmp1 = null;
	}
	return tink_core_TypedError.withData(code,"TINK_ERROR",tmp,tmp1);
};
var stx_nano_lift_LiftErrorDigestToRefuse = function() { };
$hxClasses["stx.nano.lift.LiftErrorDigestToRefuse"] = stx_nano_lift_LiftErrorDigestToRefuse;
stx_nano_lift_LiftErrorDigestToRefuse.__name__ = "stx.nano.lift.LiftErrorDigestToRefuse";
stx_nano_lift_LiftErrorDigestToRefuse.toRefuse = function(self) {
	return stx_fail_Error.errate(self,stx_fail_DeclineSum.INTERIOR);
};
var stx_nano_lift_LiftErrorStringToRefuse = function() { };
$hxClasses["stx.nano.lift.LiftErrorStringToRefuse"] = stx_nano_lift_LiftErrorStringToRefuse;
stx_nano_lift_LiftErrorStringToRefuse.__name__ = "stx.nano.lift.LiftErrorStringToRefuse";
stx_nano_lift_LiftErrorStringToRefuse.toRefuse = function(self) {
	return stx_fail_Refuse.lift(stx_fail_Error.errate(self,function(x) {
		return stx_fail_DeclineSum.INTERIOR(new stx_nano_lift_ESubsumed(x));
	}));
};
var stx_nano_lift_ESubsumed = function(string) {
	stx_fail_Digest.call(this,"01FT8HA5MKCMG7X3VW2DQ1YAN2",string);
};
$hxClasses["stx.nano.lift.ESubsumed"] = stx_nano_lift_ESubsumed;
stx_nano_lift_ESubsumed.__name__ = "stx.nano.lift.ESubsumed";
stx_nano_lift_ESubsumed.__super__ = stx_fail_Digest;
stx_nano_lift_ESubsumed.prototype = $extend(stx_fail_Digest.prototype,{
	__class__: stx_nano_lift_ESubsumed
});
var stx_nano_lift_LiftErrorToAlert = function() { };
$hxClasses["stx.nano.lift.LiftErrorToAlert"] = stx_nano_lift_LiftErrorToAlert;
stx_nano_lift_LiftErrorToAlert.__name__ = "stx.nano.lift.LiftErrorToAlert";
stx_nano_lift_LiftErrorToAlert.alert = function(self) {
	return stx_nano_Report.alert(stx_nano_lift_LiftError.report(stx_fail_Error.errate(self,function(except) {
		return stx_nano_lift_LiftNano.decline(stx_nano_Wildcard.__,except);
	})));
};
var stx_nano_lift_LiftErrorToRefuse = function() { };
$hxClasses["stx.nano.lift.LiftErrorToRefuse"] = stx_nano_lift_LiftErrorToRefuse;
stx_nano_lift_LiftErrorToRefuse.__name__ = "stx.nano.lift.LiftErrorToRefuse";
stx_nano_lift_LiftErrorToRefuse.except = function(self) {
	return stx_fail_Refuse.lift(stx_fail_Error.errate(self,stx_fail_DeclineSum.EXTERIOR));
};
var stx_nano_lift_LiftErrorToReport = function() { };
$hxClasses["stx.nano.lift.LiftErrorToReport"] = stx_nano_lift_LiftErrorToReport;
stx_nano_lift_LiftErrorToReport.__name__ = "stx.nano.lift.LiftErrorToReport";
var stx_nano_lift_LiftFuture = function() { };
$hxClasses["stx.nano.lift.LiftFuture"] = stx_nano_lift_LiftFuture;
stx_nano_lift_LiftFuture.__name__ = "stx.nano.lift.LiftFuture";
stx_nano_lift_LiftFuture.fudge = function(self) {
	var val = null;
	self.handle(function(x) {
		val = x;
	});
	return val;
};
stx_nano_lift_LiftFuture.option = function(future) {
	var result = haxe_ds_Option.None;
	var cancelled = false;
	future.handle(function(x) {
		cancelled = true;
		result = haxe_ds_Option.Some(x);
	});
	return result;
};
var stx_nano_lift_LiftFutureResToPledge = function() { };
$hxClasses["stx.nano.lift.LiftFutureResToPledge"] = stx_nano_lift_LiftFutureResToPledge;
stx_nano_lift_LiftFutureResToPledge.__name__ = "stx.nano.lift.LiftFutureResToPledge";
stx_nano_lift_LiftFutureResToPledge.toPledge = function(self) {
	return stx_nano_Pledge.lift(self);
};
var stx_nano_lift_LiftIMapToArrayKV = function() { };
$hxClasses["stx.nano.lift.LiftIMapToArrayKV"] = stx_nano_lift_LiftIMapToArrayKV;
stx_nano_lift_LiftIMapToArrayKV.__name__ = "stx.nano.lift.LiftIMapToArrayKV";
stx_nano_lift_LiftIMapToArrayKV.toArrayKV = function(map) {
	var out = [];
	var _g = map.keyValueIterator();
	while(_g.hasNext()) {
		var _g1 = _g.next();
		var key = _g1.key;
		var val = _g1.value;
		out.push(stx_nano_KV.fromTup(stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,key,val)));
	}
	return out;
};
var stx_nano_lift_LiftIterableToIter = function() { };
$hxClasses["stx.nano.lift.LiftIterableToIter"] = stx_nano_lift_LiftIterableToIter;
stx_nano_lift_LiftIterableToIter.__name__ = "stx.nano.lift.LiftIterableToIter";
stx_nano_lift_LiftIterableToIter.toIter = function(it) {
	return it;
};
var stx_nano_lift_LiftIteratorToIter = function() { };
$hxClasses["stx.nano.lift.LiftIteratorToIter"] = stx_nano_lift_LiftIteratorToIter;
stx_nano_lift_LiftIteratorToIter.__name__ = "stx.nano.lift.LiftIteratorToIter";
stx_nano_lift_LiftIteratorToIter.toIter = function(it) {
	return { iterator : function() {
		return it;
	}};
};
var stx_nano_lift_LiftJsPromiseToContract = function() { };
$hxClasses["stx.nano.lift.LiftJsPromiseToContract"] = stx_nano_lift_LiftJsPromiseToContract;
stx_nano_lift_LiftJsPromiseToContract.__name__ = "stx.nano.lift.LiftJsPromiseToContract";
stx_nano_lift_LiftJsPromiseToContract.toContract = function(self,pos) {
	return stx_nano_Contract.fromJsPromise(self,pos);
};
var stx_nano_lift_LiftJsPromiseToPledge = function() { };
$hxClasses["stx.nano.lift.LiftJsPromiseToPledge"] = stx_nano_lift_LiftJsPromiseToPledge;
stx_nano_lift_LiftJsPromiseToPledge.__name__ = "stx.nano.lift.LiftJsPromiseToPledge";
stx_nano_lift_LiftJsPromiseToPledge.toPledge = function(self,pos) {
	return stx_nano_Pledge.fromJsPromise(self,pos);
};
var stx_nano_lift_LiftMapToIter = function() { };
$hxClasses["stx.nano.lift.LiftMapToIter"] = stx_nano_lift_LiftMapToIter;
stx_nano_lift_LiftMapToIter.__name__ = "stx.nano.lift.LiftMapToIter";
stx_nano_lift_LiftMapToIter.toIter = function(map) {
	return { iterator : function() {
		var source = map.keyValueIterator();
		return { next : function() {
			var out = source.next();
			return { key : out.key, val : out.value};
		}, hasNext : $bind(source,source.hasNext)};
	}};
};
var stx_nano_lift_StringToIdentifier = function() { };
$hxClasses["stx.nano.lift.StringToIdentifier"] = stx_nano_lift_StringToIdentifier;
stx_nano_lift_StringToIdentifier.__name__ = "stx.nano.lift.StringToIdentifier";
stx_nano_lift_StringToIdentifier.identifier = function(wildcard,str) {
	return stx_pico_Identifier._new(str);
};
var stx_nano_lift_LiftIdentifierToIdent = function() { };
$hxClasses["stx.nano.lift.LiftIdentifierToIdent"] = stx_nano_lift_LiftIdentifierToIdent;
stx_nano_lift_LiftIdentifierToIdent.__name__ = "stx.nano.lift.LiftIdentifierToIdent";
var stx_nano_lift_LiftOptionNano = function() { };
$hxClasses["stx.nano.lift.LiftOptionNano"] = stx_nano_lift_LiftOptionNano;
stx_nano_lift_LiftOptionNano.__name__ = "stx.nano.lift.LiftOptionNano";
stx_nano_lift_LiftOptionNano.zip = function(self,that) {
	if(self._hx_index == 0) {
		if(that._hx_index == 0) {
			var r = that.v;
			var l = self.v;
			return haxe_ds_Option.Some(stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,l,r));
		} else {
			return haxe_ds_Option.None;
		}
	} else {
		return haxe_ds_Option.None;
	}
};
stx_nano_lift_LiftOptionNano.fudge = function(self,err) {
	var self1 = stx_pico_Option.make(stx_fail_Refuse.lift(stx_fail_Error.errate(err,stx_fail_DeclineSum.EXTERIOR)));
	var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/nano/lift/LiftOptionNano.hx", lineNumber : 11, className : "stx.nano.lift.LiftOptionNano", methodName : "fudge"});
	var v = stx_fail_Refuse.make(haxe_ds_Option.Some(stx_fail_DeclineSum.INTERIOR(stx_nano_CTR.apply(function(_) {
		return stx_nano_Digests.e_undefined(_);
	},stx_Nano.digests(stx_nano_Wildcard.__)))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1));
	var exception;
	if(self1._hx_index == 0) {
		var v1 = self1.v;
		exception = v1;
	} else {
		exception = v;
	}
	if(self == null) {
		throw haxe_Exception.thrown(exception);
	} else {
		switch(self._hx_index) {
		case 0:
			var v = self.v;
			return v;
		case 1:
			throw haxe_Exception.thrown(exception);
		}
	}
};
stx_nano_lift_LiftOptionNano.resolve = function(self,fn,pos) {
	var tmp;
	switch(self._hx_index) {
	case 0:
		var t = self.v;
		tmp = stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,t);
		break;
	case 1:
		tmp = stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(fn(stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,pos))),{ fileName : "stx/nano/lift/LiftOptionNano.hx", lineNumber : 21, className : "stx.nano.lift.LiftOptionNano", methodName : "resolve"});
		break;
	}
	return tmp;
};
var stx_nano_lift_LiftOptionToChunk = function() { };
$hxClasses["stx.nano.lift.LiftOptionToChunk"] = stx_nano_lift_LiftOptionToChunk;
stx_nano_lift_LiftOptionToChunk.__name__ = "stx.nano.lift.LiftOptionToChunk";
stx_nano_lift_LiftOptionToChunk.toChunk = function(opt) {
	switch(opt._hx_index) {
	case 0:
		var v = opt.v;
		return stx_nano_ChunkSum.Val(v);
	case 1:
		return stx_nano_ChunkSum.Tap;
	}
};
var stx_nano_lift_LiftOutcomeTDefect = function() { };
$hxClasses["stx.nano.lift.LiftOutcomeTDefect"] = stx_nano_lift_LiftOutcomeTDefect;
stx_nano_lift_LiftOutcomeTDefect.__name__ = "stx.nano.lift.LiftOutcomeTDefect";
stx_nano_lift_LiftOutcomeTDefect.zip = function(self,that) {
	switch(self._hx_index) {
	case 0:
		var _g = self.t;
		switch(that._hx_index) {
		case 0:
			var r = that.t;
			var l = _g;
			return stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,l,r));
		case 1:
			var r = that.e;
			return stx_nano_lift_LiftNano.failure(stx_nano_Wildcard.__,r);
		}
		break;
	case 1:
		var _g = self.e;
		if(that._hx_index == 1) {
			var r = that.e;
			var l = _g;
			return stx_nano_lift_LiftNano.failure(stx_nano_Wildcard.__,stx_nano_DefectLift.concat(l,r));
		} else {
			var l = _g;
			return stx_nano_lift_LiftNano.failure(stx_nano_Wildcard.__,l);
		}
		break;
	}
};
var stx_nano_lift_LiftPath = function() { };
$hxClasses["stx.nano.lift.LiftPath"] = stx_nano_lift_LiftPath;
stx_nano_lift_LiftPath.__name__ = "stx.nano.lift.LiftPath";
stx_nano_lift_LiftPath.into = function(path,v) {
	var base = haxe_io_Path.addTrailingSlash(path.toString());
	var rest = stx_nano_OneOrMany.toArray(v).join(stx_nano_lift_LiftNano.sep(stx_nano_Wildcard.__));
	var next = "" + base + rest;
	return new haxe_io_Path(next);
};
stx_nano_lift_LiftPath.toArray = function(path) {
	var base = path.toString();
	if(StringTools.startsWith(base,stx_nano_lift_LiftNano.sep(stx_nano_Wildcard.__))) {
		base = HxOverrides.substr(base,1,null);
	}
	var next = base.split(stx_nano_lift_LiftNano.sep(stx_nano_Wildcard.__));
	return next;
};
var stx_nano_lift_LiftRefuseToRes = function() { };
$hxClasses["stx.nano.lift.LiftRefuseToRes"] = stx_nano_lift_LiftRefuseToRes;
stx_nano_lift_LiftRefuseToRes.__name__ = "stx.nano.lift.LiftRefuseToRes";
stx_nano_lift_LiftRefuseToRes.toRes = function(self) {
	return stx_nano_ResSum.Reject(self);
};
stx_nano_lift_LiftRefuseToRes.reject = function(self) {
	return stx_nano_ResSum.Reject(self);
};
var stx_nano_lift_LiftResToChunk = function() { };
$hxClasses["stx.nano.lift.LiftResToChunk"] = stx_nano_lift_LiftResToChunk;
stx_nano_lift_LiftResToChunk.__name__ = "stx.nano.lift.LiftResToChunk";
stx_nano_lift_LiftResToChunk.toChunk = function(self) {
	var tmp;
	switch(self._hx_index) {
	case 0:
		var t = self.t;
		tmp = stx_nano_ChunkSum.Val(t);
		break;
	case 1:
		var e = self.e;
		tmp = stx_nano_ChunkSum.End(e);
		break;
	}
	return tmp;
};
var stx_nano_lift_LiftStringMapToIter = function() { };
$hxClasses["stx.nano.lift.LiftStringMapToIter"] = stx_nano_lift_LiftStringMapToIter;
stx_nano_lift_LiftStringMapToIter.__name__ = "stx.nano.lift.LiftStringMapToIter";
stx_nano_lift_LiftStringMapToIter.toIter = function(map) {
	return stx_nano_IterLift.map(stx_nano_lift_LiftMapToIter.toIter(map),function(x) {
		return stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,stx_nano_KVLift.fst(x),stx_nano_KVLift.snd(x));
	});
};
var stx_nano_lift_LiftStringToResource = function() { };
$hxClasses["stx.nano.lift.LiftStringToResource"] = stx_nano_lift_LiftStringToResource;
stx_nano_lift_LiftStringToResource.__name__ = "stx.nano.lift.LiftStringToResource";
stx_nano_lift_LiftStringToResource.resource = function(stx,str,pos) {
	var str1 = str;
	if(!stx_nano_Resource.exists(str1)) {
		if(pos == null) {
			throw haxe_Exception.thrown("E_ResourceNotFound(" + str1 + ")");
		} else {
			var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,pos);
			var error = stx_fail_Refuse.make(haxe_ds_Option.Some(stx_fail_DeclineSum.INTERIOR(stx_nano_CTR.apply(function(_) {
				return stx_nano_Digests.e_resource_not_found(_,str1);
			},stx_Nano.digests(stx_nano_Wildcard.__)))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1));
			throw haxe_Exception.thrown(error);
		}
	}
	var this1 = str1;
	return this1;
};
var stx_nano_lift_LiftTinkErrorToRefuse = function() { };
$hxClasses["stx.nano.lift.LiftTinkErrorToRefuse"] = stx_nano_lift_LiftTinkErrorToRefuse;
stx_nano_lift_LiftTinkErrorToRefuse.__name__ = "stx.nano.lift.LiftTinkErrorToRefuse";
stx_nano_lift_LiftTinkErrorToRefuse.toRefuse = function(self) {
	return stx_fail_Refuse.make(haxe_ds_Option.Some(stx_fail_DeclineSum.INTERIOR(stx_nano_Digests.e_tink_error(stx_Nano.digests(stx_nano_Wildcard.__),self.message,self.code))),haxe_ds_Option.None,stx_pico_Option.fromNullT(self.pos));
};
stx_nano_lift_LiftTinkErrorToRefuse.except = function(self) {
	return stx_fail_Refuse.make(haxe_ds_Option.Some(stx_fail_DeclineSum.INTERIOR(stx_nano_Digests.e_tink_error(stx_Nano.digests(stx_nano_Wildcard.__),self.message,self.code))),haxe_ds_Option.None,stx_pico_Option.fromNullT(self.pos));
};
var stx_nano_lift_LiftTinkOutcomeToChunk = function() { };
$hxClasses["stx.nano.lift.LiftTinkOutcomeToChunk"] = stx_nano_lift_LiftTinkOutcomeToChunk;
stx_nano_lift_LiftTinkOutcomeToChunk.__name__ = "stx.nano.lift.LiftTinkOutcomeToChunk";
stx_nano_lift_LiftTinkOutcomeToChunk.core = function(oc) {
	return stx_nano_Chunk.fromTinkOutcome(oc);
};
var stx_net_uri_AddressNode = $hxEnums["stx.net.uri.AddressNode"] = { __ename__:"stx.net.uri.AddressNode",__constructs__:null
	,Param: ($_=function(v) { return {_hx_index:0,v:v,__enum__:"stx.net.uri.AddressNode",toString:$estr}; },$_._hx_name="Param",$_.__params__ = ["v"],$_)
	,Segment: ($_=function(head,tail) { return {_hx_index:1,head:head,tail:tail,__enum__:"stx.net.uri.AddressNode",toString:$estr}; },$_._hx_name="Segment",$_.__params__ = ["head","tail"],$_)
	,Fragment: ($_=function(v) { return {_hx_index:2,v:v,__enum__:"stx.net.uri.AddressNode",toString:$estr}; },$_._hx_name="Fragment",$_.__params__ = ["v"],$_)
	,Query: ($_=function(v) { return {_hx_index:3,v:v,__enum__:"stx.net.uri.AddressNode",toString:$estr}; },$_._hx_name="Query",$_.__params__ = ["v"],$_)
	,Segments: ($_=function(v) { return {_hx_index:4,v:v,__enum__:"stx.net.uri.AddressNode",toString:$estr}; },$_._hx_name="Segments",$_.__params__ = ["v"],$_)
};
stx_net_uri_AddressNode.__constructs__ = [stx_net_uri_AddressNode.Param,stx_net_uri_AddressNode.Segment,stx_net_uri_AddressNode.Fragment,stx_net_uri_AddressNode.Query,stx_net_uri_AddressNode.Segments];
var stx_net_uri_Authority = $hxEnums["stx.net.uri.Authority"] = { __ename__:"stx.net.uri.Authority",__constructs__:null
	,Serve: ($_=function(s) { return {_hx_index:0,s:s,__enum__:"stx.net.uri.Authority",toString:$estr}; },$_._hx_name="Serve",$_.__params__ = ["s"],$_)
	,Reg: ($_=function(r) { return {_hx_index:1,r:r,__enum__:"stx.net.uri.Authority",toString:$estr}; },$_._hx_name="Reg",$_.__params__ = ["r"],$_)
};
stx_net_uri_Authority.__constructs__ = [stx_net_uri_Authority.Serve,stx_net_uri_Authority.Reg];
var stx_net_uri_Host = $hxEnums["stx.net.uri.Host"] = { __ename__:"stx.net.uri.Host",__constructs__:null
	,IP4: ($_=function(s,port) { return {_hx_index:0,s:s,port:port,__enum__:"stx.net.uri.Host",toString:$estr}; },$_._hx_name="IP4",$_.__params__ = ["s","port"],$_)
	,Named: ($_=function(s,port) { return {_hx_index:1,s:s,port:port,__enum__:"stx.net.uri.Host",toString:$estr}; },$_._hx_name="Named",$_.__params__ = ["s","port"],$_)
};
stx_net_uri_Host.__constructs__ = [stx_net_uri_Host.IP4,stx_net_uri_Host.Named];
var stx_net_uri_Part = $hxEnums["stx.net.uri.Part"] = { __ename__:"stx.net.uri.Part",__constructs__:null
	,Simple: ($_=function(p) { return {_hx_index:0,p:p,__enum__:"stx.net.uri.Part",toString:$estr}; },$_._hx_name="Simple",$_.__params__ = ["p"],$_)
	,Query: ($_=function(p,v) { return {_hx_index:1,p:p,v:v,__enum__:"stx.net.uri.Part",toString:$estr}; },$_._hx_name="Query",$_.__params__ = ["p","v"],$_)
	,Opaque: ($_=function(s) { return {_hx_index:2,s:s,__enum__:"stx.net.uri.Part",toString:$estr}; },$_._hx_name="Opaque",$_.__params__ = ["s"],$_)
};
stx_net_uri_Part.__constructs__ = [stx_net_uri_Part.Simple,stx_net_uri_Part.Query,stx_net_uri_Part.Opaque];
var stx_net_uri_Path = $hxEnums["stx.net.uri.Path"] = { __ename__:"stx.net.uri.Path",__constructs__:null
	,Absolute: ($_=function(xs) { return {_hx_index:0,xs:xs,__enum__:"stx.net.uri.Path",toString:$estr}; },$_._hx_name="Absolute",$_.__params__ = ["xs"],$_)
	,Net: ($_=function(a,xs) { return {_hx_index:1,a:a,xs:xs,__enum__:"stx.net.uri.Path",toString:$estr}; },$_._hx_name="Net",$_.__params__ = ["a","xs"],$_)
	,Relative: ($_=function(rel,rest) { return {_hx_index:2,rel:rel,rest:rest,__enum__:"stx.net.uri.Path",toString:$estr}; },$_._hx_name="Relative",$_.__params__ = ["rel","rest"],$_)
};
stx_net_uri_Path.__constructs__ = [stx_net_uri_Path.Absolute,stx_net_uri_Path.Net,stx_net_uri_Path.Relative];
var stx_net_uri_Server = $hxEnums["stx.net.uri.Server"] = { __ename__:"stx.net.uri.Server",__constructs__:null
	,Authenticated: ($_=function(info,Host) { return {_hx_index:0,info:info,Host:Host,__enum__:"stx.net.uri.Server",toString:$estr}; },$_._hx_name="Authenticated",$_.__params__ = ["info","Host"],$_)
	,Simple: ($_=function(host) { return {_hx_index:1,host:host,__enum__:"stx.net.uri.Server",toString:$estr}; },$_._hx_name="Simple",$_.__params__ = ["host"],$_)
};
stx_net_uri_Server.__constructs__ = [stx_net_uri_Server.Authenticated,stx_net_uri_Server.Simple];
var stx_net_uri_Test = function() { };
$hxClasses["stx.net.uri.Test"] = stx_net_uri_Test;
stx_net_uri_Test.__name__ = "stx.net.uri.Test";
stx_net_uri_Test.tests = function() {
	return [new stx_net_uri_test_UriTest(),new stx_net_uri_test_IrisTest(),new stx_net_uri_test_IPV6Test()];
};
stx_net_uri_Test.main = function() {
	var this1 = stx_Log.ZERO;
	var log = stx_log_logger_Global.get_ZERO();
	log.includes.push("stx/parse");
	log.level = 1;
	stx_Test.test(stx_nano_Wildcard.__).auto();
};
var stx_net_uri_Uri = $hxEnums["stx.net.uri.Uri"] = { __ename__:"stx.net.uri.Uri",__constructs__:null
	,Absolute: ($_=function(scheme,p) { return {_hx_index:0,scheme:scheme,p:p,__enum__:"stx.net.uri.Uri",toString:$estr}; },$_._hx_name="Absolute",$_.__params__ = ["scheme","p"],$_)
	,Relative: ($_=function(p,xs) { return {_hx_index:1,p:p,xs:xs,__enum__:"stx.net.uri.Uri",toString:$estr}; },$_._hx_name="Relative",$_.__params__ = ["p","xs"],$_)
};
stx_net_uri_Uri.__constructs__ = [stx_net_uri_Uri.Absolute,stx_net_uri_Uri.Relative];
var stx_test_Assert = function() {
	this.__assertions = [];
};
$hxClasses["stx.test.Assert"] = stx_test_Assert;
stx_test_Assert.__name__ = "stx.test.Assert";
stx_test_Assert.prototype = {
	__assertions: null
	,assert: function(assertion) {
		this.__assertions.push(assertion);
	}
	,eq: function(self,that,eq,reason,pos) {
		reason = this.reasoning(function() {
			return stx_Test.explain(stx_nano_Wildcard.__,self).should().be_equal_to(that);
		},reason);
		this.assert(stx_test_core_Assertion.make(stx_assert_EqualedSum.is_equal(eq.comply(self,that)),reason,stx_fail_TestFailureSum.TestFailedBecause(reason),pos));
	}
	,equals: function(self,that,reason,pos) {
		reason = this.reasoning(function() {
			return stx_Test.explain(stx_nano_Wildcard.__,self).should().be_equal_to(that);
		},reason);
		this.assert(stx_test_core_Assertion.make(self == that,reason,stx_fail_TestFailureSum.TestFailedBecause(reason),pos));
	}
	,raise: function(error,reason,pos) {
		var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,reason);
		if(self._hx_index == 0) {
			var v = self.v;
			reason = v;
		} else {
			reason = Std.string(error);
		}
		this.assert(stx_test_core_Assertion.make(false,reason,stx_fail_TestFailureSum.E_Test_Exception(error),pos));
	}
	,pass: function(reason,pos) {
		if(reason == null) {
			reason = "pass";
		}
		this.assert(stx_test_core_Assertion.make(true,reason,stx_fail_TestFailureSum.NullTestFailure,pos));
	}
	,fail: function(reason,pos) {
		if(reason == null) {
			reason = "force fail";
		}
		this.assert(stx_test_core_Assertion.make(false,reason,null,pos));
	}
	,refuse: function(err,pos) {
		this.assert(stx_test_core_Assertion.make(false,stx_pico_Option.toString(err.get_data()),stx_fail_TestFailureSum.E_Test_Refuse(err),pos));
	}
	,error: function(err,pos) {
		this.assert(stx_test_core_Assertion.make(false,stx_pico_Option.toString(err.get_data()),stx_fail_TestFailureSum.E_Test_Refuse(stx_fail_Error.map(err,stx_fail_DeclineSum.EXTERIOR)),pos));
	}
	,exception: function(err,pos) {
		this.assert(stx_test_core_Assertion.make(false,err.details(),stx_fail_TestFailureSum.E_Test_Exception(err),pos));
	}
	,error_test: function(reason,err,pos) {
		this.assert(stx_test_core_Assertion.make(false,reason,err,pos));
	}
	,same: function(lhs,rhs,reason,pos) {
		reason = this.reasoning(function() {
			return stx_Test.explain(stx_nano_Wildcard.__,lhs).should().be(rhs,"the same as");
		},reason);
		this.assert(stx_test_core_Assertion.make(equals_Equal.equals(lhs,rhs),reason,null,pos));
	}
	,is_true: function(v,reason,pos) {
		reason = this.reasoning(function() {
			return stx_Test.explain(stx_nano_Wildcard.__,v).should().be(true);
		},reason);
		this.assert(stx_test_core_Assertion.make(v,reason,null,pos));
	}
	,is_false: function(v,reason,pos) {
		reason = this.reasoning(function() {
			return stx_Test.explain(stx_nano_Wildcard.__,v).should().be(false);
		},reason);
		this.assert(stx_test_core_Assertion.make(!v,reason,null,pos));
	}
	,exists: function(v,reason,pos) {
		reason = this.reasoning(function() {
			return stx_Test.explain(stx_nano_Wildcard.__,"value").should().exist();
		},reason);
		this.assert(stx_test_core_Assertion.make(v != null,reason,null,pos));
	}
	,iz: function(clazz,v,reason,pos) {
		reason = this.reasoning(function() {
			return stx_Test.explain(stx_nano_Wildcard.__,v).should().be(clazz,"a value of type");
		},reason);
		var truth;
		var _g = Type.typeof(v);
		if(_g._hx_index == 6) {
			var cls = _g.c;
			truth = stx_nano_lift_LiftNano.identifier(cls) == stx_nano_lift_LiftNano.identifier(clazz);
		} else {
			truth = false;
		}
		this.assert(stx_test_core_Assertion.make(truth,reason,null,pos));
	}
	,raises: function(fn,reason,pos) {
		if(reason == null) {
			reason = "Expectation of thrown error not met";
		}
		var truth = false;
		try {
			fn();
		} catch( _g ) {
			truth = true;
		}
		this.assert(stx_test_core_Assertion.make(truth,reason,null,pos));
	}
	,alike: function(oI,oII,reason,pos) {
		var e0 = oI;
		var e1 = oII;
		reason = this.reasoning(function() {
			return stx_Test.explain(stx_nano_Wildcard.__,e0).should().be_like(e1);
		},reason);
		var truth = stx_nano_EnumValue.get_index(e0) == stx_nano_EnumValue.get_index(e1) && stx_nano_EnumValue.ctr(e0) == stx_nano_EnumValue.ctr(e1);
		this.assert(stx_test_core_Assertion.make(truth,reason,null,pos));
	}
	,accepted: function(o,reason,pos) {
		reason = this.reasoning(function() {
			return stx_Test.explain(stx_nano_Wildcard.__,o).should().be_like(stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,null));
		},reason);
		this.alike(stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,null),o,reason,pos);
	}
	,reasoning: function(op,def) {
		var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,def);
		if(self._hx_index == 0) {
			var v = self.v;
			return v;
		} else {
			return op().toString();
		}
	}
	,__class__: stx_test_Assert
};
var stx_test_TestCase = function() {
	stx_test_Assert.call(this);
};
$hxClasses["stx.test.TestCase"] = stx_test_TestCase;
stx_test_TestCase.__name__ = "stx.test.TestCase";
stx_test_TestCase.__super__ = stx_test_Assert;
stx_test_TestCase.prototype = $extend(stx_test_Assert.prototype,{
	__stx__tests: function(timeout) {
		return stx_test_TestCaseLift.get_tests(this,timeout);
	}
	,__setup: function() {
		return haxe_ds_Option.None;
	}
	,__teardown: function() {
		return haxe_ds_Option.None;
	}
	,__before: function() {
		return haxe_ds_Option.None;
	}
	,__after: function() {
		return haxe_ds_Option.None;
	}
	,asTestCase: function() {
		return this;
	}
	,wrap: function(future,pos) {
		var _gthis = this;
		var this1 = new tink_core__$Future_SuspendableFuture(function(cb) {
			try {
				return future.handle(function(v) {
					cb(stx_nano_lift_LiftNano.triple(stx_nano_Wildcard.__,pos,_gthis,stx_test_AsyncResult.pure(v)));
				});
			} catch( _g ) {
				var _g1 = haxe_Exception.caught(_g);
				var _g2 = _g1.unwrap();
				if(js_Boot.__implements(_g2,stx_fail_ErrorApi)) {
					var e = _g2;
					_gthis.error(e,pos);
					cb(stx_nano_lift_LiftNano.triple(stx_nano_Wildcard.__,pos,_gthis,stx_test_AsyncResult.unit()));
					return null;
				} else {
					var e = _g1;
					_gthis.exception(e,pos);
					cb(stx_nano_lift_LiftNano.triple(stx_nano_Wildcard.__,pos,_gthis,stx_test_AsyncResult.unit()));
					return null;
				}
			}
		});
		return stx_test_WrappedFuture.lift(this1);
	}
	,__class__: stx_test_TestCase
});
var stx_net_uri_test_IPV6Test = function() {
	stx_test_TestCase.call(this);
};
$hxClasses["stx.net.uri.test.IPV6Test"] = stx_net_uri_test_IPV6Test;
stx_net_uri_test_IPV6Test.__name__ = "stx.net.uri.test.IPV6Test";
stx_net_uri_test_IPV6Test.__super__ = stx_test_TestCase;
stx_net_uri_test_IPV6Test.prototype = $extend(stx_test_TestCase.prototype,{
	value: null
	,__setup: function() {
		var pos = { fileName : "src/main/haxe/stx/net/uri/test/IPV6Test.hx", lineNumber : 11, className : "stx.net.uri.test.IPV6Test", methodName : "__setup"};
		var str = "ipv6";
		if(!stx_nano_Resource.exists(str)) {
			if(pos == null) {
				throw haxe_Exception.thrown("E_ResourceNotFound(" + str + ")");
			} else {
				var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,pos);
				var error = stx_fail_Refuse.make(haxe_ds_Option.Some(stx_fail_DeclineSum.INTERIOR(stx_nano_CTR.apply(function(_) {
					return stx_nano_Digests.e_resource_not_found(_,str);
				},stx_Nano.digests(stx_nano_Wildcard.__)))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1));
				throw haxe_Exception.thrown(error);
			}
		}
		var this1 = str;
		var a = stx_nano_Resource.string(this1);
		var b = stx_lift_ArrayLift.ldropn(a.split("\n"),2);
		this.value = b;
		return haxe_ds_Option.None;
	}
	,test: function() {
		var count = 0;
		var _g = 0;
		var _g1 = this.value;
		while(_g < _g1.length) {
			var x = _g1[_g];
			++_g;
			++count;
			if(count < 1000) {
				try {
					var res = stx_parse_parser_term_Uri.IPv6Address.apply(stx_parse_ParseInput.pure(stx_parse_core_Enumerable.string(x)));
					if(res.get_error().is_defined() == false) {
						haxe_Log.trace("ok " + x + " at " + count,{ fileName : "src/main/haxe/stx/net/uri/test/IPV6Test.hx", lineNumber : 26, className : "stx.net.uri.test.IPV6Test", methodName : "test"});
					} else {
						haxe_Log.trace("failed " + count,{ fileName : "src/main/haxe/stx/net/uri/test/IPV6Test.hx", lineNumber : 28, className : "stx.net.uri.test.IPV6Test", methodName : "test"});
						haxe_Log.trace(res.get_error(),{ fileName : "src/main/haxe/stx/net/uri/test/IPV6Test.hx", lineNumber : 29, className : "stx.net.uri.test.IPV6Test", methodName : "test"});
					}
				} catch( _g2 ) {
					haxe_Log.trace("ERROR " + x + " at " + count,{ fileName : "src/main/haxe/stx/net/uri/test/IPV6Test.hx", lineNumber : 32, className : "stx.net.uri.test.IPV6Test", methodName : "test"});
				}
			}
		}
	}
	,test_h16: function() {
		haxe_Log.trace(this.value[1],{ fileName : "src/main/haxe/stx/net/uri/test/IPV6Test.hx", lineNumber : 39, className : "stx.net.uri.test.IPV6Test", methodName : "test_h16"});
		var v = stx_parse_ParseInput.pure(stx_parse_core_Enumerable.string(this.value[1]));
		haxe_Log.trace(v,{ fileName : "src/main/haxe/stx/net/uri/test/IPV6Test.hx", lineNumber : 41, className : "stx.net.uri.test.IPV6Test", methodName : "test_h16"});
		var x = stx_parse_parser_term_Uri.h16.apply(v);
		haxe_Log.trace(x,{ fileName : "src/main/haxe/stx/net/uri/test/IPV6Test.hx", lineNumber : 43, className : "stx.net.uri.test.IPV6Test", methodName : "test_h16"});
	}
	,test_full: function() {
		var v = stx_parse_ParseInput.pure(stx_parse_core_Enumerable.string("2001:569:7e0e:6f00:cd4a:d90f:d5ea:f9e5"));
		var p = stx_parse_parser_term_Uri.IPv6Address.apply(v);
		haxe_Log.trace(v,{ fileName : "src/main/haxe/stx/net/uri/test/IPV6Test.hx", lineNumber : 48, className : "stx.net.uri.test.IPV6Test", methodName : "test_full"});
	}
	,test_null_error: function() {
		var v = stx_parse_ParseInput.pure(stx_parse_core_Enumerable.string("2001:678:be4:8::29"));
		var p = stx_parse_parser_term_Uri.IPv6Address.apply(v);
		haxe_Log.trace(v,{ fileName : "src/main/haxe/stx/net/uri/test/IPV6Test.hx", lineNumber : 53, className : "stx.net.uri.test.IPV6Test", methodName : "test_null_error"});
	}
	,__class__: stx_net_uri_test_IPV6Test
});
var stx_net_uri_test__$IrisTest_Util = function() { };
$hxClasses["stx.net.uri.test._IrisTest.Util"] = stx_net_uri_test__$IrisTest_Util;
stx_net_uri_test__$IrisTest_Util.__name__ = "stx.net.uri.test._IrisTest.Util";
stx_net_uri_test__$IrisTest_Util.cdata = function(str) {
	var a = new hre_RegExp(stx_net_uri_test__$IrisTest_Util.cdata_r,"g");
	var b = a.exec(str);
	var c = b.groups[0];
	return stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,c);
};
var stx_net_uri_test_IrisTest = function() {
	stx_test_TestCase.call(this);
};
$hxClasses["stx.net.uri.test.IrisTest"] = stx_net_uri_test_IrisTest;
stx_net_uri_test_IrisTest.__name__ = "stx.net.uri.test.IrisTest";
stx_net_uri_test_IrisTest.__super__ = stx_test_TestCase;
stx_net_uri_test_IrisTest.prototype = $extend(stx_test_TestCase.prototype,{
	p: function() {
	}
	,source: function() {
		var pos = { fileName : "src/main/haxe/stx/net/uri/test/IrisTest.hx", lineNumber : 34, className : "stx.net.uri.test.IrisTest", methodName : "source"};
		var str = "iris";
		if(!stx_nano_Resource.exists(str)) {
			if(pos == null) {
				throw haxe_Exception.thrown("E_ResourceNotFound(" + str + ")");
			} else {
				var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,pos);
				var error = stx_fail_Refuse.make(haxe_ds_Option.Some(stx_fail_DeclineSum.INTERIOR(stx_nano_CTR.apply(function(_) {
					return stx_nano_Digests.e_resource_not_found(_,str);
				},stx_Nano.digests(stx_nano_Wildcard.__)))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1));
				throw haxe_Exception.thrown(error);
			}
		}
		var this1 = str;
		return stx_nano_Resource.string(this1);
	}
	,value: null
	,get_value: function() {
		if(this.value == null) {
			return this.value = tink_core_OutcomeTools.sure(new tink_xml_Structure0().read(tink_xml_Source.fromXml(Xml.parse(this.source()))));
		} else {
			return this.value;
		}
	}
	,test_value: function() {
		var val = this.get_value();
		var _g = 0;
		var _g1 = val.groups;
		while(_g < _g1.length) {
			var group = _g1[_g];
			++_g;
			var _g2 = 0;
			var _g3 = group.tests;
			while(_g2 < _g3.length) {
				var test = _g3[_g2];
				++_g2;
				if(test.uri != null) {
					haxe_Log.trace(test.uri,{ fileName : "src/main/haxe/stx/net/uri/test/IrisTest.hx", lineNumber : 48, className : "stx.net.uri.test.IrisTest", methodName : "test_value"});
				}
			}
		}
	}
	,__class__: stx_net_uri_test_IrisTest
});
var stx_net_uri_test_UriTest = function() {
	stx_test_TestCase.call(this);
};
$hxClasses["stx.net.uri.test.UriTest"] = stx_net_uri_test_UriTest;
stx_net_uri_test_UriTest.__name__ = "stx.net.uri.test.UriTest";
stx_net_uri_test_UriTest.__super__ = stx_test_TestCase;
stx_net_uri_test_UriTest.prototype = $extend(stx_test_TestCase.prototype,{
	test_ipv4: function() {
		var ipt = stx_parse_ParseInput.pure(stx_parse_core_Enumerable.string("255.255.255.255"));
		var p = stx_parse_parser_term_Uri.IPv4address();
		var o = p.apply(ipt);
		var v = $iterator(stx_nano_Res)(stx_parse_ParseResult.toRes(o));
		while(v.hasNext()) {
			var v1 = v.next();
			haxe_Log.trace(v1 == null ? "null" : stx_pico_Option.toString(v1),{ fileName : "src/main/haxe/stx/net/uri/test/UriTest.hx", lineNumber : 16, className : "stx.net.uri.test.UriTest", methodName : "test_ipv4"});
		}
	}
	,__class__: stx_net_uri_test_UriTest
});
var stx_parse_Logging = function() { };
$hxClasses["stx.parse.Logging"] = stx_parse_Logging;
stx_parse_Logging.__name__ = "stx.parse.Logging";
stx_parse_Logging.log = function(wildcard) {
	return stx_Log.void();
};
var stx_parse_ParseInputCls = function(content,memo,tag,cursor,tree) {
	this.content = content;
	this.memo = memo;
	this.tag = tag;
	var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,cursor);
	var tmp;
	if(self._hx_index == 0) {
		var v = self.v;
		tmp = v;
	} else {
		tmp = [];
	}
	this.cursor = tmp;
	var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,tree);
	var tmp;
	if(self._hx_index == 0) {
		var v = self.v;
		tmp = v;
	} else {
		tmp = stx_parse_core_Lung.unit();
	}
	this.tree = tmp;
};
$hxClasses["stx.parse.ParseInputCls"] = stx_parse_ParseInputCls;
stx_parse_ParseInputCls.__name__ = "stx.parse.ParseInputCls";
stx_parse_ParseInputCls.make = function(content,memo,tag,cursor,tree) {
	return new stx_parse_ParseInputCls(content,memo,tag,cursor,tree);
};
stx_parse_ParseInputCls.prototype = {
	content: null
	,memo: null
	,cursor: null
	,tree: null
	,tag: null
	,toString: function() {
		return "path: " + Std.string(this.cursor) + " at " + this.content.index + ":#(" + Std.string(this.content.head()) + ")";
	}
	,head: function() {
		return this.content.head();
	}
	,copy: function(content,memo,tag,cursor,tree) {
		var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,content);
		var content;
		if(self._hx_index == 0) {
			var v = self.v;
			content = v;
		} else {
			content = this.content;
		}
		var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,memo);
		var memo;
		if(self._hx_index == 0) {
			var v = self.v;
			memo = v;
		} else {
			memo = this.memo;
		}
		var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,tag);
		var tag;
		if(self._hx_index == 0) {
			var v = self.v;
			tag = v;
		} else {
			tag = this.tag;
		}
		var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,cursor);
		var cursor;
		if(self._hx_index == 0) {
			var v = self.v;
			cursor = v;
		} else {
			cursor = this.cursor;
		}
		var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,tree);
		var tree;
		if(self._hx_index == 0) {
			var v = self.v;
			tree = v;
		} else {
			tree = this.tree;
		}
		return new stx_parse_ParseInputCls(content,memo,tag,cursor,tree);
	}
	,inside: function(index,name) {
		return this.copy(null,null,null,null,stx_parse_core_Lung.push(this.tree,index,name));
	}
	,push: function(tag) {
		return this.copy(null,null,null,stx_lift_ArrayLift.snoc(this.cursor,tag));
	}
	,pop: function() {
		return this.copy(null,null,null,stx_lift_ArrayLift.ltaken(this.cursor,this.cursor.length - 1));
	}
	,__class__: stx_parse_ParseInputCls
};
var stx_parse_ParseInput = {};
stx_parse_ParseInput.lift = function(self) {
	return self;
};
stx_parse_ParseInput.make = function(content,memo,tag,cursor,tree) {
	return new stx_parse_ParseInputCls(content,memo,tag,cursor,tree);
};
stx_parse_ParseInput.pure = function(en) {
	return stx_parse_ParseInput.make(en,stx_parse_core_Memo.unit());
};
stx_parse_ParseInput.drop = function(this1,len) {
	return this1.copy(this1.content.drop(len));
};
stx_parse_ParseInput.take = function(this1,len) {
	return this1.content.take(len);
};
stx_parse_ParseInput.foldn = function(this1,fn,n,z) {
	var memo = z;
	var self = stx_parse_ParseInput.lift(this1);
	while(n > 0) {
		var next = stx_parse_ParseInput.get_content(self).take(1);
		memo = fn(next,memo);
		self = self.copy(self.content.drop(1));
		--n;
	}
	return memo;
};
stx_parse_ParseInput.tail = function(this1) {
	return this1.copy(this1.content.drop(1));
};
stx_parse_ParseInput.matchedBy = function(this1,e) {
	return this1.content.match(e);
};
stx_parse_ParseInput.position = function(this1) {
	return this1.content.index;
};
stx_parse_ParseInput.prepend = function(this1,i) {
	return stx_parse_ParseInput.make(this1.content.prepend(i),this1.memo,this1.tag);
};
stx_parse_ParseInput.setRecursionHead = function(this1,head) {
	this1.memo.recursionHeads.h[this1.content.index + ""] = head;
};
stx_parse_ParseInput.removeRecursionHead = function(this1) {
	var key = this1.content.index + "";
	var _this = this1.memo.recursionHeads;
	if(Object.prototype.hasOwnProperty.call(_this.h,key)) {
		delete(_this.h[key]);
	}
};
stx_parse_ParseInput.getRecursionHead = function(this1) {
	var res = this1.memo.recursionHeads.h[this1.content.index + ""];
	if(res == null) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(res);
	}
};
stx_parse_ParseInput.getFromCache = function(this1,genKey) {
	var key = genKey(this1.content.index);
	var res = this1.memo.memoEntries.h[key];
	if(res == null) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(res);
	}
};
stx_parse_ParseInput.updateCacheAndGet = function(this1,genKey,entry) {
	var key = genKey(this1.content.index);
	this1.memo.memoEntries.h[key] = entry;
	return entry;
};
stx_parse_ParseInput.is_end = function(this1) {
	return this1.content.is_end();
};
stx_parse_ParseInput.get_offset = function(this1) {
	return this1.content.index;
};
stx_parse_ParseInput.get_content = function(this1) {
	return this1.content;
};
stx_parse_ParseInput.get_index = function(this1) {
	return this1.content.index;
};
stx_parse_ParseInput.prj = function(this1) {
	return this1;
};
var stx_parse_ParseResultCls = function(error,value,asset) {
	stx_nano_EquityCls.call(this,error,value,asset);
};
$hxClasses["stx.parse.ParseResultCls"] = stx_parse_ParseResultCls;
stx_parse_ParseResultCls.__name__ = "stx.parse.ParseResultCls";
stx_parse_ParseResultCls.__super__ = stx_nano_EquityCls;
stx_parse_ParseResultCls.prototype = $extend(stx_nano_EquityCls.prototype,{
	toString: function() {
		return stx_parse_ParseResult._.toString(this);
	}
	,errate: function(fn) {
		return this.errata(function(x) {
			return stx_fail_Refuse.errate(x,fn);
		});
	}
	,errata: function(fn) {
		return stx_parse_ParseResult.make(this.asset,this.value,stx_fail_Error.errata(this.get_error(),fn));
	}
	,with_errata: function(error) {
		return this.errata(function(e) {
			return stx_fail_Refuse.concat(e,error);
		});
	}
	,__class__: stx_parse_ParseResultCls
});
var stx_parse_ParseResultLift = function() { };
$hxClasses["stx.parse.ParseResultLift"] = stx_parse_ParseResultLift;
stx_parse_ParseResultLift.__name__ = "stx.parse.ParseResultLift";
stx_parse_ParseResultLift.toString = function(self) {
	return stx_nano_lift_LiftNano.if_else(stx_nano_EquityLift.has_error(self),function() {
		return Std.string(self.get_error());
	},function() {
		if(self.value == null) {
			return "null";
		} else {
			return stx_pico_Option.toString(self.value);
		}
	});
};
stx_parse_ParseResultLift.mkLR = function(seed,rule,head) {
	return { seed : seed, rule : stx_parse_Parser.get_self(rule), head : head};
};
stx_parse_ParseResultLift.mod = function(self,fn) {
	return stx_parse_ParseResult.fromEquity(stx_nano_EquityLift.copy(self,fn(self.asset)));
};
stx_parse_ParseResultLift.flat_map = function(self,fn) {
	return stx_nano_lift_LiftNano.if_else(self.get_error().is_defined() == false,function() {
		var self1 = self.value;
		switch(self1._hx_index) {
		case 0:
			var t = self1.v;
			return fn(t);
		case 1:
			return stx_LiftParse.nil(self.asset);
		}
	},function() {
		return stx_parse_ParseResult.make(self.asset,haxe_ds_Option.None,self.get_error());
	});
};
stx_parse_ParseResultLift.fudge = function(self) {
	return stx_pico_OptionLift.fudge(self.value);
};
stx_parse_ParseResultLift.toRes = function(self) {
	if(self.get_error().is_defined() == false) {
		return stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,self.value);
	} else {
		return stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_nano_Defect.toRefuse(self.toDefect())),{ fileName : "stx/parse/ParseResult.hx", lineNumber : 95, className : "stx.parse.ParseResultLift", methodName : "toRes"});
	}
};
stx_parse_ParseResultLift.toChunk = function(self) {
	if(self.get_error().is_defined() == false) {
		var _g = self.value;
		switch(_g._hx_index) {
		case 0:
			var x = _g.v;
			return stx_nano_ChunkSum.Val(x);
		case 1:
			return stx_nano_ChunkSum.Tap;
		}
	} else {
		return stx_nano_ChunkSum.End(self.get_error());
	}
};
var stx_parse_ParseResult = {};
stx_parse_ParseResult._new = function(self) {
	var this1 = self;
	return this1;
};
stx_parse_ParseResult.lift = function(self) {
	return stx_parse_ParseResult._new(self);
};
stx_parse_ParseResult.make = function(asset,value,error) {
	return stx_parse_ParseResult.lift(new stx_parse_ParseResultCls(error,value,asset));
};
stx_parse_ParseResult.fromEquity = function(self) {
	return stx_parse_ParseResult.make(self.asset,self.value,self.get_error());
};
stx_parse_ParseResult.map = function(this1,fn) {
	return stx_parse_ParseResult.fromEquity(stx_nano_Equity._.map(this1.toEquity(),function(opt) {
		return stx_pico_OptionLift.map(opt,fn);
	}));
};
stx_parse_ParseResult.is_ok = function(this1) {
	return this1.get_error().is_defined() == false;
};
stx_parse_ParseResult.fails = function(this1) {
	return stx_parse_ParseResult.make(this1.asset,haxe_ds_Option.None,this1.get_error());
};
stx_parse_ParseResult.elide = function(this1) {
	return this1;
};
stx_parse_ParseResult.prj = function(this1) {
	return this1;
};
stx_parse_ParseResult.get_self = function(this1) {
	return stx_parse_ParseResult.lift(this1);
};
stx_parse_ParseResult.pos = function(this1) {
	return this1.asset;
};
stx_parse_ParseResult.toChunk = function(this1) {
	if(this1.get_error().is_defined() == false) {
		var _g = this1.value;
		switch(_g._hx_index) {
		case 0:
			var x = _g.v;
			return stx_nano_ChunkSum.Val(x);
		case 1:
			return stx_nano_ChunkSum.Tap;
		}
	} else {
		return stx_nano_ChunkSum.End(this1.get_error());
	}
};
stx_parse_ParseResult.toRes = function(this1) {
	if(this1.get_error().is_defined() == false) {
		return stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,this1.value);
	} else {
		return stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_nano_Defect.toRefuse(this1.toDefect())),{ fileName : "stx/parse/ParseResult.hx", lineNumber : 95, className : "stx.parse.ParseResultLift", methodName : "toRes"});
	}
};
var stx_parse_Parsers = function() { };
$hxClasses["stx.parse.Parsers"] = stx_parse_Parsers;
stx_parse_Parsers.__name__ = "stx.parse.Parsers";
stx_parse_Parsers.Anon = function(fn,tag,pos) {
	var this1 = new stx_parse_parser_term_Anon(fn,tag,pos);
	return this1;
};
stx_parse_Parsers.SyncAnon = function(fn,tag,pos) {
	var this1 = new stx_parse_parser_term_SyncAnon(fn,tag,pos);
	return this1;
};
stx_parse_Parsers.TaggedAnon = function(fn,tag,pos) {
	var this1 = new stx_parse_parser_term_TaggedAnon(fn,tag,pos);
	return this1;
};
stx_parse_Parsers.Failed = function(msg,is_fatal,id) {
	if(is_fatal == null) {
		is_fatal = false;
	}
	var this1 = new stx_parse_parser_term_Failed(msg,is_fatal,id);
	return this1;
};
stx_parse_Parsers.Succeed = function(value,pos) {
	var this1 = new stx_parse_parser_term_Succeed(value,pos);
	return this1;
};
stx_parse_Parsers.Stamp = function(result,pos) {
	var this1 = new stx_parse_parser_term_Stamp(result,pos);
	return this1;
};
stx_parse_Parsers.Range = function(min,max) {
	var this1 = new stx_parse_parser_term_Range(min,max,{ fileName : "stx/parse/Parsers.hx", lineNumber : 26, className : "stx.parse.Parsers", methodName : "Range"});
	return this1;
};
stx_parse_Parsers.Named = function(self,name) {
	var this1 = new stx_parse_parser_term_Named(self,name);
	return this1;
};
stx_parse_Parsers.Regex = function(str) {
	var this1 = new stx_parse_parser_term_Regex(str,{ fileName : "stx/parse/Parsers.hx", lineNumber : 32, className : "stx.parse.Parsers", methodName : "Regex"});
	return this1;
};
stx_parse_Parsers.Or = function(pI,pII) {
	var this1 = new stx_parse_parser_term_Or(pI,pII,{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
	return this1;
};
stx_parse_Parsers.Ors = function(ps) {
	var this1 = new stx_parse_parser_term_Ors(ps,{ fileName : "stx/parse/Parsers.hx", lineNumber : 38, className : "stx.parse.Parsers", methodName : "Ors"});
	return this1;
};
stx_parse_Parsers.AnonThen = function(p,f) {
	var this1 = new stx_parse_parser_term_AnonThen(p,f,{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
	return this1;
};
stx_parse_Parsers.AndThen = function(p,f) {
	var this1 = new stx_parse_parser_term_AndThen(p,f,{ fileName : "stx/parse/Parsers.hx", lineNumber : 44, className : "stx.parse.Parsers", methodName : "AndThen"});
	return this1;
};
stx_parse_Parsers.Many = function(p) {
	var this1 = new stx_parse_parser_term_Many(p,{ fileName : "stx/parse/Parsers.hx", lineNumber : 47, className : "stx.parse.Parsers", methodName : "Many"});
	return this1;
};
stx_parse_Parsers.OneMany = function(p) {
	var this1 = new stx_parse_parser_term_OneMany(p,{ fileName : "stx/parse/Parsers.hx", lineNumber : 50, className : "stx.parse.Parsers", methodName : "OneMany"});
	return this1;
};
stx_parse_Parsers.Repeated = function(p,n) {
	var this1 = new stx_parse_parser_term_Repeated(p,n,{ fileName : "stx/parse/Parsers.hx", lineNumber : 53, className : "stx.parse.Parsers", methodName : "Repeated"});
	return this1;
};
stx_parse_Parsers.RepeatedUpto = function(p,n) {
	var this1 = new stx_parse_parser_term_RepeatedUpto(p,n,{ fileName : "stx/parse/Parsers.hx", lineNumber : 56, className : "stx.parse.Parsers", methodName : "RepeatedUpto"});
	return this1;
};
stx_parse_Parsers.RepeatedOnlyUpto = function(p,n) {
	var this1 = new stx_parse_parser_term_RepeatedOnlyUpto(p,n,{ fileName : "stx/parse/Parsers.hx", lineNumber : 59, className : "stx.parse.Parsers", methodName : "RepeatedOnlyUpto"});
	return this1;
};
stx_parse_Parsers.RepeatedOnly = function(p,n) {
	var this1 = new stx_parse_parser_term_RepeatedOnly(p,n,{ fileName : "stx/parse/Parsers.hx", lineNumber : 62, className : "stx.parse.Parsers", methodName : "RepeatedOnly"});
	return this1;
};
stx_parse_Parsers.Eof = function() {
	var this1 = new stx_parse_parser_term_Eof(null,{ fileName : "stx/parse/Parsers.hx", lineNumber : 65, className : "stx.parse.Parsers", methodName : "Eof"});
	return this1;
};
stx_parse_Parsers.Lookahead = function(parser) {
	var this1 = new stx_parse_parser_term_Lookahead(parser,null,{ fileName : "stx/parse/Parsers.hx", lineNumber : 68, className : "stx.parse.Parsers", methodName : "Lookahead"});
	return this1;
};
stx_parse_Parsers.Identifier = function(str) {
	var this1 = new stx_parse_parser_term_Identifier(str,{ fileName : "stx/parse/Parsers.hx", lineNumber : 71, className : "stx.parse.Parsers", methodName : "Identifier"});
	return this1;
};
stx_parse_Parsers.Option = function(p) {
	var this1 = new stx_parse_parser_term_Option(p,{ fileName : "stx/parse/Parsers.hx", lineNumber : 74, className : "stx.parse.Parsers", methodName : "Option"});
	return this1;
};
stx_parse_Parsers.Choose = function(fn,tag,pos) {
	var this1 = new stx_parse_parser_term_Choose(fn,tag,pos);
	return this1;
};
stx_parse_Parsers.When = function(fn,tag,pos) {
	var this1 = new stx_parse_parser_term_When(fn,tag,pos);
	return this1;
};
stx_parse_Parsers.Materialize = function(parser) {
	var this1 = new stx_parse_parser_term_Materialize(parser,null,{ fileName : "stx/parse/Parsers.hx", lineNumber : 83, className : "stx.parse.Parsers", methodName : "Materialize"});
	return this1;
};
stx_parse_Parsers.Inspect = function(parser,prefix,postfix,pos) {
	var this1 = new stx_parse_parser_term_Inspect(parser,prefix,postfix,pos);
	return this1;
};
stx_parse_Parsers.TagRefuse = function(parser,name,pos) {
	var this1 = new stx_parse_parser_term_TagRefuse(parser,name,pos);
	return this1;
};
stx_parse_Parsers.Something = function() {
	var this1 = new stx_parse_parser_term_Something(null,{ fileName : "stx/parse/Parsers.hx", lineNumber : 95, className : "stx.parse.Parsers", methodName : "Something"});
	return this1;
};
stx_parse_Parsers.Always = function() {
	var this1 = new stx_parse_parser_term_Always(null,{ fileName : "stx/parse/Parsers.hx", lineNumber : 98, className : "stx.parse.Parsers", methodName : "Always"});
	return this1;
};
stx_parse_Parsers.Nothing = function() {
	var this1 = new stx_parse_parser_term_Nothing(null,{ fileName : "stx/parse/Parsers.hx", lineNumber : 101, className : "stx.parse.Parsers", methodName : "Nothing"});
	return this1;
};
stx_parse_Parsers.Never = function() {
	var this1 = new stx_parse_parser_term_Never(null,{ fileName : "stx/parse/Parsers.hx", lineNumber : 104, className : "stx.parse.Parsers", methodName : "Never"});
	return this1;
};
stx_parse_Parsers.Head = function(fn) {
	var this1 = new stx_parse_parser_term_Head(fn,{ fileName : "stx/parse/Parsers.hx", lineNumber : 107, className : "stx.parse.Parsers", methodName : "Head"});
	return this1;
};
stx_parse_Parsers.AndR = function(l,r) {
	var this1 = new stx_parse_parser_term_AndR(l,r,{ fileName : "stx/parse/Parsers.hx", lineNumber : 110, className : "stx.parse.Parsers", methodName : "AndR"});
	return this1;
};
stx_parse_Parsers.AndL = function(l,r) {
	var this1 = new stx_parse_parser_term_AndL(l,r,{ fileName : "stx/parse/Parsers.hx", lineNumber : 113, className : "stx.parse.Parsers", methodName : "AndL"});
	return this1;
};
stx_parse_Parsers.LAnon = function(fn,pos) {
	var this1 = new stx_parse_parser_term_LAnon(fn,pos);
	return this1;
};
stx_parse_Parsers.AnonWith = function(pI,pII,f) {
	var this1 = new stx_parse_parser_term_AnonWith(pI,pII,f,{ fileName : "stx/parse/Parsers.hx", lineNumber : 119, className : "stx.parse.Parsers", methodName : "AnonWith"});
	return this1;
};
stx_parse_Parsers.CoupleWith = function(pI,pII) {
	var this1 = new stx_parse_parser_term_CoupleWith(pI,pII,{ fileName : "stx/parse/Parsers.hx", lineNumber : 122, className : "stx.parse.Parsers", methodName : "CoupleWith"});
	return this1;
};
stx_parse_Parsers.Rep1Sep = function(pI,sep) {
	var this1 = new stx_parse_parser_term_Rep1Sep(pI,sep);
	return this1;
};
stx_parse_Parsers.Commit = function(pI) {
	var this1 = new stx_parse_parser_term_Commit(pI,null,{ fileName : "stx/parse/Parsers.hx", lineNumber : 128, className : "stx.parse.Parsers", methodName : "Commit"});
	return this1;
};
stx_parse_Parsers.Not = function(p,pos) {
	var this1 = new stx_parse_parser_term_Not(p,pos);
	return this1;
};
stx_parse_Parsers.Until = function(p,pos) {
	var this1 = new stx_parse_parser_term_Until(p,null,pos);
	return this1;
};
stx_parse_Parsers.Position = function(p,pos) {
	var this1 = new stx_parse_parser_term_Position(p,pos);
	return this1;
};
stx_parse_Parsers.CharCode = function(i) {
	var this1 = new stx_parse_parser_term_CharCode(i,{ fileName : "stx/parse/Parsers.hx", lineNumber : 140, className : "stx.parse.Parsers", methodName : "CharCode"});
	return this1;
};
stx_parse_Parsers.Bag = function(choices) {
	var this1 = new stx_parse_parser_term_Bag(choices,{ fileName : "stx/parse/Parsers.hx", lineNumber : 143, className : "stx.parse.Parsers", methodName : "Bag"});
	return this1;
};
var stx_parse_core_EnumerableApi = function() { };
$hxClasses["stx.parse.core.EnumerableApi"] = stx_parse_core_EnumerableApi;
stx_parse_core_EnumerableApi.__name__ = "stx.parse.core.EnumerableApi";
stx_parse_core_EnumerableApi.__isInterface__ = true;
stx_parse_core_EnumerableApi.prototype = {
	data: null
	,index: null
	,zero: null
	,copy: null
	,head: null
	,take: null
	,drop: null
	,match: null
	,prepend: null
	,is_end: null
	,asEnumerable: null
	,__class__: stx_parse_core_EnumerableApi
};
var stx_parse_core_Enumerable = {};
stx_parse_core_Enumerable._new = function(self) {
	var this1 = self;
	return this1;
};
stx_parse_core_Enumerable.lift = function(self) {
	return stx_parse_core_Enumerable._new(self);
};
stx_parse_core_Enumerable.array = function(array) {
	return new stx_parse_core_enumerable_term_Array(array);
};
stx_parse_core_Enumerable.string = function(string) {
	return new stx_parse_core_enumerable_term_String(string);
};
stx_parse_core_Enumerable.linked_list = function(list) {
	return new stx_parse_core_enumerable_term_LinkedList(list);
};
stx_parse_core_Enumerable.prj = function(this1) {
	return this1;
};
stx_parse_core_Enumerable.get_self = function(this1) {
	return stx_parse_core_Enumerable.lift(this1);
};
var stx_parse_core_EnumerableCls = function(data,index) {
	if(index == null) {
		index = 0;
	}
	this.data = data;
	this.index = index;
};
$hxClasses["stx.parse.core.EnumerableCls"] = stx_parse_core_EnumerableCls;
stx_parse_core_EnumerableCls.__name__ = "stx.parse.core.EnumerableCls";
stx_parse_core_EnumerableCls.__interfaces__ = [stx_parse_core_EnumerableApi];
stx_parse_core_EnumerableCls.prototype = {
	data: null
	,index: null
	,zero: function() {
		return this.copy(0);
	}
	,is_end: null
	,match: null
	,prepend: null
	,head: null
	,drop: null
	,take: null
	,copy: null
	,asEnumerable: function() {
		return this;
	}
	,__class__: stx_parse_core_EnumerableCls
};
var stx_parse_core_Head = {};
stx_parse_core_Head.getHead = function(this1) {
	return this1.headParser;
};
var stx_parse_core_LRLift = function() { };
$hxClasses["stx.parse.core.LRLift"] = stx_parse_core_LRLift;
stx_parse_core_LRLift.__name__ = "stx.parse.core.LRLift";
stx_parse_core_LRLift.lrAnswer = function(p,genKey,input,growable) {
	var _g = growable.head;
	switch(_g._hx_index) {
	case 0:
		var head = _g.v;
		if(stx_parse_core_Head.getHead(head) != p) {
			return growable.seed;
		} else {
			var entry = stx_parse_core_MemoEntry.MemoParsed(growable.seed);
			var key = genKey(input.content.index);
			input.memo.memoEntries.h[key] = entry;
			return stx_nano_lift_LiftNano.if_else(growable.seed.get_error().is_defined() == false,function() {
				return stx_parse_core_LRLift.grow(p,genKey,input,head);
			},function() {
				return growable.seed;
			});
		}
		break;
	case 1:
		return stx_LiftParse.failure(stx_LiftParse.erration(input,stx_fail_ParseFailureCode.fromString("E_NoRecursionHead"),true),input);
	}
};
stx_parse_core_LRLift.recall = function(p,genKey,input) {
	var key = genKey(input.content.index);
	var res = input.memo.memoEntries.h[key];
	var cached = res == null ? haxe_ds_Option.None : haxe_ds_Option.Some(res);
	var res = input.memo.recursionHeads.h[input.content.index + ""];
	var _g = res == null ? haxe_ds_Option.None : haxe_ds_Option.Some(res);
	switch(_g._hx_index) {
	case 0:
		var head = _g.v;
		if(cached == haxe_ds_Option.None && !stx_ds_LinkedList.has(stx_ds_LinkedList.cons(head.involvedSet,head.headParser),stx_parse_Parser.get_self(p))) {
			return haxe_ds_Option.Some(stx_parse_core_MemoEntry.MemoParsed(stx_LiftParse.failure(stx_LiftParse.erration(input,stx_fail_ParseFailureCode.fromString("dummy")),input)));
		} else if(stx_ds_LinkedList.has(head.evalSet,p)) {
			head.evalSet = stx_ds_LinkedList.filter(head.evalSet,function(x) {
				return x != p;
			});
			var res = p.apply(input);
			var memo = stx_parse_core_MemoEntry.MemoParsed(res);
			var key = genKey(input.content.index);
			input.memo.memoEntries.h[key] = memo;
			return haxe_ds_Option.Some(memo);
		} else {
			return cached;
		}
		break;
	case 1:
		return cached;
	}
};
stx_parse_core_LRLift.setupLR = function(p,input,recDetect) {
	if(recDetect.head == haxe_ds_Option.None) {
		recDetect.head = haxe_ds_Option.Some(stx_parse_Parser.mkHead(p));
	}
	var stack = input.memo.lrStack;
	var h = stx_pico_OptionLift.fudge(recDetect.head);
	while(stx_ds_LinkedList.head(stack) != null && stx_ds_LinkedList.head(stack).rule != p) {
		var head = stx_ds_LinkedList.head(stack);
		head.head = recDetect.head;
		h.involvedSet = stx_ds_LinkedList.cons(h.involvedSet,head.rule);
		stack = stx_ds_LinkedList.tail(stack);
	}
};
stx_parse_core_LRLift.grow = function(p,genKey,rest,head) {
	rest.memo.recursionHeads.h[rest.content.index + ""] = head;
	var oldRes;
	var key = genKey(rest.content.index);
	var res = rest.memo.memoEntries.h[key];
	var _g = stx_pico_OptionLift.fudge(res == null ? haxe_ds_Option.None : haxe_ds_Option.Some(res));
	if(_g._hx_index == 0) {
		var ans = _g.ans;
		oldRes = ans;
	} else {
		throw haxe_Exception.thrown("impossible match");
	}
	head.evalSet = head.involvedSet;
	if(p == null) {
		throw haxe_Exception.thrown("undefined parse delegate");
	}
	var res = p.apply(rest);
	if(res.get_error().is_defined() == false) {
		if(stx_parse_ParseInput.get_offset(oldRes.asset) < stx_parse_ParseInput.get_offset(res.asset)) {
			var entry = stx_parse_core_MemoEntry.MemoParsed(res);
			var key = genKey(rest.content.index);
			rest.memo.memoEntries.h[key] = entry;
			return stx_parse_core_LRLift.grow(p,genKey,rest,head);
		} else {
			var key = rest.content.index + "";
			var _this = rest.memo.recursionHeads;
			if(Object.prototype.hasOwnProperty.call(_this.h,key)) {
				delete(_this.h[key]);
			}
			var key = genKey(rest.content.index);
			var res1 = rest.memo.memoEntries.h[key];
			var _g = stx_pico_OptionLift.fudge(res1 == null ? haxe_ds_Option.None : haxe_ds_Option.Some(res1));
			if(_g._hx_index == 0) {
				var ans = _g.ans;
				return ans;
			} else {
				throw haxe_Exception.thrown("impossible match");
			}
		}
	} else if(stx_nano_IterLift.lfold(stx_nano_lift_LiftIterableToIter.toIter(stx_fail_Error.toIterable(res.get_error())),function(next,memo) {
		return stx_nano_lift_LiftNano.if_else(memo,function() {
			return true;
		},function() {
			var self = next.get_data();
			switch(self._hx_index) {
			case 0:
				var t = self.v;
				return stx_fail_DeclineLift.fold(t,function(x) {
					return x.fatal;
				},function(_) {
					return false;
				});
			case 1:
				return false;
			}
		});
	},false)) {
		var entry = stx_parse_core_MemoEntry.MemoParsed(res);
		var key = genKey(rest.content.index);
		rest.memo.memoEntries.h[key] = entry;
		var key = rest.content.index + "";
		var _this = rest.memo.recursionHeads;
		if(Object.prototype.hasOwnProperty.call(_this.h,key)) {
			delete(_this.h[key]);
		}
		return res;
	} else {
		var key = rest.content.index + "";
		var _this = rest.memo.recursionHeads;
		if(Object.prototype.hasOwnProperty.call(_this.h,key)) {
			delete(_this.h[key]);
		}
		return oldRes;
	}
};
var stx_parse_core_LR = {};
stx_parse_core_LR.pos = function(this1) {
	return this1.seed.asset;
};
var stx_parse_core_Lung = {};
stx_parse_core_Lung.unit = function() {
	return stx_parse_core_Lung._new();
};
stx_parse_core_Lung.lift = function(self) {
	return stx_parse_core_Lung._new(self);
};
stx_parse_core_Lung._new = function(self) {
	var this1;
	var self1 = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,self);
	if(self1._hx_index == 0) {
		var v = self1.v;
		this1 = v;
	} else {
		this1 = new haxe_ds_IntMap();
	}
	return this1;
};
stx_parse_core_Lung.get = function(this1,i) {
	var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,this1.h[i]);
	if(self._hx_index == 0) {
		var v = self.v;
		return v;
	} else {
		var o = [];
		this1.h[i] = o;
		return o;
	}
};
stx_parse_core_Lung.push = function(this1,i,str) {
	var next = stx_parse_core_Lung.copy(this1);
	stx_parse_core_Lung.get(next,i).push(str);
	return next;
};
stx_parse_core_Lung.copy = function(this1) {
	var next = new haxe_ds_IntMap();
	var map = this1;
	var _g_map = map;
	var _g_keys = map.keys();
	while(_g_keys.hasNext()) {
		var key = _g_keys.next();
		var _g_value = _g_map.get(key);
		var _g_key = key;
		var key1 = _g_key;
		var val = _g_value;
		var value = val.slice();
		next.h[key1] = value;
	}
	return stx_parse_core_Lung.lift(next);
};
var stx_parse_core_MemoEntry = $hxEnums["stx.parse.core.MemoEntry"] = { __ename__:"stx.parse.core.MemoEntry",__constructs__:null
	,MemoParsed: ($_=function(ans) { return {_hx_index:0,ans:ans,__enum__:"stx.parse.core.MemoEntry",toString:$estr}; },$_._hx_name="MemoParsed",$_.__params__ = ["ans"],$_)
	,MemoLR: ($_=function(lr) { return {_hx_index:1,lr:lr,__enum__:"stx.parse.core.MemoEntry",toString:$estr}; },$_._hx_name="MemoLR",$_.__params__ = ["lr"],$_)
};
stx_parse_core_MemoEntry.__constructs__ = [stx_parse_core_MemoEntry.MemoParsed,stx_parse_core_MemoEntry.MemoLR];
var stx_parse_core_Memo = {};
stx_parse_core_Memo.unit = function() {
	return { symbols : new haxe_ds_ObjectMap(), memoEntries : new haxe_ds_StringMap(), recursionHeads : new haxe_ds_StringMap(), lrStack : stx_ds_LinkedList.unit()};
};
stx_parse_core_Memo.get = function(this1,key) {
	var value = this1.memoEntries.h[key];
	if(value == null) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
var stx_parse_core_MemoEntryLift = function() { };
$hxClasses["stx.parse.core.MemoEntryLift"] = stx_parse_core_MemoEntryLift;
stx_parse_core_MemoEntryLift.__name__ = "stx.parse.core.MemoEntryLift";
var stx_parse_core_Refuses = function() { };
$hxClasses["stx.parse.core.Refuses"] = stx_parse_core_Refuses;
stx_parse_core_Refuses.__name__ = "stx.parse.core.Refuses";
stx_parse_core_Refuses.e_parse_failure = function(digests) {
	return new stx_parse_core_EParseFailure();
};
var stx_parse_core_EParseFailure = function() {
	stx_fail_Digest.call(this,"01FRQ9XPNHGFY88XHMMSS8GBPZ","parse failed");
};
$hxClasses["stx.parse.core.EParseFailure"] = stx_parse_core_EParseFailure;
stx_parse_core_EParseFailure.__name__ = "stx.parse.core.EParseFailure";
stx_parse_core_EParseFailure.__super__ = stx_fail_Digest;
stx_parse_core_EParseFailure.prototype = $extend(stx_fail_Digest.prototype,{
	__class__: stx_parse_core_EParseFailure
});
var stx_parse_core_UID = {};
stx_parse_core_UID._new = function() {
	var this1 = stx_parse_core__$UID_UIDs.parserUid();
	return this1;
};
var stx_parse_core__$UID_UIDs = function() { };
$hxClasses["stx.parse.core._UID.UIDs"] = stx_parse_core__$UID_UIDs;
stx_parse_core__$UID_UIDs.__name__ = "stx.parse.core._UID.UIDs";
stx_parse_core__$UID_UIDs.parserUid = function() {
	if(stx_pico_OptionLift.is_defined(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_parse_core__$UID_UIDs._parserUid))) {
		return ++stx_parse_core__$UID_UIDs._parserUid;
	} else {
		return stx_parse_core__$UID_UIDs._parserUid = 0;
	}
};
var stx_parse_core_enumerable_term_Array = function(v,i) {
	stx_parse_core_EnumerableCls.call(this,v,i);
};
$hxClasses["stx.parse.core.enumerable.term.Array"] = stx_parse_core_enumerable_term_Array;
stx_parse_core_enumerable_term_Array.__name__ = "stx.parse.core.enumerable.term.Array";
stx_parse_core_enumerable_term_Array.__super__ = stx_parse_core_EnumerableCls;
stx_parse_core_enumerable_term_Array.prototype = $extend(stx_parse_core_EnumerableCls.prototype,{
	is_end: function() {
		return this.data.length <= this.index;
	}
	,match: function(e) {
		var _g = this.head();
		if(_g._hx_index == 0) {
			var x = _g.v;
			return e(x);
		} else {
			return false;
		}
	}
	,prepend: function(v) {
		var lhs = this.data.slice(0,this.index);
		var rhs = this.data.slice(this.index);
		return new stx_parse_core_enumerable_term_Array(lhs.concat(stx_lift_ArrayLift.cons(rhs,v)),this.index);
	}
	,take: function(len) {
		if(len == null) {
			len = this.data.length - this.index;
		}
		return stx_lift_ArrayLift.prj(this.data).slice(this.index,this.index + len);
	}
	,drop: function(i) {
		return new stx_parse_core_enumerable_term_Array(this.data,this.index + i);
	}
	,copy: function(index) {
		var tmp = this.data;
		var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,index);
		var tmp1;
		if(self._hx_index == 0) {
			var v = self.v;
			tmp1 = v;
		} else {
			tmp1 = this.index;
		}
		return new stx_parse_core_enumerable_term_Array(tmp,tmp1).asEnumerable();
	}
	,head: function() {
		if(this.index >= this.data.length) {
			var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/parse/core/enumerable/term/Array.hx", lineNumber : 33, className : "stx.parse.core.enumerable.term.Array", methodName : "head"});
			return stx_nano_ChunkSum.End(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_ParseFailureCodeSum.E_Parse_Eof)),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1)));
		} else {
			var _g = this.data[this.index];
			if(_g == null) {
				return stx_nano_ChunkSum.Tap;
			} else {
				var x = _g;
				return stx_nano_ChunkSum.Val(x);
			}
		}
	}
	,__class__: stx_parse_core_enumerable_term_Array
});
var stx_parse_core_enumerable_term_LinkedList = function(data,index) {
	stx_parse_core_EnumerableCls.call(this,data,index);
};
$hxClasses["stx.parse.core.enumerable.term.LinkedList"] = stx_parse_core_enumerable_term_LinkedList;
stx_parse_core_enumerable_term_LinkedList.__name__ = "stx.parse.core.enumerable.term.LinkedList";
stx_parse_core_enumerable_term_LinkedList.__super__ = stx_parse_core_EnumerableCls;
stx_parse_core_enumerable_term_LinkedList.prototype = $extend(stx_parse_core_EnumerableCls.prototype,{
	is_end: function() {
		return !stx_ds_LinkedList.is_defined(this.data);
	}
	,match: function(fn) {
		var _g = this.head();
		if(_g._hx_index == 0) {
			var v = _g.v;
			return fn(v);
		} else {
			return false;
		}
	}
	,prepend: function(v) {
		return new stx_parse_core_enumerable_term_LinkedList(stx_ds_LinkedList.cons(this.data,v),this.index);
	}
	,take: function(len) {
		if(len == null) {
			return this.data;
		} else {
			var go = null;
			go = function(source,i) {
				if(i == 0) {
					return stx_LiftLinkedList.ds(stx_ds_LinkedListSum.Nil);
				} else if(source == null) {
					return stx_LiftLinkedList.ds(stx_ds_LinkedListSum.Nil);
				} else {
					switch(source._hx_index) {
					case 0:
						return stx_LiftLinkedList.ds(stx_ds_LinkedListSum.Nil);
					case 1:
						var x = source.head;
						var xs = source.tail;
						return stx_ds_LinkedList.cons(go(xs,i--),x);
					}
				}
			};
			return go(this.data,len);
		}
	}
	,drop: function(n) {
		var i = n;
		var x = this.data;
		while(i > 0) {
			if(x._hx_index == 1) {
				var x1 = x.head;
				var xs = x.tail;
				x = xs;
			} else {
				x = stx_ds_LinkedListSum.Nil;
			}
			--i;
		}
		return new stx_parse_core_enumerable_term_LinkedList(x,this.index + n);
	}
	,head: function() {
		if(this.index >= stx_ds_LinkedList.size(this.data)) {
			var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/parse/core/enumerable/term/LinkedList.hx", lineNumber : 48, className : "stx.parse.core.enumerable.term.LinkedList", methodName : "head"});
			return stx_nano_ChunkSum.End(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_ParseFailureCodeSum.E_Parse_Eof)),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1)));
		} else {
			return stx_nano_ChunkSum.Val(stx_ds_LinkedList.head(this.data));
		}
	}
	,copy: function(index) {
		var tmp = this.data;
		var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,index);
		var tmp1;
		if(self._hx_index == 0) {
			var v = self.v;
			tmp1 = v;
		} else {
			tmp1 = this.index;
		}
		return new stx_parse_core_enumerable_term_LinkedList(tmp,tmp1).asEnumerable();
	}
	,__class__: stx_parse_core_enumerable_term_LinkedList
});
var stx_parse_core_enumerable_term_String = function(v,i) {
	var self = stx_LiftAssert.assert(stx_nano_Wildcard.__,{ fileName : "stx/parse/core/enumerable/term/String.hx", lineNumber : 7, className : "stx.parse.core.enumerable.term.String", methodName : "new"}).module.exists().apply(v);
	if(self != null) {
		switch(self._hx_index) {
		case 0:
			var v1 = self.v;
			throw haxe_Exception.thrown(v1);
		case 1:
			break;
		}
	}
	stx_parse_core_EnumerableCls.call(this,v,i);
};
$hxClasses["stx.parse.core.enumerable.term.String"] = stx_parse_core_enumerable_term_String;
stx_parse_core_enumerable_term_String.__name__ = "stx.parse.core.enumerable.term.String";
stx_parse_core_enumerable_term_String.__super__ = stx_parse_core_EnumerableCls;
stx_parse_core_enumerable_term_String.prototype = $extend(stx_parse_core_EnumerableCls.prototype,{
	is_end: function() {
		return this.data.length <= this.index;
	}
	,match: function(e) {
		var _gthis = this;
		var to_match = this.take();
		var this1 = stx_parse_Logging.log(stx_nano_Wildcard.__);
		var fn = function(pos) {
			return pos.with_stamp(function(stamp) {
				return stamp.relevel(1);
			});
		};
		(function(value,pos) {
			this1(value,fn(pos));
		})(new stx_log_EntryCtr().thunk(function() {
			return "match |<[" + to_match + "]>| is_end? " + Std.string(_gthis.is_end());
		}),stx_log_LogPosition.fromPos({ fileName : "stx/parse/core/enumerable/term/String.hx", lineNumber : 16, className : "stx.parse.core.enumerable.term.String", methodName : "match"}));
		return e(to_match);
	}
	,prepend: function(v) {
		var left = HxOverrides.substr(this.data,0,this.index);
		var right = HxOverrides.substr(this.data,this.index,null);
		return new stx_parse_core_enumerable_term_String(this.data = left + v + right,this.index);
	}
	,take: function(len) {
		if(len == null) {
			len = this.data.length - this.index;
		}
		if(len == 0) {
			len = 1;
		}
		var out = HxOverrides.substr(this.data,this.index,len);
		return out;
	}
	,drop: function(i) {
		return new stx_parse_core_enumerable_term_String(this.data,this.index + i);
	}
	,head: function() {
		if(this.index >= this.data.length) {
			var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/parse/core/enumerable/term/String.hx", lineNumber : 37, className : "stx.parse.core.enumerable.term.String", methodName : "head"});
			return stx_nano_ChunkSum.End(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_ParseFailureCodeSum.E_Parse_Eof)),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1)));
		} else {
			return stx_nano_ChunkSum.Val(this.data.charAt(this.index));
		}
	}
	,copy: function(index) {
		var tmp = this.data;
		var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,index);
		var tmp1;
		if(self._hx_index == 0) {
			var v = self.v;
			tmp1 = v;
		} else {
			tmp1 = this.index;
		}
		return new stx_parse_core_enumerable_term_String(tmp,tmp1).asEnumerable();
	}
	,toString: function() {
		return "Enumerable(" + this.data + ")";
	}
	,__class__: stx_parse_core_enumerable_term_String
});
var stx_parse_lift_LiftArrayOfParser = function() { };
$hxClasses["stx.parse.lift.LiftArrayOfParser"] = stx_parse_lift_LiftArrayOfParser;
stx_parse_lift_LiftArrayOfParser.__name__ = "stx.parse.lift.LiftArrayOfParser";
stx_parse_lift_LiftArrayOfParser.ors = function(self) {
	var self1 = stx_lift_ArrayLift.lfold1(self,function(memo,next) {
		var this1 = memo;
		var this2 = new stx_parse_parser_term_Or(this1,next,{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
		return stx_parse_Parser.get_self(this2);
	});
	var this1 = new stx_parse_parser_term_Failed("No Parser in Array",false,{ fileName : "stx/parse/lift/LiftArrayOfParser.hx", lineNumber : 6, className : "stx.parse.lift.LiftArrayOfParser", methodName : "ors"});
	if(self1._hx_index == 0) {
		var v = self1.v;
		return v;
	} else {
		return this1;
	}
};
var stx_parse_lift_LiftArrayReader = function() { };
$hxClasses["stx.parse.lift.LiftArrayReader"] = stx_parse_lift_LiftArrayReader;
stx_parse_lift_LiftArrayReader.__name__ = "stx.parse.lift.LiftArrayReader";
stx_parse_lift_LiftArrayReader.reader = function(arr) {
	return stx_parse_ParseInput.pure(stx_parse_core_Enumerable.array(arr));
};
var stx_parse_lift_LiftClusterReader = function() { };
$hxClasses["stx.parse.lift.LiftClusterReader"] = stx_parse_lift_LiftClusterReader;
stx_parse_lift_LiftClusterReader.__name__ = "stx.parse.lift.LiftClusterReader";
stx_parse_lift_LiftClusterReader.reader = function(arr) {
	return stx_parse_ParseInput.pure(stx_parse_core_Enumerable.array(stx_nano_Cluster.prj(arr)));
};
var stx_parse_lift_LiftLinkedListReader = function() { };
$hxClasses["stx.parse.lift.LiftLinkedListReader"] = stx_parse_lift_LiftLinkedListReader;
stx_parse_lift_LiftLinkedListReader.__name__ = "stx.parse.lift.LiftLinkedListReader";
stx_parse_lift_LiftLinkedListReader.reader = function(arr) {
	return stx_parse_ParseInput.pure(stx_parse_core_Enumerable.linked_list(arr));
};
var stx_parse_lift_LiftParseFailureCodeRefuse = function() { };
$hxClasses["stx.parse.lift.LiftParseFailureCodeRefuse"] = stx_parse_lift_LiftParseFailureCodeRefuse;
stx_parse_lift_LiftParseFailureCodeRefuse.__name__ = "stx.parse.lift.LiftParseFailureCodeRefuse";
stx_parse_lift_LiftParseFailureCodeRefuse.toParseFailure_with = function(self,rest,fatal) {
	if(fatal == null) {
		fatal = false;
	}
	return stx_fail_Refuse.errate(self,function(e) {
		return stx_fail_ParseFailure.make(rest.content.index,e,fatal);
	});
};
var stx_parse_lift_LiftParseFailureCodeResult = function() { };
$hxClasses["stx.parse.lift.LiftParseFailureCodeResult"] = stx_parse_lift_LiftParseFailureCodeResult;
stx_parse_lift_LiftParseFailureCodeResult.__name__ = "stx.parse.lift.LiftParseFailureCodeResult";
stx_parse_lift_LiftParseFailureCodeResult.toParseResult_with = function(self,rest,fatal) {
	if(fatal == null) {
		fatal = false;
	}
	return stx_LiftParse.failure(stx_parse_lift_LiftParseFailureCodeRefuse.toParseFailure_with(self,rest,fatal),rest);
};
var stx_parse_lift_LiftStringReader = function() { };
$hxClasses["stx.parse.lift.LiftStringReader"] = stx_parse_lift_LiftStringReader;
stx_parse_lift_LiftStringReader.__name__ = "stx.parse.lift.LiftStringReader";
stx_parse_lift_LiftStringReader.reader = function(str) {
	return stx_parse_ParseInput.pure(stx_parse_core_Enumerable.string(str));
};
var stx_parse_parser_term_Always = function(tag,id) {
	stx_parse_parser_term_Sync.call(this,tag,id);
};
$hxClasses["stx.parse.parser.term.Always"] = stx_parse_parser_term_Always;
stx_parse_parser_term_Always.__name__ = "stx.parse.parser.term.Always";
stx_parse_parser_term_Always.__super__ = stx_parse_parser_term_Sync;
stx_parse_parser_term_Always.prototype = $extend(stx_parse_parser_term_Sync.prototype,{
	apply: function(input) {
		var this1 = stx_parse_Logging.log(stx_nano_Wildcard.__);
		var fn = function(pos) {
			return pos.with_stamp(function(stamp) {
				return stamp.relevel(2);
			});
		};
		(function(value,pos) {
			this1(value,fn(pos));
		})(stx_log_Stringify.fromString("" + Std.string(input.content.head()))(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/parse/parser/term/Always.hx", lineNumber : 5, className : "stx.parse.parser.term.Always", methodName : "apply"}));
		var _g = input.content.head();
		switch(_g._hx_index) {
		case 0:
			var i = _g.v;
			var this2 = stx_parse_Logging.log(stx_nano_Wildcard.__);
			var fn1 = function(pos) {
				return pos.with_stamp(function(stamp) {
					return stamp.relevel(1);
				});
			};
			(function(value,pos) {
				this2(value,fn1(pos));
			})(stx_log_Stringify.fromString("" + Std.string(i))(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/parse/parser/term/Always.hx", lineNumber : 8, className : "stx.parse.parser.term.Always", methodName : "apply"}));
			return stx_LiftParse.nil(input);
		case 1:
			haxe_Log.trace("nil",{ fileName : "stx/parse/parser/term/Always.hx", lineNumber : 13, className : "stx.parse.parser.term.Always", methodName : "apply"});
			return stx_LiftParse.nil(input);
		case 2:
			var e = _g.err;
			return stx_parse_lift_LiftParseFailureCodeResult.toParseResult_with(e,input,false);
		}
	}
	,__class__: stx_parse_parser_term_Always
});
var stx_parse_parser_term_AndL = function(l,r,pos) {
	stx_parse_parser_term_With.call(this,l,r,pos);
};
$hxClasses["stx.parse.parser.term.AndL"] = stx_parse_parser_term_AndL;
stx_parse_parser_term_AndL.__name__ = "stx.parse.parser.term.AndL";
stx_parse_parser_term_AndL.__super__ = stx_parse_parser_term_With;
stx_parse_parser_term_AndL.prototype = $extend(stx_parse_parser_term_With.prototype,{
	check: function() {
		var _this = stx_LiftAssert.assert(stx_nano_Wildcard.__,{ fileName : "stx/parse/parser/term/AndL.hx", lineNumber : 8, className : "stx.parse.parser.term.AndL", methodName : "check"});
		var t = this.delegation;
		var self = _this.module.exists().apply(t);
		if(self != null) {
			switch(self._hx_index) {
			case 0:
				var v = self.v;
				throw haxe_Exception.thrown(v);
			case 1:
				break;
			}
		}
	}
	,transform: function(lhs,rhs) {
		return stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,lhs);
	}
	,__class__: stx_parse_parser_term_AndL
});
var stx_parse_parser_term_ThroughBind = function(delegate,pos) {
	stx_parse_ParserCls.call(this,null,pos);
	this.delegate = delegate;
};
$hxClasses["stx.parse.parser.term.ThroughBind"] = stx_parse_parser_term_ThroughBind;
stx_parse_parser_term_ThroughBind.__name__ = "stx.parse.parser.term.ThroughBind";
stx_parse_parser_term_ThroughBind.__super__ = stx_parse_ParserCls;
stx_parse_parser_term_ThroughBind.prototype = $extend(stx_parse_ParserCls.prototype,{
	delegate: null
	,after: null
	,through_bind: null
	,apply: function(input) {
		var ok = this.delegate.apply(input);
		this.after = this.through_bind(input,ok);
		return this.after.apply(ok.asset);
	}
	,toString: function() {
		var self = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,this.after),function(_) {
			return _.toString();
		});
		var n;
		if(self._hx_index == 0) {
			var v = self.v;
			n = v;
		} else {
			n = "?";
		}
		return "" + Std.string(this.delegate) + " => " + n;
	}
	,__class__: stx_parse_parser_term_ThroughBind
});
var stx_parse_parser_term_AndThen = function(delegation,flat_map,pos) {
	stx_parse_parser_term_ThroughBind.call(this,delegation,pos);
	this.flat_map = flat_map;
};
$hxClasses["stx.parse.parser.term.AndThen"] = stx_parse_parser_term_AndThen;
stx_parse_parser_term_AndThen.__name__ = "stx.parse.parser.term.AndThen";
stx_parse_parser_term_AndThen.__super__ = stx_parse_parser_term_ThroughBind;
stx_parse_parser_term_AndThen.prototype = $extend(stx_parse_parser_term_ThroughBind.prototype,{
	flat_map: null
	,through_bind: function(input,result) {
		var _gthis = this;
		return stx_nano_lift_LiftNano.if_else(result.get_error().is_defined() == false,function() {
			var self = stx_pico_OptionLift.map(result.value,_gthis.flat_map);
			var this1 = new stx_parse_parser_term_Stamp(stx_LiftParse.nil(result.asset),{ fileName : "stx/parse/parser/term/AndThen.hx", lineNumber : 14, className : "stx.parse.parser.term.AndThen", methodName : "through_bind"});
			if(self._hx_index == 0) {
				var v = self.v;
				return v;
			} else {
				return this1;
			}
		},function() {
			var this1 = new stx_parse_parser_term_Stamp(stx_parse_ParseResult.make(result.asset,haxe_ds_Option.None,result.get_error()),{ fileName : "stx/parse/parser/term/AndThen.hx", lineNumber : 15, className : "stx.parse.parser.term.AndThen", methodName : "through_bind"});
			return this1;
		});
	}
	,__class__: stx_parse_parser_term_AndThen
});
var stx_parse_parser_term_Anon = function(delegation,tag,pos) {
	stx_parse_parser_term_Base.call(this,delegation,tag,pos);
};
$hxClasses["stx.parse.parser.term.Anon"] = stx_parse_parser_term_Anon;
stx_parse_parser_term_Anon.__name__ = "stx.parse.parser.term.Anon";
stx_parse_parser_term_Anon.__super__ = stx_parse_parser_term_Base;
stx_parse_parser_term_Anon.prototype = $extend(stx_parse_parser_term_Base.prototype,{
	apply: function(ipt) {
		var _this = stx_LiftAssert.assert(stx_nano_Wildcard.__,{ fileName : "stx/parse/parser/term/Anon.hx", lineNumber : 21, className : "stx.parse.parser.term.Anon", methodName : "apply"});
		var t = this.pos;
		var self = _this.module.exists().apply(t);
		if(self != null) {
			switch(self._hx_index) {
			case 0:
				var v = self.v;
				throw haxe_Exception.thrown(v);
			case 1:
				break;
			}
		}
		return this.delegation(ipt);
	}
	,toString: function() {
		return "Anon(" + (this.tag == null ? "null" : stx_pico_Option.toString(this.tag)) + ")";
	}
	,__class__: stx_parse_parser_term_Anon
});
var stx_parse_parser_term_AnonWith = function(l,r,__transform,pos) {
	stx_parse_parser_term_With.call(this,l,r,pos);
	this.__transform = __transform;
};
$hxClasses["stx.parse.parser.term.AnonWith"] = stx_parse_parser_term_AnonWith;
stx_parse_parser_term_AnonWith.__name__ = "stx.parse.parser.term.AnonWith";
stx_parse_parser_term_AnonWith.__super__ = stx_parse_parser_term_With;
stx_parse_parser_term_AnonWith.prototype = $extend(stx_parse_parser_term_With.prototype,{
	__transform: function(lhs,rhs) {
		throw haxe_Exception.thrown("constructor not called");
	}
	,transform: function(lhs,rhs) {
		return this.__transform(lhs,rhs);
	}
	,__class__: stx_parse_parser_term_AnonWith
});
var stx_parse_parser_term_Bag = function(delegation,id) {
	stx_parse_parser_term_Base.call(this,delegation,null,id);
};
$hxClasses["stx.parse.parser.term.Bag"] = stx_parse_parser_term_Bag;
stx_parse_parser_term_Bag.__name__ = "stx.parse.parser.term.Bag";
stx_parse_parser_term_Bag.__super__ = stx_parse_parser_term_Base;
stx_parse_parser_term_Bag.prototype = $extend(stx_parse_parser_term_Base.prototype,{
	apply: function(input) {
		var _gthis = this;
		var parsers = this.delegation;
		var rec = null;
		rec = function(input,arr) {
			if(parsers.length == 0) {
				return stx_LiftParse.ok(input,arr);
			} else {
				var pr = null;
				var res = null;
				var _g = 0;
				var _g1 = _gthis.delegation;
				while(_g < _g1.length) {
					var p = _g1[_g];
					++_g;
					res = p.apply(input);
					if(res.get_error().is_defined() == false) {
						pr = p;
						break;
					}
				}
				if(res.get_error().is_defined() == false) {
					HxOverrides.remove(parsers,pr);
					var x = $iterator(stx_pico_OptionLift)(res.value);
					while(x.hasNext()) {
						var x1 = x.next();
						arr.push(x1);
					}
					return rec(res.asset,arr);
				} else {
					return stx_LiftParse.no(input,stx_fail_ParseFailureCode.fromString("Bag failed"));
				}
			}
		};
		return rec(input,[]);
	}
	,__class__: stx_parse_parser_term_Bag
});
var stx_parse_parser_term_CharCode = function(code,id) {
	stx_parse_parser_term_Sync.call(this,haxe_ds_Option.Some("code"),id);
	this.code = code;
};
$hxClasses["stx.parse.parser.term.CharCode"] = stx_parse_parser_term_CharCode;
stx_parse_parser_term_CharCode.__name__ = "stx.parse.parser.term.CharCode";
stx_parse_parser_term_CharCode.__super__ = stx_parse_parser_term_Sync;
stx_parse_parser_term_CharCode.prototype = $extend(stx_parse_parser_term_Sync.prototype,{
	code: null
	,apply: function(ipt) {
		var _gthis = this;
		var chk = ipt.content.head();
		switch(chk._hx_index) {
		case 0:
			var v = chk.v;
			if(HxOverrides.cca(v,0) == _gthis.code) {
				return stx_LiftParse.ok(ipt.copy(ipt.content.drop(1)),v);
			} else {
				return stx_LiftParse.no(ipt,stx_fail_ParseFailureCode.fromString("charcode not #" + _gthis.code));
			}
			break;
		case 1:
			return stx_LiftParse.no(ipt,stx_fail_ParseFailureCode.fromString("code failed"));
		case 2:
			var e = chk.err;
			return stx_LiftParse.failure(stx_fail_Refuse.concat(stx_LiftParse.erration(ipt,stx_fail_ParseFailureCode.fromString("code failed")),stx_parse_lift_LiftParseFailureCodeRefuse.toParseFailure_with(e,ipt,false)),ipt);
		}
	}
	,toString: function() {
		var code = this.code;
		var v = String.fromCodePoint(code);
		return "'" + v + "'";
	}
	,__class__: stx_parse_parser_term_CharCode
});
var stx_parse_parser_term_Choose = function(delegation,tag,pos) {
	stx_parse_parser_term_SyncBase.call(this,delegation,tag,pos);
};
$hxClasses["stx.parse.parser.term.Choose"] = stx_parse_parser_term_Choose;
stx_parse_parser_term_Choose.__name__ = "stx.parse.parser.term.Choose";
stx_parse_parser_term_Choose.__super__ = stx_parse_parser_term_SyncBase;
stx_parse_parser_term_Choose.prototype = $extend(stx_parse_parser_term_SyncBase.prototype,{
	apply: function(ipt) {
		var _gthis = this;
		var chk = ipt.content.head();
		switch(chk._hx_index) {
		case 0:
			var v = chk.v;
			var self = _gthis.delegation(v);
			switch(self._hx_index) {
			case 0:
				var t = self.v;
				return stx_LiftParse.ok(ipt.copy(ipt.content.drop(1)),t);
			case 1:
				return stx_LiftParse.failure(stx_LiftParse.erration(ipt,stx_fail_ParseFailureCode.fromString("predicate failed")),ipt);
			}
			break;
		case 1:
			return stx_LiftParse.no(ipt,stx_fail_ParseFailureCode.fromString("predicate failed"));
		case 2:
			var e = chk.err;
			return stx_LiftParse.failure(stx_fail_Refuse.concat(stx_LiftParse.erration(ipt,stx_fail_ParseFailureCode.fromString("predicate failed")),stx_parse_lift_LiftParseFailureCodeRefuse.toParseFailure_with(e,ipt,false)),ipt);
		}
	}
	,__class__: stx_parse_parser_term_Choose
});
var stx_parse_parser_term_Commit = function(delegation,tag,pos) {
	stx_parse_parser_term_Base.call(this,delegation,tag,pos);
};
$hxClasses["stx.parse.parser.term.Commit"] = stx_parse_parser_term_Commit;
stx_parse_parser_term_Commit.__name__ = "stx.parse.parser.term.Commit";
stx_parse_parser_term_Commit.__super__ = stx_parse_parser_term_Base;
stx_parse_parser_term_Commit.prototype = $extend(stx_parse_parser_term_Base.prototype,{
	apply: function(ipt) {
		return this.mod(this.delegation.apply(ipt));
	}
	,mod: function(result) {
		return stx_nano_lift_LiftNano.if_else(result.get_error().is_defined() == false,function() {
			return result;
		},function() {
			return stx_nano_lift_LiftNano.if_else(!stx_nano_IterLift.lfold(stx_nano_lift_LiftIterableToIter.toIter(stx_fail_Error.toIterable(result.get_error())),function(next,memo) {
				return stx_nano_lift_LiftNano.if_else(memo,function() {
					return true;
				},function() {
					var self = next.get_data();
					switch(self._hx_index) {
					case 0:
						var t = self.v;
						return stx_fail_DeclineLift.fold(t,function(x) {
							return x.fatal;
						},function(_) {
							return false;
						});
					case 1:
						return false;
					}
				});
			},false),function() {
				return result;
			},function() {
				return stx_parse_ParseResult.lift(result.errata(function(err) {
					return stx_fail_Refuse.concat(err,stx_fail_ParseFailure.toRefuse(stx_fail_ParseFailure.make(stx_parse_ParseInput.get_content(result.asset).index,stx_fail_ParseFailureCode.fromString("Cannot Commit"),true)));
				}));
			});
		});
	}
	,__class__: stx_parse_parser_term_Commit
});
var stx_parse_parser_term_CoupleWith = function(l,r,pos) {
	stx_parse_parser_term_With.call(this,l,r,pos);
};
$hxClasses["stx.parse.parser.term.CoupleWith"] = stx_parse_parser_term_CoupleWith;
stx_parse_parser_term_CoupleWith.__name__ = "stx.parse.parser.term.CoupleWith";
stx_parse_parser_term_CoupleWith.__super__ = stx_parse_parser_term_With;
stx_parse_parser_term_CoupleWith.prototype = $extend(stx_parse_parser_term_With.prototype,{
	transform: function(l,r) {
		var this1 = stx_parse_Logging.log(stx_nano_Wildcard.__);
		var fn = function(pos) {
			return pos.with_stamp(function(stamp) {
				return stamp.relevel(2);
			});
		};
		(function(value,pos) {
			this1(value,fn(pos));
		})(new stx_log_EntryCtr().thunk(function() {
			return "" + Std.string(l) + "," + Std.string(r);
		}),stx_log_LogPosition.fromPos({ fileName : "stx/parse/parser/term/CoupleWith.hx", lineNumber : 6, className : "stx.parse.parser.term.CoupleWith", methodName : "transform"}));
		return stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,l,r));
	}
	,__class__: stx_parse_parser_term_CoupleWith
});
var stx_parse_parser_term_Delegate = function(delegation,pos) {
	stx_parse_parser_term_Base.call(this,delegation,null,pos);
	this.tag = delegation.tag;
};
$hxClasses["stx.parse.parser.term.Delegate"] = stx_parse_parser_term_Delegate;
stx_parse_parser_term_Delegate.__name__ = "stx.parse.parser.term.Delegate";
stx_parse_parser_term_Delegate.__super__ = stx_parse_parser_term_Base;
stx_parse_parser_term_Delegate.prototype = $extend(stx_parse_parser_term_Base.prototype,{
	check: function() {
		var _this = stx_LiftAssert.assert(stx_nano_Wildcard.__,this.pos);
		var t = this.delegation;
		var self = _this.module.exists().apply(t);
		if(self != null) {
			switch(self._hx_index) {
			case 0:
				var v = self.v;
				throw haxe_Exception.thrown(v);
			case 1:
				break;
			}
		}
	}
	,apply: function(ipt) {
		return this.delegation.apply(ipt);
	}
	,toString: function() {
		var c = js_Boot.getClass(this);
		return "" + stx_pico_Identifier.get_name(stx_pico_Identifier._new(c.__name__)) + "(" + Std.string(this.delegation) + ")";
	}
	,__class__: stx_parse_parser_term_Delegate
});
var stx_parse_parser_term_Eof = function(tag,id) {
	stx_parse_parser_term_Sync.call(this,tag,id);
};
$hxClasses["stx.parse.parser.term.Eof"] = stx_parse_parser_term_Eof;
stx_parse_parser_term_Eof.__name__ = "stx.parse.parser.term.Eof";
stx_parse_parser_term_Eof.__super__ = stx_parse_parser_term_Sync;
stx_parse_parser_term_Eof.prototype = $extend(stx_parse_parser_term_Sync.prototype,{
	apply: function(input) {
		if(stx_parse_ParseInput.is_end(input)) {
			return stx_LiftParse.nil(input);
		} else {
			return stx_LiftParse.failure(stx_LiftParse.erration(input,stx_fail_ParseFailureCodeSum.E_Parse_NotEof),input);
		}
	}
	,__class__: stx_parse_parser_term_Eof
});
var stx_parse_parser_term_Failed = function(msg,is_fatal,id) {
	if(is_fatal == null) {
		is_fatal = false;
	}
	stx_parse_parser_term_Sync.call(this,null,id);
	this.msg = msg;
	this.is_fatal = is_fatal;
};
$hxClasses["stx.parse.parser.term.Failed"] = stx_parse_parser_term_Failed;
stx_parse_parser_term_Failed.__name__ = "stx.parse.parser.term.Failed";
stx_parse_parser_term_Failed.__super__ = stx_parse_parser_term_Sync;
stx_parse_parser_term_Failed.prototype = $extend(stx_parse_parser_term_Sync.prototype,{
	msg: null
	,is_fatal: null
	,apply: function(ipt) {
		return stx_LiftParse.failure(stx_LiftParse.erration(ipt,stx_fail_ParseFailureCode.fromString(this.msg),this.is_fatal),ipt);
	}
	,__class__: stx_parse_parser_term_Failed
});
var stx_parse_parser_term_Head = function(delegate,id) {
	stx_parse_parser_term_Sync.call(this,null,id);
	this.delegate = delegate;
};
$hxClasses["stx.parse.parser.term.Head"] = stx_parse_parser_term_Head;
stx_parse_parser_term_Head.__name__ = "stx.parse.parser.term.Head";
stx_parse_parser_term_Head.__super__ = stx_parse_parser_term_Sync;
stx_parse_parser_term_Head.prototype = $extend(stx_parse_parser_term_Sync.prototype,{
	delegate: null
	,apply: function(ipt) {
		var _gthis = this;
		var head = ipt.content.head();
		switch(head._hx_index) {
		case 0:
			var v = head.v;
			var self = _gthis.delegate(v);
			switch(self._hx_index) {
			case 0:
				var t = self.v;
				return stx_nano_CoupleLift.decouple(t,function(o,i) {
					var tmp;
					switch(i._hx_index) {
					case 0:
						var t = i.v;
						tmp = stx_parse_ParseInput.prepend(ipt,t);
						break;
					case 1:
						tmp = ipt;
						break;
					}
					return stx_LiftParse.ok(tmp,o);
				});
			case 1:
				return stx_LiftParse.no(ipt,stx_fail_ParseFailureCode.fromString("no head"));
			}
			break;
		case 1:
			return stx_LiftParse.no(ipt,stx_fail_ParseFailureCode.fromString("no head"));
		case 2:
			var e = head.err;
			return stx_parse_lift_LiftParseFailureCodeResult.toParseResult_with(e,ipt);
		}
	}
	,__class__: stx_parse_parser_term_Head
});
var stx_parse_parser_term_Inspect = function(delegation,prefix,postfix,id) {
	stx_parse_parser_term_Delegate.call(this,delegation,id);
	if(stx_nano_Report.is_ok(new stx_assert_Module({ fileName : "stx/parse/parser/term/Inspect.hx", lineNumber : 16, className : "stx.parse.parser.term.Inspect", methodName : "new"}).exists().apply(prefix))) {
		this.prefix = prefix;
	}
	if(stx_nano_Report.is_ok(new stx_assert_Module({ fileName : "stx/parse/parser/term/Inspect.hx", lineNumber : 19, className : "stx.parse.parser.term.Inspect", methodName : "new"}).exists().apply(postfix))) {
		this.postfix = postfix;
	}
};
$hxClasses["stx.parse.parser.term.Inspect"] = stx_parse_parser_term_Inspect;
stx_parse_parser_term_Inspect.__name__ = "stx.parse.parser.term.Inspect";
stx_parse_parser_term_Inspect.__super__ = stx_parse_parser_term_Delegate;
stx_parse_parser_term_Inspect.prototype = $extend(stx_parse_parser_term_Delegate.prototype,{
	prefix: function(input) {
		if(input.tag != null) {
			var this1 = stx_parse_Logging.log(stx_nano_Wildcard.__);
			var v = stx_log_Stringify.fromString("" + input.tag + " \"" + Std.string(input.content.head()) + "\"");
			var pos = this.pos;
			var this2 = this1;
			var fn = function(pos) {
				return pos.with_stamp(function(stamp) {
					return stamp.relevel(1);
				});
			};
			(function(value,pos) {
				this2(value,fn(pos));
			})(v(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos(pos));
		}
	}
	,postfix: function(result) {
		var this1 = stx_parse_Logging.log(stx_nano_Wildcard.__);
		var v = stx_log_Stringify.fromString(stx_parse_ParseResultLift.toString(result));
		var pos = this.pos;
		var this2 = this1;
		var fn = function(pos) {
			return pos.with_stamp(function(stamp) {
				return stamp.relevel(1);
			});
		};
		(function(value,pos) {
			this2(value,fn(pos));
		})(v(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos(pos));
	}
	,apply: function(input) {
		this.prefix(input);
		var out = this.delegation.apply(input);
		this.postfix(out);
		return out;
	}
	,toString: function() {
		return "" + Std.string(this.delegation);
	}
	,__class__: stx_parse_parser_term_Inspect
});
var stx_parse_parser_term_LAnon = function(closure,id) {
	stx_parse_parser_term_Base.call(this,null,null,id);
	this.closure = closure;
};
$hxClasses["stx.parse.parser.term.LAnon"] = stx_parse_parser_term_LAnon;
stx_parse_parser_term_LAnon.__name__ = "stx.parse.parser.term.LAnon";
stx_parse_parser_term_LAnon.__super__ = stx_parse_parser_term_Base;
stx_parse_parser_term_LAnon.prototype = $extend(stx_parse_parser_term_Base.prototype,{
	closure: null
	,open: function() {
		this.delegation = this.closure();
	}
	,apply: function(ipt) {
		if(this.delegation == null) {
			this.open();
			var _this = stx_LiftAssert.assert(stx_nano_Wildcard.__,{ fileName : "stx/parse/parser/term/LAnon.hx", lineNumber : 19, className : "stx.parse.parser.term.LAnon", methodName : "apply"});
			var t = this.delegation;
			var self = _this.module.exists().apply(t);
			if(self != null) {
				switch(self._hx_index) {
				case 0:
					var v = self.v;
					throw haxe_Exception.thrown(v);
				case 1:
					break;
				}
			}
			return this.delegation.apply(ipt);
		} else {
			return this.delegation.apply(ipt);
		}
	}
	,__class__: stx_parse_parser_term_LAnon
});
var stx_parse_parser_term_Mod = function(delegate,tag,pos) {
	stx_parse_ParserCls.call(this,tag,pos);
	this.delegate = delegate;
};
$hxClasses["stx.parse.parser.term.Mod"] = stx_parse_parser_term_Mod;
stx_parse_parser_term_Mod.__name__ = "stx.parse.parser.term.Mod";
stx_parse_parser_term_Mod.__super__ = stx_parse_ParserCls;
stx_parse_parser_term_Mod.prototype = $extend(stx_parse_ParserCls.prototype,{
	delegate: null
	,bound: null
	,apply: function(input) {
		return this.bound(input,this.delegate.apply(input));
	}
	,__class__: stx_parse_parser_term_Mod
});
var stx_parse_parser_term_Lookahead = function(delegate,tag,pos) {
	stx_parse_parser_term_Mod.call(this,delegate,tag,pos);
};
$hxClasses["stx.parse.parser.term.Lookahead"] = stx_parse_parser_term_Lookahead;
stx_parse_parser_term_Lookahead.__name__ = "stx.parse.parser.term.Lookahead";
stx_parse_parser_term_Lookahead.__super__ = stx_parse_parser_term_Mod;
stx_parse_parser_term_Lookahead.prototype = $extend(stx_parse_parser_term_Mod.prototype,{
	bound: function(input,result) {
		return stx_nano_lift_LiftNano.if_else(result.get_error().is_defined() == false,function() {
			return stx_LiftParse.nil(input);
		},function() {
			return result;
		});
	}
	,toString: function() {
		return "Lookahead(" + Std.string(this.delegate) + ")";
	}
	,__class__: stx_parse_parser_term_Lookahead
});
var stx_parse_parser_term_Materialize = function(delegation,tag,pos) {
	stx_parse_parser_term_Base.call(this,delegation,tag,pos);
};
$hxClasses["stx.parse.parser.term.Materialize"] = stx_parse_parser_term_Materialize;
stx_parse_parser_term_Materialize.__name__ = "stx.parse.parser.term.Materialize";
stx_parse_parser_term_Materialize.__super__ = stx_parse_parser_term_Base;
stx_parse_parser_term_Materialize.prototype = $extend(stx_parse_parser_term_Base.prototype,{
	apply: function(ipt) {
		var result = this.delegation.apply(ipt);
		if(stx_nano_EquityLift.is_defined(result)) {
			return result;
		} else {
			return stx_LiftParse.failure(stx_LiftParse.erration(result.asset,stx_fail_ParseFailureCode.fromString("result of " + Std.string(this.delegation) + " is not defined ")),result.asset);
		}
	}
	,__class__: stx_parse_parser_term_Materialize
});
var stx_parse_parser_term_Memoise = function(delegation,pos) {
	stx_parse_parser_term_Base.call(this,delegation,null,pos);
	this.uid = stx_parse_core_UID._new();
};
$hxClasses["stx.parse.parser.term.Memoise"] = stx_parse_parser_term_Memoise;
stx_parse_parser_term_Memoise.__name__ = "stx.parse.parser.term.Memoise";
stx_parse_parser_term_Memoise.__super__ = stx_parse_parser_term_Base;
stx_parse_parser_term_Memoise.prototype = $extend(stx_parse_parser_term_Base.prototype,{
	uid: null
	,genKey: function(pos) {
		return this.uid + "@" + pos;
	}
	,apply: function(ipt) {
		var this1 = stx_parse_Logging.log(stx_nano_Wildcard.__);
		var fn = function(pos) {
			return pos.with_stamp(function(stamp) {
				return stamp.relevel(2);
			});
		};
		(function(value,pos) {
			this1(value,fn(pos));
		})(stx_log_Stringify.fromString("memoise")(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/parse/parser/term/Memoise.hx", lineNumber : 13, className : "stx.parse.parser.term.Memoise", methodName : "apply"}));
		var memo = stx_parse_core_LRLift.recall(this.delegation,$bind(this,this.genKey),ipt);
		var this2 = stx_parse_Logging.log(stx_nano_Wildcard.__);
		var fn1 = function(pos) {
			return pos.with_stamp(function(stamp) {
				return stamp.relevel(2);
			});
		};
		(function(value,pos) {
			this2(value,fn1(pos));
		})(new stx_log_EntryCtr().thunk(function() {
			return "memoise:recalled " + Std.string(stx_pico_OptionLift.is_defined(memo));
		}),stx_log_LogPosition.fromPos({ fileName : "stx/parse/parser/term/Memoise.hx", lineNumber : 15, className : "stx.parse.parser.term.Memoise", methodName : "apply"}));
		switch(memo._hx_index) {
		case 0:
			var mEntry = memo.v;
			switch(mEntry._hx_index) {
			case 0:
				var ans = mEntry.ans;
				return ans;
			case 1:
				var recDetect = mEntry.lr;
				stx_parse_core_LR._.setupLR(this.delegation,ipt,recDetect);
				return recDetect.seed;
			}
			break;
		case 1:
			var base = stx_parse_ParseResultLift.mkLR(stx_LiftParse.failure(stx_LiftParse.erration(ipt,stx_fail_ParseFailureCode.fromString(stx_fail_ParseFailure.FAIL),false),ipt),this.delegation,haxe_ds_Option.None);
			ipt.memo.lrStack = stx_ds_LinkedList.cons(ipt.memo.lrStack,base);
			var entry = stx_parse_core_MemoEntry.MemoLR(base);
			var key = this.genKey(ipt.content.index);
			ipt.memo.memoEntries.h[key] = entry;
			var _this = stx_LiftAssert.assert(stx_nano_Wildcard.__,{ fileName : "stx/parse/parser/term/Memoise.hx", lineNumber : 23, className : "stx.parse.parser.term.Memoise", methodName : "apply"});
			var t = this.delegation;
			var self = _this.module.exists().apply(t);
			if(self != null) {
				switch(self._hx_index) {
				case 0:
					var v = self.v;
					throw haxe_Exception.thrown(v);
				case 1:
					break;
				}
			}
			var res = this.delegation.apply(ipt);
			var this3 = stx_parse_Logging.log(stx_nano_Wildcard.__);
			var fn2 = function(pos) {
				return pos.with_stamp(function(stamp) {
					return stamp.relevel(2);
				});
			};
			(function(value,pos) {
				this3(value,fn2(pos));
			})(stx_log_Stringify.fromString("memoise:delegate")(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/parse/parser/term/Memoise.hx", lineNumber : 26, className : "stx.parse.parser.term.Memoise", methodName : "apply"}));
			var this4 = stx_parse_Logging.log(stx_nano_Wildcard.__);
			var fn3 = function(pos) {
				return pos.with_stamp(function(stamp) {
					return stamp.relevel(1);
				});
			};
			(function(value,pos) {
				this4(value,fn3(pos));
			})(stx_log_Stringify.fromString("" + Std.string(res))(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/parse/parser/term/Memoise.hx", lineNumber : 27, className : "stx.parse.parser.term.Memoise", methodName : "apply"}));
			ipt.memo.lrStack = stx_ds_LinkedList.tail(ipt.memo.lrStack);
			var _g = base.head;
			switch(_g._hx_index) {
			case 0:
				var _g1 = _g.v;
				base.seed = res;
				return stx_parse_core_LRLift.lrAnswer(this.delegation,$bind(this,this.genKey),ipt,base);
			case 1:
				var entry = stx_parse_core_MemoEntry.MemoParsed(res);
				var key = this.genKey(ipt.content.index);
				ipt.memo.memoEntries.h[key] = entry;
				return res;
			}
			break;
		}
	}
	,__class__: stx_parse_parser_term_Memoise
});
var stx_parse_parser_term_Named = function(delegation,name) {
	stx_parse_parser_term_Base.call(this,delegation,null,delegation.pos);
	this.tag = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,name);
};
$hxClasses["stx.parse.parser.term.Named"] = stx_parse_parser_term_Named;
stx_parse_parser_term_Named.__name__ = "stx.parse.parser.term.Named";
stx_parse_parser_term_Named.__super__ = stx_parse_parser_term_Base;
stx_parse_parser_term_Named.prototype = $extend(stx_parse_parser_term_Base.prototype,{
	apply: function(ipt) {
		return this.delegation.apply(ipt);
	}
	,toString: function() {
		var self = this.tag;
		if(self._hx_index == 0) {
			var v = self.v;
			return v;
		} else {
			return "named";
		}
	}
	,__class__: stx_parse_parser_term_Named
});
var stx_parse_parser_term_Never = function(tag,id) {
	stx_parse_parser_term_Sync.call(this,tag,id);
};
$hxClasses["stx.parse.parser.term.Never"] = stx_parse_parser_term_Never;
stx_parse_parser_term_Never.__name__ = "stx.parse.parser.term.Never";
stx_parse_parser_term_Never.__super__ = stx_parse_parser_term_Sync;
stx_parse_parser_term_Never.prototype = $extend(stx_parse_parser_term_Sync.prototype,{
	apply: function(input) {
		return stx_LiftParse.failure(stx_LiftParse.erration(input,stx_fail_ParseFailureCode.fromString("Never")),input);
	}
	,__class__: stx_parse_parser_term_Never
});
var stx_parse_parser_term_Nothing = function(tag,id) {
	stx_parse_parser_term_Sync.call(this,tag,id);
};
$hxClasses["stx.parse.parser.term.Nothing"] = stx_parse_parser_term_Nothing;
stx_parse_parser_term_Nothing.__name__ = "stx.parse.parser.term.Nothing";
stx_parse_parser_term_Nothing.__super__ = stx_parse_parser_term_Sync;
stx_parse_parser_term_Nothing.prototype = $extend(stx_parse_parser_term_Sync.prototype,{
	apply: function(input) {
		return stx_LiftParse.nil(input);
	}
	,__class__: stx_parse_parser_term_Nothing
});
var stx_parse_parser_term_Ors = function(delegation,id) {
	stx_parse_parser_term_Base.call(this,delegation,null,id);
};
$hxClasses["stx.parse.parser.term.Ors"] = stx_parse_parser_term_Ors;
stx_parse_parser_term_Ors.__name__ = "stx.parse.parser.term.Ors";
stx_parse_parser_term_Ors.__super__ = stx_parse_parser_term_Base;
stx_parse_parser_term_Ors.prototype = $extend(stx_parse_parser_term_Base.prototype,{
	check: function() {
		var _g = 0;
		var _g1 = this.delegation;
		while(_g < _g1.length) {
			var delegate = _g1[_g];
			++_g;
			var self = stx_LiftAssert.assert(stx_nano_Wildcard.__,{ fileName : "stx/parse/parser/term/Ors.hx", lineNumber : 9, className : "stx.parse.parser.term.Ors", methodName : "check"}).module.exists().apply(delegate);
			if(self != null) {
				switch(self._hx_index) {
				case 0:
					var v = self.v;
					throw haxe_Exception.thrown(v);
				case 1:
					break;
				}
			}
		}
	}
	,apply: function(input) {
		var _gthis = this;
		var idx = 1;
		var res = this.delegation[0].apply(input);
		var rec = function(res) {
			if(res.get_error().is_defined() == false) {
				return res;
			} else if(stx_nano_IterLift.lfold(stx_nano_lift_LiftIterableToIter.toIter(stx_fail_Error.toIterable(res.get_error())),function(next,memo) {
				return stx_nano_lift_LiftNano.if_else(memo,function() {
					return true;
				},function() {
					var self = next.get_data();
					switch(self._hx_index) {
					case 0:
						var t = self.v;
						return stx_fail_DeclineLift.fold(t,function(x) {
							return x.fatal;
						},function(_) {
							return false;
						});
					case 1:
						return false;
					}
				});
			},false)) {
				return res;
			} else if(idx < _gthis.delegation.length) {
				var n = idx;
				idx += 1;
				var d = _gthis.delegation[n];
				var this1 = stx_parse_Logging.log(stx_nano_Wildcard.__);
				var fn = function(pos) {
					return pos.with_stamp(function(stamp) {
						return stamp.relevel(1);
					});
				};
				(function(value,pos) {
					this1(value,fn(pos));
				})(new stx_log_EntryCtr().thunk(function() {
					return "" + stx_parse_ParseInput.get_index(res.asset) + " " + Std.string(d);
				}),stx_log_LogPosition.fromPos({ fileName : "stx/parse/parser/term/Ors.hx", lineNumber : 28, className : "stx.parse.parser.term.Ors", methodName : "apply"}));
				var resI = d.apply(res.asset);
				if(resI.get_error().is_defined() != false) {
					return stx_parse_ParseResult.make(resI.asset,haxe_ds_Option.None,resI.get_error());
				} else {
					return resI;
				}
			} else {
				var _this = _gthis.delegation;
				var result = new Array(_this.length);
				var _g = 0;
				var _g1 = _this.length;
				while(_g < _g1) {
					var i = _g++;
					result[i] = _this[i].tag;
				}
				var opts = result;
				return stx_parse_ParseResult.make(res.asset,haxe_ds_Option.None,res.get_error());
			}
		};
		return rec(res);
	}
	,__class__: stx_parse_parser_term_Ors
});
var stx_parse_parser_term_Position = function(delegate,pos) {
	stx_parse_parser_term_ThroughBind.call(this,delegate,pos);
};
$hxClasses["stx.parse.parser.term.Position"] = stx_parse_parser_term_Position;
stx_parse_parser_term_Position.__name__ = "stx.parse.parser.term.Position";
stx_parse_parser_term_Position.__super__ = stx_parse_parser_term_ThroughBind;
stx_parse_parser_term_Position.prototype = $extend(stx_parse_parser_term_ThroughBind.prototype,{
	through_bind: function(input,result) {
		var this1 = new stx_parse_parser_term_PositionReport(stx_parse_ParseInput.get_content(result.asset).index,"error");
		var result = this1.apply(input.copy(stx_parse_ParseInput.get_content(input).zero()));
		var this1 = new stx_parse_parser_term_Stamp(result,{ fileName : "stx/parse/parser/term/Position.hx", lineNumber : 9, className : "stx.parse.parser.term.Position", methodName : "through_bind"});
		return this1;
	}
	,__class__: stx_parse_parser_term_Position
});
var stx_parse_parser_term_PositionReport = function(cursor,error,pos) {
	stx_parse_parser_term_SyncBase.call(this,pos,null,{ fileName : "stx/parse/parser/term/PositionReport.hx", lineNumber : 10, className : "stx.parse.parser.term.PositionReport", methodName : "new"});
	this.cursor = cursor;
	this.error = error;
};
$hxClasses["stx.parse.parser.term.PositionReport"] = stx_parse_parser_term_PositionReport;
stx_parse_parser_term_PositionReport.__name__ = "stx.parse.parser.term.PositionReport";
stx_parse_parser_term_PositionReport.__super__ = stx_parse_parser_term_SyncBase;
stx_parse_parser_term_PositionReport.prototype = $extend(stx_parse_parser_term_SyncBase.prototype,{
	cursor: null
	,error: null
	,apply: function(ipt) {
		var count = 0;
		var line = 1;
		var column = 0;
		var i = ipt;
		var result = stx_LiftParse.no(ipt,stx_fail_ParseFailureCode.fromString("default error"));
		while(true) if(count == this.cursor) {
			result = stx_LiftParse.no(ipt,stx_fail_ParseFailureCodeSum.E_Parse_ParseFailed(this.error,{ line : line, column : column}),true);
			break;
		} else if(stx_parse_ParseInput.get_content(i).match(function(x) {
			return StringTools.startsWith(x,"\n");
		})) {
			++line;
			column = 0;
			++count;
			i = i.copy(i.content.drop(1));
		} else if(stx_parse_ParseInput.get_content(i).match(function(x) {
			return StringTools.startsWith(x,"\r\n");
		})) {
			++line;
			column = 0;
			count += 2;
			var this1 = i.copy(i.content.drop(1));
			i = this1.copy(this1.content.drop(1));
		} else {
			++count;
			++column;
			i = i.copy(i.content.drop(1));
		}
		return result;
	}
	,__class__: stx_parse_parser_term_PositionReport
});
var stx_parse_parser_term_Rep1Sep = function(delegate,sep,pos) {
	stx_parse_parser_term_Base.call(this,delegate,pos,{ fileName : "stx/parse/parser/term/Rep1Sep.hx", lineNumber : 6, className : "stx.parse.parser.term.Rep1Sep", methodName : "new"});
	this.sep = sep;
};
$hxClasses["stx.parse.parser.term.Rep1Sep"] = stx_parse_parser_term_Rep1Sep;
stx_parse_parser_term_Rep1Sep.__name__ = "stx.parse.parser.term.Rep1Sep";
stx_parse_parser_term_Rep1Sep.__super__ = stx_parse_parser_term_Base;
stx_parse_parser_term_Rep1Sep.prototype = $extend(stx_parse_parser_term_Base.prototype,{
	sep: null
	,actual: function() {
		var pI = this.delegation;
		var pI1 = this.sep;
		var this1 = new stx_parse_parser_term_Option(this.delegation,{ fileName : "stx/parse/parser/ParserLift.hx", lineNumber : 94, className : "stx.parse.parser.ParserLift", methodName : "option"});
		var this2 = new stx_parse_parser_term_AndR(pI1,this1,{ fileName : "stx/parse/Parsers.hx", lineNumber : 110, className : "stx.parse.Parsers", methodName : "AndR"});
		var this1 = new stx_parse_parser_term_Many(stx_parse_Parser.get_self(this2),{ fileName : "stx/parse/Parsers.hx", lineNumber : 47, className : "stx.parse.Parsers", methodName : "Many"});
		var this2 = new stx_parse_parser_term_CoupleWith(pI,stx_parse_Parser.get_self(this1),{ fileName : "stx/parse/Parsers.hx", lineNumber : 122, className : "stx.parse.Parsers", methodName : "CoupleWith"});
		var this1 = stx_parse_Parser.get_self(this2);
		var this2 = new stx_parse_parser_term_AnonThen(this1,stx_nano_lift_LiftNano.decouple(stx_nano_Wildcard.__,function(l,r) {
			return stx_nano_ClusterLift.cons(stx_nano_ClusterLift.flat_map(r,function(opt) {
				return stx_pico_OptionLift.toArray(opt);
			}),l);
		}),{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
		return stx_parse_Parser.get_self(stx_parse_Parser.get_self(this2));
	}
	,apply: function(ipt) {
		var pI = this.delegation;
		var pI1 = this.sep;
		var this1 = new stx_parse_parser_term_Option(this.delegation,{ fileName : "stx/parse/parser/ParserLift.hx", lineNumber : 94, className : "stx.parse.parser.ParserLift", methodName : "option"});
		var this2 = new stx_parse_parser_term_AndR(pI1,this1,{ fileName : "stx/parse/Parsers.hx", lineNumber : 110, className : "stx.parse.Parsers", methodName : "AndR"});
		var this1 = new stx_parse_parser_term_Many(stx_parse_Parser.get_self(this2),{ fileName : "stx/parse/Parsers.hx", lineNumber : 47, className : "stx.parse.Parsers", methodName : "Many"});
		var this2 = new stx_parse_parser_term_CoupleWith(pI,stx_parse_Parser.get_self(this1),{ fileName : "stx/parse/Parsers.hx", lineNumber : 122, className : "stx.parse.Parsers", methodName : "CoupleWith"});
		var this1 = stx_parse_Parser.get_self(this2);
		var this2 = new stx_parse_parser_term_AnonThen(this1,stx_nano_lift_LiftNano.decouple(stx_nano_Wildcard.__,function(l,r) {
			return stx_nano_ClusterLift.cons(stx_nano_ClusterLift.flat_map(r,function(opt) {
				return stx_pico_OptionLift.toArray(opt);
			}),l);
		}),{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
		return stx_parse_Parser.get_self(stx_parse_Parser.get_self(this2)).apply(ipt);
	}
	,toString: function() {
		return "Rep1Sep(" + Std.string(this.delegation) + "," + Std.string(this.sep) + ")";
	}
	,__class__: stx_parse_parser_term_Rep1Sep
});
var stx_parse_parser_term_Repeated = function(delegation,number,id) {
	this.number = number;
	var self = stx_LiftAssert.assert(stx_nano_Wildcard.__,id).module.exists().apply(delegation);
	if(self != null) {
		switch(self._hx_index) {
		case 0:
			var v = self.v;
			throw haxe_Exception.thrown(v);
		case 1:
			break;
		}
	}
	stx_parse_parser_term_Base.call(this,delegation,null,id);
	var _g = delegation.tag;
	var tmp;
	if(_g._hx_index == 0) {
		var v = _g.v;
		tmp = haxe_ds_Option.Some("(" + v + ")*");
	} else {
		tmp = haxe_ds_Option.None;
	}
	this.tag = tmp;
};
$hxClasses["stx.parse.parser.term.Repeated"] = stx_parse_parser_term_Repeated;
stx_parse_parser_term_Repeated.__name__ = "stx.parse.parser.term.Repeated";
stx_parse_parser_term_Repeated.__super__ = stx_parse_parser_term_Base;
stx_parse_parser_term_Repeated.prototype = $extend(stx_parse_parser_term_Base.prototype,{
	number: null
	,check: function() {
		var self = stx_assert_PredicateLift.errata(new stx_assert_Module(this.pos).exists(),function(e) {
			var this1 = stx_nano_lift_LiftError.fault(e);
			return stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_ParseFailureCodeSum.E_Parse_UndefinedParseDelegate)),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1));
		}).apply(this.delegation);
		if(self != null) {
			switch(self._hx_index) {
			case 0:
				var v = self.v;
				throw haxe_Exception.thrown(v);
			case 1:
				break;
			}
		}
	}
	,apply: function(inputI) {
		var _gthis = this;
		var count = 0;
		var rec = null;
		rec = function(inputII,arr) {
			var res = _gthis.delegation.apply(inputII);
			var this1 = stx_parse_Logging.log(stx_nano_Wildcard.__);
			var fn = function(pos) {
				return pos.with_stamp(function(stamp) {
					return stamp.relevel(1);
				});
			};
			(function(value,pos) {
				this1(value,fn(pos));
			})(stx_log_Stringify.fromString("" + Std.string(_gthis.delegation))(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/parse/parser/term/Repeated.hx", lineNumber : 33, className : "stx.parse.parser.term.Repeated", methodName : "apply"}));
			var this2 = stx_parse_Logging.log(stx_nano_Wildcard.__);
			var fn1 = function(pos) {
				return pos.with_stamp(function(stamp) {
					return stamp.relevel(1);
				});
			};
			(function(value,pos) {
				this2(value,fn1(pos));
			})(stx_log_Stringify.fromString("" + Std.string(res.get_error()))(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/parse/parser/term/Repeated.hx", lineNumber : 34, className : "stx.parse.parser.term.Repeated", methodName : "apply"}));
			var this3 = stx_parse_Logging.log(stx_nano_Wildcard.__);
			var fn2 = function(pos) {
				return pos.with_stamp(function(stamp) {
					return stamp.relevel(1);
				});
			};
			(function(value,pos) {
				this3(value,fn2(pos));
			})(stx_log_Stringify.fromString("" + Std.string(arr))(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/parse/parser/term/Repeated.hx", lineNumber : 35, className : "stx.parse.parser.term.Repeated", methodName : "apply"}));
			var this4 = stx_parse_Logging.log(stx_nano_Wildcard.__);
			var fn3 = function(pos) {
				return pos.with_stamp(function(stamp) {
					return stamp.relevel(0);
				});
			};
			(function(value,pos) {
				this4(value,fn3(pos));
			})(stx_log_Stringify.fromInt(count)(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/parse/parser/term/Repeated.hx", lineNumber : 37, className : "stx.parse.parser.term.Repeated", methodName : "apply"}));
			var this5 = stx_parse_Logging.log(stx_nano_Wildcard.__);
			var fn4 = function(pos) {
				return pos.with_stamp(function(stamp) {
					return stamp.relevel(0);
				});
			};
			(function(value,pos) {
				this5(value,fn4(pos));
			})(stx_log_Stringify.fromBool(res.get_error().is_defined() == false)(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/parse/parser/term/Repeated.hx", lineNumber : 38, className : "stx.parse.parser.term.Repeated", methodName : "apply"}));
			if(res.get_error().is_defined() == false) {
				if(count > _gthis.number) {
					return stx_LiftParse.no(inputI,stx_fail_ParseFailureCode.fromString("Should repeat " + _gthis.number + " times, but repeated " + count + " times"));
				} else {
					count += 1;
					var this6 = stx_parse_Logging.log(stx_nano_Wildcard.__);
					var fn5 = function(pos) {
						return pos.with_stamp(function(stamp) {
							return stamp.relevel(1);
						});
					};
					(function(value,pos) {
						this6(value,fn5(pos));
					})(stx_log_Stringify.fromString("" + (res.value == null ? "null" : stx_pico_Option.toString(res.value)))(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/parse/parser/term/Repeated.hx", lineNumber : 45, className : "stx.parse.parser.term.Repeated", methodName : "apply"}));
					var _g = res.value;
					if(_g != null) {
						if(_g._hx_index == 0) {
							var x = _g.v;
							arr.push(x);
						}
					}
					var this7 = stx_parse_Logging.log(stx_nano_Wildcard.__);
					var fn6 = function(pos) {
						return pos.with_stamp(function(stamp) {
							return stamp.relevel(2);
						});
					};
					(function(value,pos) {
						this7(value,fn6(pos));
					})(stx_log_Stringify.fromString("" + Std.string(res))(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/parse/parser/term/Repeated.hx", lineNumber : 50, className : "stx.parse.parser.term.Repeated", methodName : "apply"}));
					return rec(res.asset,arr);
				}
			} else if(stx_nano_IterLift.lfold(stx_nano_lift_LiftIterableToIter.toIter(stx_fail_Error.toIterable(res.get_error())),function(next,memo) {
				return stx_nano_lift_LiftNano.if_else(memo,function() {
					return true;
				},function() {
					var self = next.get_data();
					switch(self._hx_index) {
					case 0:
						var t = self.v;
						return stx_fail_DeclineLift.fold(t,function(x) {
							return x.fatal;
						},function(_) {
							return false;
						});
					case 1:
						return false;
					}
				});
			},false)) {
				return stx_LiftParse.failure(stx_fail_Refuse.concat(stx_LiftParse.erration(inputI,stx_fail_ParseFailureCode.fromString("failed many " + Std.string(_gthis.delegation)),true),res.get_error()),inputI);
			} else {
				var this8 = stx_parse_Logging.log(stx_nano_Wildcard.__);
				var fn7 = function(pos) {
					return pos.with_stamp(function(stamp) {
						return stamp.relevel(1);
					});
				};
				(function(value,pos) {
					this8(value,fn7(pos));
				})(new stx_log_EntryCtr().thunk(function() {
					return arr;
				}),stx_log_LogPosition.fromPos({ fileName : "stx/parse/parser/term/Repeated.hx", lineNumber : 57, className : "stx.parse.parser.term.Repeated", methodName : "apply"}));
				if(count == _gthis.number) {
					return stx_LiftParse.ok(res.asset,arr);
				} else {
					return stx_LiftParse.no(inputI,stx_fail_ParseFailureCode.fromString("Should repeat " + _gthis.number + " times, but repeated " + count + " times"));
				}
			}
		};
		return rec(inputI,[]);
	}
	,__class__: stx_parse_parser_term_Repeated
});
var stx_parse_parser_term_RepeatedOnly = function(delegation,number,id) {
	this.number = number;
	var self = stx_LiftAssert.assert(stx_nano_Wildcard.__,id).module.exists().apply(delegation);
	if(self != null) {
		switch(self._hx_index) {
		case 0:
			var v = self.v;
			throw haxe_Exception.thrown(v);
		case 1:
			break;
		}
	}
	stx_parse_parser_term_Base.call(this,delegation,null,id);
	var _g = delegation.tag;
	var tmp;
	if(_g._hx_index == 0) {
		var v = _g.v;
		tmp = haxe_ds_Option.Some("(" + v + ")*");
	} else {
		tmp = haxe_ds_Option.None;
	}
	this.tag = tmp;
};
$hxClasses["stx.parse.parser.term.RepeatedOnly"] = stx_parse_parser_term_RepeatedOnly;
stx_parse_parser_term_RepeatedOnly.__name__ = "stx.parse.parser.term.RepeatedOnly";
stx_parse_parser_term_RepeatedOnly.__super__ = stx_parse_parser_term_Base;
stx_parse_parser_term_RepeatedOnly.prototype = $extend(stx_parse_parser_term_Base.prototype,{
	number: null
	,check: function() {
		var self = stx_assert_PredicateLift.errata(new stx_assert_Module(this.pos).exists(),function(e) {
			var this1 = stx_nano_lift_LiftError.fault(e);
			return stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_ParseFailureCodeSum.E_Parse_UndefinedParseDelegate)),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1));
		}).apply(this.delegation);
		if(self != null) {
			switch(self._hx_index) {
			case 0:
				var v = self.v;
				throw haxe_Exception.thrown(v);
			case 1:
				break;
			}
		}
	}
	,apply: function(inputI) {
		var _gthis = this;
		var count = 0;
		var rec = null;
		rec = function(inputII,arr) {
			var res = _gthis.delegation.apply(inputII);
			var this1 = stx_parse_Logging.log(stx_nano_Wildcard.__);
			var fn = function(pos) {
				return pos.with_stamp(function(stamp) {
					return stamp.relevel(1);
				});
			};
			(function(value,pos) {
				this1(value,fn(pos));
			})(stx_log_Stringify.fromString("" + Std.string(_gthis.delegation))(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/parse/parser/term/RepeatedOnly.hx", lineNumber : 33, className : "stx.parse.parser.term.RepeatedOnly", methodName : "apply"}));
			var this2 = stx_parse_Logging.log(stx_nano_Wildcard.__);
			var fn1 = function(pos) {
				return pos.with_stamp(function(stamp) {
					return stamp.relevel(1);
				});
			};
			(function(value,pos) {
				this2(value,fn1(pos));
			})(stx_log_Stringify.fromString("" + Std.string(res.get_error()))(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/parse/parser/term/RepeatedOnly.hx", lineNumber : 34, className : "stx.parse.parser.term.RepeatedOnly", methodName : "apply"}));
			var this3 = stx_parse_Logging.log(stx_nano_Wildcard.__);
			var fn2 = function(pos) {
				return pos.with_stamp(function(stamp) {
					return stamp.relevel(1);
				});
			};
			(function(value,pos) {
				this3(value,fn2(pos));
			})(stx_log_Stringify.fromString("" + Std.string(arr))(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/parse/parser/term/RepeatedOnly.hx", lineNumber : 35, className : "stx.parse.parser.term.RepeatedOnly", methodName : "apply"}));
			var this4 = stx_parse_Logging.log(stx_nano_Wildcard.__);
			var fn3 = function(pos) {
				return pos.with_stamp(function(stamp) {
					return stamp.relevel(0);
				});
			};
			(function(value,pos) {
				this4(value,fn3(pos));
			})(stx_log_Stringify.fromInt(count)(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/parse/parser/term/RepeatedOnly.hx", lineNumber : 37, className : "stx.parse.parser.term.RepeatedOnly", methodName : "apply"}));
			var this5 = stx_parse_Logging.log(stx_nano_Wildcard.__);
			var fn4 = function(pos) {
				return pos.with_stamp(function(stamp) {
					return stamp.relevel(0);
				});
			};
			(function(value,pos) {
				this5(value,fn4(pos));
			})(stx_log_Stringify.fromBool(res.get_error().is_defined() == false)(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/parse/parser/term/RepeatedOnly.hx", lineNumber : 38, className : "stx.parse.parser.term.RepeatedOnly", methodName : "apply"}));
			if(res.get_error().is_defined() == false) {
				count += 1;
				var this6 = stx_parse_Logging.log(stx_nano_Wildcard.__);
				var fn5 = function(pos) {
					return pos.with_stamp(function(stamp) {
						return stamp.relevel(1);
					});
				};
				(function(value,pos) {
					this6(value,fn5(pos));
				})(stx_log_Stringify.fromString("" + (res.value == null ? "null" : stx_pico_Option.toString(res.value)))(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/parse/parser/term/RepeatedOnly.hx", lineNumber : 42, className : "stx.parse.parser.term.RepeatedOnly", methodName : "apply"}));
				var _g = res.value;
				if(_g != null) {
					if(_g._hx_index == 0) {
						var x = _g.v;
						arr.push(x);
					}
				}
				if(count == _gthis.number) {
					return stx_LiftParse.ok(res.asset,arr);
				} else {
					var this7 = stx_parse_Logging.log(stx_nano_Wildcard.__);
					var fn6 = function(pos) {
						return pos.with_stamp(function(stamp) {
							return stamp.relevel(2);
						});
					};
					(function(value,pos) {
						this7(value,fn6(pos));
					})(stx_log_Stringify.fromString("" + Std.string(res))(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/parse/parser/term/RepeatedOnly.hx", lineNumber : 50, className : "stx.parse.parser.term.RepeatedOnly", methodName : "apply"}));
					return rec(res.asset,arr);
				}
			} else if(stx_nano_IterLift.lfold(stx_nano_lift_LiftIterableToIter.toIter(stx_fail_Error.toIterable(res.get_error())),function(next,memo) {
				return stx_nano_lift_LiftNano.if_else(memo,function() {
					return true;
				},function() {
					var self = next.get_data();
					switch(self._hx_index) {
					case 0:
						var t = self.v;
						return stx_fail_DeclineLift.fold(t,function(x) {
							return x.fatal;
						},function(_) {
							return false;
						});
					case 1:
						return false;
					}
				});
			},false)) {
				return stx_LiftParse.failure(stx_fail_Refuse.concat(stx_LiftParse.erration(inputI,stx_fail_ParseFailureCode.fromString("failed many " + Std.string(_gthis.delegation)),true),res.get_error()),inputI);
			} else {
				var this8 = stx_parse_Logging.log(stx_nano_Wildcard.__);
				var fn7 = function(pos) {
					return pos.with_stamp(function(stamp) {
						return stamp.relevel(1);
					});
				};
				(function(value,pos) {
					this8(value,fn7(pos));
				})(new stx_log_EntryCtr().thunk(function() {
					return arr;
				}),stx_log_LogPosition.fromPos({ fileName : "stx/parse/parser/term/RepeatedOnly.hx", lineNumber : 57, className : "stx.parse.parser.term.RepeatedOnly", methodName : "apply"}));
				if(count == _gthis.number) {
					return stx_LiftParse.ok(inputII,arr);
				} else {
					return stx_LiftParse.no(inputI,stx_fail_ParseFailureCode.fromString("Should repeat " + _gthis.number + " times, but repeated " + count + " times"));
				}
			}
		};
		return rec(inputI,[]);
	}
	,__class__: stx_parse_parser_term_RepeatedOnly
});
var stx_parse_parser_term_RepeatedOnlyUpto = function(delegation,number,id) {
	this.number = number;
	var self = stx_LiftAssert.assert(stx_nano_Wildcard.__,id).module.exists().apply(delegation);
	if(self != null) {
		switch(self._hx_index) {
		case 0:
			var v = self.v;
			throw haxe_Exception.thrown(v);
		case 1:
			break;
		}
	}
	stx_parse_parser_term_Base.call(this,delegation,null,id);
	var _g = delegation.tag;
	var tmp;
	if(_g._hx_index == 0) {
		var v = _g.v;
		tmp = haxe_ds_Option.Some("(" + v + ")*");
	} else {
		tmp = haxe_ds_Option.None;
	}
	this.tag = tmp;
};
$hxClasses["stx.parse.parser.term.RepeatedOnlyUpto"] = stx_parse_parser_term_RepeatedOnlyUpto;
stx_parse_parser_term_RepeatedOnlyUpto.__name__ = "stx.parse.parser.term.RepeatedOnlyUpto";
stx_parse_parser_term_RepeatedOnlyUpto.__super__ = stx_parse_parser_term_Base;
stx_parse_parser_term_RepeatedOnlyUpto.prototype = $extend(stx_parse_parser_term_Base.prototype,{
	number: null
	,check: function() {
		var self = stx_assert_PredicateLift.errata(new stx_assert_Module(this.pos).exists(),function(e) {
			var this1 = stx_nano_lift_LiftError.fault(e);
			return stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_ParseFailureCodeSum.E_Parse_UndefinedParseDelegate)),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1));
		}).apply(this.delegation);
		if(self != null) {
			switch(self._hx_index) {
			case 0:
				var v = self.v;
				throw haxe_Exception.thrown(v);
			case 1:
				break;
			}
		}
	}
	,apply: function(inputI) {
		var _gthis = this;
		var count = 0;
		var rec = null;
		rec = function(inputII,arr) {
			var res = _gthis.delegation.apply(inputII);
			var this1 = stx_parse_Logging.log(stx_nano_Wildcard.__);
			var fn = function(pos) {
				return pos.with_stamp(function(stamp) {
					return stamp.relevel(1);
				});
			};
			(function(value,pos) {
				this1(value,fn(pos));
			})(stx_log_Stringify.fromString("" + Std.string(_gthis.delegation))(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/parse/parser/term/RepeatedOnlyUpto.hx", lineNumber : 33, className : "stx.parse.parser.term.RepeatedOnlyUpto", methodName : "apply"}));
			var this2 = stx_parse_Logging.log(stx_nano_Wildcard.__);
			var fn1 = function(pos) {
				return pos.with_stamp(function(stamp) {
					return stamp.relevel(1);
				});
			};
			(function(value,pos) {
				this2(value,fn1(pos));
			})(stx_log_Stringify.fromString("" + Std.string(res.get_error()))(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/parse/parser/term/RepeatedOnlyUpto.hx", lineNumber : 34, className : "stx.parse.parser.term.RepeatedOnlyUpto", methodName : "apply"}));
			var this3 = stx_parse_Logging.log(stx_nano_Wildcard.__);
			var fn2 = function(pos) {
				return pos.with_stamp(function(stamp) {
					return stamp.relevel(1);
				});
			};
			(function(value,pos) {
				this3(value,fn2(pos));
			})(stx_log_Stringify.fromString("" + Std.string(arr))(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/parse/parser/term/RepeatedOnlyUpto.hx", lineNumber : 35, className : "stx.parse.parser.term.RepeatedOnlyUpto", methodName : "apply"}));
			var this4 = stx_parse_Logging.log(stx_nano_Wildcard.__);
			var fn3 = function(pos) {
				return pos.with_stamp(function(stamp) {
					return stamp.relevel(0);
				});
			};
			(function(value,pos) {
				this4(value,fn3(pos));
			})(stx_log_Stringify.fromInt(count)(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/parse/parser/term/RepeatedOnlyUpto.hx", lineNumber : 37, className : "stx.parse.parser.term.RepeatedOnlyUpto", methodName : "apply"}));
			var this5 = stx_parse_Logging.log(stx_nano_Wildcard.__);
			var fn4 = function(pos) {
				return pos.with_stamp(function(stamp) {
					return stamp.relevel(0);
				});
			};
			(function(value,pos) {
				this5(value,fn4(pos));
			})(stx_log_Stringify.fromBool(res.get_error().is_defined() == false)(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/parse/parser/term/RepeatedOnlyUpto.hx", lineNumber : 38, className : "stx.parse.parser.term.RepeatedOnlyUpto", methodName : "apply"}));
			if(res.get_error().is_defined() == false) {
				count += 1;
				var this6 = stx_parse_Logging.log(stx_nano_Wildcard.__);
				var fn5 = function(pos) {
					return pos.with_stamp(function(stamp) {
						return stamp.relevel(1);
					});
				};
				(function(value,pos) {
					this6(value,fn5(pos));
				})(stx_log_Stringify.fromString("" + (res.value == null ? "null" : stx_pico_Option.toString(res.value)))(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/parse/parser/term/RepeatedOnlyUpto.hx", lineNumber : 42, className : "stx.parse.parser.term.RepeatedOnlyUpto", methodName : "apply"}));
				var _g = res.value;
				if(_g != null) {
					if(_g._hx_index == 0) {
						var x = _g.v;
						arr.push(x);
					}
				}
				if(count == _gthis.number) {
					return stx_LiftParse.ok(res.asset,arr);
				} else {
					var this7 = stx_parse_Logging.log(stx_nano_Wildcard.__);
					var fn6 = function(pos) {
						return pos.with_stamp(function(stamp) {
							return stamp.relevel(2);
						});
					};
					(function(value,pos) {
						this7(value,fn6(pos));
					})(stx_log_Stringify.fromString("" + Std.string(res))(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/parse/parser/term/RepeatedOnlyUpto.hx", lineNumber : 50, className : "stx.parse.parser.term.RepeatedOnlyUpto", methodName : "apply"}));
					return rec(res.asset,arr);
				}
			} else if(stx_nano_IterLift.lfold(stx_nano_lift_LiftIterableToIter.toIter(stx_fail_Error.toIterable(res.get_error())),function(next,memo) {
				return stx_nano_lift_LiftNano.if_else(memo,function() {
					return true;
				},function() {
					var self = next.get_data();
					switch(self._hx_index) {
					case 0:
						var t = self.v;
						return stx_fail_DeclineLift.fold(t,function(x) {
							return x.fatal;
						},function(_) {
							return false;
						});
					case 1:
						return false;
					}
				});
			},false)) {
				return stx_LiftParse.failure(stx_fail_Refuse.concat(stx_LiftParse.erration(inputI,stx_fail_ParseFailureCode.fromString("failed many " + Std.string(_gthis.delegation)),true),res.get_error()),inputI);
			} else {
				var this8 = stx_parse_Logging.log(stx_nano_Wildcard.__);
				var fn7 = function(pos) {
					return pos.with_stamp(function(stamp) {
						return stamp.relevel(1);
					});
				};
				(function(value,pos) {
					this8(value,fn7(pos));
				})(new stx_log_EntryCtr().thunk(function() {
					return arr;
				}),stx_log_LogPosition.fromPos({ fileName : "stx/parse/parser/term/RepeatedOnlyUpto.hx", lineNumber : 57, className : "stx.parse.parser.term.RepeatedOnlyUpto", methodName : "apply"}));
				if(count <= _gthis.number) {
					return stx_LiftParse.ok(inputII,arr);
				} else {
					return stx_LiftParse.no(inputI,stx_fail_ParseFailureCode.fromString("Should repeat " + _gthis.number + " times, but repeated " + count + " times"));
				}
			}
		};
		return rec(inputI,[]);
	}
	,__class__: stx_parse_parser_term_RepeatedOnlyUpto
});
var stx_parse_parser_term_RepeatedUpto = function(delegation,number,id) {
	this.number = number;
	var self = stx_LiftAssert.assert(stx_nano_Wildcard.__,id).module.exists().apply(delegation);
	if(self != null) {
		switch(self._hx_index) {
		case 0:
			var v = self.v;
			throw haxe_Exception.thrown(v);
		case 1:
			break;
		}
	}
	stx_parse_parser_term_Base.call(this,delegation,null,id);
	var _g = delegation.tag;
	var tmp;
	if(_g._hx_index == 0) {
		var v = _g.v;
		tmp = haxe_ds_Option.Some("(" + v + ")*");
	} else {
		tmp = haxe_ds_Option.None;
	}
	this.tag = tmp;
};
$hxClasses["stx.parse.parser.term.RepeatedUpto"] = stx_parse_parser_term_RepeatedUpto;
stx_parse_parser_term_RepeatedUpto.__name__ = "stx.parse.parser.term.RepeatedUpto";
stx_parse_parser_term_RepeatedUpto.__super__ = stx_parse_parser_term_Base;
stx_parse_parser_term_RepeatedUpto.prototype = $extend(stx_parse_parser_term_Base.prototype,{
	number: null
	,check: function() {
		var self = stx_assert_PredicateLift.errata(new stx_assert_Module(this.pos).exists(),function(e) {
			var this1 = stx_nano_lift_LiftError.fault(e);
			return stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_ParseFailureCodeSum.E_Parse_UndefinedParseDelegate)),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1));
		}).apply(this.delegation);
		if(self != null) {
			switch(self._hx_index) {
			case 0:
				var v = self.v;
				throw haxe_Exception.thrown(v);
			case 1:
				break;
			}
		}
	}
	,apply: function(inputI) {
		var _gthis = this;
		var count = 0;
		var rec = null;
		rec = function(inputII,arr) {
			var res = _gthis.delegation.apply(inputII);
			var this1 = stx_parse_Logging.log(stx_nano_Wildcard.__);
			var fn = function(pos) {
				return pos.with_stamp(function(stamp) {
					return stamp.relevel(1);
				});
			};
			(function(value,pos) {
				this1(value,fn(pos));
			})(stx_log_Stringify.fromString("" + Std.string(_gthis.delegation))(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/parse/parser/term/RepeatedUpto.hx", lineNumber : 33, className : "stx.parse.parser.term.RepeatedUpto", methodName : "apply"}));
			var this2 = stx_parse_Logging.log(stx_nano_Wildcard.__);
			var fn1 = function(pos) {
				return pos.with_stamp(function(stamp) {
					return stamp.relevel(1);
				});
			};
			(function(value,pos) {
				this2(value,fn1(pos));
			})(stx_log_Stringify.fromString("" + Std.string(res.get_error()))(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/parse/parser/term/RepeatedUpto.hx", lineNumber : 34, className : "stx.parse.parser.term.RepeatedUpto", methodName : "apply"}));
			var this3 = stx_parse_Logging.log(stx_nano_Wildcard.__);
			var fn2 = function(pos) {
				return pos.with_stamp(function(stamp) {
					return stamp.relevel(1);
				});
			};
			(function(value,pos) {
				this3(value,fn2(pos));
			})(stx_log_Stringify.fromString("" + Std.string(arr))(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/parse/parser/term/RepeatedUpto.hx", lineNumber : 35, className : "stx.parse.parser.term.RepeatedUpto", methodName : "apply"}));
			var this4 = stx_parse_Logging.log(stx_nano_Wildcard.__);
			var fn3 = function(pos) {
				return pos.with_stamp(function(stamp) {
					return stamp.relevel(0);
				});
			};
			(function(value,pos) {
				this4(value,fn3(pos));
			})(stx_log_Stringify.fromInt(count)(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/parse/parser/term/RepeatedUpto.hx", lineNumber : 37, className : "stx.parse.parser.term.RepeatedUpto", methodName : "apply"}));
			var this5 = stx_parse_Logging.log(stx_nano_Wildcard.__);
			var fn4 = function(pos) {
				return pos.with_stamp(function(stamp) {
					return stamp.relevel(0);
				});
			};
			(function(value,pos) {
				this5(value,fn4(pos));
			})(stx_log_Stringify.fromBool(res.get_error().is_defined() == false)(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/parse/parser/term/RepeatedUpto.hx", lineNumber : 38, className : "stx.parse.parser.term.RepeatedUpto", methodName : "apply"}));
			if(res.get_error().is_defined() == false) {
				if(count > _gthis.number) {
					return stx_LiftParse.no(inputI,stx_fail_ParseFailureCode.fromString("Should repeat " + _gthis.number + " times, but repeated " + count + " times"));
				} else {
					count += 1;
					var this6 = stx_parse_Logging.log(stx_nano_Wildcard.__);
					var fn5 = function(pos) {
						return pos.with_stamp(function(stamp) {
							return stamp.relevel(1);
						});
					};
					(function(value,pos) {
						this6(value,fn5(pos));
					})(stx_log_Stringify.fromString("" + (res.value == null ? "null" : stx_pico_Option.toString(res.value)))(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/parse/parser/term/RepeatedUpto.hx", lineNumber : 45, className : "stx.parse.parser.term.RepeatedUpto", methodName : "apply"}));
					var _g = res.value;
					if(_g != null) {
						if(_g._hx_index == 0) {
							var x = _g.v;
							arr.push(x);
						}
					}
					var this7 = stx_parse_Logging.log(stx_nano_Wildcard.__);
					var fn6 = function(pos) {
						return pos.with_stamp(function(stamp) {
							return stamp.relevel(2);
						});
					};
					(function(value,pos) {
						this7(value,fn6(pos));
					})(stx_log_Stringify.fromString("" + Std.string(res))(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/parse/parser/term/RepeatedUpto.hx", lineNumber : 50, className : "stx.parse.parser.term.RepeatedUpto", methodName : "apply"}));
					return rec(res.asset,arr);
				}
			} else if(stx_nano_IterLift.lfold(stx_nano_lift_LiftIterableToIter.toIter(stx_fail_Error.toIterable(res.get_error())),function(next,memo) {
				return stx_nano_lift_LiftNano.if_else(memo,function() {
					return true;
				},function() {
					var self = next.get_data();
					switch(self._hx_index) {
					case 0:
						var t = self.v;
						return stx_fail_DeclineLift.fold(t,function(x) {
							return x.fatal;
						},function(_) {
							return false;
						});
					case 1:
						return false;
					}
				});
			},false)) {
				return stx_LiftParse.failure(stx_fail_Refuse.concat(stx_LiftParse.erration(inputI,stx_fail_ParseFailureCode.fromString("failed many " + Std.string(_gthis.delegation)),true),res.get_error()),inputI);
			} else {
				var this8 = stx_parse_Logging.log(stx_nano_Wildcard.__);
				var fn7 = function(pos) {
					return pos.with_stamp(function(stamp) {
						return stamp.relevel(1);
					});
				};
				(function(value,pos) {
					this8(value,fn7(pos));
				})(new stx_log_EntryCtr().thunk(function() {
					return arr;
				}),stx_log_LogPosition.fromPos({ fileName : "stx/parse/parser/term/RepeatedUpto.hx", lineNumber : 57, className : "stx.parse.parser.term.RepeatedUpto", methodName : "apply"}));
				if(count <= _gthis.number) {
					return stx_LiftParse.ok(res.asset,arr);
				} else {
					return stx_LiftParse.no(inputI,stx_fail_ParseFailureCode.fromString("Should repeat " + _gthis.number + " times, but repeated " + count + " times"));
				}
			}
		};
		return rec(inputI,[]);
	}
	,__class__: stx_parse_parser_term_RepeatedUpto
});
var stx_parse_parser_term_Something = function(tag,id) {
	stx_parse_parser_term_Sync.call(this,tag,id);
};
$hxClasses["stx.parse.parser.term.Something"] = stx_parse_parser_term_Something;
stx_parse_parser_term_Something.__name__ = "stx.parse.parser.term.Something";
stx_parse_parser_term_Something.__super__ = stx_parse_parser_term_Sync;
stx_parse_parser_term_Something.prototype = $extend(stx_parse_parser_term_Sync.prototype,{
	apply: function(input) {
		if(stx_parse_ParseInput.is_end(input)) {
			return stx_LiftParse.failure(stx_LiftParse.erration(input,stx_fail_ParseFailureCode.fromString("EOF")),input);
		} else {
			var this1 = stx_parse_Logging.log(stx_nano_Wildcard.__);
			var fn = function(pos) {
				return pos.with_stamp(function(stamp) {
					return stamp.relevel(1);
				});
			};
			(function(value,pos) {
				this1(value,fn(pos));
			})(stx_log_Stringify.fromString("" + Std.string(stx_nano_ChunkLift.def(input.content.head(),null)))(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/parse/parser/term/Something.hx", lineNumber : 8, className : "stx.parse.parser.term.Something", methodName : "apply"}));
			var chk = input.content.head();
			switch(chk._hx_index) {
			case 0:
				var v = chk.v;
				return stx_LiftParse.ok(input.copy(input.content.drop(1)),v);
			case 1:
				return stx_LiftParse.failure(stx_LiftParse.erration(input.copy(input.content.drop(1)),stx_fail_ParseFailureCode.fromString("Something")),input);
			case 2:
				var e = chk.err;
				return stx_LiftParse.failure(stx_parse_lift_LiftParseFailureCodeRefuse.toParseFailure_with(e,input),input);
			}
		}
	}
	,toString: function() {
		return "*";
	}
	,__class__: stx_parse_parser_term_Something
});
var stx_parse_parser_term_Stamp = function(value,pos) {
	stx_parse_ParserCls.call(this,null,pos);
	this.value = value;
};
$hxClasses["stx.parse.parser.term.Stamp"] = stx_parse_parser_term_Stamp;
stx_parse_parser_term_Stamp.__name__ = "stx.parse.parser.term.Stamp";
stx_parse_parser_term_Stamp.__super__ = stx_parse_ParserCls;
stx_parse_parser_term_Stamp.prototype = $extend(stx_parse_ParserCls.prototype,{
	value: null
	,apply: function(input) {
		return this.value;
	}
	,toString: function() {
		return "Stamp(" + Std.string(this.value) + ")";
	}
	,__class__: stx_parse_parser_term_Stamp
});
var stx_parse_parser_term_Succeed = function(value,pos) {
	var self = stx_LiftAssert.assert(stx_nano_Wildcard.__,{ fileName : "stx/parse/parser/term/Succeed.hx", lineNumber : 5, className : "stx.parse.parser.term.Succeed", methodName : "new"}).module.exists().apply(value);
	if(self != null) {
		switch(self._hx_index) {
		case 0:
			var v = self.v;
			throw haxe_Exception.thrown(v);
		case 1:
			break;
		}
	}
	stx_parse_parser_term_SyncBase.call(this,value,null,pos);
};
$hxClasses["stx.parse.parser.term.Succeed"] = stx_parse_parser_term_Succeed;
stx_parse_parser_term_Succeed.__name__ = "stx.parse.parser.term.Succeed";
stx_parse_parser_term_Succeed.pure = function(r) {
	var this1 = new stx_parse_parser_term_Succeed(r,{ fileName : "stx/parse/parser/term/Succeed.hx", lineNumber : 9, className : "stx.parse.parser.term.Succeed", methodName : "pure"});
	return this1;
};
stx_parse_parser_term_Succeed.__super__ = stx_parse_parser_term_SyncBase;
stx_parse_parser_term_Succeed.prototype = $extend(stx_parse_parser_term_SyncBase.prototype,{
	apply: function(ipt) {
		return stx_LiftParse.ok(ipt,this.delegation);
	}
	,__class__: stx_parse_parser_term_Succeed
});
var stx_parse_parser_term_SyncAnonLift = function() { };
$hxClasses["stx.parse.parser.term.SyncAnonLift"] = stx_parse_parser_term_SyncAnonLift;
stx_parse_parser_term_SyncAnonLift.__name__ = "stx.parse.parser.term.SyncAnonLift";
var stx_parse_parser_term_SyncAnon = function(method,tag,pos) {
	stx_parse_parser_term_SyncBase.call(this,null,tag,pos);
	this.method = method;
};
$hxClasses["stx.parse.parser.term.SyncAnon"] = stx_parse_parser_term_SyncAnon;
stx_parse_parser_term_SyncAnon.__name__ = "stx.parse.parser.term.SyncAnon";
stx_parse_parser_term_SyncAnon.__super__ = stx_parse_parser_term_SyncBase;
stx_parse_parser_term_SyncAnon.prototype = $extend(stx_parse_parser_term_SyncBase.prototype,{
	method: null
	,apply: function(ipt) {
		var result = this.method(ipt);
		return result;
	}
	,toString: function() {
		return "SyncAnon(" + (this.tag == null ? "null" : stx_pico_Option.toString(this.tag)) + ")";
	}
	,__class__: stx_parse_parser_term_SyncAnon
});
var stx_parse_parser_term_TaggedAnon = function(method,tag,id) {
	stx_parse_parser_term_Anon.call(this,method,tag,id);
};
$hxClasses["stx.parse.parser.term.TaggedAnon"] = stx_parse_parser_term_TaggedAnon;
stx_parse_parser_term_TaggedAnon.__name__ = "stx.parse.parser.term.TaggedAnon";
stx_parse_parser_term_TaggedAnon.__super__ = stx_parse_parser_term_Anon;
stx_parse_parser_term_TaggedAnon.prototype = $extend(stx_parse_parser_term_Anon.prototype,{
	__class__: stx_parse_parser_term_TaggedAnon
});
var stx_parse_parser_term_Until = function(delegation,tag,pos) {
	stx_parse_parser_term_Base.call(this,delegation,tag,pos);
};
$hxClasses["stx.parse.parser.term.Until"] = stx_parse_parser_term_Until;
stx_parse_parser_term_Until.__name__ = "stx.parse.parser.term.Until";
stx_parse_parser_term_Until.__super__ = stx_parse_parser_term_Base;
stx_parse_parser_term_Until.prototype = $extend(stx_parse_parser_term_Base.prototype,{
	apply: function(ipt) {
		var _gthis = this;
		var result = [];
		var rec = null;
		rec = function(ipt) {
			var res = _gthis.delegation.apply(ipt);
			if(res.get_error().is_defined() == false) {
				var v = $iterator(stx_pico_OptionLift)(res.value);
				while(v.hasNext()) {
					var v1 = v.next();
					result.push(v1);
				}
				return rec(res.asset);
			} else if(result.length == 0) {
				return stx_LiftParse.failure(stx_LiftParse.erration(res.asset,stx_fail_ParseFailureCode.fromString("Until coming up empty")),res.asset);
			} else {
				return stx_LiftParse.ok(res.asset,stx_nano_Cluster.lift(result));
			}
		};
		return rec(ipt);
	}
	,__class__: stx_parse_parser_term_Until
});
var stx_parse_parser_term_Uri = function() { };
$hxClasses["stx.parse.parser.term.Uri"] = stx_parse_parser_term_Uri;
stx_parse_parser_term_Uri.__name__ = "stx.parse.parser.term.Uri";
stx_parse_parser_term_Uri.tp = function(fn) {
	return stx_nano_lift_LiftNano.decouple(stx_nano_Wildcard.__,fn);
};
stx_parse_parser_term_Uri.ct = function(l,r) {
	return "" + Std.string(l) + Std.string(r);
};
stx_parse_parser_term_Uri.ctlo = function(l,r) {
	var self = stx_pico_OptionLift.map(l,function(l) {
		return "" + Std.string(l) + Std.string(r);
	});
	if(self._hx_index == 0) {
		var v = self.v;
		return v;
	} else {
		return "" + Std.string(r);
	}
};
stx_parse_parser_term_Uri.ctro = function(l,r) {
	var self = stx_pico_OptionLift.map(r,function(r) {
		return "" + Std.string(l) + Std.string(r);
	});
	if(self._hx_index == 0) {
		var v = self.v;
		return v;
	} else {
		return "" + Std.string(l);
	}
};
stx_parse_parser_term_Uri.id = function(str) {
	var _this = stx_LiftParse.parse(stx_nano_Wildcard.__);
	var this1 = new stx_parse_parser_term_Identifier(str,{ fileName : "stx/parse/Parsers.hx", lineNumber : 71, className : "stx.parse.Parsers", methodName : "Identifier"});
	return this1;
};
stx_parse_parser_term_Uri.oBnd = function(l,r) {
	return stx_pico_OptionLift.map(stx_nano_lift_LiftOptionNano.zip(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,l),stx_pico_OptionLift.flat_map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,r),function(x) {
		return x;
	})),stx_nano_lift_LiftNano.decouple(stx_nano_Wildcard.__,function(x,y) {
		return "" + x + y;
	}));
};
stx_parse_parser_term_Uri.sBnd = function(l,r) {
	return stx_pico_OptionLift.map(stx_nano_lift_LiftOptionNano.zip(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,l),stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,r)),stx_nano_lift_LiftNano.decouple(stx_nano_Wildcard.__,function(x,y) {
		return "" + x + y;
	}));
};
stx_parse_parser_term_Uri.parseHex = function(x) {
	return Std.parseInt("0x" + x);
};
stx_parse_parser_term_Uri.IPv4address = function() {
	var this1 = new stx_parse_parser_term_Regex(stx_parse_parser_term_Uri.IPv4addressR,{ fileName : "stx/parse/Parsers.hx", lineNumber : 32, className : "stx.parse.Parsers", methodName : "Regex"});
	return this1;
};
var stx_parse_path_Base = function(is_windows,id) {
	var this1 = new stx_parse_parser_term_Named(stx_parse_path_Base_reg("[^<>:\"\\\\|?*\\/A-Za-z0-9]"),"p_special_chars");
	this.p_special_chars = this1;
	var this2 = stx_Parse.alphanum;
	var this21 = new stx_parse_parser_term_Or(this2,stx_Parse.whitespace,{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
	var this1 = new stx_parse_parser_term_Named(stx_parse_Parser.get_self(this21),"char_and_space");
	this.char_and_space = this1;
	var this2 = stx_parse_path_Base_id("..");
	var this21 = new stx_parse_parser_term_AnonThen(this2,function(x) {
		return stx_parse_path_TokenSum.FPTUp;
	},{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
	var this1 = new stx_parse_parser_term_Named(stx_parse_Parser.get_self(this21),"p_up");
	this.p_up = this1;
	this.is_windows = is_windows;
	stx_parse_ParserCls.call(this,haxe_ds_Option.Some("asys.fs.Path"),id);
};
$hxClasses["stx.parse.path.Base"] = stx_parse_path_Base;
stx_parse_path_Base.__name__ = "stx.parse.path.Base";
stx_parse_path_Base.spect = function(parser,pos) {
	return parser;
};
stx_parse_path_Base.inspect = function(parser,pos) {
	var this1 = stx_parse_path_Base_log(stx_nano_Wildcard.__);
	var ctr = null;
	var pos1 = stx_log_LogPosition.fromPos(pos);
	var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,ctr);
	if(self._hx_index == 0) {
		var v = self.v;
		ctr = v;
	} else {
		ctr = stx_log_StringCtr.unit();
	}
	var prefix = function(v) {
		this1(stx_log_StringCtr.capture(ctr,v),pos1);
	};
	var this2 = stx_parse_path_Base_log(stx_nano_Wildcard.__);
	var ctr1 = null;
	var pos2 = stx_log_LogPosition.fromPos(pos);
	var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,ctr1);
	if(self._hx_index == 0) {
		var v = self.v;
		ctr1 = v;
	} else {
		ctr1 = stx_log_StringCtr.unit();
	}
	var this3 = new stx_parse_parser_term_Inspect(parser,prefix,stx_fn_UnaryLift.then(function(x) {
		return stx_parse_ParseResultLift.toString(x);
	},function(v) {
		this2(stx_log_StringCtr.capture(ctr1,v),pos2);
	}),{ fileName : "stx/parse/path/Base.hx", lineNumber : 77, className : "stx.parse.path.Base", methodName : "inspect"});
	return this3;
};
stx_parse_path_Base.__super__ = stx_parse_ParserCls;
stx_parse_path_Base.prototype = $extend(stx_parse_ParserCls.prototype,{
	is_windows: null
	,separator: function() {
		if(this.is_windows) {
			return "\\\\";
		} else {
			return "/";
		}
	}
	,p_sep: function() {
		var _gthis = this;
		var this1 = new stx_parse_parser_term_When(function(string) {
			return string == _gthis.separator();
		},haxe_ds_Option.Some("p_sep"),{ fileName : "stx/parse/path/Base.hx", lineNumber : 20, className : "stx.parse.path.Base", methodName : "p_sep"});
		var this2 = stx_parse_Parser.get_self(this1);
		var this1 = new stx_parse_parser_term_AnonThen(this2,function(_) {
			return stx_parse_path_TokenSum.FPTSep;
		},{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
		var this2 = new stx_parse_parser_term_Named(stx_parse_Parser.get_self(this1),"p_sep");
		return this2;
	}
	,p_root: function() {
		var this1 = stx_parse_path_Base_log(stx_nano_Wildcard.__);
		var fn = function(pos) {
			return pos.with_stamp(function(stamp) {
				return stamp.relevel(1);
			});
		};
		(function(value,pos) {
			this1(value,fn(pos));
		})(stx_log_Stringify.fromBool(this.is_windows)(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/parse/path/Base.hx", lineNumber : 30, className : "stx.parse.path.Base", methodName : "p_root"}));
		if(this.is_windows) {
			var this2 = stx_parse_path_Base_reg("[A-Za-z]:");
			var this3 = new stx_parse_parser_term_AnonThen(this2,stx_fn_UnaryLift.then(haxe_ds_Option.Some,stx_parse_path_TokenSum.FPTDrive),{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
			var pI = stx_parse_Parser.get_self(this3);
			var this2 = new stx_parse_parser_term_Option(this.p_sep(),{ fileName : "stx/parse/parser/ParserLift.hx", lineNumber : 94, className : "stx.parse.parser.ParserLift", methodName : "option"});
			var this3 = new stx_parse_parser_term_CoupleWith(pI,this2,{ fileName : "stx/parse/Parsers.hx", lineNumber : 122, className : "stx.parse.Parsers", methodName : "CoupleWith"});
			var this2 = stx_parse_Parser.get_self(this3);
			var this3 = new stx_parse_parser_term_AnonThen(this2,function(tp) {
				var _g = stx_nano_CoupleLift.snd(tp);
				switch(_g._hx_index) {
				case 0:
					var v = _g.v;
					return [stx_nano_CoupleLift.fst(tp),v];
				case 1:
					return [stx_nano_CoupleLift.fst(tp)];
				}
			},{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
			return stx_parse_Parser.get_self(this3);
		} else {
			var this2 = this.p_sep();
			var this3 = new stx_parse_parser_term_AnonThen(this2,function(x) {
				return [stx_parse_path_TokenSum.FPTDrive(haxe_ds_Option.None)];
			},{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
			return stx_parse_path_Base.inspect(stx_parse_Parser.get_self(this3),{ fileName : "stx/parse/path/Base.hx", lineNumber : 41, className : "stx.parse.path.Base", methodName : "p_root"});
		}
	}
	,p_up: null
	,char_and_space: null
	,p_special_chars: null
	,p_path_chars: function() {
		var this1 = new stx_parse_parser_term_Not(this.p_sep(),{ fileName : "stx/parse/path/Base.hx", lineNumber : 57, className : "stx.parse.path.Base", methodName : "p_path_chars"});
		var this2 = new stx_parse_parser_term_TagRefuse(stx_parse_Parser.get_self(this1),"p_path_chars.p_sep",{ fileName : "stx/parse/path/Base.hx", lineNumber : 57, className : "stx.parse.path.Base", methodName : "p_path_chars"});
		var not_sep = this2;
		var this1 = this.char_and_space;
		var this2 = new stx_parse_parser_term_Or(this1,this.p_special_chars,{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
		var char = stx_parse_Parser.get_self(this2);
		var this1 = char;
		var this2 = new stx_parse_parser_term_Or(this1,stx_parse_path_Base_id("."),{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
		var this1 = new stx_parse_parser_term_AndR(not_sep,stx_parse_Parser.get_self(this2),{ fileName : "stx/parse/Parsers.hx", lineNumber : 110, className : "stx.parse.Parsers", methodName : "AndR"});
		var pI = stx_parse_Parser.get_self(this1);
		var this1 = new stx_parse_parser_term_AndR(not_sep,char,{ fileName : "stx/parse/Parsers.hx", lineNumber : 110, className : "stx.parse.Parsers", methodName : "AndR"});
		var this2 = new stx_parse_parser_term_Many(stx_parse_Parser.get_self(this1),{ fileName : "stx/parse/Parsers.hx", lineNumber : 47, className : "stx.parse.Parsers", methodName : "Many"});
		var this1 = new stx_parse_parser_term_CoupleWith(pI,stx_parse_Parser.get_self(this2),{ fileName : "stx/parse/Parsers.hx", lineNumber : 122, className : "stx.parse.Parsers", methodName : "CoupleWith"});
		var this2 = stx_parse_Parser.get_self(this1);
		var this1 = new stx_parse_parser_term_AnonThen(this2,stx_nano_lift_LiftNano.decouple(stx_nano_Wildcard.__,function(x,r) {
			return stx_nano_ClusterLift.cons(r,x);
		}),{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
		var this2 = new stx_parse_parser_term_Named(stx_parse_parser_ParserLift.tokenize(stx_parse_Parser.get_self(this1)),"p_path_chars");
		return this2;
	}
	,p_file_chars: function() {
		var this1 = this.char_and_space;
		var this2 = new stx_parse_parser_term_Or(this1,this.p_special_chars,{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
		var this1 = new stx_parse_parser_term_OneMany(stx_parse_Parser.get_self(this2),{ fileName : "stx/parse/Parsers.hx", lineNumber : 50, className : "stx.parse.Parsers", methodName : "OneMany"});
		var this2 = new stx_parse_parser_term_Named(stx_parse_parser_ParserLift.tokenize(stx_parse_Parser.get_self(this1)),"p_file_chars");
		return this2;
	}
	,p_term: function() {
		var pI = this.p_path_chars();
		var this1 = new stx_parse_parser_term_Not(stx_parse_path_Base_id(":"),{ fileName : "stx/parse/path/Base.hx", lineNumber : 84, className : "stx.parse.path.Base", methodName : "p_term"});
		var this2 = new stx_parse_parser_term_AndL(pI,stx_parse_Parser.get_self(this1),{ fileName : "stx/parse/Parsers.hx", lineNumber : 113, className : "stx.parse.Parsers", methodName : "AndL"});
		var this1 = new stx_parse_parser_term_AndThen(stx_parse_Parser.get_self(this2),function(str) {
			var this1 = stx_parse_path_Base_log(stx_nano_Wildcard.__);
			var fn = function(pos) {
				return pos.with_stamp(function(stamp) {
					return stamp.relevel(1);
				});
			};
			(function(value,pos) {
				this1(value,fn(pos));
			})(stx_log_Stringify.fromString(" ###" + str + "###")(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/parse/path/Base.hx", lineNumber : 87, className : "stx.parse.path.Base", methodName : "p_term"}));
			var this2 = new stx_parse_parser_term_Succeed(stx_parse_path_TokenSum.FPTDown(str),{ fileName : "stx/parse/path/Base.hx", lineNumber : 89, className : "stx.parse.path.Base", methodName : "p_term"});
			return this2;
		},{ fileName : "stx/parse/Parsers.hx", lineNumber : 44, className : "stx.parse.Parsers", methodName : "AndThen"});
		var this2 = new stx_parse_parser_term_Named(stx_parse_Parser.get_self(this1),"p_term");
		return this2;
	}
	,p_junction: function() {
		var this1 = this.p_term();
		var this2 = new stx_parse_parser_term_Or(this1,this.p_up,{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
		var this1 = stx_parse_Parser.get_self(this2);
		var this2 = new stx_parse_parser_term_Or(this1,this.p_down(),{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
		return stx_parse_path_Base.inspect(stx_parse_Parser.get_self(this2),{ fileName : "stx/parse/path/Base.hx", lineNumber : 109, className : "stx.parse.path.Base", methodName : "p_junction"});
	}
	,p_down: function() {
		var pI = this.p_path_chars();
		var this1 = new stx_parse_parser_term_Not(stx_parse_path_Base_id(":"),{ fileName : "stx/parse/path/Base.hx", lineNumber : 113, className : "stx.parse.path.Base", methodName : "p_down"});
		var this2 = new stx_parse_parser_term_AndL(pI,stx_parse_Parser.get_self(this1),{ fileName : "stx/parse/Parsers.hx", lineNumber : 113, className : "stx.parse.Parsers", methodName : "AndL"});
		var this1 = stx_parse_Parser.get_self(this2);
		var this2 = new stx_parse_parser_term_AnonThen(this1,function(str) {
			return stx_parse_path_TokenSum.FPTDown(str);
		},{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
		return stx_parse_Parser.get_self(this2);
	}
	,p_body: function() {
		var pI = this.p_junction();
		var this1 = new stx_parse_parser_term_CoupleWith(this.p_sep(),pI,{ fileName : "stx/parse/Parsers.hx", lineNumber : 122, className : "stx.parse.Parsers", methodName : "CoupleWith"});
		var this2 = new stx_parse_parser_term_Many(stx_parse_Parser.get_self(this1),{ fileName : "stx/parse/Parsers.hx", lineNumber : 47, className : "stx.parse.Parsers", methodName : "Many"});
		var next = stx_parse_Parser.get_self(stx_parse_Parser.get_self(this2));
		var this1 = new stx_parse_parser_term_CoupleWith(pI,next,{ fileName : "stx/parse/Parsers.hx", lineNumber : 122, className : "stx.parse.Parsers", methodName : "CoupleWith"});
		var this2 = new stx_parse_parser_term_AnonThen(stx_parse_Parser.get_self(stx_parse_Parser.get_self(this1)),function(t) {
			var fst = stx_nano_CoupleLift.fst(t);
			var _g = [];
			var x = $getIterator(stx_nano_Cluster.toIterable(stx_nano_CoupleLift.snd(t)));
			while(x.hasNext()) {
				var x1 = x.next();
				_g.push([stx_nano_CoupleLift.fst(x1),stx_nano_CoupleLift.snd(x1)]);
			}
			var _g1 = [];
			var e = $getIterator(_g);
			while(e.hasNext()) {
				var e1 = e.next();
				var x = $getIterator(e1);
				while(x.hasNext()) {
					var x1 = x.next();
					_g1.push(x1);
				}
			}
			var snd = Lambda.array(_g1);
			var out = [stx_nano_CoupleLift.fst(t)].concat(snd);
			return out;
		},{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
		return stx_parse_path_Base.inspect(stx_parse_Parser.get_self(stx_parse_Parser.get_self(this2)),{ fileName : "stx/parse/path/Base.hx", lineNumber : 117, className : "stx.parse.path.Base", methodName : "p_body"});
	}
	,p_abs: function() {
		var pI = this.p_root();
		var this1 = new stx_parse_parser_term_Option(this.p_body(),{ fileName : "stx/parse/parser/ParserLift.hx", lineNumber : 94, className : "stx.parse.parser.ParserLift", methodName : "option"});
		var this2 = new stx_parse_parser_term_CoupleWith(pI,this1,{ fileName : "stx/parse/Parsers.hx", lineNumber : 122, className : "stx.parse.Parsers", methodName : "CoupleWith"});
		var this1 = stx_parse_Parser.get_self(this2);
		var this2 = new stx_parse_parser_term_AnonThen(this1,function(t) {
			var this1 = stx_parse_path_Base_log(stx_nano_Wildcard.__);
			var fn = function(pos) {
				return pos.with_stamp(function(stamp) {
					return stamp.relevel(1);
				});
			};
			(function(value,pos) {
				this1(value,fn(pos));
			})(stx_log_Stringify.fromString("" + Std.string(stx_nano_CoupleLift.tup(t)))(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/parse/path/Base.hx", lineNumber : 124, className : "stx.parse.path.Base", methodName : "p_abs"}));
			var _g = stx_nano_CoupleLift.tup(t);
			var tk = _g.l;
			var b2_opt_arr = _g.r;
			var out = [];
			var _g_current = 0;
			var _g_array = tk;
			while(_g_current < _g_array.length) {
				var v = _g_array[_g_current++];
				out.push(v);
			}
			var v0 = $iterator(stx_pico_OptionLift)(b2_opt_arr);
			while(v0.hasNext()) {
				var v01 = v0.next();
				var _g_current = 0;
				var _g_array = v01;
				while(_g_current < _g_array.length) {
					var v1 = _g_array[_g_current++];
					out.push(v1);
				}
			}
			return out;
		},{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
		return stx_parse_Parser.get_self(this2);
	}
	,p_rel_root: function() {
		var pI = stx_parse_path_Base_id(".");
		var this1 = new stx_parse_parser_term_Not(stx_parse_path_Base_id("."),{ fileName : "stx/parse/path/Base.hx", lineNumber : 143, className : "stx.parse.path.Base", methodName : "p_rel_root"});
		var pI1 = stx_parse_Parser.get_self(this1);
		var this1 = new stx_parse_parser_term_Option(this.p_sep(),{ fileName : "stx/parse/parser/ParserLift.hx", lineNumber : 94, className : "stx.parse.parser.ParserLift", methodName : "option"});
		var this2 = new stx_parse_parser_term_CoupleWith(pI1,this1,{ fileName : "stx/parse/Parsers.hx", lineNumber : 122, className : "stx.parse.Parsers", methodName : "CoupleWith"});
		var this1 = new stx_parse_parser_term_AndL(pI,stx_parse_Parser.get_self(this2),{ fileName : "stx/parse/Parsers.hx", lineNumber : 113, className : "stx.parse.Parsers", methodName : "AndL"});
		var this2 = stx_parse_Parser.get_self(this1);
		var this1 = new stx_parse_parser_term_AnonThen(this2,function(_) {
			return stx_parse_path_TokenSum.FPTRel;
		},{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
		return stx_parse_Parser.get_self(this1);
	}
	,p_rel: function() {
		var this1 = this.p_rel_root();
		var this2 = new stx_parse_parser_term_Or(this1,this.p_junction(),{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
		var pI = stx_parse_Parser.get_self(this2);
		var this1 = new stx_parse_parser_term_Option(this.p_sep(),{ fileName : "stx/parse/parser/ParserLift.hx", lineNumber : 94, className : "stx.parse.parser.ParserLift", methodName : "option"});
		var this2 = new stx_parse_parser_term_Named(this1,"HSDF");
		var this1 = new stx_parse_parser_term_CoupleWith(pI,this2,{ fileName : "stx/parse/Parsers.hx", lineNumber : 122, className : "stx.parse.Parsers", methodName : "CoupleWith"});
		var pI = stx_parse_Parser.get_self(this1);
		var pI1 = this.p_up;
		var this1 = new stx_parse_parser_term_CoupleWith(this.p_sep(),pI1,{ fileName : "stx/parse/Parsers.hx", lineNumber : 122, className : "stx.parse.Parsers", methodName : "CoupleWith"});
		var this2 = new stx_parse_parser_term_Many(stx_parse_Parser.get_self(this1),{ fileName : "stx/parse/Parsers.hx", lineNumber : 47, className : "stx.parse.Parsers", methodName : "Many"});
		var next = stx_parse_Parser.get_self(stx_parse_Parser.get_self(this2));
		var this1 = new stx_parse_parser_term_CoupleWith(pI1,next,{ fileName : "stx/parse/Parsers.hx", lineNumber : 122, className : "stx.parse.Parsers", methodName : "CoupleWith"});
		var this2 = new stx_parse_parser_term_AnonThen(stx_parse_Parser.get_self(stx_parse_Parser.get_self(this1)),function(t) {
			var fst = stx_nano_CoupleLift.fst(t);
			var _g = [];
			var x = $getIterator(stx_nano_Cluster.toIterable(stx_nano_CoupleLift.snd(t)));
			while(x.hasNext()) {
				var x1 = x.next();
				_g.push([stx_nano_CoupleLift.fst(x1),stx_nano_CoupleLift.snd(x1)]);
			}
			var _g1 = [];
			var e = $getIterator(_g);
			while(e.hasNext()) {
				var e1 = e.next();
				var x = $getIterator(e1);
				while(x.hasNext()) {
					var x1 = x.next();
					_g1.push(x1);
				}
			}
			var snd = Lambda.array(_g1);
			var out = [stx_nano_CoupleLift.fst(t)].concat(snd);
			return out;
		},{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
		var pI1 = stx_parse_Parser.get_self(stx_parse_Parser.get_self(this2));
		var this1 = new stx_parse_parser_term_Succeed([],{ fileName : "stx/parse/parser/ParserLift.hx", lineNumber : 88, className : "stx.parse.parser.ParserLift", methodName : "repsep0"});
		var this2 = new stx_parse_parser_term_Or(pI1,this1,{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
		var this1 = new stx_parse_parser_term_AndL(stx_parse_Parser.get_self(stx_parse_Parser.get_self(this2)),this.p_sep(),{ fileName : "stx/parse/Parsers.hx", lineNumber : 113, className : "stx.parse.Parsers", methodName : "AndL"});
		var pI1 = stx_parse_Parser.get_self(this1);
		var pI2 = this.p_junction();
		var this1 = new stx_parse_parser_term_CoupleWith(this.p_sep(),pI2,{ fileName : "stx/parse/Parsers.hx", lineNumber : 122, className : "stx.parse.Parsers", methodName : "CoupleWith"});
		var this2 = new stx_parse_parser_term_Many(stx_parse_Parser.get_self(this1),{ fileName : "stx/parse/Parsers.hx", lineNumber : 47, className : "stx.parse.Parsers", methodName : "Many"});
		var next = stx_parse_Parser.get_self(stx_parse_Parser.get_self(this2));
		var this1 = new stx_parse_parser_term_CoupleWith(pI2,next,{ fileName : "stx/parse/Parsers.hx", lineNumber : 122, className : "stx.parse.Parsers", methodName : "CoupleWith"});
		var this2 = new stx_parse_parser_term_AnonThen(stx_parse_Parser.get_self(stx_parse_Parser.get_self(this1)),function(t) {
			var fst = stx_nano_CoupleLift.fst(t);
			var _g = [];
			var x = $getIterator(stx_nano_Cluster.toIterable(stx_nano_CoupleLift.snd(t)));
			while(x.hasNext()) {
				var x1 = x.next();
				_g.push([stx_nano_CoupleLift.fst(x1),stx_nano_CoupleLift.snd(x1)]);
			}
			var _g1 = [];
			var e = $getIterator(_g);
			while(e.hasNext()) {
				var e1 = e.next();
				var x = $getIterator(e1);
				while(x.hasNext()) {
					var x1 = x.next();
					_g1.push(x1);
				}
			}
			var snd = Lambda.array(_g1);
			var out = [stx_nano_CoupleLift.fst(t)].concat(snd);
			return out;
		},{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
		var pI2 = stx_parse_Parser.get_self(stx_parse_Parser.get_self(this2));
		var this1 = new stx_parse_parser_term_Succeed([],{ fileName : "stx/parse/parser/ParserLift.hx", lineNumber : 88, className : "stx.parse.parser.ParserLift", methodName : "repsep0"});
		var this2 = new stx_parse_parser_term_Or(pI2,this1,{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
		var this1 = new stx_parse_parser_term_AnonWith(pI1,stx_parse_Parser.get_self(stx_parse_Parser.get_self(this2)),function(a,b) {
			haxe_Log.trace("" + (a == null ? "null" : stx_nano_Cluster.toString(a)) + " " + (b == null ? "null" : stx_nano_Cluster.toString(b)),{ fileName : "stx/parse/path/Base.hx", lineNumber : 151, className : "stx.parse.path.Base", methodName : "p_rel"});
			return stx_pico_Option.fromNullT(stx_nano_Cluster.concat(a,b));
		},{ fileName : "stx/parse/Parsers.hx", lineNumber : 119, className : "stx.parse.Parsers", methodName : "AnonWith"});
		var this2 = stx_parse_Parser.get_self(this1);
		var pI1 = this.p_junction();
		var this1 = new stx_parse_parser_term_CoupleWith(this.p_sep(),pI1,{ fileName : "stx/parse/Parsers.hx", lineNumber : 122, className : "stx.parse.Parsers", methodName : "CoupleWith"});
		var this3 = new stx_parse_parser_term_Many(stx_parse_Parser.get_self(this1),{ fileName : "stx/parse/Parsers.hx", lineNumber : 47, className : "stx.parse.Parsers", methodName : "Many"});
		var next = stx_parse_Parser.get_self(stx_parse_Parser.get_self(this3));
		var this1 = new stx_parse_parser_term_CoupleWith(pI1,next,{ fileName : "stx/parse/Parsers.hx", lineNumber : 122, className : "stx.parse.Parsers", methodName : "CoupleWith"});
		var this3 = new stx_parse_parser_term_AnonThen(stx_parse_Parser.get_self(stx_parse_Parser.get_self(this1)),function(t) {
			var fst = stx_nano_CoupleLift.fst(t);
			var _g = [];
			var x = $getIterator(stx_nano_Cluster.toIterable(stx_nano_CoupleLift.snd(t)));
			while(x.hasNext()) {
				var x1 = x.next();
				_g.push([stx_nano_CoupleLift.fst(x1),stx_nano_CoupleLift.snd(x1)]);
			}
			var _g1 = [];
			var e = $getIterator(_g);
			while(e.hasNext()) {
				var e1 = e.next();
				var x = $getIterator(e1);
				while(x.hasNext()) {
					var x1 = x.next();
					_g1.push(x1);
				}
			}
			var snd = Lambda.array(_g1);
			var out = [stx_nano_CoupleLift.fst(t)].concat(snd);
			return out;
		},{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
		var pI1 = stx_parse_Parser.get_self(stx_parse_Parser.get_self(this3));
		var this1 = new stx_parse_parser_term_Succeed([],{ fileName : "stx/parse/parser/ParserLift.hx", lineNumber : 88, className : "stx.parse.parser.ParserLift", methodName : "repsep0"});
		var this3 = new stx_parse_parser_term_Or(pI1,this1,{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
		var this1 = this2;
		var this2 = new stx_parse_parser_term_Or(this1,stx_parse_Parser.get_self(stx_parse_Parser.get_self(this3)),{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
		var this1 = new stx_parse_parser_term_Option(stx_parse_Parser.get_self(this2),{ fileName : "stx/parse/parser/ParserLift.hx", lineNumber : 94, className : "stx.parse.parser.ParserLift", methodName : "option"});
		var this2 = new stx_parse_parser_term_CoupleWith(pI,this1,{ fileName : "stx/parse/Parsers.hx", lineNumber : 122, className : "stx.parse.Parsers", methodName : "CoupleWith"});
		var this1 = stx_parse_Parser.get_self(this2);
		var this2 = new stx_parse_parser_term_AnonThen(this1,function(tp) {
			return stx_nano_CoupleLift.decouple(tp,function(tp,c) {
				return stx_nano_CoupleLift.decouple(tp,function(a,b) {
					if(a == null) {
						switch(b._hx_index) {
						case 0:
							var _g = b.v;
							switch(c._hx_index) {
							case 0:
								var head = a;
								var v = c.v;
								var tail = _g;
								return stx_nano_Cluster.concat(stx_nano_Cluster.lift([head,tail]),v);
							case 1:
								var head = a;
								var tail = _g;
								return stx_nano_Cluster.lift([head,tail]);
							}
							break;
						case 1:
							switch(c._hx_index) {
							case 0:
								var v = c.v;
								return stx_nano_Cluster.concat(stx_nano_Cluster.lift([stx_parse_path_TokenSum.FPTRel]),v);
							case 1:
								return stx_nano_Cluster.lift([stx_parse_path_TokenSum.FPTRel]);
							}
							break;
						}
					} else {
						switch(b._hx_index) {
						case 0:
							var _g = b.v;
							switch(c._hx_index) {
							case 0:
								var head = a;
								var v = c.v;
								var tail = _g;
								return stx_nano_Cluster.concat(stx_nano_Cluster.lift([head,tail]),v);
							case 1:
								var head = a;
								var tail = _g;
								return stx_nano_Cluster.lift([head,tail]);
							}
							break;
						case 1:
							switch(c._hx_index) {
							case 0:
								var head = a;
								var v = c.v;
								return stx_nano_Cluster.concat(stx_nano_Cluster.lift([head]),v);
							case 1:
								var head = a;
								return stx_nano_Cluster.lift([head]);
							}
							break;
						}
					}
				});
			});
		},{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
		return stx_parse_Parser.get_self(this2);
	}
	,p_path: function() {
		var this1 = this.p_rel();
		var this2 = new stx_parse_parser_term_Or(this1,this.p_abs(),{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
		var pI = stx_parse_Parser.get_self(this2);
		var this1 = new stx_parse_parser_term_Option(this.p_sep(),{ fileName : "stx/parse/parser/ParserLift.hx", lineNumber : 94, className : "stx.parse.parser.ParserLift", methodName : "option"});
		var this2 = new stx_parse_parser_term_CoupleWith(pI,this1,{ fileName : "stx/parse/Parsers.hx", lineNumber : 122, className : "stx.parse.Parsers", methodName : "CoupleWith"});
		var this1 = stx_parse_Parser.get_self(this2);
		var this2 = new stx_parse_parser_term_AnonThen(this1,function(tp) {
			var this1 = stx_parse_path_Base_log(stx_nano_Wildcard.__);
			var fn = function(pos) {
				return pos.with_stamp(function(stamp) {
					return stamp.relevel(2);
				});
			};
			(function(value,pos) {
				this1(value,fn(pos));
			})(stx_log_Stringify.fromString("" + Std.string(stx_nano_CoupleLift.tup(tp)))(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/parse/path/Base.hx", lineNumber : 178, className : "stx.parse.path.Base", methodName : "p_path"}));
			var l = stx_nano_CoupleLift.fst(tp);
			var r = stx_nano_CoupleLift.snd(tp);
			switch(r._hx_index) {
			case 0:
				var v = r.v;
				return stx_nano_Cluster.concat(l,[v]);
			case 1:
				return l;
			}
		},{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
		var this1 = stx_parse_Parser.get_self(this2);
		var this2 = this.p_term();
		var this3 = new stx_parse_parser_term_AnonThen(this2,function(x) {
			return [x];
		},{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
		var this2 = this1;
		var this1 = new stx_parse_parser_term_Or(this2,stx_parse_Parser.get_self(this3),{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
		var pI = stx_parse_Parser.get_self(this1);
		var this1 = new stx_parse_parser_term_Eof(null,{ fileName : "stx/parse/Parsers.hx", lineNumber : 65, className : "stx.parse.Parsers", methodName : "Eof"});
		var this2 = new stx_parse_parser_term_AndL(pI,this1,{ fileName : "stx/parse/Parsers.hx", lineNumber : 113, className : "stx.parse.Parsers", methodName : "AndL"});
		return stx_parse_Parser.get_self(this2);
	}
	,apply: function(i) {
		return this.p_path().apply(i);
	}
	,format: function(arr) {
		var o = stx_nano_ClusterLift.lfold(arr,function(e,init) {
			switch(e._hx_index) {
			case 0:
				var _g = e.name;
				if(_g._hx_index == 0) {
					var root = _g.v;
					init.push(root);
				}
				break;
			case 2:
				if(init.length > 1) {
					init.pop();
				}
				break;
			case 4:
				var str = e.str;
				init.push(str);
				break;
			default:
			}
			return init;
		},[]);
		return o;
	}
	,stringify: function(n) {
		switch(n._hx_index) {
		case 0:
			var _g = n.name;
			switch(_g._hx_index) {
			case 0:
				var root = _g.v;
				return root;
			case 1:
				return stx_fs_path_Separator.toString(this.separator());
			}
			break;
		case 1:
			return ".";
		case 2:
			return "..";
		case 3:
			return stx_fs_path_Separator.toString(this.separator());
		case 4:
			var str = n.str;
			return str;
		case 5:
			var _g = n.str;
			var _g1 = n.ext;
			if(_g1 == null) {
				var str = _g;
				return str;
			} else {
				var ext = _g1;
				var str = _g;
				return "" + str + "." + ext;
			}
			break;
		}
	}
	,asBase: function() {
		return this;
	}
	,__class__: stx_parse_path_Base
});
function stx_parse_path_Base_id(str) {
	var _this = stx_LiftParse.parse(stx_nano_Wildcard.__);
	var this1 = new stx_parse_parser_term_Identifier(str,{ fileName : "stx/parse/Parsers.hx", lineNumber : 71, className : "stx.parse.Parsers", methodName : "Identifier"});
	return this1;
}
function stx_parse_path_Base_reg(str) {
	var _this = stx_LiftParse.parse(stx_nano_Wildcard.__);
	var this1 = new stx_parse_parser_term_Regex(str,{ fileName : "stx/parse/Parsers.hx", lineNumber : 32, className : "stx.parse.Parsers", methodName : "Regex"});
	return stx_parse_Parser.get_self(this1);
}
function stx_parse_path_Base_log(wildcard) {
	var this1 = stx_Log.ZERO;
	var fn = function(pos) {
		return pos.with_stamp(function(stamp) {
			return stamp.tag("stx/parse/path");
		});
	};
	return function(value,pos) {
		this1(value,fn(pos));
	};
}
var stx_parse_path_Posix = function() {
	stx_parse_path_Base.call(this,false,{ fileName : "stx/parse/path/Posix.hx", lineNumber : 5, className : "stx.parse.path.Posix", methodName : "new"});
};
$hxClasses["stx.parse.path.Posix"] = stx_parse_path_Posix;
stx_parse_path_Posix.__name__ = "stx.parse.path.Posix";
stx_parse_path_Posix.__super__ = stx_parse_path_Base;
stx_parse_path_Posix.prototype = $extend(stx_parse_path_Base.prototype,{
	__class__: stx_parse_path_Posix
});
var stx_parse_path_TokenSum = $hxEnums["stx.parse.path.TokenSum"] = { __ename__:"stx.parse.path.TokenSum",__constructs__:null
	,FPTDrive: ($_=function(name) { return {_hx_index:0,name:name,__enum__:"stx.parse.path.TokenSum",toString:$estr}; },$_._hx_name="FPTDrive",$_.__params__ = ["name"],$_)
	,FPTRel: {_hx_name:"FPTRel",_hx_index:1,__enum__:"stx.parse.path.TokenSum",toString:$estr}
	,FPTUp: {_hx_name:"FPTUp",_hx_index:2,__enum__:"stx.parse.path.TokenSum",toString:$estr}
	,FPTSep: {_hx_name:"FPTSep",_hx_index:3,__enum__:"stx.parse.path.TokenSum",toString:$estr}
	,FPTDown: ($_=function(str) { return {_hx_index:4,str:str,__enum__:"stx.parse.path.TokenSum",toString:$estr}; },$_._hx_name="FPTDown",$_.__params__ = ["str"],$_)
	,FPTFile: ($_=function(str,ext) { return {_hx_index:5,str:str,ext:ext,__enum__:"stx.parse.path.TokenSum",toString:$estr}; },$_._hx_name="FPTFile",$_.__params__ = ["str","ext"],$_)
};
stx_parse_path_TokenSum.__constructs__ = [stx_parse_path_TokenSum.FPTDrive,stx_parse_path_TokenSum.FPTRel,stx_parse_path_TokenSum.FPTUp,stx_parse_path_TokenSum.FPTSep,stx_parse_path_TokenSum.FPTDown,stx_parse_path_TokenSum.FPTFile];
var stx_parse_path_Token = {};
stx_parse_path_Token._new = function(self) {
	var this1 = self;
	return this1;
};
stx_parse_path_Token.lift = function(self) {
	return stx_parse_path_Token._new(self);
};
stx_parse_path_Token.prj = function(this1) {
	return this1;
};
stx_parse_path_Token.get_self = function(this1) {
	return stx_parse_path_Token.lift(this1);
};
stx_parse_path_Token.canonical = function(this1,sep) {
	var s = stx_fs_path_Separator.toString(sep);
	switch(this1._hx_index) {
	case 0:
		var _g = this1.name;
		switch(_g._hx_index) {
		case 0:
			var name = _g.v;
			return "name:" + s;
		case 1:
			return s;
		}
		break;
	case 1:
		return ".";
	case 2:
		return "..";
	case 3:
		return s;
	case 4:
		var str = this1.str;
		return str;
	case 5:
		var str = this1.str;
		var ext = this1.ext;
		return "" + str + "." + ext;
	}
};
var stx_parse_path_Windows = function() {
	stx_parse_path_Base.call(this,true,{ fileName : "stx/parse/path/Windows.hx", lineNumber : 5, className : "stx.parse.path.Windows", methodName : "new"});
};
$hxClasses["stx.parse.path.Windows"] = stx_parse_path_Windows;
stx_parse_path_Windows.__name__ = "stx.parse.path.Windows";
stx_parse_path_Windows.__super__ = stx_parse_path_Base;
stx_parse_path_Windows.prototype = $extend(stx_parse_path_Base.prototype,{
	__class__: stx_parse_path_Windows
});
var stx_parse_pml_Lexer = function() { };
$hxClasses["stx.parse.pml.Lexer"] = stx_parse_pml_Lexer;
stx_parse_pml_Lexer.__name__ = "stx.parse.pml.Lexer";
stx_parse_pml_Lexer.float = function(str) {
	return eu_ohmrun_pml_Token.TAtom(eu_ohmrun_pml_AtomSum.N(eu_ohmrun_pml_Num.KLFloat(parseFloat(str))));
};
stx_parse_pml_Lexer.between = function(current) {
	return StringTools.trim(HxOverrides.substr(current,1,current.length - 2));
};
stx_parse_pml_Lexer.print_ipt = function(ipt) {
	haxe_Log.trace(ipt,{ fileName : "stx/parse/pml/Lexer.hx", lineNumber : 52, className : "stx.parse.pml.Lexer", methodName : "print_ipt"});
};
stx_parse_pml_Lexer.print_opt = function(opt) {
	haxe_Log.trace(opt,{ fileName : "stx/parse/pml/Lexer.hx", lineNumber : 55, className : "stx.parse.pml.Lexer", methodName : "print_opt"});
};
function stx_parse_pml_Lexer_id(string) {
	var _this = stx_LiftParse.parse(stx_nano_Wildcard.__);
	var this1 = new stx_parse_parser_term_Identifier(string,{ fileName : "stx/parse/Parsers.hx", lineNumber : 71, className : "stx.parse.Parsers", methodName : "Identifier"});
	return this1;
}
function stx_parse_pml_Lexer_reg(string) {
	var _this = stx_LiftParse.parse(stx_nano_Wildcard.__);
	var this1 = new stx_parse_parser_term_Regex(string,{ fileName : "stx/parse/Parsers.hx", lineNumber : 32, className : "stx.parse.Parsers", methodName : "Regex"});
	return stx_parse_Parser.get_self(this1);
}
var stx_parse_pml_Parser = function() {
};
$hxClasses["stx.parse.pml.Parser"] = stx_parse_pml_Parser;
stx_parse_pml_Parser.__name__ = "stx.parse.pml.Parser";
stx_parse_pml_Parser.prototype = {
	lparen_p: function() {
		var p = stx_Parse.eq(eu_ohmrun_pml_Token.TLParen);
		p.tag = haxe_ds_Option.Some("lparen");
		var this1 = new stx_parse_parser_term_TagRefuse(p,"lparen",{ fileName : "stx/Parse.hx", lineNumber : 164, className : "stx.LiftParse", methodName : "tagged"});
		return this1;
	}
	,rparen_p: function() {
		var p = stx_Parse.eq(eu_ohmrun_pml_Token.TRParen);
		p.tag = haxe_ds_Option.Some("rparen");
		var this1 = new stx_parse_parser_term_TagRefuse(p,"rparen",{ fileName : "stx/Parse.hx", lineNumber : 164, className : "stx.LiftParse", methodName : "tagged"});
		return this1;
	}
	,val: function() {
		var this1 = new stx_parse_parser_term_Choose(function(t) {
			if(t == null) {
				return haxe_ds_Option.None;
			} else if(t._hx_index == 2) {
				var atm = t.v;
				return haxe_ds_Option.Some(eu_ohmrun_pml_PExprSum.PValue(atm));
			} else {
				return haxe_ds_Option.None;
			}
		},null,{ fileName : "stx/parse/pml/Parser.hx", lineNumber : 12, className : "stx.parse.pml.Parser", methodName : "val"});
		var p = this1;
		p.tag = haxe_ds_Option.Some("val");
		var this1 = new stx_parse_parser_term_TagRefuse(p,"val",{ fileName : "stx/Parse.hx", lineNumber : 164, className : "stx.LiftParse", methodName : "tagged"});
		return this1;
	}
	,engroup: function(arr) {
		return eu_ohmrun_pml_PExprSum.PGroup(stx_LiftClusterToLinkedList.toLinkedList(arr));
	}
	,main: function() {
		var this1 = new stx_parse_parser_term_OneMany(this.expr_p(),{ fileName : "stx/parse/Parsers.hx", lineNumber : 50, className : "stx.parse.Parsers", methodName : "OneMany"});
		var this2 = stx_parse_Parser.get_self(this1);
		var this1 = new stx_parse_parser_term_AnonThen(this2,$bind(this,this.engroup),{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
		return stx_parse_Parser.get_self(this1);
	}
	,expr_p: function() {
		var self = stx_lift_ArrayLift.lfold1([this.val(),this.list_p()],function(memo,next) {
			var this1 = memo;
			var this2 = new stx_parse_parser_term_Or(this1,next,{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
			return stx_parse_Parser.get_self(this2);
		});
		var this1 = new stx_parse_parser_term_Failed("No Parser in Array",false,{ fileName : "stx/parse/lift/LiftArrayOfParser.hx", lineNumber : 6, className : "stx.parse.lift.LiftArrayOfParser", methodName : "ors"});
		var p;
		if(self._hx_index == 0) {
			var v = self.v;
			p = v;
		} else {
			p = this1;
		}
		p.tag = haxe_ds_Option.Some("expr");
		var this1 = new stx_parse_parser_term_TagRefuse(p,"expr",{ fileName : "stx/Parse.hx", lineNumber : 164, className : "stx.LiftParse", methodName : "tagged"});
		return this1;
	}
	,list_p: function() {
		var p = stx_LiftParse.cache($bind(this,this.expr_p));
		p.tag = haxe_ds_Option.Some("expr");
		var this1 = new stx_parse_parser_term_TagRefuse(p,"expr",{ fileName : "stx/Parse.hx", lineNumber : 164, className : "stx.LiftParse", methodName : "tagged"});
		var this2 = new stx_parse_parser_term_Many(this1,{ fileName : "stx/parse/Parsers.hx", lineNumber : 47, className : "stx.parse.Parsers", methodName : "Many"});
		var p = stx_parse_Parser.get_self(this2);
		p.tag = haxe_ds_Option.Some("exprs");
		var this1 = new stx_parse_parser_term_TagRefuse(p,"exprs",{ fileName : "stx/Parse.hx", lineNumber : 164, className : "stx.LiftParse", methodName : "tagged"});
		var p = this.bracketed(this1);
		p.tag = haxe_ds_Option.Some("list");
		var this1 = new stx_parse_parser_term_TagRefuse(p,"list",{ fileName : "stx/Parse.hx", lineNumber : 164, className : "stx.LiftParse", methodName : "tagged"});
		return this1;
	}
	,bracketed: function(p) {
		var this1 = new stx_parse_parser_term_AndR(this.lparen_p(),p,{ fileName : "stx/parse/Parsers.hx", lineNumber : 110, className : "stx.parse.Parsers", methodName : "AndR"});
		var this2 = new stx_parse_parser_term_AndL(stx_parse_Parser.get_self(this1),this.rparen_p(),{ fileName : "stx/parse/Parsers.hx", lineNumber : 113, className : "stx.parse.Parsers", methodName : "AndL"});
		var this1 = stx_parse_Parser.get_self(this2);
		var this2 = new stx_parse_parser_term_AnonThen(this1,function(arr) {
			return eu_ohmrun_pml_PExprSum.PGroup(stx_LiftClusterToLinkedList.toLinkedList(arr));
		},{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
		return stx_parse_Parser.get_self(this2);
	}
	,__class__: stx_parse_pml_Parser
};
var stx_parse_term_ParseApi = function() { };
$hxClasses["stx.parse.term.ParseApi"] = stx_parse_term_ParseApi;
stx_parse_term_ParseApi.__name__ = "stx.parse.term.ParseApi";
stx_parse_term_ParseApi.__isInterface__ = true;
stx_parse_term_ParseApi.prototype = {
	parse: null
	,__class__: stx_parse_term_ParseApi
};
var stx_pico_ApplyLift = function() { };
$hxClasses["stx.pico.ApplyLift"] = stx_pico_ApplyLift;
stx_pico_ApplyLift.__name__ = "stx.pico.ApplyLift";
stx_pico_ApplyLift.lift = function(self) {
	return stx_pico_Apply._new(self);
};
stx_pico_ApplyLift.map = function(self,fn) {
	return stx_pico_Apply.Map(self,fn);
};
var stx_pico_Apply = {};
stx_pico_Apply._new = function(self) {
	var this1 = self;
	return this1;
};
stx_pico_Apply.lift = function(self) {
	return stx_pico_Apply._new(self);
};
stx_pico_Apply.Anon = function(self) {
	return stx_pico_Apply._new(new stx_pico_apply_term_Anon(self));
};
stx_pico_Apply.prj = function(this1) {
	return this1;
};
stx_pico_Apply.get_self = function(this1) {
	return stx_pico_Apply._new(this1);
};
stx_pico_Apply.Map = function(self,fn) {
	return stx_pico_Apply._new(new stx_pico_apply_term_AnonMap(self,fn));
};
var stx_pico_ComplyApi = function() { };
$hxClasses["stx.pico.ComplyApi"] = stx_pico_ComplyApi;
stx_pico_ComplyApi.__name__ = "stx.pico.ComplyApi";
stx_pico_ComplyApi.__isInterface__ = true;
stx_pico_ComplyApi.prototype = {
	comply: null
	,toComply: null
	,__class__: stx_pico_ComplyApi
};
var stx_pico_ComplyCls = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["stx.pico.ComplyCls"] = stx_pico_ComplyCls;
stx_pico_ComplyCls.__name__ = "stx.pico.ComplyCls";
stx_pico_ComplyCls.__interfaces__ = [stx_pico_ComplyApi];
stx_pico_ComplyCls.__super__ = stx_pico_Clazz;
stx_pico_ComplyCls.prototype = $extend(stx_pico_Clazz.prototype,{
	comply: null
	,toComply: function() {
		return this;
	}
	,__class__: stx_pico_ComplyCls
});
var stx_pico_ComplyLift = function() { };
$hxClasses["stx.pico.ComplyLift"] = stx_pico_ComplyLift;
stx_pico_ComplyLift.__name__ = "stx.pico.ComplyLift";
var stx_pico_Comply = {};
stx_pico_Comply._new = function(self) {
	var this1 = self;
	return this1;
};
stx_pico_Comply.lift = function(self) {
	return stx_pico_Comply._new(self);
};
stx_pico_Comply.prj = function(this1) {
	return this1;
};
stx_pico_Comply.get_self = function(this1) {
	return stx_pico_Comply._new(this1);
};
var stx_pico_EitherLift = function() { };
$hxClasses["stx.pico.EitherLift"] = stx_pico_EitherLift;
stx_pico_EitherLift.__name__ = "stx.pico.EitherLift";
stx_pico_EitherLift.fold = function(self,lhs,rhs) {
	switch(self._hx_index) {
	case 0:
		var l = self.v;
		return lhs(l);
	case 1:
		var r = self.v;
		return rhs(r);
	}
};
stx_pico_EitherLift.map = function(self,fn) {
	return stx_pico_EitherLift.flat_map(self,function(x) {
		return haxe_ds_Either.Right(fn(x));
	});
};
stx_pico_EitherLift.flat_map = function(self,fn) {
	return stx_pico_EitherLift.fold(self,haxe_ds_Either.Left,function(r) {
		return fn(r);
	});
};
stx_pico_EitherLift.flip = function(self) {
	return stx_pico_EitherLift.fold(self,function(l) {
		return haxe_ds_Either.Right(l);
	},function(r) {
		return haxe_ds_Either.Left(r);
	});
};
stx_pico_EitherLift.get_data = function(self) {
	return stx_pico_EitherLift.fold(self,function(x) {
		return x;
	},function(x) {
		return x;
	});
};
stx_pico_EitherLift.is_left = function(self) {
	return stx_pico_EitherLift.fold(self,function(_) {
		return true;
	},function(_) {
		return false;
	});
};
stx_pico_EitherLift.is_right = function(self) {
	return stx_pico_EitherLift.fold(self,function(_) {
		return false;
	},function(_) {
		return true;
	});
};
var stx_pico_Either = {};
stx_pico_Either._new = function(self) {
	var this1 = self;
	return this1;
};
stx_pico_Either.lift = function(self) {
	return stx_pico_Either._new(self);
};
stx_pico_Either.left = function(tI) {
	return haxe_ds_Either.Left(tI);
};
stx_pico_Either.right = function(tII) {
	return haxe_ds_Either.Right(tII);
};
stx_pico_Either.prj = function(this1) {
	return this1;
};
var stx_pico_IFaze = function() { };
$hxClasses["stx.pico.IFaze"] = stx_pico_IFaze;
stx_pico_IFaze.__name__ = "stx.pico.IFaze";
stx_pico_IFaze.__isInterface__ = true;
stx_pico_IFaze.prototype = {
	definition: null
	,identifier: null
	,__class__: stx_pico_IFaze
};
var stx_pico_OutcomeSum = $hxEnums["stx.pico.OutcomeSum"] = { __ename__:"stx.pico.OutcomeSum",__constructs__:null
	,Success: ($_=function(t) { return {_hx_index:0,t:t,__enum__:"stx.pico.OutcomeSum",toString:$estr}; },$_._hx_name="Success",$_.__params__ = ["t"],$_)
	,Failure: ($_=function(e) { return {_hx_index:1,e:e,__enum__:"stx.pico.OutcomeSum",toString:$estr}; },$_._hx_name="Failure",$_.__params__ = ["e"],$_)
};
stx_pico_OutcomeSum.__constructs__ = [stx_pico_OutcomeSum.Success,stx_pico_OutcomeSum.Failure];
var stx_pico_OutcomeLift = function() { };
$hxClasses["stx.pico.OutcomeLift"] = stx_pico_OutcomeLift;
stx_pico_OutcomeLift.__name__ = "stx.pico.OutcomeLift";
stx_pico_OutcomeLift.map = function(self,fn) {
	return stx_pico_OutcomeLift.flat_map(self,function(x) {
		return stx_pico_OutcomeSum.Success(fn(x));
	});
};
stx_pico_OutcomeLift.flat_map = function(self,fn) {
	var tmp;
	switch(self._hx_index) {
	case 0:
		var t = self.t;
		tmp = fn(t);
		break;
	case 1:
		var e = self.e;
		tmp = stx_pico_OutcomeSum.Failure(e);
		break;
	}
	return stx_pico_Outcome.lift(tmp);
};
stx_pico_OutcomeLift.fold = function(self,fn,er) {
	switch(self._hx_index) {
	case 0:
		var t = self.t;
		return fn(t);
	case 1:
		var e = self.e;
		return er(e);
	}
};
stx_pico_OutcomeLift.fudge = function(self) {
	switch(self._hx_index) {
	case 0:
		var t = self.t;
		return t;
	case 1:
		var e = self.e;
		throw haxe_Exception.thrown(e);
	}
};
stx_pico_OutcomeLift.elide = function(self) {
	var tmp;
	switch(self._hx_index) {
	case 0:
		var t = self.t;
		tmp = stx_pico_OutcomeSum.Failure(t);
		break;
	case 1:
		var e = self.e;
		tmp = stx_pico_OutcomeSum.Success(e);
		break;
	}
	return tmp;
};
stx_pico_OutcomeLift.value = function(self) {
	var tmp;
	switch(self._hx_index) {
	case 0:
		var t = self.t;
		tmp = stx_pico_Option.pure(t);
		break;
	case 1:
		var e = self.e;
		tmp = stx_pico_Option.unit();
		break;
	}
	return tmp;
};
stx_pico_OutcomeLift.error = function(self) {
	var tmp;
	switch(self._hx_index) {
	case 0:
		var t = self.t;
		tmp = stx_pico_Option.unit();
		break;
	case 1:
		var e = self.e;
		tmp = stx_pico_Option.pure(e);
		break;
	}
	return tmp;
};
var stx_pico_Outcome = {};
stx_pico_Outcome._new = function(self) {
	var this1 = self;
	return this1;
};
stx_pico_Outcome.lift = function(self) {
	return stx_pico_Outcome._new(self);
};
stx_pico_Outcome.success = function(t) {
	return stx_pico_Outcome.lift(stx_pico_OutcomeSum.Success(t));
};
stx_pico_Outcome.failure = function(e) {
	return stx_pico_Outcome.lift(stx_pico_OutcomeSum.Failure(e));
};
stx_pico_Outcome.prj = function(this1) {
	return this1;
};
stx_pico_Outcome.get_self = function(this1) {
	return stx_pico_Outcome.lift(this1);
};
var stx_pico_ReactApi = function() { };
$hxClasses["stx.pico.ReactApi"] = stx_pico_ReactApi;
stx_pico_ReactApi.__name__ = "stx.pico.ReactApi";
stx_pico_ReactApi.__isInterface__ = true;
stx_pico_ReactApi.prototype = {
	react: null
	,__class__: stx_pico_ReactApi
};
var stx_pico_ReactCls = function() { };
$hxClasses["stx.pico.ReactCls"] = stx_pico_ReactCls;
stx_pico_ReactCls.__name__ = "stx.pico.ReactCls";
stx_pico_ReactCls.__interfaces__ = [stx_pico_ReactApi];
stx_pico_ReactCls.prototype = {
	react: null
	,__class__: stx_pico_ReactCls
};
var stx_pico_React = {};
stx_pico_React._new = function(self) {
	var this1 = self;
	return this1;
};
stx_pico_React.lift = function(self) {
	return stx_pico_React._new(self);
};
stx_pico_React.prj = function(this1) {
	return this1;
};
stx_pico_React.get_self = function(this1) {
	return stx_pico_React.lift(this1);
};
var stx_pico_apply_term_Anon = function(_apply) {
	this._apply = _apply;
};
$hxClasses["stx.pico.apply.term.Anon"] = stx_pico_apply_term_Anon;
stx_pico_apply_term_Anon.__name__ = "stx.pico.apply.term.Anon";
stx_pico_apply_term_Anon.__super__ = stx_pico_ApplyCls;
stx_pico_apply_term_Anon.prototype = $extend(stx_pico_ApplyCls.prototype,{
	_apply: null
	,apply: function(p) {
		return this._apply(p);
	}
	,__class__: stx_pico_apply_term_Anon
});
var stx_pico_apply_term_Delegate = function(delegate) {
	this.delegate = delegate;
};
$hxClasses["stx.pico.apply.term.Delegate"] = stx_pico_apply_term_Delegate;
stx_pico_apply_term_Delegate.__name__ = "stx.pico.apply.term.Delegate";
stx_pico_apply_term_Delegate.__super__ = stx_pico_ApplyCls;
stx_pico_apply_term_Delegate.prototype = $extend(stx_pico_ApplyCls.prototype,{
	delegate: null
	,__class__: stx_pico_apply_term_Delegate
});
var stx_pico_apply_term_Map = function(delegate) {
	stx_pico_apply_term_Delegate.call(this,delegate);
};
$hxClasses["stx.pico.apply.term.Map"] = stx_pico_apply_term_Map;
stx_pico_apply_term_Map.__name__ = "stx.pico.apply.term.Map";
stx_pico_apply_term_Map.__super__ = stx_pico_apply_term_Delegate;
stx_pico_apply_term_Map.prototype = $extend(stx_pico_apply_term_Delegate.prototype,{
	map: null
	,apply: function(p) {
		return this.map(this.delegate.apply(p));
	}
	,__class__: stx_pico_apply_term_Map
});
var stx_pico_apply_term_AnonMap = function(delegate,_map) {
	stx_pico_apply_term_Map.call(this,delegate);
	this._map = _map;
};
$hxClasses["stx.pico.apply.term.AnonMap"] = stx_pico_apply_term_AnonMap;
stx_pico_apply_term_AnonMap.__name__ = "stx.pico.apply.term.AnonMap";
stx_pico_apply_term_AnonMap.__super__ = stx_pico_apply_term_Map;
stx_pico_apply_term_AnonMap.prototype = $extend(stx_pico_apply_term_Map.prototype,{
	_map: null
	,map: function(p) {
		return this._map(p);
	}
	,__class__: stx_pico_apply_term_AnonMap
});
var stx_pkg_Packed = function(pos) {
	this.pkg = stx_PkgLift.pkg(stx_nano_Wildcard.__,pos);
};
$hxClasses["stx.pkg.Packed"] = stx_pkg_Packed;
stx_pkg_Packed.__name__ = "stx.pkg.Packed";
stx_pkg_Packed.prototype = {
	pkg: null
	,__class__: stx_pkg_Packed
};
var stx_pkg_Pkg = {};
stx_pkg_Pkg._new = function(self) {
	var this1 = self;
	return this1;
};
stx_pkg_Pkg.fromScope = function(p) {
	return stx_pkg_Pkg._new(stx_pkg__$Pkg_Registry.instance.get(p));
};
stx_pkg_Pkg.source = function(this1) {
	return stx_pkg__$Pkg_Registry.instance.embed.unpack(this1);
};
stx_pkg_Pkg.toString = function(this1) {
	if(stx_pkg_Pkg.source(this1) == null) {
		return "null";
	} else {
		return stx_pico_Option.toString(stx_pkg_Pkg.source(this1));
	}
};
var stx_pkg__$Pkg_Registry = function() {
	this.embed = stx_nano_Embed._new();
	this.register = new haxe_ds_StringMap();
};
$hxClasses["stx.pkg._Pkg.Registry"] = stx_pkg__$Pkg_Registry;
stx_pkg__$Pkg_Registry.__name__ = "stx.pkg._Pkg.Registry";
stx_pkg__$Pkg_Registry.prototype = {
	embed: null
	,register: null
	,get: function(p) {
		var key = stx_pkg_Scope.identifier(p);
		if(!Object.prototype.hasOwnProperty.call(this.register.h,key)) {
			var _this = this.register;
			var value = this.embed.pack(p);
			_this.h[key] = value;
		}
		return this.register.h[key];
	}
	,__class__: stx_pkg__$Pkg_Registry
};
var stx_pkg_Scope = {};
stx_pkg_Scope._new = function(self) {
	var this1 = self;
	return this1;
};
stx_pkg_Scope.fromPosInfos = function(pos) {
	var $module = stx_nano_lift_LiftNano.toIdentifier(stx_nano_Position.fromPos(pos));
	var out = { name : stx_pico_Identifier.get_name($module), pack : stx_nano_Way.lift(stx_pico_Identifier.get_pack($module))};
	return stx_pkg_Scope._new(out);
};
stx_pkg_Scope.fromPosition = function(pos) {
	var $module = stx_nano_lift_LiftNano.toIdentifier(stx_nano_Position.toPos(pos));
	var out = { name : stx_pico_Identifier.get_name($module), pack : stx_nano_Way.lift(stx_pico_Identifier.get_pack($module))};
	return stx_pkg_Scope._new(out);
};
stx_pkg_Scope.equals = function(this1,that) {
	var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,this1.pack);
	var packl;
	if(self._hx_index == 0) {
		var v = self.v;
		packl = v;
	} else {
		packl = stx_nano_Way.unit();
	}
	var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,that.pack);
	var packr;
	if(self._hx_index == 0) {
		var v = self.v;
		packr = v;
	} else {
		packr = stx_nano_Way.unit();
	}
	var pack_ok = stx_nano_Cluster.get_length(packl) == stx_nano_Cluster.get_length(packr);
	if(pack_ok) {
		var _g = 0;
		var _g1 = stx_nano_Cluster.get_length(packl);
		while(_g < _g1) {
			var i = _g++;
			pack_ok = packl[i] == packr[i];
			if(!pack_ok) {
				break;
			}
		}
	}
	if(this1.name == that.name) {
		return pack_ok;
	} else {
		return false;
	}
};
stx_pkg_Scope.identifier = function(this1) {
	if(stx_nano_Cluster.get_length(this1.pack) == 0) {
		return this1.name;
	} else {
		return stx_nano_Way.snoc(this1.pack,this1.name).join(".");
	}
};
var stx_pkg_core_WhereApi = function() { };
$hxClasses["stx.pkg.core.WhereApi"] = stx_pkg_core_WhereApi;
stx_pkg_core_WhereApi.__name__ = "stx.pkg.core.WhereApi";
stx_pkg_core_WhereApi.__isInterface__ = true;
stx_pkg_core_WhereApi.prototype = {
	where: null
	,__class__: stx_pkg_core_WhereApi
};
var stx_pkg_core_WhereCls = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["stx.pkg.core.WhereCls"] = stx_pkg_core_WhereCls;
stx_pkg_core_WhereCls.__name__ = "stx.pkg.core.WhereCls";
stx_pkg_core_WhereCls.__interfaces__ = [stx_pkg_core_WhereApi];
stx_pkg_core_WhereCls.__super__ = stx_pico_Clazz;
stx_pkg_core_WhereCls.prototype = $extend(stx_pico_Clazz.prototype,{
	where: function(pos) {
		return stx_PkgLift.pkg(stx_nano_Wildcard.__,stx_nano_Position.fromPos(pos));
	}
	,__class__: stx_pkg_core_WhereCls
});
var stx_proxy_core_Access = {};
stx_proxy_core_Access._new = function(self) {
	var this1 = self;
	return this1;
};
stx_proxy_core_Access.lift = function(self) {
	return stx_proxy_core_Access._new(self);
};
stx_proxy_core_Access.prj = function(this1) {
	return this1;
};
stx_proxy_core_Access.get_self = function(this1) {
	return stx_proxy_core_Access.lift(this1);
};
var stx_proxy_core_Actuator = {};
stx_proxy_core_Actuator._new = function(self) {
	var this1 = self;
	return this1;
};
stx_proxy_core_Actuator.lift = function(self) {
	return stx_proxy_core_Actuator._new(self);
};
stx_proxy_core_Actuator.fromIterable = function(iterable) {
	return stx_proxy_core_Actuator.lift(stx_proxy_core_ProxySum.Defer(stx_proxy_core_Belay.fromThunk(function() {
		var iter = $getIterator(iterable);
		var rec = null;
		rec = function() {
			if(iter.hasNext()) {
				return stx_proxy_core_ProxySum.Yield(iter.next(),function(_) {
					return rec();
				});
			} else {
				return stx_proxy_core_ProxySum.Ended(stx_nano_ChunkSum.Val(null));
			}
		};
		return rec();
	})));
};
stx_proxy_core_Actuator.prj = function(this1) {
	return this1;
};
stx_proxy_core_Actuator.get_self = function(this1) {
	return stx_proxy_core_Actuator.lift(this1);
};
var stx_proxy_core_ActuatorLift = function() { };
$hxClasses["stx.proxy.core.ActuatorLift"] = stx_proxy_core_ActuatorLift;
stx_proxy_core_ActuatorLift.__name__ = "stx.proxy.core.ActuatorLift";
var stx_proxy_core_Agenda = {};
stx_proxy_core_Agenda._new = function(self) {
	var this1 = self;
	return this1;
};
stx_proxy_core_Agenda.lift = function(self) {
	return stx_proxy_core_Agenda._new(self);
};
stx_proxy_core_Agenda.prj = function(this1) {
	return this1;
};
stx_proxy_core_Agenda.fromEffect = function(self) {
	var handler = null;
	handler = function(self) {
		switch(self._hx_index) {
		case 0:
			var head = self.o;
			var tail = self.next;
			return stx_proxy_core_ProxySum.Await(null,function(_) {
				return handler(tail);
			});
		case 1:
			var fn = self.tran;
			return stx_proxy_core_ProxySum.Await(stx_proxy_core_Closed.ZERO,function(_) {
				return handler(fn(stx_coroutine_core_Control.push(null)));
			});
		case 2:
			var slot = self.held;
			return stx_proxy_core_ProxySum.Defer(stx_proxy_core_Belay.fromFletcher(eu_ohmrun_FletcherLift.map(slot,handler)));
		case 3:
			var _g = self.r;
			switch(_g._hx_index) {
			case 0:
				var _g1 = _g.c;
				switch(_g1._hx_index) {
				case 0:
					return stx_proxy_core_ProxySum.Ended(stx_nano_ChunkSum.Tap);
				case 1:
					var e = _g1.err;
					return stx_proxy_core_ProxySum.Ended(stx_nano_ChunkSum.End(e));
				}
				break;
			case 1:
				var _g1 = _g.v;
				return stx_proxy_core_ProxySum.Ended(stx_nano_ChunkSum.Val(null));
			}
			break;
		}
	};
	var self1 = self;
	return stx_proxy_core_Agenda.lift(stx_proxy_core_ProxySum.Defer(stx_proxy_core_Belay.fromThunk(function() {
		return handler(self1);
	})));
};
stx_proxy_core_Agenda.toProxy = function(this1) {
	return this1;
};
stx_proxy_core_Agenda.get_error = function(this1) {
	if(this1._hx_index == 3) {
		var _g = this1.res;
		if(_g._hx_index == 2) {
			var e = _g.err;
			if(e != null) {
				var f = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/proxy/core/Agenda.hx", lineNumber : 32, className : "stx.proxy.core._Agenda.Agenda_Impl_", methodName : "get_error"});
				return stx_nano_Report.pure(e);
			} else {
				var f = null;
				if(f == null) {
					return stx_nano_Report.unit();
				} else {
					return stx_nano_Report.pure(f(stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/proxy/core/Agenda.hx", lineNumber : 33, className : "stx.proxy.core._Agenda.Agenda_Impl_", methodName : "get_error"})));
				}
			}
		} else {
			var f = null;
			if(f == null) {
				return stx_nano_Report.unit();
			} else {
				return stx_nano_Report.pure(f(stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/proxy/core/Agenda.hx", lineNumber : 33, className : "stx.proxy.core._Agenda.Agenda_Impl_", methodName : "get_error"})));
			}
		}
	} else {
		var f = null;
		if(f == null) {
			return stx_nano_Report.unit();
		} else {
			return stx_nano_Report.pure(f(stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/proxy/core/Agenda.hx", lineNumber : 33, className : "stx.proxy.core._Agenda.Agenda_Impl_", methodName : "get_error"})));
		}
	}
};
var stx_proxy_core_AgendaLift = function() { };
$hxClasses["stx.proxy.core.AgendaLift"] = stx_proxy_core_AgendaLift;
stx_proxy_core_AgendaLift.__name__ = "stx.proxy.core.AgendaLift";
stx_proxy_core_AgendaLift.toExecute = function(self) {
	var this1 = eu_ohmrun_Fletcher.fromApi(new stx_proxy_core_AgendaExecute(self));
	return this1;
};
var stx_proxy_core_AgendaExecute = function(action) {
	eu_ohmrun_FletcherCls.call(this);
	this.action = action;
};
$hxClasses["stx.proxy.core.AgendaExecute"] = stx_proxy_core_AgendaExecute;
stx_proxy_core_AgendaExecute.__name__ = "stx.proxy.core.AgendaExecute";
stx_proxy_core_AgendaExecute.__super__ = eu_ohmrun_FletcherCls;
stx_proxy_core_AgendaExecute.prototype = $extend(eu_ohmrun_FletcherCls.prototype,{
	action: null
	,defer: function(_,cont) {
		var _gthis = this;
		var this1 = stx_stream_Cycler.toCycle(stx_stream_Cycler._new(new stx_stream_PureCyclerCls(tink_core_Future.irreversible(function(cb) {
			cb(_gthis.handler(_gthis.action,function(report) {
				var self = cont;
				var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,report);
				var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
					trg.trigger(value);
					return trg;
				}));
				this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
					var this1 = self;
					return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
						oc.handle(function(out) {
							ip.trigger(out);
						});
						var this1 = null;
						return this1;
					})));
				})));
			}));
		}))));
		return this1;
	}
	,handler: function(self,cont) {
		var _g = this;
		var cont1 = cont;
		var f = function(self) {
			return _g.handler(self,cont1);
		};
		switch(self._hx_index) {
		case 0:
			var _g1 = self.a;
			var b = self.arw;
			return stx_stream_Cycle._new(stx_stream_Cycler._new(new stx_stream_PureCyclerCls(tink_core_Future.irreversible(function(cb) {
				cb(f(b(null)));
			}))));
		case 1:
			var _g1 = self.y;
			var x = self.arw;
			return stx_stream_Cycle._new(stx_stream_Cycler._new(new stx_stream_PureCyclerCls(tink_core_Future.irreversible(function(cb) {
				cb(f(x(null)));
			}))));
		case 2:
			var held = self.ft;
			var this1 = eu_ohmrun_FletcherLift.map(held,f);
			var provide = this1;
			var this1 = eu_ohmrun_Fletcher._.environment(eu_ohmrun_fletcher_ProvideLift.then(provide,eu_ohmrun_Fletcher.Anon(function(inpt,cont) {
				var this1 = inpt;
				var self = cont;
				var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,null);
				var this2 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
					trg.trigger(value);
					return trg;
				}));
				return stx_stream_WorkLift.seq(this1,this2.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
					var this1 = self;
					return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
						oc.handle(function(out) {
							ip.trigger(out);
						});
						var this1 = null;
						return this1;
					})));
				}))));
			})),null,function(o) {
			},function(e) {
				var this1 = eu_ohmrun_fletcher_Logging.log(stx_nano_Wildcard.__);
				var fn = function(pos) {
					return pos.with_stamp(function(stamp) {
						return stamp.relevel(6);
					});
				};
				(function(value,pos) {
					this1(value,fn(pos));
				})(new stx_log_EntryCtr().pure(e),stx_log_LogPosition.fromPos({ fileName : "eu/ohmrun/fletcher/Provide.hx", lineNumber : 75, className : "eu.ohmrun.fletcher.ProvideLift", methodName : "environment"}));
				throw haxe_Exception.thrown(e);
			});
			var this2 = eu_ohmrun_fletcher_core_Cont.lift(new eu_ohmrun_fletcher_core_cont_term_AnonAnon(function(fn) {
				return fn(new tink_core_FutureTrigger());
			}));
			return stx_stream_Work.toCycle(this1.defer(null,this2));
		case 3:
			var _g1 = self.res;
			switch(_g1._hx_index) {
			case 0:
				var _g2 = _g1.v;
				var f1 = null;
				cont(f1 == null ? stx_nano_Report.unit() : stx_nano_Report.pure(f1(stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/proxy/core/Agenda.hx", lineNumber : 74, className : "stx.proxy.core.AgendaExecute", methodName : "handler"}))));
				return stx_stream_Cycle._new(stx_stream_Cycler._new(new stx_stream_UnitCyclerCls()));
			case 1:
				var f1 = null;
				cont(f1 == null ? stx_nano_Report.unit() : stx_nano_Report.pure(f1(stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/proxy/core/Agenda.hx", lineNumber : 77, className : "stx.proxy.core.AgendaExecute", methodName : "handler"}))));
				return stx_stream_Cycle._new(stx_stream_Cycler._new(new stx_stream_UnitCyclerCls()));
			case 2:
				var x1 = _g1.err;
				var _ = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/proxy/core/Agenda.hx", lineNumber : 80, className : "stx.proxy.core.AgendaExecute", methodName : "handler"});
				cont(stx_nano_Report.pure(x1));
				return stx_stream_Cycle._new(stx_stream_Cycler._new(new stx_stream_UnitCyclerCls()));
			}
			break;
		}
	}
	,__class__: stx_proxy_core_AgendaExecute
});
var stx_proxy_core_Belay = {};
stx_proxy_core_Belay._new = function(self) {
	var this1 = self;
	return this1;
};
stx_proxy_core_Belay.lift = function(self) {
	return stx_proxy_core_Belay._new(self);
};
stx_proxy_core_Belay.fromFunXR = function(fn) {
	return stx_proxy_core_Belay.lazy(fn);
};
stx_proxy_core_Belay.fromThunk = function(fn) {
	return stx_proxy_core_Belay.lazy(fn);
};
stx_proxy_core_Belay.fromFuture = function(fn) {
	var fn1 = function() {
		return fn();
	};
	var this1 = eu_ohmrun_Fletcher.Anon(function(_,cont) {
		var self = cont;
		var ft = tink_core_Future.map(fn1(),function(t) {
			return stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,t);
		});
		var this1 = eu_ohmrun_fletcher_core_Cont.lift(new eu_ohmrun_fletcher_core_cont_term_Anon(function(r_ipt) {
			var next = new tink_core_FutureTrigger();
			var fst = self.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(t_ipt) {
				ft.handle(function(res) {
					t_ipt.trigger(res);
					next.trigger(res);
				});
				var this1 = null;
				return this1;
			})));
			var snd = r_ipt.apply(next);
			return stx_stream_WorkLift.seq(fst,snd);
		}));
		return eu_ohmrun_fletcher_Receiver.reply(this1);
	});
	return stx_proxy_core_Belay.lift(this1);
};
stx_proxy_core_Belay.lazy = function(fn) {
	var fn1 = function() {
		return tink_core_Future.irreversible(function(cb) {
			cb(fn());
		});
	};
	var this1 = eu_ohmrun_Fletcher.Anon(function(_,cont) {
		var self = cont;
		var ft = tink_core_Future.map(fn1(),function(t) {
			return stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,t);
		});
		var this1 = eu_ohmrun_fletcher_core_Cont.lift(new eu_ohmrun_fletcher_core_cont_term_Anon(function(r_ipt) {
			var next = new tink_core_FutureTrigger();
			var fst = self.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(t_ipt) {
				ft.handle(function(res) {
					t_ipt.trigger(res);
					next.trigger(res);
				});
				var this1 = null;
				return this1;
			})));
			var snd = r_ipt.apply(next);
			return stx_stream_WorkLift.seq(fst,snd);
		}));
		return eu_ohmrun_fletcher_Receiver.reply(this1);
	});
	return stx_proxy_core_Belay.lift(this1);
};
stx_proxy_core_Belay.prj = function(this1) {
	return this1;
};
stx_proxy_core_Belay.get_self = function(this1) {
	return stx_proxy_core_Belay.lift(this1);
};
stx_proxy_core_Belay.mod = function(this1,fn) {
	return stx_proxy_core_Belay.lift(eu_ohmrun_Fletcher._.map(this1,fn));
};
stx_proxy_core_Belay.and_with = function(this1,that,fn) {
	var tmp = eu_ohmrun_fletcher_Provide._.and(this1,that);
	var fn1 = stx_nano_lift_LiftNano.decouple(stx_nano_Wildcard.__,fn);
	var this1 = eu_ohmrun_Fletcher.Anon(function(p,cont) {
		var res = fn1(p);
		var value = stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,res);
		var this1 = eu_ohmrun_fletcher_core_Settle.prj(eu_ohmrun_fletcher_core_Settle._.map(eu_ohmrun_fletcher_Terminal.toSettle(cont),function(trg) {
			trg.trigger(value);
			return trg;
		}));
		var resI = this1;
		var self = cont;
		return resI.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(oc) {
			var this1 = self;
			return this1.apply(stx_pico_Apply._new(new stx_pico_apply_term_Anon(function(ip) {
				oc.handle(function(out) {
					ip.trigger(out);
				});
				var this1 = null;
				return this1;
			})));
		})));
	});
	return stx_proxy_core_Belay.fromProvide(eu_ohmrun_fletcher_ProvideLift.convert(tmp,this1));
};
stx_proxy_core_Belay.toProxy = function(this1) {
	return stx_proxy_core_ProxySum.Defer(this1);
};
stx_proxy_core_Belay.toFletcher = function(this1) {
	return this1;
};
stx_proxy_core_Belay.fromProvide = function(self) {
	return stx_proxy_core_Belay.lift(self);
};
stx_proxy_core_Belay.fromFletcher = function(self) {
	return stx_proxy_core_Belay.lift(self);
};
var stx_proxy_core_ClientLift = function() { };
$hxClasses["stx.proxy.core.ClientLift"] = stx_proxy_core_ClientLift;
stx_proxy_core_ClientLift.__name__ = "stx.proxy.core.ClientLift";
stx_proxy_core_ClientLift.actuate = function(client,actuator) {
	var lift = stx_proxy_core_Client.lift;
	var rec = null;
	rec = function(client,actuator) {
		switch(client._hx_index) {
		case 0:
			var _g = client.a;
			var _g = client.arw;
			switch(actuator._hx_index) {
			case 0:
				var _g1 = actuator.a;
				var nxt = actuator.arw;
				return rec(client,nxt(null));
			case 1:
				var b = actuator.y;
				var nxtII = actuator.arw;
				var nxtI = _g;
				return stx_proxy_core_ProxySum.Defer(stx_proxy_core_Belay.fromThunk(function() {
					return rec(nxtI(b),nxtII(null));
				}));
			case 2:
				var defer = actuator.ft;
				var client1 = client;
				return stx_proxy_core_ProxySum.Defer(stx_proxy_core_Belay.mod(defer,function(actuator) {
					return rec(client1,actuator);
				}));
			case 3:
				var _g = actuator.res;
				if(_g._hx_index == 2) {
					var e = _g.err;
					return lift(stx_proxy_core_ProxySum.Ended(stx_nano_ChunkSum.End(e)));
				} else {
					var e = _g;
					return client;
				}
				break;
			}
			break;
		case 1:
			var _g = client.y;
			var _g = client.arw;
			switch(actuator._hx_index) {
			case 0:
				var _g1 = actuator.a;
				var nxtII1 = actuator.arw;
				var nxtI1 = _g;
				return rec(nxtI1(null),nxtII1(null));
			case 1:
				var _g1 = actuator.y;
				var _g1 = actuator.arw;
				var nxt = _g;
				return stx_proxy_core_ProxySum.Defer(stx_proxy_core_Belay.fromThunk(function() {
					return rec(nxt(null),actuator);
				}));
			case 2:
				var defer = actuator.ft;
				var client2 = client;
				return stx_proxy_core_ProxySum.Defer(stx_proxy_core_Belay.mod(defer,function(actuator) {
					return rec(client2,actuator);
				}));
			case 3:
				var _g = actuator.res;
				if(_g._hx_index == 2) {
					var e = _g.err;
					return lift(stx_proxy_core_ProxySum.Ended(stx_nano_ChunkSum.End(e)));
				} else {
					var e = _g;
					return client;
				}
				break;
			}
			break;
		case 2:
			var _g = client.ft;
			switch(actuator._hx_index) {
			case 2:
				var deferII = actuator.ft;
				var deferI = _g;
				return stx_proxy_core_ProxySum.Defer(stx_proxy_core_Belay.and_with(deferI,deferII,rec));
			case 3:
				var _g1 = actuator.res;
				if(_g1._hx_index == 2) {
					var e = _g1.err;
					return lift(stx_proxy_core_ProxySum.Ended(stx_nano_ChunkSum.End(e)));
				} else {
					var e = _g1;
					return client;
				}
				break;
			default:
				var defer = _g;
				var actuator1 = actuator;
				return stx_proxy_core_ProxySum.Defer(stx_proxy_core_Belay.mod(defer,function(client) {
					return rec(client,actuator1);
				}));
			}
			break;
		case 3:
			var e = client.res;
			return lift(stx_proxy_core_ProxySum.Ended(e));
		}
	};
	return stx_proxy_core_Client.lift(rec(client,actuator));
};
stx_proxy_core_ClientLift.completion = function(client,def) {
	var rec = null;
	rec = function(client) {
		var rec1;
		switch(client._hx_index) {
		case 0:
			var a = client.a;
			var nxt = client.arw;
			rec1 = stx_proxy_core_ProxySum.Ended(def(a));
			break;
		case 1:
			var _g = client.y;
			var nxt = client.arw;
			var client1 = nxt(null);
			rec1 = stx_proxy_core_ProxySum.Defer(stx_proxy_core_Belay.fromThunk(function() {
				return rec(client1);
			}));
			break;
		case 2:
			var ft = client.ft;
			rec1 = stx_proxy_core_ProxySum.Defer(stx_proxy_core_Belay.mod(ft,rec));
			break;
		case 3:
			var end = client.res;
			rec1 = stx_proxy_core_ProxySum.Ended(end);
			break;
		}
		return stx_proxy_core_Producer.lift(rec1);
	};
	return stx_proxy_core_Producer.lift(rec(client));
};
var stx_proxy_core_Client = {};
stx_proxy_core_Client._new = function(self) {
	var this1 = self;
	return this1;
};
stx_proxy_core_Client.lift = function(self) {
	return stx_proxy_core_Client._new(self);
};
stx_proxy_core_Client.prj = function(this1) {
	return this1;
};
stx_proxy_core_Client.get_self = function(this1) {
	return stx_proxy_core_Client.lift(this1);
};
var stx_proxy_core_Closed = {};
stx_proxy_core_Closed._new = function() {
	var this1 = null;
	return this1;
};
stx_proxy_core_Closed.zero = function(this1) {
	return this1 == stx_proxy_core_Closed.ZERO;
};
var stx_proxy_core_Consumer = {};
stx_proxy_core_Consumer._new = function(self) {
	var this1 = self;
	return this1;
};
var stx_proxy_core_Outlet = {};
stx_proxy_core_Outlet._new = function(self) {
	var this1 = self;
	return this1;
};
stx_proxy_core_Outlet.lift = function(self) {
	return stx_proxy_core_Outlet._new(self);
};
stx_proxy_core_Outlet.flat_map = function(this1,fn) {
	return stx_proxy_core_Outlet.lift(stx_proxy_core_Proxy._.flat_map(this1,stx_fn_UnaryLift.then(fn,function(x) {
		return stx_proxy_core_Outlet.prj(x);
	})));
};
stx_proxy_core_Outlet.prj = function(this1) {
	return this1;
};
stx_proxy_core_Outlet.pure = function(self) {
	return stx_proxy_core_Outlet.lift(stx_proxy_core_ProxySum.Ended(stx_nano_ChunkSum.Val(self)));
};
stx_proxy_core_Outlet.make = function(self) {
	return stx_proxy_core_Outlet.lift(stx_proxy_core_ProxySum.Ended(self));
};
var stx_proxy_core_OutletLift = function() { };
$hxClasses["stx.proxy.core.OutletLift"] = stx_proxy_core_OutletLift;
stx_proxy_core_OutletLift.__name__ = "stx.proxy.core.OutletLift";
stx_proxy_core_OutletLift.agenda = function(self,fn) {
	var self1 = stx_LiftAssert.assert(stx_nano_Wildcard.__,{ fileName : "stx/proxy/core/Outlet.hx", lineNumber : 30, className : "stx.proxy.core.OutletLift", methodName : "agenda"}).module.exists().apply(self);
	if(self1 != null) {
		switch(self1._hx_index) {
		case 0:
			var v = self1.v;
			throw haxe_Exception.thrown(v);
		case 1:
			break;
		}
	}
	var f = null;
	f = function(self) {
		if(self == null) {
			var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/proxy/core/Outlet.hx", lineNumber : 41, className : "stx.proxy.core.OutletLift", methodName : "agenda"});
			return stx_proxy_core_ProxySum.Ended(stx_nano_Chunk.fromRefuse(stx_fail_Refuse.make(haxe_ds_Option.Some(stx_fail_DeclineSum.INTERIOR(stx_nano_CTR.apply(function(_) {
				return stx_nano_Digests.e_undefined(_);
			},stx_Nano.digests(stx_nano_Wildcard.__)))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1))));
		} else {
			switch(self._hx_index) {
			case 0:
				var _g = self.a;
				var await = self.arw;
				return f(await(null));
			case 1:
				var y = self.y;
				var $yield = self.arw;
				return f($yield(null));
			case 2:
				var belay = self.ft;
				return stx_proxy_core_ProxySum.Defer(stx_proxy_core_Belay.mod(belay,f));
			case 3:
				var _g = self.res;
				switch(_g._hx_index) {
				case 0:
					var r = _g.v;
					fn(r);
					return stx_proxy_core_ProxySum.Ended(stx_nano_ChunkSum.Tap);
				case 1:
					return stx_proxy_core_ProxySum.Ended(stx_nano_ChunkSum.Tap);
				case 2:
					var x = _g.err;
					return stx_proxy_core_ProxySum.Ended(stx_nano_ChunkSum.End(x));
				}
				break;
			}
		}
	};
	return stx_proxy_core_Agenda.lift(f(self));
};
stx_proxy_core_OutletLift.pledge = function(self) {
	var source = stx_nano_Pledge.trigger();
	var Agenda = stx_proxy_core_OutletLift.agenda(self,function(r) {
		source.trigger(stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,r));
	});
	var execute = stx_proxy_core_AgendaLift.toExecute(Agenda);
	var failure = function(e) {
		source.trigger(stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(e),{ fileName : "stx/proxy/core/Outlet.hx", lineNumber : 52, className : "stx.proxy.core.OutletLift", methodName : "pledge"}));
	};
	var this1 = eu_ohmrun_Fletcher._.environment(execute,null,function(report) {
		if(report != null) {
			switch(report._hx_index) {
			case 0:
				var v = report.v;
				failure(v);
				break;
			case 1:
				break;
			}
		}
	},function(e) {
		throw haxe_Exception.thrown(e);
	});
	var this2 = eu_ohmrun_fletcher_core_Cont.lift(new eu_ohmrun_fletcher_core_cont_term_AnonAnon(function(fn) {
		return fn(new tink_core_FutureTrigger());
	}));
	stx_stream_CycleLift.submit(stx_stream_Work.toCycle(this1.defer(null,this2)),{ fileName : "eu/ohmrun/fletcher/Fiber.hx", lineNumber : 21, className : "eu.ohmrun.fletcher._Fiber.Fiber_Impl_", methodName : "submit"});
	return stx_nano_PledgeTrigger.toPledge(source);
};
var stx_proxy_core_ProducerLift = function() { };
$hxClasses["stx.proxy.core.ProducerLift"] = stx_proxy_core_ProducerLift;
stx_proxy_core_ProducerLift.__name__ = "stx.proxy.core.ProducerLift";
var stx_proxy_core_Producer = {};
stx_proxy_core_Producer.lift = function(self) {
	return stx_proxy_core_Producer._new(self);
};
stx_proxy_core_Producer._new = function(self) {
	var this1 = self;
	return this1;
};
stx_proxy_core_Producer.pure = function(self) {
	return stx_proxy_core_Producer.lift(stx_proxy_core_ProxySum.Ended(stx_nano_ChunkSum.Val(self)));
};
stx_proxy_core_Producer.prj = function(this1) {
	return this1;
};
var stx_proxy_core_ProxySum = $hxEnums["stx.proxy.core.ProxySum"] = { __ename__:"stx.proxy.core.ProxySum",__constructs__:null
	,Await: ($_=function(a,arw) { return {_hx_index:0,a:a,arw:arw,__enum__:"stx.proxy.core.ProxySum",toString:$estr}; },$_._hx_name="Await",$_.__params__ = ["a","arw"],$_)
	,Yield: ($_=function(y,arw) { return {_hx_index:1,y:y,arw:arw,__enum__:"stx.proxy.core.ProxySum",toString:$estr}; },$_._hx_name="Yield",$_.__params__ = ["y","arw"],$_)
	,Defer: ($_=function(ft) { return {_hx_index:2,ft:ft,__enum__:"stx.proxy.core.ProxySum",toString:$estr}; },$_._hx_name="Defer",$_.__params__ = ["ft"],$_)
	,Ended: ($_=function(res) { return {_hx_index:3,res:res,__enum__:"stx.proxy.core.ProxySum",toString:$estr}; },$_._hx_name="Ended",$_.__params__ = ["res"],$_)
};
stx_proxy_core_ProxySum.__constructs__ = [stx_proxy_core_ProxySum.Await,stx_proxy_core_ProxySum.Yield,stx_proxy_core_ProxySum.Defer,stx_proxy_core_ProxySum.Ended];
var stx_proxy_core_ProxyLift = function() { };
$hxClasses["stx.proxy.core.ProxyLift"] = stx_proxy_core_ProxyLift;
stx_proxy_core_ProxyLift.__name__ = "stx.proxy.core.ProxyLift";
stx_proxy_core_ProxyLift.flat_map = function(self,fn) {
	var fn1 = fn;
	var f = function(self) {
		return stx_proxy_core_ProxyLift.flat_map(self,fn1);
	};
	switch(self._hx_index) {
	case 0:
		var a = self.a;
		var arw = self.arw;
		return stx_proxy_core_ProxySum.Await(a,stx_fn_UnaryLift.then(arw,f));
	case 1:
		var y = self.y;
		var arw = self.arw;
		return stx_proxy_core_ProxySum.Yield(y,stx_fn_UnaryLift.then(arw,f));
	case 2:
		var ft = self.ft;
		return stx_proxy_core_ProxySum.Defer(stx_proxy_core_Belay.mod(ft,f));
	case 3:
		var res = self.res;
		var tmp;
		switch(res._hx_index) {
		case 0:
			var v = res.v;
			tmp = fn(v);
			break;
		case 1:
			tmp = stx_proxy_core_ProxySum.Ended(stx_nano_ChunkSum.Tap);
			break;
		case 2:
			var e = res.err;
			tmp = stx_proxy_core_ProxySum.Ended(stx_nano_ChunkSum.End(e));
			break;
		}
		return tmp;
	}
};
stx_proxy_core_ProxyLift.map = function(self,fn) {
	switch(self._hx_index) {
	case 0:
		var a = self.a;
		var arw = self.arw;
		var fn1 = fn;
		return stx_proxy_core_ProxySum.Await(a,stx_fn_UnaryLift.then(arw,function(self) {
			return stx_proxy_core_ProxyLift.map(self,fn1);
		}));
	case 1:
		var y = self.y;
		var arw = self.arw;
		var fn2 = fn;
		return stx_proxy_core_ProxySum.Yield(y,stx_fn_UnaryLift.then(arw,function(self) {
			return stx_proxy_core_ProxyLift.map(self,fn2);
		}));
	case 2:
		var ft = self.ft;
		var fn3 = fn;
		return stx_proxy_core_ProxySum.Defer(stx_proxy_core_Belay.mod(ft,function(self) {
			return stx_proxy_core_ProxyLift.map(self,fn3);
		}));
	case 3:
		var res = self.res;
		return stx_proxy_core_ProxySum.Ended(stx_nano_ChunkLift.map(res,fn));
	}
};
stx_proxy_core_ProxyLift.errata = function(self,fn) {
	switch(self._hx_index) {
	case 0:
		var a = self.a;
		var arw = self.arw;
		var fn1 = fn;
		return stx_proxy_core_ProxySum.Await(a,stx_fn_UnaryLift.then(arw,function(self) {
			return stx_proxy_core_ProxyLift.errata(self,fn1);
		}));
	case 1:
		var y = self.y;
		var arw = self.arw;
		var fn2 = fn;
		return stx_proxy_core_ProxySum.Yield(y,stx_fn_UnaryLift.then(arw,function(self) {
			return stx_proxy_core_ProxyLift.errata(self,fn2);
		}));
	case 2:
		var ft = self.ft;
		var fn3 = fn;
		return stx_proxy_core_ProxySum.Defer(stx_proxy_core_Belay.mod(ft,function(self) {
			return stx_proxy_core_ProxyLift.errata(self,fn3);
		}));
	case 3:
		var res = self.res;
		return stx_proxy_core_ProxySum.Ended(stx_nano_ChunkLift.errata(res,fn));
	}
};
stx_proxy_core_ProxyLift.errate = function(self,fn) {
	return stx_proxy_core_ProxyLift.errata(self,function(e) {
		return stx_fail_Refuse.errate(e,fn);
	});
};
stx_proxy_core_ProxyLift.reflect = function(self) {
	switch(self._hx_index) {
	case 0:
		var a = self.a;
		var arw = self.arw;
		return stx_proxy_core_ProxySum.Yield(a,stx_fn_UnaryLift.then(arw,stx_proxy_core_ProxyLift.reflect));
	case 1:
		var a = self.y;
		var arw = self.arw;
		return stx_proxy_core_ProxySum.Await(a,stx_fn_UnaryLift.then(arw,stx_proxy_core_ProxyLift.reflect));
	case 2:
		var self1 = self.ft;
		return stx_proxy_core_ProxySum.Defer(stx_proxy_core_Belay.mod(self1,stx_proxy_core_ProxyLift.reflect));
	case 3:
		var r = self.res;
		return stx_proxy_core_ProxySum.Ended(r);
	}
};
var stx_proxy_core_Proxy = {};
stx_proxy_core_Proxy._new = function(v) {
	var this1 = v;
	return this1;
};
stx_proxy_core_Proxy.lift = function(self) {
	return stx_proxy_core_Proxy._new(self);
};
stx_proxy_core_Proxy.pull = function(a) {
	return stx_proxy_core_Pull.pure(a);
};
stx_proxy_core_Proxy.get_error = function(this1) {
	if(this1._hx_index == 3) {
		var _g = this1.res;
		if(_g._hx_index == 2) {
			var e = _g.err;
			if(e != null) {
				var f = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/proxy/core/Proxy.hx", lineNumber : 34, className : "stx.proxy.core._Proxy.Proxy_Impl_", methodName : "get_error"});
				return stx_nano_Report.pure(e);
			} else {
				var f = null;
				if(f == null) {
					return stx_nano_Report.unit();
				} else {
					return stx_nano_Report.pure(f(stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/proxy/core/Proxy.hx", lineNumber : 35, className : "stx.proxy.core._Proxy.Proxy_Impl_", methodName : "get_error"})));
				}
			}
		} else {
			var f = null;
			if(f == null) {
				return stx_nano_Report.unit();
			} else {
				return stx_nano_Report.pure(f(stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/proxy/core/Proxy.hx", lineNumber : 35, className : "stx.proxy.core._Proxy.Proxy_Impl_", methodName : "get_error"})));
			}
		}
	} else {
		var f = null;
		if(f == null) {
			return stx_nano_Report.unit();
		} else {
			return stx_nano_Report.pure(f(stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/proxy/core/Proxy.hx", lineNumber : 35, className : "stx.proxy.core._Proxy.Proxy_Impl_", methodName : "get_error"})));
		}
	}
};
var stx_proxy_core_ProxyCatLift = function() { };
$hxClasses["stx.proxy.core.ProxyCatLift"] = stx_proxy_core_ProxyCatLift;
stx_proxy_core_ProxyCatLift.__name__ = "stx.proxy.core.ProxyCatLift";
stx_proxy_core_ProxyCatLift.next = function(lhs,rhs) {
	return function(p0) {
		return (stx_fn_UnaryLift.then(lhs,function(p) {
			if(p._hx_index == 3) {
				var _g = p.res;
				switch(_g._hx_index) {
				case 0:
					var r = _g.v;
					return rhs(r);
				case 1:
					return stx_proxy_core_ProxySum.Ended(stx_nano_ChunkSum.Tap);
				case 2:
					var e = _g.err;
					return stx_proxy_core_ProxySum.Ended(stx_nano_ChunkSum.End(e));
				}
			} else {
				return stx_proxy_core_ProxySum.Defer(stx_proxy_core_Belay.fromThunk(stx_fn_UnaryLift.bindI(stx_proxy_core_ProxyCatLift.next(lhs,rhs),p0)));
			}
		}))(p0);
	};
};
var stx_proxy_core_ProxyCat = {};
stx_proxy_core_ProxyCat._new = function(self) {
	var this1 = self;
	return this1;
};
var stx_proxy_core_PullLift = function() { };
$hxClasses["stx.proxy.core.PullLift"] = stx_proxy_core_PullLift;
stx_proxy_core_PullLift.__name__ = "stx.proxy.core.PullLift";
var stx_proxy_core_Pull = {};
stx_proxy_core_Pull._new = function(self) {
	var this1 = self;
	return this1;
};
stx_proxy_core_Pull.pure = function(a) {
	return stx_proxy_core_ProxySum.Await(a,function(b) {
		return stx_proxy_core_ProxySum.Yield(b,stx_proxy_core_Pull.pure);
	});
};
stx_proxy_core_Pull.gen = function(thk) {
	return stx_proxy_core_ProxySum.Defer(stx_proxy_core_Belay.lazy(function() {
		var self = thk();
		switch(self._hx_index) {
		case 0:
			var t = self.v;
			return stx_proxy_core_ProxySum.Await(t,function(_) {
				return stx_proxy_core_Pull.gen(thk);
			});
		case 1:
			return stx_proxy_core_ProxySum.Ended(stx_nano_ChunkSum.Tap);
		}
	}));
};
stx_proxy_core_Pull.signal = function(a) {
	return stx_proxy_core_ProxySum.Await(a,function(b) {
		return stx_proxy_core_Pull.signal(a);
	});
};
stx_proxy_core_Pull.fromSignal = function(sig) {
	return stx_proxy_core_ProxySum.Defer(stx_proxy_core_Belay.fromFuture(function() {
		return tink_core_Future.map(tink_core_Signal.nextTime(sig),function(v) {
			return stx_proxy_core_ProxySum.Await(v,function(b) {
				return stx_proxy_core_Pull.fromSignal(sig);
			});
		});
	}));
};
stx_proxy_core_Pull.fromArray = function(arr) {
	if(arr.length == 0) {
		return stx_proxy_core_ProxySum.Ended(stx_nano_ChunkSum.Tap);
	} else {
		var next = arr.slice();
		var fst = next.shift();
		var rst = next;
		return stx_proxy_core_ProxySum.Await(fst,function(b) {
			return stx_proxy_core_Pull.fromArray(rst);
		});
	}
};
stx_proxy_core_Pull.toProxy = function(this1) {
	return this1;
};
var stx_proxy_core_PullCatLift = function() { };
$hxClasses["stx.proxy.core.PullCatLift"] = stx_proxy_core_PullCatLift;
stx_proxy_core_PullCatLift.__name__ = "stx.proxy.core.PullCatLift";
stx_proxy_core_PullCatLift.compose = function(prx0,prx1) {
	return function(c) {
		var prx01 = prx0;
		var tmp = function(prx1) {
			return stx_proxy_core_PullCatLift.next(prx01,prx1);
		};
		return (stx_fn_UnaryLift.then(prx1,tmp))(c);
	};
};
stx_proxy_core_PullCatLift.next = function(prx0,prx1) {
	switch(prx1._hx_index) {
	case 0:
		var a = prx1.a;
		var arw = prx1.arw;
		return stx_proxy_core_PushCat._.next(stx_proxy_core_ProxySum.Defer(stx_proxy_core_Belay.fromThunk(stx_fn_UnaryLift.bindI(prx0,a))),arw);
	case 1:
		var y = prx1.y;
		var arw = prx1.arw;
		return stx_proxy_core_ProxySum.Yield(y,function(c) {
			return stx_proxy_core_PullCatLift.next(prx0,stx_proxy_core_ProxySum.Defer(stx_proxy_core_Belay.fromThunk(stx_fn_UnaryLift.bindI(arw,c))));
		});
	case 2:
		var ft = prx1.ft;
		var prx01 = prx0;
		return stx_proxy_core_ProxySum.Defer(stx_proxy_core_Belay.mod(ft,function(prx1) {
			return stx_proxy_core_PullCatLift.next(prx01,prx1);
		}));
	case 3:
		var res = prx1.res;
		return stx_proxy_core_ProxySum.Ended(res);
	}
};
var stx_proxy_core_PullCat = {};
stx_proxy_core_PullCat._new = function(self) {
	var this1 = self;
	return this1;
};
var stx_proxy_core_PushLift = function() { };
$hxClasses["stx.proxy.core.PushLift"] = stx_proxy_core_PushLift;
stx_proxy_core_PushLift.__name__ = "stx.proxy.core.PushLift";
var stx_proxy_core_Push = {};
stx_proxy_core_Push._new = function(self) {
	var this1 = self;
	return this1;
};
stx_proxy_core_Push.pure = function(b) {
	return stx_proxy_core_ProxySum.Yield(b,function(a) {
		return stx_proxy_core_ProxySum.Await(a,stx_proxy_core_Push.pure);
	});
};
stx_proxy_core_Push.fromSignal = function(sig) {
	return stx_proxy_core_ProxySum.Defer(stx_proxy_core_Belay.fromFuture(function() {
		return tink_core_Future.map(tink_core_Signal.nextTime(sig),function(b) {
			return stx_proxy_core_ProxySum.Yield(b,function(_) {
				return stx_proxy_core_Push.fromSignal(sig);
			});
		});
	}));
};
stx_proxy_core_Push.fromCluster = function(self) {
	var self1 = stx_nano_ClusterLift.head(self);
	switch(self1._hx_index) {
	case 0:
		var t = self1.v;
		return stx_proxy_core_ProxySum.Yield(t,function(a) {
			return stx_proxy_core_ProxySum.Await(a,function(_) {
				return stx_proxy_core_Push.fromCluster(stx_nano_ClusterLift.tail(self));
			});
		});
	case 1:
		return stx_proxy_core_ProxySum.Ended(stx_nano_ChunkSum.Tap);
	}
};
stx_proxy_core_Push.toProxy = function(this1) {
	return this1;
};
var stx_proxy_core_PushCatLift = function() { };
$hxClasses["stx.proxy.core.PushCatLift"] = stx_proxy_core_PushCatLift;
stx_proxy_core_PushCatLift.__name__ = "stx.proxy.core.PushCatLift";
stx_proxy_core_PushCatLift.compose = function(prx0,prx1) {
	return function(b) {
		return stx_proxy_core_ProxySum.Defer(stx_proxy_core_Belay.fromThunk(stx_fn_UnaryLift.bindI(stx_fn_UnaryLift.then(prx0,function(br) {
			return stx_proxy_core_PushCatLift.next(br,prx1);
		}),b)));
	};
};
stx_proxy_core_PushCatLift.next = function(prx0,prx1) {
	switch(prx0._hx_index) {
	case 0:
		var a = prx0.a;
		var arw = prx0.arw;
		var prx11 = prx1;
		return stx_proxy_core_ProxySum.Await(a,stx_fn_UnaryLift.then(arw,function(prx0) {
			return stx_proxy_core_PushCat._.next(prx0,prx11);
		}));
	case 1:
		var y = prx0.y;
		var arw = prx0.arw;
		var prx01 = arw;
		return stx_proxy_core_ProxySum.Defer(stx_proxy_core_Belay.fromThunk(stx_fn_UnaryLift.bindI(stx_fn_UnaryLift.then(prx1,function(prx1) {
			return stx_proxy_core_PullCat._.next(prx01,prx1);
		}),y)));
	case 2:
		var ft = prx0.ft;
		var prx12 = prx1;
		return stx_proxy_core_ProxySum.Defer(stx_proxy_core_Belay.mod(ft,function(prx0) {
			return stx_proxy_core_PushCatLift.next(prx0,prx12);
		}));
	case 3:
		var res = prx0.res;
		return stx_proxy_core_ProxySum.Ended(res);
	}
};
var stx_proxy_core_PushCat = {};
stx_proxy_core_PushCat._new = function(self) {
	var this1 = self;
	return this1;
};
var stx_proxy_core_Recure = {};
stx_proxy_core_Recure._new = function(self) {
	var this1 = self;
	return this1;
};
stx_proxy_core_Recure.produce = function(this1,th) {
	var prx1 = this1;
	var a = function(prx0) {
		return stx_proxy_core_PullCat._.next(prx0,prx1);
	};
	var rec = null;
	rec = function(_) {
		return stx_proxy_core_ProxySum.Yield(th(),rec);
	};
	var b = rec;
	var c = a(b);
	return stx_proxy_core_Producer._new(c);
};
stx_proxy_core_Recure.fromTunnel = function(self) {
	var rec = null;
	rec = function(self) {
		switch(self._hx_index) {
		case 0:
			var o = self.o;
			var next = self.next;
			return stx_proxy_core_ProxySum.Yield(o,function(_) {
				return rec(next);
			});
		case 1:
			var tran = self.tran;
			return stx_proxy_core_ProxySum.Await(null,function(b) {
				return rec(tran(stx_coroutine_core_Control.push(b)));
			});
		case 2:
			var held = self.held;
			return stx_proxy_core_ProxySum.Defer(stx_proxy_core_Belay.fromFletcher(eu_ohmrun_FletcherLift.map(held,rec)));
		case 3:
			var r = self.r;
			switch(r._hx_index) {
			case 0:
				var _g = r.c;
				switch(_g._hx_index) {
				case 0:
					return stx_proxy_core_ProxySum.Ended(stx_nano_ChunkSum.Tap);
				case 1:
					var rejection = _g.err;
					return stx_proxy_core_ProxySum.Ended(stx_nano_ChunkSum.End(rejection));
				}
				break;
			case 1:
				var _g = r.v;
				return stx_proxy_core_ProxySum.Ended(stx_nano_ChunkSum.Val(null));
			}
			break;
		}
	};
	return rec(self);
};
var stx_proxy_core_RequestLift = function() { };
$hxClasses["stx.proxy.core.RequestLift"] = stx_proxy_core_RequestLift;
stx_proxy_core_RequestLift.__name__ = "stx.proxy.core.RequestLift";
stx_proxy_core_RequestLift.feed = function(prx0,prx1) {
	return stx_proxy_core_RequestCat._.next(prx1,prx0);
};
var stx_proxy_core_Request = {};
stx_proxy_core_Request._new = function(self) {
	var this1 = self;
	return this1;
};
stx_proxy_core_Request.pure = function(a) {
	return stx_proxy_core_ProxySum.Await(a,stx_fn_UnaryLift.then(stx_nano_ChunkSum.Val,stx_proxy_core_ProxySum.Ended));
};
stx_proxy_core_Request.deferred = function(a) {
	return stx_proxy_core_ProxySum.Defer(stx_proxy_core_Belay.fromFuture(function() {
		return tink_core_Future.map(a,stx_proxy_core_Request.pure);
	}));
};
var stx_proxy_core_RequestCatLift = function() { };
$hxClasses["stx.proxy.core.RequestCatLift"] = stx_proxy_core_RequestCatLift;
stx_proxy_core_RequestCatLift.__name__ = "stx.proxy.core.RequestCatLift";
stx_proxy_core_RequestCatLift.compose = function(fn0,fn1) {
	return function(m) {
		return stx_proxy_core_Belay.toProxy(stx_proxy_core_Belay.lazy(function() {
			return stx_proxy_core_RequestCatLift.next(fn0,fn1(m));
		}));
	};
};
stx_proxy_core_RequestCatLift.next = function(prx0,prx1) {
	var go = null;
	go = function(prx2) {
		switch(prx2._hx_index) {
		case 0:
			var a = prx2.a;
			var arw = prx2.arw;
			return stx_proxy_core_Proxy._.flat_map(stx_proxy_core_ProxySum.Defer(stx_proxy_core_Belay.fromThunk(stx_fn_UnaryLift.bindI(prx0,a))),stx_fn_UnaryLift.then(arw,go));
		case 1:
			var y = prx2.y;
			var arw = prx2.arw;
			return stx_proxy_core_ProxySum.Yield(y,stx_fn_UnaryLift.then(arw,go));
		case 2:
			var ft = prx2.ft;
			var prx01 = prx0;
			return stx_proxy_core_ProxySum.Defer(stx_proxy_core_Belay.mod(ft,function(prx1) {
				return stx_proxy_core_RequestCatLift.next(prx01,prx1);
			}));
		case 3:
			var res = prx2.res;
			return stx_proxy_core_ProxySum.Ended(res);
		}
	};
	return go(prx1);
};
var stx_proxy_core_RequestCat = {};
stx_proxy_core_RequestCat._new = function(self) {
	var this1 = self;
	return this1;
};
var stx_proxy_core_RespondLift = function() { };
$hxClasses["stx.proxy.core.RespondLift"] = stx_proxy_core_RespondLift;
stx_proxy_core_RespondLift.__name__ = "stx.proxy.core.RespondLift";
var stx_proxy_core_Respond = {};
stx_proxy_core_Respond._new = function(self) {
	var this1 = self;
	return this1;
};
stx_proxy_core_Respond.deferred = function(v) {
	return stx_proxy_core_ProxySum.Defer(stx_proxy_core_Belay.fromFuture(function() {
		return tink_core_Future.map(v,stx_proxy_core_Respond.pure);
	}));
};
stx_proxy_core_Respond.pure = function(v) {
	return stx_proxy_core_ProxySum.Yield(v,stx_fn_UnaryLift.then(stx_nano_ChunkSum.Val,stx_proxy_core_ProxySum.Ended));
};
var stx_proxy_core_RespondCatLift = function() { };
$hxClasses["stx.proxy.core.RespondCatLift"] = stx_proxy_core_RespondCatLift;
stx_proxy_core_RespondCatLift.__name__ = "stx.proxy.core.RespondCatLift";
stx_proxy_core_RespondCatLift.compose = function(fn,fn0) {
	return function(x) {
		return stx_proxy_core_RespondCatLift.next(stx_proxy_core_ProxySum.Defer(stx_proxy_core_Belay.fromThunk(stx_fn_UnaryLift.bindI(fn,x))),fn0);
	};
};
stx_proxy_core_RespondCatLift.next = function(prx,fn) {
	var go = null;
	go = function(p1) {
		switch(p1._hx_index) {
		case 0:
			var a = p1.a;
			var arw = p1.arw;
			return stx_proxy_core_ProxySum.Await(a,stx_fn_UnaryLift.then(arw,go));
		case 1:
			var y = p1.y;
			var arw = p1.arw;
			return stx_proxy_core_Proxy._.flat_map(stx_proxy_core_ProxySum.Defer(stx_proxy_core_Belay.lazy(stx_fn_UnaryLift.bindI(fn,y))),stx_fn_UnaryLift.then(arw,go));
		case 2:
			var ft = p1.ft;
			var fn1 = fn;
			return stx_proxy_core_ProxySum.Defer(stx_proxy_core_Belay.mod(ft,function(prx) {
				return stx_proxy_core_RespondCatLift.next(prx,fn1);
			}));
		case 3:
			var res = p1.res;
			return stx_proxy_core_ProxySum.Ended(res);
		}
	};
	return go(prx);
};
var stx_proxy_core_RespondCat = {};
stx_proxy_core_RespondCat._new = function(self) {
	var this1 = self;
	return this1;
};
var stx_proxy_core_ServerLift = function() { };
$hxClasses["stx.proxy.core.ServerLift"] = stx_proxy_core_ServerLift;
stx_proxy_core_ServerLift.__name__ = "stx.proxy.core.ServerLift";
stx_proxy_core_ServerLift.provide = function(self,x) {
	var rec = null;
	rec = function(self,x) {
		switch(self._hx_index) {
		case 0:
			var a = self.a;
			var fn = self.arw;
			var x1 = x;
			return stx_proxy_core_ProxySum.Await(a,stx_fn_UnaryLift.then(fn,function(self) {
				return rec(self,x1);
			}));
		case 1:
			var y = self.y;
			var fn = self.arw;
			return stx_proxy_core_ProxySum.Yield(y,function(xI) {
				var res = fn(x);
				return stx_proxy_core_Proxy._new(rec(res,xI));
			});
		case 2:
			var pr = self.ft;
			var x2 = x;
			return stx_proxy_core_ProxySum.Defer(stx_proxy_core_Belay.fromFletcher(eu_ohmrun_FletcherLift.map(pr,function(self) {
				return rec(self,x2);
			})));
		case 3:
			var chk = self.res;
			return stx_proxy_core_ProxySum.Ended(chk);
		}
	};
	return stx_proxy_core_Server.lift(rec(self,x));
};
stx_proxy_core_ServerLift.next = function(self,fn) {
	return stx_proxy_core_Server.lift(stx_proxy_core_PushCat._.next(self,fn));
};
stx_proxy_core_ServerLift.connect = function(self,fn) {
	return stx_proxy_core_Outlet.lift(stx_proxy_core_ServerLift.next(self,fn));
};
var stx_proxy_core_Server = {};
stx_proxy_core_Server._new = function(v) {
	var this1 = v;
	return this1;
};
stx_proxy_core_Server.lift = function(self) {
	return stx_proxy_core_Server._new(self);
};
stx_proxy_core_Server.prj = function(this1) {
	return this1;
};
stx_proxy_core_Server.reflect = function(this1) {
	return stx_proxy_core_Client.lift(stx_proxy_core_Proxy._.reflect(this1));
};
var stx_proxy_lift_LiftEndedFromHalt = function() { };
$hxClasses["stx.proxy.lift.LiftEndedFromHalt"] = stx_proxy_lift_LiftEndedFromHalt;
stx_proxy_lift_LiftEndedFromHalt.__name__ = "stx.proxy.lift.LiftEndedFromHalt";
var stx_show_ShowableApi = function() { };
$hxClasses["stx.show.ShowableApi"] = stx_show_ShowableApi;
stx_show_ShowableApi.__name__ = "stx.show.ShowableApi";
stx_show_ShowableApi.__isInterface__ = true;
stx_show_ShowableApi.prototype = {
	show: null
	,toShowable: null
	,__class__: stx_show_ShowableApi
};
var stx_show_ShowableCls = function() {
};
$hxClasses["stx.show.ShowableCls"] = stx_show_ShowableCls;
stx_show_ShowableCls.__name__ = "stx.show.ShowableCls";
stx_show_ShowableCls.__interfaces__ = [stx_show_ShowableApi];
stx_show_ShowableCls.prototype = {
	show: null
	,toShowable: function() {
		return this;
	}
	,__class__: stx_show_ShowableCls
};
var stx_show_Showable = {};
stx_show_Showable._new = function(self) {
	var this1 = self;
	return this1;
};
stx_show_Showable.lift = function(self) {
	return stx_show_Showable._new(self);
};
stx_show_Showable.prj = function(this1) {
	return this1;
};
stx_show_Showable.get_self = function(this1) {
	return stx_show_Showable.lift(this1);
};
var stx_show_core_Axis = $hxEnums["stx.show.core.Axis"] = { __ename__:"stx.show.core.Axis",__constructs__:null
	,H: {_hx_name:"H",_hx_index:0,__enum__:"stx.show.core.Axis",toString:$estr}
	,V: {_hx_name:"V",_hx_index:1,__enum__:"stx.show.core.Axis",toString:$estr}
};
stx_show_core_Axis.__constructs__ = [stx_show_core_Axis.H,stx_show_core_Axis.V];
var stx_show_core_LayoutNodeSum = $hxEnums["stx.show.core.LayoutNodeSum"] = { __ename__:"stx.show.core.LayoutNodeSum",__constructs__:null
	,LEscape: ($_=function(node) { return {_hx_index:0,node:node,__enum__:"stx.show.core.LayoutNodeSum",toString:$estr}; },$_._hx_name="LEscape",$_.__params__ = ["node"],$_)
	,LTree: {_hx_name:"LTree",_hx_index:1,__enum__:"stx.show.core.LayoutNodeSum",toString:$estr}
	,LArray: ($_=function(axis) { return {_hx_index:2,axis:axis,__enum__:"stx.show.core.LayoutNodeSum",toString:$estr}; },$_._hx_name="LArray",$_.__params__ = ["axis"],$_)
	,LBlock: {_hx_name:"LBlock",_hx_index:3,__enum__:"stx.show.core.LayoutNodeSum",toString:$estr}
};
stx_show_core_LayoutNodeSum.__constructs__ = [stx_show_core_LayoutNodeSum.LEscape,stx_show_core_LayoutNodeSum.LTree,stx_show_core_LayoutNodeSum.LArray,stx_show_core_LayoutNodeSum.LBlock];
var stx_show_core_LayoutNodeLift = function() { };
$hxClasses["stx.show.core.LayoutNodeLift"] = stx_show_core_LayoutNodeLift;
stx_show_core_LayoutNodeLift.__name__ = "stx.show.core.LayoutNodeLift";
stx_show_core_LayoutNodeLift.lift = function(self) {
	var this1 = self;
	return this1;
};
var stx_show_core_LayoutNode = {};
stx_show_core_LayoutNode._new = function(self) {
	var this1 = self;
	return this1;
};
stx_show_core_LayoutNode.lift = function(self) {
	var this1 = self;
	return this1;
};
stx_show_core_LayoutNode.prj = function(this1) {
	return this1;
};
stx_show_core_LayoutNode.get_self = function(this1) {
	var this2 = this1;
	return this2;
};
var stx_show_core_Options = function(width) {
	this.width = width;
};
$hxClasses["stx.show.core.Options"] = stx_show_core_Options;
stx_show_core_Options.__name__ = "stx.show.core.Options";
stx_show_core_Options.make = function(width) {
	return new stx_show_core_Options(width);
};
stx_show_core_Options.make0 = function(width) {
	var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,width);
	var tmp;
	if(self._hx_index == 0) {
		var v = self.v;
		tmp = v;
	} else {
		tmp = 100;
	}
	return stx_show_core_Options.make(tmp);
};
stx_show_core_Options.unit = function() {
	return stx_show_core_Options.make0();
};
stx_show_core_Options.prototype = {
	width: null
	,__class__: stx_show_core_Options
};
var stx_show_core_Request = function(xindex,yindex,node) {
	this.xindex = xindex;
	this.yindex = yindex;
	this.node = node;
};
$hxClasses["stx.show.core.Request"] = stx_show_core_Request;
stx_show_core_Request.__name__ = "stx.show.core.Request";
stx_show_core_Request.make = function(xindex,yindex,node) {
	return new stx_show_core_Request(xindex,yindex,node);
};
stx_show_core_Request.unit = function() {
	return new stx_show_core_Request(0,0,haxe_ds_Option.None);
};
stx_show_core_Request.prototype = {
	xindex: null
	,yindex: null
	,node: null
	,with_node: function(fn) {
		return new stx_show_core_Request(this.xindex,this.yindex,fn(this.node));
	}
	,with_xindex: function(i) {
		return stx_show_core_Request.make(i,this.yindex,this.node);
	}
	,__class__: stx_show_core_Request
};
var stx_show_core_Response = function(state,width,height,prefix,postfix,children,node) {
	this.state = state;
	this.width = width;
	this.height = height;
	this.prefix = prefix;
	this.postfix = postfix;
	this.children = children;
	this.node = node;
};
$hxClasses["stx.show.core.Response"] = stx_show_core_Response;
stx_show_core_Response.__name__ = "stx.show.core.Response";
stx_show_core_Response.make = function(state,width,height,prefix,postfix,children,node) {
	return new stx_show_core_Response(state,width,height,prefix,postfix,children,node);
};
stx_show_core_Response.make0 = function(state,width,height,prefix,postfix,children,node) {
	var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,prefix);
	var tmp;
	if(self._hx_index == 0) {
		var v = self.v;
		tmp = v;
	} else {
		tmp = haxe_ds_Option.None;
	}
	var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,postfix);
	var tmp1;
	if(self._hx_index == 0) {
		var v = self.v;
		tmp1 = v;
	} else {
		tmp1 = haxe_ds_Option.None;
	}
	var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,children);
	var v = stx_nano_Cluster.lift([]);
	var tmp2;
	if(self._hx_index == 0) {
		var v1 = self.v;
		tmp2 = v1;
	} else {
		tmp2 = v;
	}
	var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,node);
	var tmp3;
	if(self._hx_index == 0) {
		var v = self.v;
		tmp3 = v;
	} else {
		tmp3 = stx_show_core_LayoutNodeSum.LTree;
	}
	return stx_show_core_Response.make(state,width,height,tmp,tmp1,tmp2,tmp3);
};
stx_show_core_Response.prototype = {
	state: null
	,width: null
	,height: null
	,prefix: null
	,postfix: null
	,children: null
	,node: null
	,yextent: null
	,get_yextent: function() {
		var extent = this.state.request.yindex + this.height;
		var _g_current = 0;
		var _g_array = this.children;
		while(_g_current < _g_array.length) {
			var response = _g_array[_g_current++];
			if(response.get_yextent() > extent) {
				extent = response.get_yextent();
			}
		}
		return extent;
	}
	,xextent: null
	,get_xextent: function() {
		var extent = this.state.request.xindex + this.width;
		var _g_current = 0;
		var _g_array = this.children;
		while(_g_current < _g_array.length) {
			var response = _g_array[_g_current++];
			if(response.get_xextent() > extent) {
				extent = response.get_xextent();
			}
		}
		return extent;
	}
	,__class__: stx_show_core_Response
};
var stx_show_core_State = function(options,request,cache) {
	this.options = options;
	this.request = request;
	this.cache = cache;
};
$hxClasses["stx.show.core.State"] = stx_show_core_State;
stx_show_core_State.__name__ = "stx.show.core.State";
stx_show_core_State.make = function(options,request,cache) {
	return new stx_show_core_State(options,request,cache);
};
stx_show_core_State.make0 = function(options,request,cache) {
	var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,options);
	var v = stx_show_core_Options.unit();
	var tmp;
	if(self._hx_index == 0) {
		var v1 = self.v;
		tmp = v1;
	} else {
		tmp = v;
	}
	var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,request);
	var v = stx_show_core_Request.unit();
	var tmp1;
	if(self._hx_index == 0) {
		var v1 = self.v;
		tmp1 = v1;
	} else {
		tmp1 = v;
	}
	var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,cache);
	var v = stx_nano_Cluster.lift([]);
	var tmp2;
	if(self._hx_index == 0) {
		var v1 = self.v;
		tmp2 = v1;
	} else {
		tmp2 = v;
	}
	return new stx_show_core_State(tmp,tmp1,tmp2);
};
stx_show_core_State.prototype = {
	options: null
	,request: null
	,cache: null
	,copy: function(Int1,options,xindex,request,cache) {
		var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,options);
		var tmp;
		if(self._hx_index == 0) {
			var v = self.v;
			tmp = v;
		} else {
			tmp = this.options;
		}
		var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,request);
		var tmp1;
		if(self._hx_index == 0) {
			var v = self.v;
			tmp1 = v;
		} else {
			tmp1 = this.request;
		}
		var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,cache);
		var tmp2;
		if(self._hx_index == 0) {
			var v = self.v;
			tmp2 = v;
		} else {
			tmp2 = this.cache;
		}
		return stx_show_core_State.make(tmp,tmp1,tmp2);
	}
	,width: null
	,get_width: function() {
		return this.options.width;
	}
	,width_remaining: null
	,get_width_remaining: function() {
		return this.get_width() - this.request.xindex;
	}
	,lookup: function(block) {
		return new stx_show_showable_term_Mono().toShowable();
	}
	,with_request: function(fn) {
		return stx_show_core_State.make(this.options,fn(this.request),this.cache);
	}
	,respond: function(width,height,prefix,postfix,children,node) {
		var r = this.request;
		return stx_show_core_Response.make(this,width,height,prefix,postfix,children,node);
	}
	,__class__: stx_show_core_State
};
var stx_show_showable_term_Bool = function() {
	stx_show_ShowableCls.call(this);
};
$hxClasses["stx.show.showable.term.Bool"] = stx_show_showable_term_Bool;
stx_show_showable_term_Bool.__name__ = "stx.show.showable.term.Bool";
stx_show_showable_term_Bool.__super__ = stx_show_ShowableCls;
stx_show_showable_term_Bool.prototype = $extend(stx_show_ShowableCls.prototype,{
	show: function(self,state) {
		return new stx_show_showable_term_String().show("" + (self == null ? "null" : "" + self),state);
	}
	,__class__: stx_show_showable_term_Bool
});
var stx_show_showable_term_Class = function(type) {
	stx_show_ShowableCls.call(this);
	this.type = type;
};
$hxClasses["stx.show.showable.term.Class"] = stx_show_showable_term_Class;
stx_show_showable_term_Class.__name__ = "stx.show.showable.term.Class";
stx_show_showable_term_Class.__super__ = stx_show_ShowableCls;
stx_show_showable_term_Class.prototype = $extend(stx_show_ShowableCls.prototype,{
	type: null
	,show: function(self,state) {
		throw haxe_Exception.thrown("UNIMPLEMENTED");
	}
	,__class__: stx_show_showable_term_Class
});
var stx_show_showable_term_Dynamic = function() {
	stx_show_ShowableCls.call(this);
};
$hxClasses["stx.show.showable.term.Dynamic"] = stx_show_showable_term_Dynamic;
stx_show_showable_term_Dynamic.__name__ = "stx.show.showable.term.Dynamic";
stx_show_showable_term_Dynamic.__super__ = stx_show_ShowableCls;
stx_show_showable_term_Dynamic.prototype = $extend(stx_show_ShowableCls.prototype,{
	show: function(self,state) {
		var _g = Type.typeof(self);
		switch(_g._hx_index) {
		case 0:
			return new stx_show_showable_term_String().show("null",state);
		case 1:
			return new stx_show_showable_term_Int().show(self,state);
		case 2:
			return new stx_show_showable_term_Float().show(self,state);
		case 3:
			return new stx_show_showable_term_Bool().show(self,state);
		case 4:
			return new stx_show_showable_term_Object().show(self,state);
		case 5:
			return new stx_show_showable_term_String().show("<function>",state);
		case 6:
			var c = _g.c;
			return new stx_show_showable_term_Class(c).show(self,state);
		case 7:
			var e = _g.e;
			return new stx_show_showable_term_Enum(e).show(self,state);
		case 8:
			return new stx_show_showable_term_String().show("<unknown>",state);
		}
	}
	,__class__: stx_show_showable_term_Dynamic
});
var stx_show_showable_term_Enum = function(type) {
	stx_show_ShowableCls.call(this);
	this.type = type;
};
$hxClasses["stx.show.showable.term.Enum"] = stx_show_showable_term_Enum;
stx_show_showable_term_Enum.__name__ = "stx.show.showable.term.Enum";
stx_show_showable_term_Enum.__super__ = stx_show_ShowableCls;
stx_show_showable_term_Enum.prototype = $extend(stx_show_ShowableCls.prototype,{
	type: null
	,show: function(self,state) {
		throw haxe_Exception.thrown("UNIMPLEMENTED");
	}
	,__class__: stx_show_showable_term_Enum
});
var stx_show_showable_term_Float = function() {
	stx_show_ShowableCls.call(this);
};
$hxClasses["stx.show.showable.term.Float"] = stx_show_showable_term_Float;
stx_show_showable_term_Float.__name__ = "stx.show.showable.term.Float";
stx_show_showable_term_Float.__super__ = stx_show_ShowableCls;
stx_show_showable_term_Float.prototype = $extend(stx_show_ShowableCls.prototype,{
	show: function(self,state) {
		return new stx_show_showable_term_String().show("" + self,state);
	}
	,__class__: stx_show_showable_term_Float
});
var stx_show_showable_term_Int = function() {
	stx_show_ShowableCls.call(this);
};
$hxClasses["stx.show.showable.term.Int"] = stx_show_showable_term_Int;
stx_show_showable_term_Int.__name__ = "stx.show.showable.term.Int";
stx_show_showable_term_Int.__super__ = stx_show_ShowableCls;
stx_show_showable_term_Int.prototype = $extend(stx_show_ShowableCls.prototype,{
	show: function(self,state) {
		return new stx_show_showable_term_String().show("" + self,state);
	}
	,__class__: stx_show_showable_term_Int
});
var stx_show_showable_term_Mono = function() {
	stx_show_ShowableCls.call(this);
};
$hxClasses["stx.show.showable.term.Mono"] = stx_show_showable_term_Mono;
stx_show_showable_term_Mono.__name__ = "stx.show.showable.term.Mono";
stx_show_showable_term_Mono.__super__ = stx_show_ShowableCls;
stx_show_showable_term_Mono.prototype = $extend(stx_show_ShowableCls.prototype,{
	show: function(self,state) {
		var thiz = self;
		return new stx_show_showable_term_Dynamic().show(thiz,state);
	}
	,__class__: stx_show_showable_term_Mono
});
var stx_show_showable_term_Object = function() {
	stx_show_ShowableCls.call(this);
};
$hxClasses["stx.show.showable.term.Object"] = stx_show_showable_term_Object;
stx_show_showable_term_Object.__name__ = "stx.show.showable.term.Object";
stx_show_showable_term_Object.__super__ = stx_show_ShowableCls;
stx_show_showable_term_Object.prototype = $extend(stx_show_ShowableCls.prototype,{
	show: function(self,state) {
		var _this = Reflect.fields(self);
		var result = new Array(_this.length);
		var _g = 0;
		var _g1 = _this.length;
		while(_g < _g1) {
			var i = _g++;
			var field_name = _this[i];
			result[i] = stx_nano_KV.make(field_name,Reflect.field(self,field_name));
		}
		var fields = result;
		throw haxe_Exception.thrown("UNIMPLEMENTED");
	}
	,try_layout_horizontally: function(fields,state) {
		var state1 = state.with_request(function(request) {
			return request.with_node(function(_) {
				return stx_pico_Option.fromNullT(stx_show_core_LayoutNodeSum.LArray(stx_show_core_Axis.H));
			});
		});
		var responses = stx_nano_Res.bind_fold(stx_nano_Cluster.toIter(fields),function(next,memo) {
			var key_display = "" + next.key + ": ";
			var next_state = state1.with_request(function(req) {
				return req.with_xindex(req.xindex + key_display.length);
			});
			var self = state1.lookup(function() {
			}).show(next.val,stx_nano_CoupleLift.snd(memo));
			var self1;
			switch(self._hx_index) {
			case 0:
				var t = self.t;
				var res = t;
				var _g = res.node;
				if(_g._hx_index == 0) {
					var _g1 = _g.node;
					var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/show/showable/term/Object.hx", lineNumber : 25, className : "stx.show.showable.term.Object", methodName : "try_layout_horizontally"});
					self1 = stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_ShowFailureSum.E_Show_Escaped)),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1))),{ fileName : "stx/show/showable/term/Object.hx", lineNumber : 25, className : "stx.show.showable.term.Object", methodName : "try_layout_horizontally"});
				} else {
					var next_state = state1.with_request(function(_) {
						return stx_show_core_Request.make(res.state.request.xindex + res.width,res.state.request.yindex,res.state.request.node);
					});
					self1 = stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,stx_nano_ClusterLift.snoc(stx_nano_CoupleLift.fst(memo),res),next_state));
				}
				break;
			case 1:
				var e = self.e;
				self1 = stx_nano_ResSum.Reject(e);
				break;
			}
			var this1 = self1;
			return this1;
		},stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,[],state1));
	}
	,__class__: stx_show_showable_term_Object
});
var stx_show_showable_term_String = function() {
	stx_show_ShowableCls.call(this);
};
$hxClasses["stx.show.showable.term.String"] = stx_show_showable_term_String;
stx_show_showable_term_String.__name__ = "stx.show.showable.term.String";
stx_show_showable_term_String.__super__ = stx_show_ShowableCls;
stx_show_showable_term_String.prototype = $extend(stx_show_ShowableCls.prototype,{
	show: function(self,state) {
		throw haxe_Exception.thrown("UNIMPLEMENTED");
	}
	,__class__: stx_show_showable_term_String
});
var stx_stream_CYCLED = $hxEnums["stx.stream.CYCLED"] = { __ename__:"stx.stream.CYCLED",__constructs__:null
	,CYCLED: {_hx_name:"CYCLED",_hx_index:0,__enum__:"stx.stream.CYCLED",toString:$estr}
};
stx_stream_CYCLED.__constructs__ = [stx_stream_CYCLED.CYCLED];
var stx_stream_CyclerApi = function() { };
$hxClasses["stx.stream.CyclerApi"] = stx_stream_CyclerApi;
stx_stream_CyclerApi.__name__ = "stx.stream.CyclerApi";
stx_stream_CyclerApi.__isInterface__ = true;
stx_stream_CyclerApi.prototype = {
	state: null
	,get_state: null
	,value: null
	,get_value: null
	,toString: null
	,toCyclerApi: null
	,__class__: stx_stream_CyclerApi
};
var stx_stream_CyclerCls = function() { };
$hxClasses["stx.stream.CyclerCls"] = stx_stream_CyclerCls;
stx_stream_CyclerCls.__name__ = "stx.stream.CyclerCls";
stx_stream_CyclerCls.__interfaces__ = [stx_stream_CyclerApi];
stx_stream_CyclerCls.prototype = {
	state: null
	,get_state: null
	,value: null
	,get_value: null
	,toString: function() {
		return "Cycler(" + this.get_state() + ":" + Std.string(this.get_value()) + ")";
	}
	,toCyclerApi: function() {
		return this;
	}
	,__class__: stx_stream_CyclerCls
};
var stx_stream_AnonCyclerCls = function(method) {
	this.method = method.cache();
};
$hxClasses["stx.stream.AnonCyclerCls"] = stx_stream_AnonCyclerCls;
stx_stream_AnonCyclerCls.__name__ = "stx.stream.AnonCyclerCls";
stx_stream_AnonCyclerCls.__super__ = stx_stream_CyclerCls;
stx_stream_AnonCyclerCls.prototype = $extend(stx_stream_CyclerCls.prototype,{
	method: null
	,get_value: function() {
		return this.method();
	}
	,get_state: function() {
		if(this.get_value() == null) {
			return 0;
		} else {
			return 1;
		}
	}
	,__class__: stx_stream_AnonCyclerCls
});
var stx_stream_UnitCyclerCls = function() {
};
$hxClasses["stx.stream.UnitCyclerCls"] = stx_stream_UnitCyclerCls;
stx_stream_UnitCyclerCls.__name__ = "stx.stream.UnitCyclerCls";
stx_stream_UnitCyclerCls.__super__ = stx_stream_CyclerCls;
stx_stream_UnitCyclerCls.prototype = $extend(stx_stream_CyclerCls.prototype,{
	get_value: function() {
		return null;
	}
	,get_state: function() {
		return 0;
	}
	,__class__: stx_stream_UnitCyclerCls
});
var stx_stream_PureCyclerCls = function(value) {
	this.value = value;
};
$hxClasses["stx.stream.PureCyclerCls"] = stx_stream_PureCyclerCls;
stx_stream_PureCyclerCls.__name__ = "stx.stream.PureCyclerCls";
stx_stream_PureCyclerCls.__super__ = stx_stream_CyclerCls;
stx_stream_PureCyclerCls.prototype = $extend(stx_stream_CyclerCls.prototype,{
	get_value: function() {
		return this.value;
	}
	,get_state: function() {
		return 1;
	}
	,__class__: stx_stream_PureCyclerCls
});
var stx_stream_Cycler = {};
stx_stream_Cycler._new = function(self) {
	var this1 = self;
	return this1;
};
stx_stream_Cycler.lift = function(self) {
	return stx_stream_Cycler._new(self);
};
stx_stream_Cycler.prj = function(this1) {
	return this1;
};
stx_stream_Cycler.get_self = function(this1) {
	return stx_stream_Cycler._new(this1);
};
stx_stream_Cycler.unit = function() {
	return stx_stream_Cycler._new(new stx_stream_UnitCyclerCls());
};
stx_stream_Cycler.fromFuture = function(f) {
	return stx_stream_Cycler._new(new stx_stream_PureCyclerCls(f));
};
stx_stream_Cycler.pure = function(f) {
	return stx_stream_Cycler._new(new stx_stream_PureCyclerCls(f));
};
stx_stream_Cycler.toCycle = function(this1) {
	return stx_stream_Cycle._new(this1);
};
var stx_stream_Cycle = {};
stx_stream_Cycle._new = function(self) {
	var this1 = self;
	return this1;
};
stx_stream_Cycle.lift = function(self) {
	return stx_stream_Cycle._new(self);
};
stx_stream_Cycle.ZERO = null;
stx_stream_Cycle.get_ZERO = function() {
	if(stx_stream_Cycle.ZERO == null) {
		return stx_stream_Cycle.ZERO = stx_stream_Cycle._new(stx_stream_Cycler._new(new stx_stream_UnitCyclerCls()));
	} else {
		return stx_stream_Cycle.ZERO;
	}
};
stx_stream_Cycle.unit = function() {
	return stx_stream_Cycle._new(stx_stream_Cycler._new(new stx_stream_UnitCyclerCls()));
};
stx_stream_Cycle.fromFutureCycle = function(self) {
	return stx_stream_Cycle._new(stx_stream_Cycler._new(new stx_stream_PureCyclerCls(self)));
};
stx_stream_Cycle.fromWork = function(self) {
	if(stx_stream_Work.is_defined(self)) {
		return stx_stream_Cycle._new(self.toCyclerApi());
	} else if(stx_stream_Cycle.ZERO == null) {
		return stx_stream_Cycle.ZERO = stx_stream_Cycle._new(stx_stream_Cycler._new(new stx_stream_UnitCyclerCls()));
	} else {
		return stx_stream_Cycle.ZERO;
	}
};
stx_stream_Cycle.step = function(this1) {
	if(this1 == null) {
		return stx_stream_Cycler._new(new stx_stream_UnitCyclerCls());
	} else {
		return this1;
	}
};
stx_stream_Cycle.is_defined = function(this1) {
	return this1 != null;
};
stx_stream_Cycle.toString = function(this1) {
	return "Cycle(" + Std.string(this1 != null) + ")";
};
var stx_stream_CycleLift = function() { };
$hxClasses["stx.stream.CycleLift"] = stx_stream_CycleLift;
stx_stream_CycleLift.__name__ = "stx.stream.CycleLift";
stx_stream_CycleLift.lift = function(self) {
	return stx_stream_Cycle._new(self);
};
stx_stream_CycleLift.seq = function(self,that) {
	var _g = that != null;
	if(self != null) {
		if(_g) {
			var next = self == null ? stx_stream_Cycler._new(new stx_stream_UnitCyclerCls()) : self;
			switch(next.get_state()) {
			case 0:
				return that;
			case 1:
				var that1 = that;
				var f = function(self) {
					return stx_stream_CycleLift.seq(self,that1);
				};
				return stx_stream_Cycle._new(stx_stream_Cycler._new(new stx_stream_PureCyclerCls(tink_core_Future.map(next.get_value(),f))));
			}
		} else {
			return self;
		}
	} else if(_g) {
		return that;
	} else {
		return stx_stream_Cycle._new(stx_stream_Cycler._new(new stx_stream_UnitCyclerCls()));
	}
};
stx_stream_CycleLift.par = function(self,that) {
	var self1 = stx_LiftAssert.assert(stx_nano_Wildcard.__,{ fileName : "stx/stream/Cycle.hx", lineNumber : 144, className : "stx.stream.CycleLift", methodName : "par"}).module.exists().apply(self);
	if(self1 != null) {
		switch(self1._hx_index) {
		case 0:
			var v = self1.v;
			throw haxe_Exception.thrown(v);
		case 1:
			break;
		}
	}
	var self1 = stx_LiftAssert.assert(stx_nano_Wildcard.__,{ fileName : "stx/stream/Cycle.hx", lineNumber : 145, className : "stx.stream.CycleLift", methodName : "par"}).module.exists().apply(that);
	if(self1 != null) {
		switch(self1._hx_index) {
		case 0:
			var v = self1.v;
			throw haxe_Exception.thrown(v);
		case 1:
			break;
		}
	}
	var l = self == null ? stx_stream_Cycler._new(new stx_stream_UnitCyclerCls()) : self;
	var r = that == null ? stx_stream_Cycler._new(new stx_stream_UnitCyclerCls()) : that;
	var _g = l.get_state();
	var _g1 = r.get_state();
	switch(_g) {
	case 0:
		switch(_g1) {
		case 0:
			return stx_stream_Cycler.toCycle(stx_stream_Cycler._new(new stx_stream_UnitCyclerCls()));
		case 1:
			return stx_stream_Cycler.toCycle(stx_stream_Cycler._new(new stx_stream_PureCyclerCls(r.get_value())));
		}
		break;
	case 1:
		switch(_g1) {
		case 0:
			return stx_stream_Cycler.toCycle(stx_stream_Cycler._new(new stx_stream_PureCyclerCls(l.get_value())));
		case 1:
			return stx_stream_Cycler.toCycle(stx_stream_Cycler._new(new stx_stream_PureCyclerCls(tink_core_Future.merge(l.get_value(),r.get_value(),stx_stream_CycleLift.par))));
		}
		break;
	}
};
stx_stream_CycleLift.submit = function(self,pos) {
	var this1 = stx_stream_Logging.log(stx_nano_Wildcard.__);
	var fn = function(pos) {
		return pos.with_stamp(function(stamp) {
			return stamp.relevel(3);
		});
	};
	(function(value,pos) {
		this1(value,fn(pos));
	})(stx_log_Stringify.fromString("cycle/submit: " + (self == null ? "null" : stx_stream_Cycle.toString(self)) + " " + Std.string(pos))(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/stream/Cycle.hx", lineNumber : 159, className : "stx.stream.CycleLift", methodName : "submit"}));
	var event = null;
	event = haxe_MainLoop.add(function() {
		var this1 = stx_stream_Logging.log(stx_nano_Wildcard.__);
		var fn = function(pos) {
			return pos.with_stamp(function(stamp) {
				return stamp.relevel(1);
			});
		};
		(function(value,pos) {
			this1(value,fn(pos));
		})(stx_log_Stringify.fromString("tick: " + (self == null ? "null" : stx_stream_Cycle.toString(self)))(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/stream/Cycle.hx", lineNumber : 163, className : "stx.stream.CycleLift", methodName : "submit"}));
		if(self != null) {
			try {
				var thiz = self;
				var this2 = stx_stream_Logging.log(stx_nano_Wildcard.__);
				var fn1 = function(pos) {
					return pos.with_stamp(function(stamp) {
						return stamp.relevel(1);
					});
				};
				(function(value,pos) {
					this2(value,fn1(pos));
				})(stx_log_Stringify.fromString(stx_stream_Cycle.toString(thiz))(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/stream/Cycle.hx", lineNumber : 167, className : "stx.stream.CycleLift", methodName : "submit"}));
				self = null;
				var step = thiz == null ? stx_stream_Cycler._new(new stx_stream_UnitCyclerCls()) : thiz;
				var this3 = stx_stream_Logging.log(stx_nano_Wildcard.__);
				var fn2 = function(pos) {
					return pos.with_stamp(function(stamp) {
						return stamp.relevel(1);
					});
				};
				(function(value,pos) {
					this3(value,fn2(pos));
				})(new stx_log_EntryCtr().thunk(function() {
					return step.get_state();
				}),stx_log_LogPosition.fromPos({ fileName : "stx/stream/Cycle.hx", lineNumber : 170, className : "stx.stream.CycleLift", methodName : "submit"}));
				switch(step.get_state()) {
				case 0:
					event.stop();
					break;
				case 1:
					step.get_value().handle(function(x) {
						var this1 = stx_stream_Logging.log(stx_nano_Wildcard.__);
						var fn = function(pos) {
							return pos.with_stamp(function(stamp) {
								return stamp.relevel(1);
							});
						};
						(function(value,pos) {
							this1(value,fn(pos));
						})(stx_log_Stringify.fromString("set step")(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/stream/Cycle.hx", lineNumber : 178, className : "stx.stream.CycleLift", methodName : "submit"}));
						self = x;
					});
					break;
				}
			} catch( _g ) {
				var e = haxe_Exception.caught(_g).unwrap();
				event.stop();
				haxe_MainLoop.runInMainThread(function() {
					throw haxe_Exception.thrown(e);
				});
			}
		}
	});
};
stx_stream_CycleLift.crunch = function(self) {
	var this1 = stx_stream_Logging.log(stx_nano_Wildcard.__);
	var fn = function(pos) {
		return pos.with_stamp(function(stamp) {
			return stamp.relevel(3);
		});
	};
	(function(value,pos) {
		this1(value,fn(pos));
	})(stx_log_Stringify.fromString("cycle/crunch")(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/stream/Cycle.hx", lineNumber : 197, className : "stx.stream.CycleLift", methodName : "crunch"}));
	var inner = function(self) {
		var cont = true;
		while(cont) {
			var this1 = stx_stream_Logging.log(stx_nano_Wildcard.__);
			var v = self == null ? "null" : stx_stream_Cycle.toString(self);
			var v1 = stx_log_Stringify.fromString("" + (cont == null ? "null" : "" + cont) + " " + v);
			(function(fn,this1) {
				return function(value,pos) {
					this1[0](value,fn[0](pos));
				};
			})([(function() {
				return function(pos) {
					return pos.with_stamp((function() {
						return function(stamp) {
							return stamp.relevel(0);
						};
					})());
				};
			})()],[this1])(v1(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/stream/Cycle.hx", lineNumber : 202, className : "stx.stream.CycleLift", methodName : "crunch"}));
			if(self != null) {
				var this2 = stx_stream_Logging.log(stx_nano_Wildcard.__);
				var v2 = stx_log_Stringify.fromString("crunching:call");
				(function(fn,this1) {
					return function(value,pos) {
						this1[0](value,fn[0](pos));
					};
				})([(function() {
					return function(pos) {
						return pos.with_stamp((function() {
							return function(stamp) {
								return stamp.relevel(0);
							};
						})());
					};
				})()],[this2])(v2(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/stream/Cycle.hx", lineNumber : 204, className : "stx.stream.CycleLift", methodName : "crunch"}));
				var call = self;
				self = null;
				var result = call == null ? stx_stream_Cycler._new(new stx_stream_UnitCyclerCls()) : call;
				var this3 = stx_stream_Logging.log(stx_nano_Wildcard.__);
				var v3 = stx_log_Stringify.fromString("step " + Std.string(result));
				(function(fn,this1) {
					return function(value,pos) {
						this1[0](value,fn[0](pos));
					};
				})([(function() {
					return function(pos) {
						return pos.with_stamp((function() {
							return function(stamp) {
								return stamp.relevel(0);
							};
						})());
					};
				})()],[this3])(v3(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/stream/Cycle.hx", lineNumber : 209, className : "stx.stream.CycleLift", methodName : "crunch"}));
				switch(result.get_state()) {
				case 0:
					cont = false;
					break;
				case 1:
					result.get_value().handle((function() {
						return function(x) {
							self = x;
						};
					})());
					break;
				}
			}
		}
	};
	inner(self);
};
var stx_stream_Logging = function() { };
$hxClasses["stx.stream.Logging"] = stx_stream_Logging;
stx_stream_Logging.__name__ = "stx.stream.Logging";
stx_stream_Logging.log = function(wildcard) {
	return stx_Log.void();
};
var stx_stream_Timeout = {};
stx_stream_Timeout._new = function(ms) {
	var id = stx_nano_lift_LiftNano.uuid(stx_nano_Wildcard.__,"xxxx");
	var this1 = stx_stream_Logging.log(stx_nano_Wildcard.__);
	var fn = function(pos) {
		return pos.with_stamp(function(stamp) {
			return stamp.relevel(1);
		});
	};
	(function(value,pos) {
		this1(value,fn(pos));
	})(stx_log_Stringify.fromString("timeout#" + id + ": " + ms)(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/stream/Timeout.hx", lineNumber : 6, className : "stx.stream._Timeout.Timeout_Impl_", methodName : "_new"}));
	var multiplier = 1.01;
	var step = function(time) {
		return Math.round(time * multiplier);
	};
	var this2 = new tink_core__$Future_SuspendableFuture(function(cb) {
		var start = HxOverrides.now() / 1000;
		var exit_time = function() {
			return start + ms / 1000;
		};
		var is_finished = function() {
			return HxOverrides.now() / 1000 >= exit_time();
		};
		var since = function() {
			return HxOverrides.now() / 1000 - start;
		};
		var cancelled = false;
		var next = 200 > ms ? ms : 200;
		var event = null;
		event = haxe_MainLoop.add(function() {
			var this1 = stx_stream_Logging.log(stx_nano_Wildcard.__);
			var fn = function(pos) {
				return pos.with_stamp(function(stamp) {
					return stamp.relevel(1);
				});
			};
			(function(value,pos) {
				this1(value,fn(pos));
			})(stx_log_Stringify.fromString("timeout#" + id + " tick. cancelled: " + (cancelled == null ? "null" : "" + cancelled) + " time " + since())(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/stream/Timeout.hx", lineNumber : 28, className : "stx.stream._Timeout.Timeout_Impl_", methodName : "_new"}));
			if(cancelled) {
				event.stop();
			} else {
				var this2 = stx_stream_Logging.log(stx_nano_Wildcard.__);
				var fn1 = function(pos) {
					return pos.with_stamp(function(stamp) {
						return stamp.relevel(1);
					});
				};
				(function(value,pos) {
					this2(value,fn1(pos));
				})(stx_log_Stringify.fromString("" + id + " finished?" + Std.string(is_finished()))(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/stream/Timeout.hx", lineNumber : 32, className : "stx.stream._Timeout.Timeout_Impl_", methodName : "_new"}));
				if(is_finished()) {
					var this3 = stx_stream_Logging.log(stx_nano_Wildcard.__);
					var fn2 = function(pos) {
						return pos.with_stamp(function(stamp) {
							return stamp.relevel(1);
						});
					};
					(function(value,pos) {
						this3(value,fn2(pos));
					})(stx_log_Stringify.fromString("" + id + " COMPLETE")(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/stream/Timeout.hx", lineNumber : 34, className : "stx.stream._Timeout.Timeout_Impl_", methodName : "_new"}));
					event.stop();
					cb(null);
				} else {
					var this4 = stx_stream_Logging.log(stx_nano_Wildcard.__);
					var fn3 = function(pos) {
						return pos.with_stamp(function(stamp) {
							return stamp.relevel(1);
						});
					};
					(function(value,pos) {
						this4(value,fn3(pos));
					})(stx_log_Stringify.fromString("" + id + " CONTINUE")(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/stream/Timeout.hx", lineNumber : 38, className : "stx.stream._Timeout.Timeout_Impl_", methodName : "_new"}));
					next = step(next);
					event.delay(next / 1000);
				}
			}
		});
		var this1 = new tink_core_SimpleLink(function() {
			cancelled = true;
		});
		return this1;
	});
	var this3 = this2;
	return this3;
};
stx_stream_Timeout.prj = function(this1) {
	return this1;
};
var stx_stream__$Timeout_Backoff = function() { };
$hxClasses["stx.stream._Timeout.Backoff"] = stx_stream__$Timeout_Backoff;
stx_stream__$Timeout_Backoff.__name__ = "stx.stream._Timeout.Backoff";
var stx_stream_Window = {};
stx_stream_Window._new = function(self) {
	var this1 = self;
	return this1;
};
stx_stream_Window.lift = function(self) {
	return stx_stream_Window._new(self);
};
stx_stream_Window.make = function(delegate,buffer) {
	return stx_stream_Window.lift(new stx_stream_WindowCls(delegate,buffer));
};
stx_stream_Window.toSignal = function(this1) {
	return this1.toSignal();
};
stx_stream_Window.prj = function(this1) {
	return this1;
};
stx_stream_Window.get_self = function(this1) {
	return stx_stream_Window.lift(this1);
};
var stx_stream_WindowCls = function(delegate,buffer) {
	var _gthis = this;
	this.delegate = delegate;
	var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,buffer);
	var rec = null;
	rec = function(x) {
		var this1 = stx_stream_Logging.log(stx_nano_Wildcard.__);
		var fn = function(pos) {
			return pos.with_stamp(function(stamp) {
				return stamp.relevel(2);
			});
		};
		(function(value,pos) {
			this1(value,fn(pos));
		})(stx_log_Stringify.fromString("emit")(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/stream/Window.hx", lineNumber : 25, className : "stx.stream.WindowCls", methodName : "new"}));
		var fn1 = rec;
		return stx_coroutine_core_CoroutineSum.Emit(x,stx_coroutine_core_CoroutineSum.Wait(stx_coroutine_core_Transmission.lift(function(control) {
			return stx_coroutine_core_ControlLift.fold(control,fn1,function(e) {
				return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_Cause.fromRefuse(stx_nano_lift_LiftErrorDigestToRefuse.toRefuse(e))));
			},function() {
				return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Stop));
			});
		})));
	};
	var fn = rec;
	var v = stx_coroutine_pack_Tunnel.lift(stx_coroutine_core_CoroutineSum.Wait(stx_coroutine_core_Transmission.lift(function(control) {
		return stx_coroutine_core_ControlLift.fold(control,fn,function(e) {
			return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_Cause.fromRefuse(stx_nano_lift_LiftErrorDigestToRefuse.toRefuse(e))));
		},function() {
			return stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Terminated(stx_coroutine_core_CauseSum.Stop));
		});
	})));
	var tmp;
	if(self._hx_index == 0) {
		var v1 = self.v;
		tmp = v1;
	} else {
		tmp = v;
	}
	this.buffer = tmp;
	var this1 = stx_stream_Logging.log(stx_nano_Wildcard.__);
	var fn1 = function(pos) {
		return pos.with_stamp(function(stamp) {
			return stamp.relevel(1);
		});
	};
	(function(value,pos) {
		this1(value,fn1(pos));
	})(new stx_log_EntryCtr().pure(_gthis.buffer),stx_log_LogPosition.fromPos({ fileName : "stx/stream/Window.hx", lineNumber : 30, className : "stx.stream.WindowCls", methodName : "new"}));
	this.delegate.listen(function(x) {
		var next = _gthis.buffer;
		var this1 = stx_stream_Logging.log(stx_nano_Wildcard.__);
		var fn = function(pos) {
			return pos.with_stamp(function(stamp) {
				return stamp.relevel(1);
			});
		};
		(function(value,pos) {
			this1(value,fn(pos));
		})(stx_log_Stringify.fromString("" + Std.string(next))(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/stream/Window.hx", lineNumber : 34, className : "stx.stream.WindowCls", methodName : "new"}));
		_gthis.buffer = next;
	});
};
$hxClasses["stx.stream.WindowCls"] = stx_stream_WindowCls;
stx_stream_WindowCls.__name__ = "stx.stream.WindowCls";
stx_stream_WindowCls.prototype = {
	buffer: null
	,delegate: null
	,listen: function(handler) {
		var _gthis = this;
		var uptake = [];
		var canceller = null;
		var uptaker = function(x) {
			uptake.push(x);
		};
		canceller = this.delegate.listen(uptaker);
		var partial = this.buffer;
		var transfer = function() {
			uptaker = function(_) {
			};
			var _g = 0;
			while(_g < uptake.length) {
				var t = uptake[_g];
				++_g;
				tink_core_Callback.invoke(handler,t);
			}
			if(canceller != null) {
				if(canceller != null) {
					canceller.cancel();
				}
			}
			_gthis.delegate.listen(handler);
		};
		stx_coroutine_pack_EffectLift.run(stx_coroutine_pack_EmiterLift.secure(stx_coroutine_pack_SourceLift.emiter(stx_coroutine_core_CoroutineLift.source(partial,function() {
			return tink_core_Future.irreversible(function(cb) {
				cb(haxe_ds_Either.Right(stx_coroutine_core_CauseSum.Stop));
			});
		}),function(_) {
			return stx_nano_ChunkSum.End();
		}),stx_coroutine_pack_Secure.handler(handler))).handle(function(cause) {
			if(cause._hx_index == 0) {
				var _g = cause.v;
				if(_g._hx_index == 1) {
					var e = _g.err;
					var this1 = stx_stream_Logging.log(stx_nano_Wildcard.__);
					var fn = function(pos) {
						return pos.with_stamp(function(stamp) {
							return stamp.relevel(5);
						});
					};
					(function(value,pos) {
						this1(value,fn(pos));
					})(new stx_log_EntryCtr().pure(e),stx_log_LogPosition.fromPos({ fileName : "stx/stream/Window.hx", lineNumber : 66, className : "stx.stream.WindowCls", methodName : "listen"}));
					throw haxe_Exception.thrown(e);
				} else {
					transfer();
				}
			} else {
				transfer();
			}
		});
		var this1 = new tink_core_SimpleLink(function() {
		});
		return this1;
	}
	,toSignal: function() {
		var this1 = new tink_core__$Signal_Suspendable($bind(this,this.listen),null);
		return this1;
	}
	,__class__: stx_stream_WindowCls
};
var stx_stream_Work = {};
stx_stream_Work.unit = function() {
	var this1 = null;
	return this1;
};
stx_stream_Work.wait = function() {
	return stx_stream_Bang._new();
};
stx_stream_Work._new = function(self) {
	var this1 = self;
	return this1;
};
stx_stream_Work.lift = function(self) {
	var this1 = self;
	return this1;
};
stx_stream_Work.prj = function(this1) {
	return this1;
};
stx_stream_Work.get_self = function(this1) {
	var this2 = this1;
	return this2;
};
stx_stream_Work.fromCycle = function(self) {
	var this1 = self;
	return this1;
};
stx_stream_Work.fromFutureWork = function(ft) {
	var this1 = stx_stream_Cycle._new(stx_stream_Cycler._new(new stx_stream_PureCyclerCls(tink_core_Future.flatMap(ft,function(bang) {
		if(bang == null) {
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(stx_stream_Cycle.ZERO == null ? stx_stream_Cycle.ZERO = stx_stream_Cycle._new(stx_stream_Cycler._new(new stx_stream_UnitCyclerCls())) : stx_stream_Cycle.ZERO));
		} else {
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(bang));
		}
	}))));
	return this1;
};
stx_stream_Work.toCycle = function(this1) {
	return stx_stream_Cycle.fromWork(this1);
};
stx_stream_Work.is_defined = function(this1) {
	return this1 != null;
};
var stx_stream_Bang = {};
stx_stream_Bang._new = function() {
	var this1 = new tink_core_FutureTrigger();
	return this1;
};
stx_stream_Bang.fill = function(this1,block) {
	this1.trigger(block);
};
stx_stream_Bang.done = function(this1) {
	this1.trigger(stx_stream_Cycle.ZERO == null ? stx_stream_Cycle.ZERO = stx_stream_Cycle._new(stx_stream_Cycler._new(new stx_stream_UnitCyclerCls())) : stx_stream_Cycle.ZERO);
};
stx_stream_Bang.toWork = function(this1) {
	var this2 = this1 == null ? null : stx_stream_Cycle._new(stx_stream_Cycler._new(new stx_stream_PureCyclerCls(this1)));
	return this2;
};
var stx_stream_WorkLift = function() { };
$hxClasses["stx.stream.WorkLift"] = stx_stream_WorkLift;
stx_stream_WorkLift.__name__ = "stx.stream.WorkLift";
stx_stream_WorkLift.lift = function(self) {
	var this1 = self;
	return this1;
};
stx_stream_WorkLift.seq = function(self,that) {
	var tmp;
	if(self == null) {
		if(that == null) {
			tmp = null;
		} else {
			var y = that;
			tmp = y;
		}
	} else if(that == null) {
		var x = self;
		tmp = x;
	} else {
		var x = self;
		var y = that;
		tmp = stx_stream_CycleLift.seq(x,y);
	}
	return stx_stream_WorkLift.lift(tmp);
};
stx_stream_WorkLift.par = function(self,that) {
	var tmp;
	if(self == null) {
		if(that == null) {
			tmp = null;
		} else {
			var y = that;
			tmp = y;
		}
	} else if(that == null) {
		var x = self;
		tmp = x;
	} else {
		var x = self;
		var y = that;
		tmp = stx_stream_CycleLift.par(x,y);
	}
	return stx_stream_WorkLift.lift(tmp);
};
var stx_stream_core_Errors = function() { };
$hxClasses["stx.stream.core.Errors"] = stx_stream_core_Errors;
stx_stream_core_Errors.__name__ = "stx.stream.core.Errors";
stx_stream_core_Errors.e_end_called_twice = function(digests) {
	return new stx_stream_core_EEndCalledTwice();
};
var stx_stream_core_EEndCalledTwice = function() {
	stx_fail_Digest.call(this,"01FRQ80PZA3A57AZPXPQA7Z8YT","End called twice");
};
$hxClasses["stx.stream.core.EEndCalledTwice"] = stx_stream_core_EEndCalledTwice;
stx_stream_core_EEndCalledTwice.__name__ = "stx.stream.core.EEndCalledTwice";
stx_stream_core_EEndCalledTwice.__super__ = stx_fail_Digest;
stx_stream_core_EEndCalledTwice.prototype = $extend(stx_fail_Digest.prototype,{
	__class__: stx_stream_core_EEndCalledTwice
});
var stx_stub_Assert = {};
stx_stub_Assert._new = function() {
	var this1 = "0bed2be8-2b68-4191-8b92-1a59383aa7a1";
	return this1;
};
var stx_sys_fs_Catalog = function(path) {
	this.path = path;
};
$hxClasses["stx.sys.fs.Catalog"] = stx_sys_fs_Catalog;
stx_sys_fs_Catalog.__name__ = "stx.sys.fs.Catalog";
stx_sys_fs_Catalog.__interfaces__ = [haxe_IMap];
stx_sys_fs_Catalog.Unit = function(path) {
	return new stx_sys_fs_catalog_Unit(path);
};
stx_sys_fs_Catalog.prototype = {
	path: null
	,encode: null
	,decode: null
	,get: function(k) {
		var _gthis = this;
		var a = stx_nano_Way.toOsString(stx_nano_Way.snoc(this.path,k));
		return stx_nano_lift_LiftNano.if_else(this.exists(k),function() {
			return _gthis.decode(stx_System.sys(stx_nano_Wildcard.__).fs().get(a));
		},function() {
			return null;
		});
	}
	,set: function(k,v) {
		var a = stx_nano_Way.toOsString(stx_nano_Way.snoc(this.path,k));
		var _this = stx_System.sys(stx_nano_Wildcard.__).fs();
		js_node_Fs.writeFileSync(k,this.encode(v));
	}
	,exists: function(k) {
		var a = stx_nano_Way.toOsString(stx_nano_Way.snoc(this.path,k));
		return stx_System.sys(stx_nano_Wildcard.__).fs().exists(k);
	}
	,remove: function(k) {
		var result = this.exists(k);
		js_node_Fs.unlinkSync(stx_nano_Way.toOsString(stx_nano_Way.snoc(this.path,k)));
		return result;
	}
	,keys: function() {
		return new haxe_iterators_ArrayIterator(js_node_Fs.readdirSync(stx_nano_Way.toOsString(this.path)));
	}
	,iterator: function() {
		var _gthis = this;
		return $getIterator(stx_nano_IterLift.map(stx_nano_lift_LiftIteratorToIter.toIter(this.keys()),function(x) {
			return _gthis.get(x);
		}));
	}
	,keyValueIterator: function() {
		var _gthis = this;
		return $getIterator(stx_nano_IterLift.map(stx_nano_lift_LiftIteratorToIter.toIter(this.keys()),function(x) {
			return { key : x, value : _gthis.get(x)};
		}));
	}
	,copy: function() {
		var n = new haxe_ds_StringMap();
		var _g = this.keyValueIterator();
		while(_g.hasNext()) {
			var _g1 = _g.next();
			var k = _g1.key;
			var v = _g1.value;
			n.h[k] = v;
		}
		return n;
	}
	,toString: function() {
		return "CATALOG";
	}
	,clear: function() {
		var key = this.keys();
		while(key.hasNext()) {
			var key1 = key.next();
			this.remove(key1);
		}
	}
	,__class__: stx_sys_fs_Catalog
};
var stx_sys_fs_Clump = function(catalog,name) {
	this.catalog = catalog;
	this.name = name;
};
$hxClasses["stx.sys.fs.Clump"] = stx_sys_fs_Clump;
stx_sys_fs_Clump.__name__ = "stx.sys.fs.Clump";
stx_sys_fs_Clump.prototype = {
	catalog: null
	,name: null
	,put: function(data) {
		this.catalog.set(this.name,data);
	}
	,get: function() {
		return this.catalog.get(this.name);
	}
	,exists: function() {
		return this.catalog.exists(this.name);
	}
	,__class__: stx_sys_fs_Clump
};
var stx_sys_fs_catalog_Unit = function(path) {
	stx_sys_fs_Catalog.call(this,path);
};
$hxClasses["stx.sys.fs.catalog.Unit"] = stx_sys_fs_catalog_Unit;
stx_sys_fs_catalog_Unit.__name__ = "stx.sys.fs.catalog.Unit";
stx_sys_fs_catalog_Unit.__super__ = stx_sys_fs_Catalog;
stx_sys_fs_catalog_Unit.prototype = $extend(stx_sys_fs_Catalog.prototype,{
	encode: function(t) {
		return t;
	}
	,decode: function(str) {
		return str;
	}
	,__class__: stx_sys_fs_catalog_Unit
});
var stx_test_Assertions = {};
stx_test_Assertions.get_failures = function(this1) {
	return stx_lift_ArrayLift.map_filter(this1,function(x) {
		var self = stx_test_core_Assertion.outcome(x);
		switch(self._hx_index) {
		case 0:
			var t = self.t;
			return haxe_ds_Option.None;
		case 1:
			var e = self.e;
			return haxe_ds_Option.Some(e);
		}
	});
};
stx_test_Assertions.has_failures = function(this1) {
	return stx_test_Assertions.get_failures(this1).length > 0;
};
var stx_test_Async = {};
stx_test_Async.wait = function() {
	return new tink_core_FutureTrigger();
};
stx_test_Async.done = function(this1) {
	this1.trigger(stx_test_TestEffect.unit());
};
var stx_test_AsyncResult = {};
stx_test_AsyncResult.lift = function(self) {
	return self;
};
stx_test_AsyncResult.pure = function(v) {
	return stx_test_AsyncResult.lift(haxe_ds_Option.Some(v));
};
stx_test_AsyncResult.unit = function() {
	return stx_test_AsyncResult.lift(haxe_ds_Option.None);
};
stx_test_AsyncResult.tap = function(this1,fn) {
	switch(this1._hx_index) {
	case 0:
		var t = this1.v;
		fn(t);
		break;
	case 1:
		break;
	}
};
stx_test_AsyncResult.use = function(this1,fn,nil,pos) {
	switch(this1._hx_index) {
	case 0:
		var t = this1.v;
		var self;
		try {
			var _g = fn;
			var a1 = t;
			self = stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,(function() {
				return _g(a1);
			})());
		} catch( _g1 ) {
			var _g2 = haxe_Exception.caught(_g1);
			var _g3 = _g2.unwrap();
			if(js_Boot.__implements(_g3,stx_fail_ErrorApi)) {
				var e = _g3;
				var tmp = e.get_stack();
				haxe_Log.trace(tmp == null ? "null" : stx_pico_Option.toString(tmp),{ fileName : "stx/test/Util.hx", lineNumber : 8, className : "stx.test.Util", methodName : "or_res"});
				self = stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.errate(stx_fail_Refuse.lift(stx_fail_Error.errate(e,stx_fail_DeclineSum.EXTERIOR)),stx_fail_TestFailureSum.E_Test_Refuse)),{ fileName : "stx/test/Util.hx", lineNumber : 9, className : "stx.test.Util", methodName : "or_res"});
			} else {
				var e = _g2;
				var tmp = e.get_stack();
				haxe_Log.trace(tmp == null ? "null" : haxe_CallStack.toString(tmp),{ fileName : "stx/test/Util.hx", lineNumber : 11, className : "stx.test.Util", methodName : "or_res"});
				self = stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.make(haxe_ds_Option.Some(stx_fail_DeclineSum.EXTERIOR(stx_fail_TestFailureSum.E_Test_Exception(e))),haxe_ds_Option.None,stx_pico_Option.fromNullT(pos))),{ fileName : "stx/test/Util.hx", lineNumber : 12, className : "stx.test.Util", methodName : "or_res"});
			}
		}
		switch(self._hx_index) {
		case 0:
			var t = self.t;
			var self1 = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,t);
			var f = null;
			var v = f == null ? stx_nano_Report.unit() : stx_nano_Report.pure(f(stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/test/AsyncResult.hx", lineNumber : 22, className : "stx.test._AsyncResult.AsyncResult_Impl_", methodName : "use"})));
			if(self1._hx_index == 0) {
				var v1 = self1.v;
				return v1;
			} else {
				return v;
			}
			break;
		case 1:
			var e = self.e;
			return stx_fail_RefuseLift.report(e);
		}
		break;
	case 1:
		var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,nil);
		var fn;
		if(self._hx_index == 0) {
			var v = self.v;
			fn = v;
		} else {
			fn = function() {
				var f = null;
				if(f == null) {
					return stx_nano_Report.unit();
				} else {
					return stx_nano_Report.pure(f(stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/test/AsyncResult.hx", lineNumber : 25, className : "stx.test._AsyncResult.AsyncResult_Impl_", methodName : "use"})));
				}
			};
		}
		var self;
		try {
			self = stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,fn());
		} catch( _g1 ) {
			var _g2 = haxe_Exception.caught(_g1);
			var _g3 = _g2.unwrap();
			if(js_Boot.__implements(_g3,stx_fail_ErrorApi)) {
				var e = _g3;
				var tmp = e.get_stack();
				haxe_Log.trace(tmp == null ? "null" : stx_pico_Option.toString(tmp),{ fileName : "stx/test/Util.hx", lineNumber : 8, className : "stx.test.Util", methodName : "or_res"});
				self = stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.errate(stx_fail_Refuse.lift(stx_fail_Error.errate(e,stx_fail_DeclineSum.EXTERIOR)),stx_fail_TestFailureSum.E_Test_Refuse)),{ fileName : "stx/test/Util.hx", lineNumber : 9, className : "stx.test.Util", methodName : "or_res"});
			} else {
				var e = _g2;
				var tmp = e.get_stack();
				haxe_Log.trace(tmp == null ? "null" : haxe_CallStack.toString(tmp),{ fileName : "stx/test/Util.hx", lineNumber : 11, className : "stx.test.Util", methodName : "or_res"});
				self = stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.make(haxe_ds_Option.Some(stx_fail_DeclineSum.EXTERIOR(stx_fail_TestFailureSum.E_Test_Exception(e))),haxe_ds_Option.None,stx_pico_Option.fromNullT({ fileName : "stx/test/AsyncResult.hx", lineNumber : 25, className : "stx.test._AsyncResult.AsyncResult_Impl_", methodName : "use"}))),{ fileName : "stx/test/Util.hx", lineNumber : 12, className : "stx.test.Util", methodName : "or_res"});
			}
		}
		switch(self._hx_index) {
		case 0:
			var t = self.t;
			var self1 = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,t);
			var f = null;
			var v = f == null ? stx_nano_Report.unit() : stx_nano_Report.pure(f(stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/test/AsyncResult.hx", lineNumber : 26, className : "stx.test._AsyncResult.AsyncResult_Impl_", methodName : "use"})));
			if(self1._hx_index == 0) {
				var v1 = self1.v;
				return v1;
			} else {
				return v;
			}
			break;
		case 1:
			var e = self.e;
			return stx_fail_RefuseLift.report(e);
		}
		break;
	}
};
stx_test_AsyncResult.test = function(this1,val,nil,pos) {
	switch(this1._hx_index) {
	case 0:
		var t = this1.v;
		var _g = val;
		var a1 = t;
		var fn = stx_fn_Thunk.prj(stx_fn_BlockLift.returning(function() {
			_g(a1);
		},null));
		var self;
		try {
			self = stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,fn());
		} catch( _g1 ) {
			var _g2 = haxe_Exception.caught(_g1);
			var _g3 = _g2.unwrap();
			if(js_Boot.__implements(_g3,stx_fail_ErrorApi)) {
				var e = _g3;
				var tmp = e.get_stack();
				haxe_Log.trace(tmp == null ? "null" : stx_pico_Option.toString(tmp),{ fileName : "stx/test/Util.hx", lineNumber : 8, className : "stx.test.Util", methodName : "or_res"});
				self = stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.errate(stx_fail_Refuse.lift(stx_fail_Error.errate(e,stx_fail_DeclineSum.EXTERIOR)),stx_fail_TestFailureSum.E_Test_Refuse)),{ fileName : "stx/test/Util.hx", lineNumber : 9, className : "stx.test.Util", methodName : "or_res"});
			} else {
				var e = _g2;
				var tmp = e.get_stack();
				haxe_Log.trace(tmp == null ? "null" : haxe_CallStack.toString(tmp),{ fileName : "stx/test/Util.hx", lineNumber : 11, className : "stx.test.Util", methodName : "or_res"});
				self = stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.make(haxe_ds_Option.Some(stx_fail_DeclineSum.EXTERIOR(stx_fail_TestFailureSum.E_Test_Exception(e))),haxe_ds_Option.None,stx_pico_Option.fromNullT(pos))),{ fileName : "stx/test/Util.hx", lineNumber : 12, className : "stx.test.Util", methodName : "or_res"});
			}
		}
		switch(self._hx_index) {
		case 0:
			var t = self.t;
			var f = null;
			if(f == null) {
				return stx_nano_Report.unit();
			} else {
				return stx_nano_Report.pure(f(stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/test/AsyncResult.hx", lineNumber : 34, className : "stx.test._AsyncResult.AsyncResult_Impl_", methodName : "test"})));
			}
			break;
		case 1:
			var e = self.e;
			return stx_fail_RefuseLift.report(e);
		}
		break;
	case 1:
		var fn = stx_fn_Thunk.prj(stx_fn_BlockLift.returning(nil,null));
		var self;
		try {
			self = stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,fn());
		} catch( _g1 ) {
			var _g2 = haxe_Exception.caught(_g1);
			var _g3 = _g2.unwrap();
			if(js_Boot.__implements(_g3,stx_fail_ErrorApi)) {
				var e = _g3;
				var tmp = e.get_stack();
				haxe_Log.trace(tmp == null ? "null" : stx_pico_Option.toString(tmp),{ fileName : "stx/test/Util.hx", lineNumber : 8, className : "stx.test.Util", methodName : "or_res"});
				self = stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.errate(stx_fail_Refuse.lift(stx_fail_Error.errate(e,stx_fail_DeclineSum.EXTERIOR)),stx_fail_TestFailureSum.E_Test_Refuse)),{ fileName : "stx/test/Util.hx", lineNumber : 9, className : "stx.test.Util", methodName : "or_res"});
			} else {
				var e = _g2;
				var tmp = e.get_stack();
				haxe_Log.trace(tmp == null ? "null" : haxe_CallStack.toString(tmp),{ fileName : "stx/test/Util.hx", lineNumber : 11, className : "stx.test.Util", methodName : "or_res"});
				self = stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.make(haxe_ds_Option.Some(stx_fail_DeclineSum.EXTERIOR(stx_fail_TestFailureSum.E_Test_Exception(e))),haxe_ds_Option.None,stx_pico_Option.fromNullT(pos))),{ fileName : "stx/test/Util.hx", lineNumber : 12, className : "stx.test.Util", methodName : "or_res"});
			}
		}
		var tmp;
		switch(self._hx_index) {
		case 0:
			var t = self.t;
			var f = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,pos);
			tmp = stx_nano_Report.pure(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_TestFailureSum.NullTestFailure)),haxe_ds_Option.None,stx_pico_Option.fromNullT(f)));
			break;
		case 1:
			var e = self.e;
			tmp = stx_fail_RefuseLift.report(e);
			break;
		}
		return tmp;
	}
};
var stx_test_FnType = $hxEnums["stx.test.FnType"] = { __ename__:"stx.test.FnType",__constructs__:null
	,ZeroZero: {_hx_name:"ZeroZero",_hx_index:0,__enum__:"stx.test.FnType",toString:$estr}
	,ZeroOne: {_hx_name:"ZeroOne",_hx_index:1,__enum__:"stx.test.FnType",toString:$estr}
	,OneZero: {_hx_name:"OneZero",_hx_index:2,__enum__:"stx.test.FnType",toString:$estr}
};
stx_test_FnType.__constructs__ = [stx_test_FnType.ZeroZero,stx_test_FnType.ZeroOne,stx_test_FnType.OneZero];
var stx_test_Logging = function() { };
$hxClasses["stx.test.Logging"] = stx_test_Logging;
stx_test_Logging.__name__ = "stx.test.Logging";
stx_test_Logging.log = function(wildcard) {
	var self = stx_pico_OptionLift.map(stx_pkg_Pkg.source(stx_PkgLift.pkg(stx_nano_Wildcard.__,{ fileName : "stx/test/Logging.hx", lineNumber : 10, className : "stx.test.Logging", methodName : "log"})),function(scope) {
		var this1 = stx_Log.unit();
		var tag = scope.pack.join("/");
		var this2 = this1;
		var fn = function(pos) {
			return pos.with_stamp(function(stamp) {
				return stamp.tag(tag);
			});
		};
		return function(value,pos) {
			this2(value,fn(pos));
		};
	});
	if(self._hx_index == 0) {
		var v = self.v;
		return v;
	} else {
		return stx_Log.unit();
	}
};
var stx_test_MethodCall = function(object,class_name,field_name,_call,timeout) {
	this.object = object;
	this.class_name = class_name;
	this.field_name = field_name;
	this._call = _call;
	this.timeout = timeout;
};
$hxClasses["stx.test.MethodCall"] = stx_test_MethodCall;
stx_test_MethodCall.__name__ = "stx.test.MethodCall";
stx_test_MethodCall.prototype = {
	object: null
	,class_name: null
	,field_name: null
	,_call: null
	,timeout: null
	,timestamp: null
	,call: function() {
		var _gthis = this;
		var this1 = stx_test_Logging.log(stx_nano_Wildcard.__);
		var fn = function(pos) {
			return pos.with_stamp(function(stamp) {
				return stamp.relevel(0);
			});
		};
		(function(value,pos) {
			this1(value,fn(pos));
		})(stx_log_Stringify.fromString("call: timeout : " + this.get_timeout())(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/test/MethodCall.hx", lineNumber : 20, className : "stx.test.MethodCall", methodName : "call"}));
		var _this = stx_LiftAssert.assert(stx_nano_Wildcard.__,{ fileName : "stx/test/MethodCall.hx", lineNumber : 21, className : "stx.test.MethodCall", methodName : "call"});
		var t = this._call;
		var self = _this.module.exists().apply(t);
		if(self != null) {
			switch(self._hx_index) {
			case 0:
				var v = self.v;
				throw haxe_Exception.thrown(v);
			case 1:
				break;
			}
		}
		this.timestamp = HxOverrides.now() / 1000;
		var fn1 = stx_test_TestMethodZero.prj(this._call);
		var res;
		try {
			res = stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,fn1());
		} catch( _g ) {
			var _g1 = haxe_Exception.caught(_g);
			var _g2 = _g1.unwrap();
			if(js_Boot.__implements(_g2,stx_fail_ErrorApi)) {
				var e = _g2;
				var tmp = e.get_stack();
				haxe_Log.trace(tmp == null ? "null" : stx_pico_Option.toString(tmp),{ fileName : "stx/test/Util.hx", lineNumber : 8, className : "stx.test.Util", methodName : "or_res"});
				res = stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.errate(stx_fail_Refuse.lift(stx_fail_Error.errate(e,stx_fail_DeclineSum.EXTERIOR)),stx_fail_TestFailureSum.E_Test_Refuse)),{ fileName : "stx/test/Util.hx", lineNumber : 9, className : "stx.test.Util", methodName : "or_res"});
			} else {
				var e = _g1;
				var tmp = e.get_stack();
				haxe_Log.trace(tmp == null ? "null" : haxe_CallStack.toString(tmp),{ fileName : "stx/test/Util.hx", lineNumber : 11, className : "stx.test.Util", methodName : "or_res"});
				res = stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.make(haxe_ds_Option.Some(stx_fail_DeclineSum.EXTERIOR(stx_fail_TestFailureSum.E_Test_Exception(e))),haxe_ds_Option.None,stx_pico_Option.fromNullT({ fileName : "stx/test/MethodCall.hx", lineNumber : 24, className : "stx.test.MethodCall", methodName : "call"}))),{ fileName : "stx/test/Util.hx", lineNumber : 12, className : "stx.test.Util", methodName : "or_res"});
			}
		}
		switch(res._hx_index) {
		case 0:
			var t = res.t;
			switch(t._hx_index) {
			case 0:
				var t1 = t.v;
				return tink_core_Future.first(t1,stx_test_core_Timeout.make(_gthis.get_timeout()));
			case 1:
				return stx_test_TestResult.unit();
			}
			break;
		case 1:
			var e = res.e;
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(stx_test_TestEffect.fromRefuse(e)));
		}
	}
	,assertions: null
	,get_assertions: function() {
		var _gthis = this;
		var _g = [];
		var _g1 = 0;
		var _g2 = this.object.__assertions;
		while(_g1 < _g2.length) {
			var v = _g2[_g1];
			++_g1;
			if(stx_nano_Position.get_methodName(v.pos) == _gthis.field_name) {
				_g.push(v);
			}
		}
		return _g;
	}
	,position: function() {
		var _gthis = this;
		var type = js_Boot.getClass(this.object);
		return stx_LiftIf.if_else(haxe_rtti_Rtti.hasRtti(type),function() {
			var clazz = haxe_rtti_Rtti.getRtti(type);
			var field = stx_lift_ArrayLift.search(clazz.fields,function(x) {
				return x.name == _gthis.field_name;
			});
			return stx_pico_OptionLift.map(field,function(field) {
				var parts = clazz.path.split(".");
				var fileName = clazz.file;
				var className = parts[parts.length - 1];
				var methodName = _gthis.field_name;
				var lineNumber = field.line;
				return stx_nano_Position.make(fileName,className,methodName,lineNumber);
			});
		},function() {
			return haxe_ds_Option.None;
		});
	}
	,depends: function() {
		var fields_meta = haxe_rtti_Meta.getFields(js_Boot.getClass(this.object));
		var self = stx_pico_OptionLift.flat_map(stx_pico_OptionLift.flat_map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,fields_meta),function(obj) {
			return stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,Reflect.field(obj,"stx.test.depends"));
		}),function(arr) {
			var result = new Array(arr.length);
			var _g = 0;
			var _g1 = arr.length;
			while(_g < _g1) {
				var i = _g++;
				result[i] = Std.string(arr[i]);
			}
			var _this = result;
			var result = new Array(_this.length);
			var _g = 0;
			var _g1 = _this.length;
			while(_g < _g1) {
				var i = _g++;
				var s = _this[i];
				var out = HxOverrides.substr(s,1,s.length - 2);
				result[i] = out;
			}
			return stx_pico_Option.fromNullT(result);
		});
		var field_meta;
		if(self._hx_index == 0) {
			var v = self.v;
			field_meta = v;
		} else {
			field_meta = [];
		}
		return field_meta;
	}
	,get_timeout: function() {
		var fields_meta = haxe_rtti_Meta.getFields(js_Boot.getClass(this.object));
		var field_meta = Reflect.field(fields_meta,this.field_name);
		var self = stx_pico_OptionLift.map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,Reflect.field(field_meta,"timeout")),function(arr) {
			return Std.parseInt(arr[0]);
		});
		if(self._hx_index == 0) {
			var v = self.v;
			return v;
		} else {
			return this.timeout;
		}
	}
	,has_assertions: function() {
		return this.get_assertions().length > 0;
	}
	,toString: function() {
		var location = this.class_name + this.field_name;
		return "MethodCall(" + location + ")";
	}
	,__class__: stx_test_MethodCall
};
var stx_test_Module = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["stx.test.Module"] = stx_test_Module;
stx_test_Module.__name__ = "stx.test.Module";
stx_test_Module.__super__ = stx_pico_Clazz;
stx_test_Module.prototype = $extend(stx_pico_Clazz.prototype,{
	auto: function(timeout) {
		try {
			var env = process.env["STX_TEST__SUITE"];
			var this1 = stx_test_Logging.log(stx_nano_Wildcard.__);
			var fn = function(pos) {
				return pos.with_stamp(function(stamp) {
					return stamp.relevel(3);
				});
			};
			(function(value,pos) {
				this1(value,fn(pos));
			})(stx_log_Stringify.fromString("\"" + env + "\"")(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/test/Module.hx", lineNumber : 14, className : "stx.test.Module", methodName : "auto"}));
			var self = stx_test_module_Auto.reply();
			var fn1 = function(o) {
				var self = stx_nano_ClusterLift.search(o.specs,function(o) {
					return o.name == env;
				});
				var fn;
				if(self._hx_index == 0) {
					var v = self.v;
					fn = v;
				} else {
					fn = { name : "main", specs : [], op : stx_test_auto_Op.Exclude};
				}
				return stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,o,fn);
			};
			var self1;
			switch(self._hx_index) {
			case 0:
				var t = self.t;
				self1 = stx_nano_ResSum.Accept(fn1(t));
				break;
			case 1:
				var e = self.e;
				self1 = stx_nano_ResSum.Reject(e);
				break;
			}
			var this2 = self1;
			var self = this2;
			var fn1 = stx_nano_lift_LiftNano.decouple(stx_nano_Wildcard.__,function(suite,spec) {
				var this1 = stx_test_Logging.log(stx_nano_Wildcard.__);
				var fn = function(pos) {
					return pos.with_stamp(function(stamp) {
						return stamp.relevel(2);
					});
				};
				(function(value,pos) {
					this1(value,fn(pos));
				})(stx_log_Stringify.fromString("" + Std.string(suite))(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/test/Module.hx", lineNumber : 31, className : "stx.test.Module", methodName : "auto"}));
				var this2 = stx_test_Logging.log(stx_nano_Wildcard.__);
				var fn1 = function(pos) {
					return pos.with_stamp(function(stamp) {
						return stamp.relevel(2);
					});
				};
				(function(value,pos) {
					this2(value,fn1(pos));
				})(stx_log_Stringify.fromString("" + Std.string(spec))(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/test/Module.hx", lineNumber : 32, className : "stx.test.Module", methodName : "auto"}));
				return stx_nano_Res.bind_fold(stx_nano_Cluster.toIter(suite.cases),function(n,m) {
					var c = js_Boot.getClass(n);
					var test_case_name = c.__name__;
					var spec_ref = stx_nano_ClusterLift.search(spec.specs,function(class_spec) {
						var this1 = stx_test_Logging.log(stx_nano_Wildcard.__);
						var fn = function(pos) {
							return pos.with_stamp(function(stamp) {
								return stamp.relevel(2);
							});
						};
						(function(value,pos) {
							this1(value,fn(pos));
						})(stx_log_Stringify.fromString("" + stx_test_auto_ClassPath.prj(class_spec.path) + " " + test_case_name)(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/test/Module.hx", lineNumber : 39, className : "stx.test.Module", methodName : "auto"}));
						return stx_test_auto_ClassPath.prj(class_spec.path) == test_case_name;
					});
					var this1 = stx_test_Logging.log(stx_nano_Wildcard.__);
					var fn = function(pos) {
						return pos.with_stamp(function(stamp) {
							return stamp.relevel(1);
						});
					};
					(function(value,pos) {
						this1(value,fn(pos));
					})(stx_log_Stringify.fromString("" + Std.string(spec.op))(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/test/Module.hx", lineNumber : 43, className : "stx.test.Module", methodName : "auto"}));
					switch(spec.op._hx_index) {
					case 0:
						var fn1;
						switch(spec_ref._hx_index) {
						case 0:
							var t = spec_ref.v;
							var x = t;
							var this2 = stx_test_Logging.log(stx_nano_Wildcard.__);
							var fn2 = function(pos) {
								return pos.with_stamp(function(stamp) {
									return stamp.relevel(2);
								});
							};
							(function(value,pos) {
								this2(value,fn2(pos));
							})(stx_log_Stringify.fromString("" + Std.string(x))(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/test/Module.hx", lineNumber : 47, className : "stx.test.Module", methodName : "auto"}));
							var data = stx_test_TestCaseLift.get_tests(n,timeout);
							var method_calls = data.method_calls;
							var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,x.methods);
							var self1;
							switch(self._hx_index) {
							case 0:
								var t = self.v;
								var methods = t;
								var self = stx_nano_Res.bind_fold(stx_nano_Cluster.toIter(method_calls),function(n,m) {
									var has_method = stx_nano_ClusterLift.any(methods,function(x) {
										return n.field_name == x;
									});
									var this1 = stx_test_Logging.log(stx_nano_Wildcard.__);
									var fn = function(pos) {
										return pos.with_stamp(function(stamp) {
											return stamp.relevel(2);
										});
									};
									(function(value,pos) {
										this1(value,fn(pos));
									})(stx_log_Stringify.fromString("" + (has_method == null ? "null" : "" + has_method) + " " + n.field_name)(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/test/Module.hx", lineNumber : 58, className : "stx.test.Module", methodName : "auto"}));
									var self;
									switch(x.op._hx_index) {
									case 0:
										self = has_method ? stx_nano_ClusterLift.snoc(m,n) : m;
										break;
									case 1:
										self = has_method ? m : stx_nano_ClusterLift.snoc(m,n);
										break;
									}
									return stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,self);
								},[]);
								var fn3 = function(calls) {
									return data.copy(null,null,calls);
								};
								var self2;
								switch(self._hx_index) {
								case 0:
									var t = self.t;
									self2 = stx_nano_ResSum.Accept(fn3(t));
									break;
								case 1:
									var e = self.e;
									self2 = stx_nano_ResSum.Reject(e);
									break;
								}
								var this3 = self2;
								var next = this3;
								self1 = next;
								break;
							case 1:
								self1 = stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,data);
								break;
							}
							var fn3 = function(x) {
								return stx_nano_ClusterLift.snoc(m,x);
							};
							var self;
							switch(self1._hx_index) {
							case 0:
								var t = self1.t;
								self = stx_nano_ResSum.Accept(fn3(t));
								break;
							case 1:
								var e = self1.e;
								self = stx_nano_ResSum.Reject(e);
								break;
							}
							var this3 = self;
							fn1 = this3;
							break;
						case 1:
							fn1 = stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,m);
							break;
						}
						return fn1;
					case 1:
						var fn1;
						switch(spec_ref._hx_index) {
						case 0:
							var t = spec_ref.v;
							fn1 = stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,m);
							break;
						case 1:
							var data1 = stx_test_TestCaseLift.get_tests(n,timeout);
							fn1 = stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,stx_nano_ClusterLift.snoc(m,data1));
							break;
						}
						return fn1;
					}
				},[]);
			});
			var self1;
			switch(self._hx_index) {
			case 0:
				var t = self.t;
				self1 = fn1(t);
				break;
			case 1:
				var e = self.e;
				self1 = stx_nano_ResSum.Reject(e);
				break;
			}
			var this2 = self1;
			var spec = this2;
			haxe_Log.trace(stx_nano_ResLift.point(spec,function(x) {
				new stx_test_Reporter(new stx_test_Runner().applyI(x)).enact();
				var f = null;
				if(f == null) {
					return stx_nano_Report.unit();
				} else {
					return stx_nano_Report.pure(f(stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/test/Module.hx", lineNumber : 93, className : "stx.test.Module", methodName : "auto"})));
				}
			}),{ fileName : "stx/test/Module.hx", lineNumber : 89, className : "stx.test.Module", methodName : "auto"});
		} catch( _g ) {
			var e = haxe_Exception.caught(_g);
			var this2 = stx_test_Logging.log(stx_nano_Wildcard.__);
			var fn1 = function(pos) {
				return pos.with_stamp(function(stamp) {
					return stamp.relevel(6);
				});
			};
			(function(value,pos) {
				this2(value,fn1(pos));
			})(stx_log_Stringify.fromString(e.details())(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/test/Module.hx", lineNumber : 97, className : "stx.test.Module", methodName : "auto"}));
			throw haxe_Exception.thrown(e);
		}
	}
	,run: function(tests,poke) {
		var tests1 = tests;
		new stx_test_Reporter(new stx_test_Runner().apply(tests1)).enact();
	}
	,__class__: stx_test_Module
});
var stx_test_Reporter = function(stream) {
	stx_pico_Clazz.call(this);
	this.stream = stream;
	this.printing = new stx_test_reporter_RuntimeReporting();
};
$hxClasses["stx.test.Reporter"] = stx_test_Reporter;
stx_test_Reporter.__name__ = "stx.test.Reporter";
stx_test_Reporter.__super__ = stx_pico_Clazz;
stx_test_Reporter.prototype = $extend(stx_pico_Clazz.prototype,{
	stream: null
	,printing: null
	,close: function(err) {
		if(err != null) {
			var this1 = stx_test_Logging.log(stx_nano_Wildcard.__);
			var fn = function(pos) {
				return pos.with_stamp(function(stamp) {
					return stamp.relevel(5);
				});
			};
			(function(value,pos) {
				this1(value,fn(pos));
			})(stx_log_Stringify.fromString(err.toString())(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/test/Reporter.hx", lineNumber : 16, className : "stx.test.Reporter", methodName : "close"}));
		}
	}
	,indenter: function(indent) {
		return "" + indent + "\t";
	}
	,enact: function() {
		var _gthis = this;
		var p = this.printing;
		var closed = false;
		var serve = function(data) {
			var l0 = _gthis.indenter("");
			var l1 = _gthis.indenter(l0);
			var l2 = _gthis.indenter(l1);
			var l3 = _gthis.indenter(l2);
			var method_call_string_fn = $bind(p,p.method_call_string);
			var test_case_string_fn = $bind(p,p.test_case_string);
			switch(data._hx_index) {
			case 0:
				break;
			case 1:
				var info = data.info;
				p.println(info);
				break;
			case 2:
				var test_case_data = data.test_case_data;
				p.println(test_case_string_fn(test_case_data),l1);
				break;
			case 3:
				var method_call = data.method_call;
				p.println(method_call_string_fn(method_call),l2);
				break;
			case 4:
				var err = data.err;
				p.println("<red>" + err.toString() + "</red>");
				var p1 = p;
				var tmp = err.get_stack();
				p1.println("" + (tmp == null ? "null" : stx_pico_Option.toString(tmp)));
				break;
			case 5:
				var err = data.f;
				p.println("<red>" + stx_fail_TestFailure.toString(err) + "</red>");
				break;
			case 6:
				var err = data.f;
				p.println("<red>" + stx_fail_TestFailure.toString(err) + "</red>");
				break;
			case 7:
				var err = data.f;
				p.println("<red>" + stx_fail_TestFailure.toString(err) + "</red>");
				break;
			case 8:
				var err = data.f;
				p.println("<red>" + stx_fail_TestFailure.toString(err) + "</red>");
				break;
			case 9:
				var _g = data.method_call;
				var assertion = data.assertion;
				var self = stx_test_core_Assertion.outcome(assertion);
				var assertion_string;
				switch(self._hx_index) {
				case 0:
					var t = self.t;
					assertion_string = t;
					break;
				case 1:
					var e = self.e;
					assertion_string = stx_Show.show(stx_nano_Wildcard.__,e);
					break;
				}
				p.print_status(p.get_red_cross_on_black(),p.fail_string("" + assertion_string),l3);
				break;
			case 10:
				var method_call = data.method_call;
				if(!method_call.has_assertions()) {
					p.print_status(p.get_yellow_question_on_black(),p.warn_string("no assertions"),l3);
				}
				break;
			case 11:
				var test_case_data = data.test_case_data;
				if(!test_case_data.has_assertions()) {
					p.print_status(p.get_yellow_question_on_black(),p.warn_string("no assertions"),l3);
				}
				break;
			case 12:
				var test_suite = data.test_suite;
				p.println("_________________________________________________");
				var _g_current = 0;
				var _g_array = test_suite.test_cases;
				while(_g_current < _g_array.length) {
					var test_case_data = _g_array[_g_current++];
					var this1 = stx_test_Logging.log(stx_nano_Wildcard.__);
					var v = stx_log_Stringify.fromBool(test_case_data.has_assertions());
					(function(fn,this1) {
						return function(value,pos) {
							this1[0](value,fn[0](pos));
						};
					})([(function() {
						return function(pos) {
							return pos.with_stamp((function() {
								return function(stamp) {
									return stamp.relevel(2);
								};
							})());
						};
					})()],[this1])(v(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/test/Reporter.hx", lineNumber : 81, className : "stx.test.Reporter", methodName : "enact"}));
					if(!test_case_data.has_assertions()) {
						p.print_status(p.get_yellow_question_on_black(),p.warn_string("" + test_case_data.class_name));
					} else if(!test_case_data.has_failures()) {
						p.print_status(p.get_green_tick_on_black(),p.ok_string("" + test_case_data.class_name));
					} else {
						p.print_status(p.get_red_cross_on_black(),p.fail_string("" + test_case_data.class_name));
					}
					var _g_current1 = 0;
					var _g_array1 = test_case_data.method_calls;
					while(_g_current1 < _g_array1.length) {
						var method_call = [_g_array1[_g_current1++]];
						var status = stx_LiftIf.if_else(method_call[0].has_assertions(),(function(method_call) {
							return function() {
								return stx_LiftIf.if_else(stx_test_Assertions.has_failures(method_call[0].get_assertions()),(function() {
									return function() {
										return p.get_red_cross_on_black();
									};
								})(),(function() {
									return function() {
										return p.get_green_tick_on_black();
									};
								})());
							};
						})(method_call),(function() {
							return function() {
								return p.get_yellow_question_on_black();
							};
						})());
						p.print_status(status,p.info_string("" + method_call[0].field_name));
						var _g = 0;
						var _g1 = method_call[0].get_assertions();
						while(_g < _g1.length) {
							var assertion = [_g1[_g]];
							++_g;
							var predicate = stx_pico_OptionLift.is_defined(stx_System.sys(stx_nano_Wildcard.__).env("STX_TEST__VERBOSE"));
							if(predicate) {
								stx_LiftIf.if_else(assertion[0].truth,(function(assertion) {
									return function() {
										p.print_status(p.get_green_tick_on_black(),p.ok_string("" + (assertion[0] == null ? "null" : stx_test_core_Assertion.toString(assertion[0]))),l1);
									};
								})(assertion),(function(assertion) {
									return function() {
										p.print_status(p.get_red_cross_on_black(),p.fail_string("" + (assertion[0] == null ? "null" : stx_test_core_Assertion.toString(assertion[0]))),l1);
										var p1 = p;
										var self = stx_pico_OptionLift.flat_map(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,assertion[0].failure),(function() {
											return function(x) {
												return stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_TestFailure.get_stack(x));
											};
										})());
										var tmp;
										if(self._hx_index == 0) {
											var v = self.v;
											tmp = v;
										} else {
											tmp = null;
										}
										p1.println("" + (tmp == null ? "null" : stx_pico_Option.toString(tmp)));
									};
								})(assertion));
							} else {
								stx_LiftIf.if_else(assertion[0].truth,(function() {
									return function() {
										return;
									};
								})(),(function(assertion) {
									return function() {
										p.print_status(p.get_red_cross_on_black(),p.fail_string("" + (assertion[0] == null ? "null" : stx_test_core_Assertion.toString(assertion[0]))),l1);
									};
								})(assertion));
							}
						}
					}
				}
				if(!test_suite.is_clean()) {
					var _gthis1 = _gthis;
					var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/test/Reporter.hx", lineNumber : 123, className : "stx.test.Reporter", methodName : "enact"});
					_gthis1.close(stx_fail_Refuse.make(haxe_ds_Option.Some(stx_fail_DeclineSum.INTERIOR(stx_nano_CTR.apply(function(_) {
						return stx_test_core_Errors.e_suite_failed(_);
					},stx_Nano.digests(stx_nano_Wildcard.__)))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1)));
				} else {
					_gthis.close(null);
				}
				closed = true;
				break;
			}
		};
		this.stream.listen(function(chunk) {
			switch(chunk._hx_index) {
			case 0:
				var v = chunk.v;
				serve(v);
				break;
			case 1:
				break;
			case 2:
				var e = chunk.err;
				if(!closed) {
					_gthis.close(e);
				}
				break;
			}
		});
	}
	,__class__: stx_test_Reporter
});
var stx_test_Runner = function(timeout) {
	if(timeout == null) {
		timeout = 6000;
	}
	this.timeout = timeout;
};
$hxClasses["stx.test.Runner"] = stx_test_Runner;
stx_test_Runner.__name__ = "stx.test.Runner";
stx_test_Runner.prototype = {
	timeout: null
	,apply: function(cases) {
		var _gthis = this;
		var result = new Array(cases.length);
		var _g = 0;
		var _g1 = cases.length;
		while(_g < _g1) {
			var i = _g++;
			result[i] = cases[i].__stx__tests(_gthis.timeout);
		}
		var test_cases = result;
		return this.applyI(test_cases);
	}
	,applyI: function(cases) {
		var _gthis = this;
		var sig = stx_Stream.fromCluster(cases);
		return stx_StreamLift.seq(stx_StreamLift.flat_map(sig,function(val) {
			var this1 = stx_test_Logging.log(stx_nano_Wildcard.__);
			var fn = function(pos) {
				return pos.with_stamp(function(stamp) {
					return stamp.relevel(1);
				});
			};
			(function(value,pos) {
				this1(value,fn(pos));
			})(stx_log_Stringify.fromString("TestCase:= " + Std.string(val))(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/test/Runner.hx", lineNumber : 18, className : "stx.test.Runner", methodName : "applyI"}));
			return stx_StreamLift.seq(stx_StreamLift.seq(stx_Stream.pure(stx_test_TestPhaseSum.TP_StartTestCase(val)),stx_test_TestCaseDataRun.apply(val,_gthis.timeout)),stx_Stream.effect(function() {
				var this1 = stx_test_Logging.log(stx_nano_Wildcard.__);
				var fn = function(pos) {
					return pos.with_stamp(function(stamp) {
						return stamp.relevel(2);
					});
				};
				(function(value,pos) {
					this1(value,fn(pos));
				})(stx_log_Stringify.fromString("After TestCaseDataRun")(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/test/Runner.hx", lineNumber : 21, className : "stx.test.Runner", methodName : "applyI"}));
			}));
		}),stx_Stream.pure(stx_test_TestPhaseSum.TP_ReportTestSuiteComplete(new stx_test_TestSuite(cases))));
	}
	,__class__: stx_test_Runner
};
var stx_test_TestCaseDataRun = function() { };
$hxClasses["stx.test.TestCaseDataRun"] = stx_test_TestCaseDataRun;
stx_test_TestCaseDataRun.__name__ = "stx.test.TestCaseDataRun";
stx_test_TestCaseDataRun.apply = function(test_case_data,timeout) {
	var setup = stx_test_TestCaseDataRun.updown(($_=test_case_data.test_case,$bind($_,$_.__setup)),timeout,stx_test_TestPhaseSum.TP_Setup);
	var teardown = stx_test_TestCaseDataRun.updown(($_=test_case_data.test_case,$bind($_,$_.__teardown)),timeout,stx_test_TestPhaseSum.TP_Teardown);
	return stx_StreamLift.seq(stx_StreamLift.seq(stx_StreamLift.seq(setup,stx_StreamLift.flat_map(stx_Stream.fromCluster(test_case_data.method_calls),function(method_call) {
		var this1 = stx_test_Logging.log(stx_nano_Wildcard.__);
		var fn = function(pos) {
			return pos.with_stamp(function(stamp) {
				return stamp.relevel(1);
			});
		};
		(function(value,pos) {
			this1(value,fn(pos));
		})(stx_log_Stringify.fromString("apply: TestCaseDataRun: " + Std.string(test_case_data) + " " + Std.string(method_call))(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/test/Runner.hx", lineNumber : 32, className : "stx.test.TestCaseDataRun", methodName : "apply"}));
		var init = stx_Stream.pure(stx_test_TestPhaseSum.TP_StartTest(method_call));
		var before = stx_test_TestCaseDataRun.updown(($_=test_case_data.test_case,$bind($_,$_.__before)),timeout,stx_test_TestPhaseSum.TP_Before);
		var after = stx_test_TestCaseDataRun.updown(($_=test_case_data.test_case,$bind($_,$_.__after)),timeout,stx_test_TestPhaseSum.TP_After);
		return stx_StreamLift.seq(stx_StreamLift.seq(stx_StreamLift.seq(stx_StreamLift.seq(stx_StreamLift.seq(init,before),stx_Stream.effect(function() {
			var this1 = stx_test_Logging.log(stx_nano_Wildcard.__);
			var fn = function(pos) {
				return pos.with_stamp(function(stamp) {
					return stamp.relevel(1);
				});
			};
			(function(value,pos) {
				this1(value,fn(pos));
			})(stx_log_Stringify.fromString("before " + Std.string(test_case_data) + " " + Std.string(method_call))(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/test/Runner.hx", lineNumber : 38, className : "stx.test.TestCaseDataRun", methodName : "apply"}));
		})),stx_test_MethodCallRun.apply(method_call)),stx_Stream.effect(function() {
			var this1 = stx_test_Logging.log(stx_nano_Wildcard.__);
			var fn = function(pos) {
				return pos.with_stamp(function(stamp) {
					return stamp.relevel(1);
				});
			};
			(function(value,pos) {
				this1(value,fn(pos));
			})(stx_log_Stringify.fromString("after " + Std.string(test_case_data) + " " + Std.string(method_call))(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/test/Runner.hx", lineNumber : 40, className : "stx.test.TestCaseDataRun", methodName : "apply"}));
		})),after);
	})),teardown),stx_Stream.pure(stx_test_TestPhaseSum.TP_ReportTestCaseComplete(test_case_data)));
};
stx_test_TestCaseDataRun.updown = function(fn,timeout,cons) {
	var this1 = stx_test_Logging.log(stx_nano_Wildcard.__);
	var fn1 = function(pos) {
		return pos.with_stamp(function(stamp) {
			return stamp.relevel(0);
		});
	};
	(function(value,pos) {
		this1(value,fn1(pos));
	})(stx_log_Stringify.fromString("updown")(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/test/Runner.hx", lineNumber : 46, className : "stx.test.TestCaseDataRun", methodName : "updown"}));
	var self = function() {
		var self = stx_pico_Option.flatten(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,fn()));
		var self1;
		switch(self._hx_index) {
		case 0:
			var t = self.v;
			self1 = tink_core_Future.first(t,stx_test_core_Timeout.make(timeout));
			break;
		case 1:
			self1 = stx_test_TestResult.unit();
			break;
		}
		return tink_core_Future.map(tink_core_Future.map(self1,function(x) {
			return x();
		}),function(opt) {
			switch(opt._hx_index) {
			case 0:
				var t = opt.v;
				return cons(t);
			case 1:
				return stx_test_TestPhaseSum.TP_Null;
			}
		});
	};
	return stx_Stream.lift(stx_nano_Signal.make(function(cb) {
		return self().handle(function(x) {
			cb(stx_nano_ChunkSum.Val(x));
			cb(stx_nano_ChunkSum.End());
		});
	}));
};
var stx_test_MethodCallRun = function() { };
$hxClasses["stx.test.MethodCallRun"] = stx_test_MethodCallRun;
stx_test_MethodCallRun.__name__ = "stx.test.MethodCallRun";
stx_test_MethodCallRun.apply = function(method_call) {
	var self = function() {
		return tink_core_Future.map(method_call.call(),function(eff) {
			var this1 = stx_test_Logging.log(stx_nano_Wildcard.__);
			var fn = function(pos) {
				return pos.with_stamp(function(stamp) {
					return stamp.relevel(2);
				});
			};
			(function(value,pos) {
				this1(value,fn(pos));
			})(stx_log_Stringify.fromString("" + method_call.field_name + " called")(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/test/Runner.hx", lineNumber : 59, className : "stx.test.MethodCallRun", methodName : "apply"}));
			var self = eff();
			switch(self._hx_index) {
			case 0:
				var t = self.v;
				var method_call1 = method_call.object;
				var self = method_call.position();
				var self1;
				if(self._hx_index == 0) {
					var v = self.v;
					self1 = v;
				} else {
					self1 = null;
				}
				method_call1.error_test("EFF",t,self1);
				return null;
			case 1:
				return null;
			}
		});
	};
	return stx_StreamLift.flat_map(stx_Stream.lift(stx_nano_Signal.make(function(cb) {
		return self().handle(function(x) {
			cb(stx_nano_ChunkSum.Val(x));
			cb(stx_nano_ChunkSum.End());
		});
	})),function(_) {
		var this1 = stx_test_Logging.log(stx_nano_Wildcard.__);
		var fn = function(pos) {
			return pos.with_stamp(function(stamp) {
				return stamp.relevel(1);
			});
		};
		(function(value,pos) {
			this1(value,fn(pos));
		})(stx_log_Stringify.fromString("after " + method_call.field_name + " effects")(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/test/Runner.hx", lineNumber : 69, className : "stx.test.MethodCallRun", methodName : "apply"}));
		var asserts = method_call.get_assertions();
		var stream = stx_StreamLift.flat_map(stx_Stream.fromArray(asserts),function(val) {
			var this1 = stx_test_Logging.log(stx_nano_Wildcard.__);
			var fn = function(pos) {
				return pos.with_stamp(function(stamp) {
					return stamp.relevel(1);
				});
			};
			(function(value,pos) {
				this1(value,fn(pos));
			})(stx_log_Stringify.fromString("before " + method_call.field_name + " AssertionRun")(new stx_log_EntryCtr()),stx_log_LogPosition.fromPos({ fileName : "stx/test/Runner.hx", lineNumber : 73, className : "stx.test.MethodCallRun", methodName : "apply"}));
			return stx_test_AssertionRun.apply(val,method_call);
		});
		return stream;
	});
};
var stx_test_AssertionRun = function() { };
$hxClasses["stx.test.AssertionRun"] = stx_test_AssertionRun;
stx_test_AssertionRun.__name__ = "stx.test.AssertionRun";
stx_test_AssertionRun.apply = function(assertion,method_call) {
	return stx_LiftIf.if_else(assertion.truth,function() {
		return stx_Stream.unit();
	},function() {
		return stx_Stream.pure(stx_test_TestPhaseSum.TP_ReportFailure(assertion,method_call));
	});
};
var stx_test_TestCaseData = function(test_case,class_name,method_calls) {
	this.test_case = test_case;
	this.class_name = class_name;
	this.method_calls = method_calls;
};
$hxClasses["stx.test.TestCaseData"] = stx_test_TestCaseData;
stx_test_TestCaseData.__name__ = "stx.test.TestCaseData";
stx_test_TestCaseData.make = function(test_case,class_name,method_calls) {
	return new stx_test_TestCaseData(test_case,class_name,method_calls);
};
stx_test_TestCaseData.prototype = {
	test_case: null
	,class_name: null
	,method_calls: null
	,has_failures: function() {
		var failed = false;
		var _g_current = 0;
		var _g_array = this.method_calls;
		while(_g_current < _g_array.length) {
			var mc = _g_array[_g_current++];
			if(stx_test_Assertions.get_failures(mc.get_assertions()).length > 0) {
				failed = true;
				break;
			}
		}
		return failed;
	}
	,has_assertions: function() {
		var bool = false;
		var _g_current = 0;
		var _g_array = this.method_calls;
		while(_g_current < _g_array.length) {
			var mc = _g_array[_g_current++];
			bool = mc.has_assertions();
			if(bool) {
				break;
			}
		}
		return bool;
	}
	,toString: function() {
		return "TestCaseData(" + this.class_name + ")";
	}
	,copy: function(test_case,class_name,method_calls) {
		var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,test_case);
		var tmp;
		if(self._hx_index == 0) {
			var v = self.v;
			tmp = v;
		} else {
			tmp = this.test_case;
		}
		var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,class_name);
		var tmp1;
		if(self._hx_index == 0) {
			var v = self.v;
			tmp1 = v;
		} else {
			tmp1 = this.class_name;
		}
		var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,method_calls);
		var tmp2;
		if(self._hx_index == 0) {
			var v = self.v;
			tmp2 = v;
		} else {
			tmp2 = this.method_calls;
		}
		return stx_test_TestCaseData.make(tmp,tmp1,tmp2);
	}
	,__class__: stx_test_TestCaseData
};
var stx_test_TestCaseLift = function() { };
$hxClasses["stx.test.TestCaseLift"] = stx_test_TestCaseLift;
stx_test_TestCaseLift.__name__ = "stx.test.TestCaseLift";
stx_test_TestCaseLift.get_tests = function(v,timeout) {
	var clazz = js_Boot.getClass(v);
	var class_name = clazz.__name__;
	var type_meta = haxe_rtti_Meta.getType(clazz);
	var type_is_async = Object.prototype.hasOwnProperty.call(type_meta,"stx.test.async");
	var fields = Type.getInstanceFields(clazz);
	var fields_meta = haxe_rtti_Meta.getFields(clazz);
	var this1 = stx_test_Logging.log(stx_nano_Wildcard.__);
	var fn = function(pos) {
		return pos.with_stamp(function(stamp) {
			return stamp.relevel(2);
		});
	};
	(function(value,pos) {
		this1(value,fn(pos));
	})(new stx_log_EntryCtr().pure(fields),stx_log_LogPosition.fromPos({ fileName : "stx/test/TestCaseLift.hx", lineNumber : 17, className : "stx.test.TestCaseLift", methodName : "get_tests"}));
	var _g = [];
	var _g1 = 0;
	var _g2 = fields;
	while(_g1 < _g2.length) {
		var v1 = _g2[_g1];
		++_g1;
		if(StringTools.startsWith(v1,"test")) {
			_g.push(v1);
		}
	}
	var test_fields = _g;
	var applications = stx_lift_ArrayLift.map_filter(test_fields,function(field_name) {
		var field_meta = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,Reflect.field(fields_meta,field_name));
		var self = stx_pico_OptionLift.map(field_meta,function(o) {
			return Object.prototype.hasOwnProperty.call(o,"stx.test.async");
		});
		var field_is_async;
		if(self._hx_index == 0) {
			var v1 = self.v;
			field_is_async = v1;
		} else {
			field_is_async = false;
		}
		if(type_is_async || field_is_async) {
			return haxe_ds_Option.Some(stx_test_TestCaseLift.get_test(v,class_name,field_name,stx_test_FnType.OneZero,timeout));
		} else {
			return haxe_ds_Option.Some(stx_test_TestCaseLift.get_test(v,class_name,field_name,stx_test_FnType.ZeroZero,timeout));
		}
	});
	var result = new Array(applications.length);
	var _g = 0;
	var _g1 = applications.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = applications[i].field_name;
	}
	var names = result;
	var name_exists = function(name) {
		return stx_lift_ArrayLift.any(names,function(n) {
			return n == name;
		});
	};
	var depends_on = function(l,r) {
		return stx_lift_ArrayLift.any(l.depends(),function(name) {
			return r.field_name == name;
		});
	};
	var _this = applications.slice();
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		var application = _this[i];
		var get_depends = [null];
		get_depends[0] = (function(get_depends) {
			return function(application,stack) {
				var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stack);
				if(self._hx_index == 0) {
					var v = self.v;
					stack = v;
				} else {
					stack = [];
				}
				var _this = application.depends();
				var result = new Array(_this.length);
				var _g = 0;
				var _g1 = _this.length;
				while(_g < _g1) {
					var i = _g++;
					var string = [_this[i]];
					result[i] = stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,string[0],stx_lift_ArrayLift.search(applications,(function(string) {
						return function(application) {
							return application.field_name == string[0];
						};
					})(string)));
				}
				var _this = result;
				var f = stx_nano_lift_LiftNano.decouple(stx_nano_Wildcard.__,(function() {
					return function(string,option) {
						var self = stx_nano_lift_LiftOptionNano.resolve(option,(function() {
							return function(f) {
								return stx_fail_Refuse.make(haxe_ds_Option.Some(stx_fail_DeclineSum.INTERIOR(stx_nano_CTR.apply((function() {
									return function(_) {
										return stx_test_core_Errors.e_dependency_not_found(_,"" + string);
									};
								})(),stx_Nano.digests(stx_nano_Wildcard.__)))),haxe_ds_Option.None,stx_pico_Option.fromNullT(f));
							};
						})(),{ fileName : "stx/test/TestCaseLift.hx", lineNumber : 51, className : "stx.test.TestCaseLift", methodName : "get_tests"});
						var value;
						switch(self._hx_index) {
						case 0:
							var t = self.t;
							value = t;
							break;
						case 1:
							var e = self.e;
							throw haxe_Exception.thrown(e);
						}
						return stx_nano_lift_LiftNano.couple(stx_nano_Wildcard.__,string,value);
					};
				})());
				var result = new Array(_this.length);
				var _g = 0;
				var _g1 = _this.length;
				while(_g < _g1) {
					var i = _g++;
					result[i] = f(_this[i]);
				}
				var dependencies = result;
				var _g = [];
				var _g1 = 0;
				var _g2 = dependencies;
				while(_g1 < _g2.length) {
					var v = _g2[_g1];
					++_g1;
					if(!stx_lift_ArrayLift.any(stack,(function(couple) {
						return function(name) {
							return stx_nano_CoupleLift.fst(couple[0]) == name;
						};
					})([v]))) {
						_g.push(v);
					}
				}
				return stx_lift_ArrayLift.flat_map(_g,(function(get_depends) {
					return function(couple) {
						return stx_LiftIf.if_else(stx_nano_CoupleLift.snd(couple).depends().length > 0,(function(get_depends) {
							return function() {
								var get_depends1 = get_depends[0];
								var tmp = stx_nano_CoupleLift.snd(couple);
								var result = new Array(dependencies.length);
								var _g = 0;
								var _g1 = dependencies.length;
								while(_g < _g1) {
									var i = _g++;
									result[i] = stx_nano_CoupleLift.fst(dependencies[i]);
								}
								return get_depends1(tmp,result);
							};
						})(get_depends),(function() {
							return function() {
								var result = new Array(dependencies.length);
								var _g = 0;
								var _g1 = dependencies.length;
								while(_g < _g1) {
									var i = _g++;
									result[i] = stx_nano_CoupleLift.fst(dependencies[i]);
								}
								return result;
							};
						})());
					};
				})(get_depends));
			};
		})(get_depends);
		var dependencies = get_depends[0](application);
		var result1 = new Array(dependencies.length);
		var _g2 = 0;
		var _g3 = dependencies.length;
		while(_g2 < _g3) {
			var i1 = _g2++;
			var s = [dependencies[i1]];
			var self = stx_lift_ArrayLift.search(applications,(function(s) {
				return function(application) {
					return application.field_name == s[0];
				};
			})(s));
			var tmp;
			if(self._hx_index == 0) {
				var v1 = self.v;
				tmp = v1;
			} else {
				throw haxe_Exception.thrown("no method named `" + s[0] + "` available on " + application.field_name + "}");
			}
			result1[i1] = tmp;
		}
		var depends = result1;
		result[i] = [application].concat(depends);
	}
	var ordered_applications = result;
	var inner_order = function(l,r) {
		return stx_lift_ArrayLift.any(l,function(x) {
			return stx_lift_ArrayLift.any(r,function(y) {
				return x.field_name == y.field_name;
			});
		});
	};
	haxe_ds_ArraySort.sort(ordered_applications,function(lhs,rhs) {
		if(inner_order(lhs,rhs)) {
			return 1;
		} else if(inner_order(rhs,lhs)) {
			return -1;
		} else {
			return 0;
		}
	});
	var reworked_applications = stx_lift_ArrayLift.map_filter(ordered_applications,function(_) {
		return stx_lift_ArrayLift.head(_);
	});
	var reordered_applications = stx_lift_ArrayLift.map_filter(ordered_applications,function(_) {
		return stx_lift_ArrayLift.head(_);
	});
	return new stx_test_TestCaseData(v.asTestCase(),class_name,reordered_applications);
};
stx_test_TestCaseLift.get_test = function(test_case,class_name,field_name,size,timeout) {
	var c = js_Boot.getClass(test_case);
	var type_name = c.__name__;
	var call = stx_test_TestCaseLift.make_call(test_case,field_name,size);
	return new stx_test_MethodCall(test_case,class_name,field_name,call,timeout);
};
stx_test_TestCaseLift.make_call = function(test_case,field_name,len) {
	var call_zero_zero = function() {
		return Reflect.field(test_case,field_name).apply(test_case,[]);
	};
	var call_zero_one = function() {
		return Reflect.field(test_case,field_name).apply(test_case,[]);
	};
	var call_one = function(v) {
		return Reflect.field(test_case,field_name).apply(test_case,[v]);
	};
	var wrap = function(fn) {
		return function() {
			try {
				return fn();
			} catch( _g ) {
				var e = haxe_Exception.caught(_g);
				test_case.raise(e,null,{ fileName : "stx/test/TestCaseLift.hx", lineNumber : 127, className : "stx.test.TestCaseLift", methodName : "make_call"});
				return haxe_ds_Option.None;
			}
		};
	};
	var tmp;
	switch(len._hx_index) {
	case 0:
		tmp = wrap(function() {
			call_zero_zero();
			return haxe_ds_Option.None;
		});
		break;
	case 1:
		tmp = wrap(function() {
			var out = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,call_zero_one());
			return out;
		});
		break;
	case 2:
		tmp = wrap(function() {
			var async = stx_test_Async.wait();
			call_one(async);
			return haxe_ds_Option.Some(async);
		});
		break;
	}
	return stx_test_TestMethodZero.lift(tmp);
};
var stx_test_TestEffect = {};
stx_test_TestEffect.unit = function() {
	return function() {
		return stx_pico_Option.unit();
	};
};
stx_test_TestEffect.fromFn = function(fn,pos) {
	return function() {
		var fn1 = stx_fn_Thunk.prj(stx_fn_BlockLift.returning(fn,null));
		var self;
		try {
			self = stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,fn1());
		} catch( _g ) {
			var _g1 = haxe_Exception.caught(_g);
			var _g2 = _g1.unwrap();
			if(js_Boot.__implements(_g2,stx_fail_ErrorApi)) {
				var e = _g2;
				var tmp = e.get_stack();
				haxe_Log.trace(tmp == null ? "null" : stx_pico_Option.toString(tmp),{ fileName : "stx/test/Util.hx", lineNumber : 8, className : "stx.test.Util", methodName : "or_res"});
				self = stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.errate(stx_fail_Refuse.lift(stx_fail_Error.errate(e,stx_fail_DeclineSum.EXTERIOR)),stx_fail_TestFailureSum.E_Test_Refuse)),{ fileName : "stx/test/Util.hx", lineNumber : 9, className : "stx.test.Util", methodName : "or_res"});
			} else {
				var e = _g1;
				var tmp = e.get_stack();
				haxe_Log.trace(tmp == null ? "null" : haxe_CallStack.toString(tmp),{ fileName : "stx/test/Util.hx", lineNumber : 11, className : "stx.test.Util", methodName : "or_res"});
				self = stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.make(haxe_ds_Option.Some(stx_fail_DeclineSum.EXTERIOR(stx_fail_TestFailureSum.E_Test_Exception(e))),haxe_ds_Option.None,stx_pico_Option.fromNullT(pos))),{ fileName : "stx/test/Util.hx", lineNumber : 12, className : "stx.test.Util", methodName : "or_res"});
			}
		}
		switch(self._hx_index) {
		case 0:
			var t = self.t;
			return stx_pico_Option.unit();
		case 1:
			var e = self.e;
			return stx_pico_Option.pure(stx_fail_TestFailureSum.E_Test_Refuse(e));
		}
	};
};
stx_test_TestEffect.fromTestFailure = function(self) {
	return function() {
		return stx_pico_Option.pure(self);
	};
};
stx_test_TestEffect.fromError = function(err) {
	return function() {
		return stx_pico_Option.pure(stx_fail_TestFailureSum.E_Test_Refuse(stx_fail_Refuse.lift(stx_fail_Error.errate(err,stx_fail_DeclineSum.EXTERIOR))));
	};
};
stx_test_TestEffect.fromRefuse = function(err) {
	return function() {
		return stx_pico_Option.pure(stx_fail_TestFailureSum.E_Test_Refuse(err));
	};
};
var stx_test_TestMethodSum = $hxEnums["stx.test.TestMethodSum"] = { __ename__:"stx.test.TestMethodSum",__constructs__:null
	,TMZero: ($_=function(m) { return {_hx_index:0,m:m,__enum__:"stx.test.TestMethodSum",toString:$estr}; },$_._hx_name="TMZero",$_.__params__ = ["m"],$_)
	,TMOne: ($_=function(m) { return {_hx_index:1,m:m,__enum__:"stx.test.TestMethodSum",toString:$estr}; },$_._hx_name="TMOne",$_.__params__ = ["m"],$_)
};
stx_test_TestMethodSum.__constructs__ = [stx_test_TestMethodSum.TMZero,stx_test_TestMethodSum.TMOne];
var stx_test_TestMethod = {};
stx_test_TestMethod._new = function(self) {
	var this1 = self;
	return this1;
};
stx_test_TestMethod.lift = function(self) {
	return stx_test_TestMethod._new(self);
};
stx_test_TestMethod.fromTestMethodZero = function(self) {
	return stx_test_TestMethod.lift(stx_test_TestMethodSum.TMZero(self));
};
stx_test_TestMethod.fromTestMethodOne = function(self) {
	return stx_test_TestMethod.lift(stx_test_TestMethodSum.TMOne(self));
};
stx_test_TestMethod.prj = function(this1) {
	return this1;
};
var stx_test_TestMethodOne = {};
stx_test_TestMethodOne._new = function(self) {
	var this1 = self;
	return this1;
};
stx_test_TestMethodOne.fromCallback = function(fn) {
	return stx_test_TestMethodOne._new(fn);
};
var stx_test_TestMethodZero = {};
stx_test_TestMethodZero._new = function(self) {
	var this1 = self;
	return this1;
};
stx_test_TestMethodZero.lift = function(self) {
	return stx_test_TestMethodZero._new(self);
};
stx_test_TestMethodZero.fromVoid = function(fn) {
	return stx_test_TestMethodZero.lift(function() {
		fn();
		return haxe_ds_Option.None;
	});
};
stx_test_TestMethodZero.fromAsync = function(fn) {
	return stx_test_TestMethodZero.lift(function() {
		return haxe_ds_Option.Some(fn());
	});
};
stx_test_TestMethodZero.prj = function(this1) {
	return this1;
};
var stx_test_TestPhaseSum = $hxEnums["stx.test.TestPhaseSum"] = { __ename__:"stx.test.TestPhaseSum",__constructs__:null
	,TP_Null: {_hx_name:"TP_Null",_hx_index:0,__enum__:"stx.test.TestPhaseSum",toString:$estr}
	,TP_Tick: ($_=function(info) { return {_hx_index:1,info:info,__enum__:"stx.test.TestPhaseSum",toString:$estr}; },$_._hx_name="TP_Tick",$_.__params__ = ["info"],$_)
	,TP_StartTestCase: ($_=function(test_case_data) { return {_hx_index:2,test_case_data:test_case_data,__enum__:"stx.test.TestPhaseSum",toString:$estr}; },$_._hx_name="TP_StartTestCase",$_.__params__ = ["test_case_data"],$_)
	,TP_StartTest: ($_=function(method_call) { return {_hx_index:3,method_call:method_call,__enum__:"stx.test.TestPhaseSum",toString:$estr}; },$_._hx_name="TP_StartTest",$_.__params__ = ["method_call"],$_)
	,TP_ReportFatal: ($_=function(err) { return {_hx_index:4,err:err,__enum__:"stx.test.TestPhaseSum",toString:$estr}; },$_._hx_name="TP_ReportFatal",$_.__params__ = ["err"],$_)
	,TP_Setup: ($_=function(f) { return {_hx_index:5,f:f,__enum__:"stx.test.TestPhaseSum",toString:$estr}; },$_._hx_name="TP_Setup",$_.__params__ = ["f"],$_)
	,TP_Before: ($_=function(f) { return {_hx_index:6,f:f,__enum__:"stx.test.TestPhaseSum",toString:$estr}; },$_._hx_name="TP_Before",$_.__params__ = ["f"],$_)
	,TP_After: ($_=function(f) { return {_hx_index:7,f:f,__enum__:"stx.test.TestPhaseSum",toString:$estr}; },$_._hx_name="TP_After",$_.__params__ = ["f"],$_)
	,TP_Teardown: ($_=function(f) { return {_hx_index:8,f:f,__enum__:"stx.test.TestPhaseSum",toString:$estr}; },$_._hx_name="TP_Teardown",$_.__params__ = ["f"],$_)
	,TP_ReportFailure: ($_=function(assertion,method_call) { return {_hx_index:9,assertion:assertion,method_call:method_call,__enum__:"stx.test.TestPhaseSum",toString:$estr}; },$_._hx_name="TP_ReportFailure",$_.__params__ = ["assertion","method_call"],$_)
	,TP_ReportTestComplete: ($_=function(method_call) { return {_hx_index:10,method_call:method_call,__enum__:"stx.test.TestPhaseSum",toString:$estr}; },$_._hx_name="TP_ReportTestComplete",$_.__params__ = ["method_call"],$_)
	,TP_ReportTestCaseComplete: ($_=function(test_case_data) { return {_hx_index:11,test_case_data:test_case_data,__enum__:"stx.test.TestPhaseSum",toString:$estr}; },$_._hx_name="TP_ReportTestCaseComplete",$_.__params__ = ["test_case_data"],$_)
	,TP_ReportTestSuiteComplete: ($_=function(test_suite) { return {_hx_index:12,test_suite:test_suite,__enum__:"stx.test.TestPhaseSum",toString:$estr}; },$_._hx_name="TP_ReportTestSuiteComplete",$_.__params__ = ["test_suite"],$_)
};
stx_test_TestPhaseSum.__constructs__ = [stx_test_TestPhaseSum.TP_Null,stx_test_TestPhaseSum.TP_Tick,stx_test_TestPhaseSum.TP_StartTestCase,stx_test_TestPhaseSum.TP_StartTest,stx_test_TestPhaseSum.TP_ReportFatal,stx_test_TestPhaseSum.TP_Setup,stx_test_TestPhaseSum.TP_Before,stx_test_TestPhaseSum.TP_After,stx_test_TestPhaseSum.TP_Teardown,stx_test_TestPhaseSum.TP_ReportFailure,stx_test_TestPhaseSum.TP_ReportTestComplete,stx_test_TestPhaseSum.TP_ReportTestCaseComplete,stx_test_TestPhaseSum.TP_ReportTestSuiteComplete];
var stx_test_TestResult = {};
stx_test_TestResult.pure = function(self) {
	return tink_core_Future.irreversible(function(cb) {
		cb(self);
	});
};
stx_test_TestResult.unit = function() {
	var self = stx_test_TestEffect.unit();
	return tink_core_Future.irreversible(function(cb) {
		cb(self);
	});
};
stx_test_TestResult.fromError = function(err) {
	var self = stx_test_TestEffect.fromError(err);
	return tink_core_Future.irreversible(function(cb) {
		cb(self);
	});
};
var stx_test_TestSuite = function(test_cases) {
	this.test_cases = test_cases;
};
$hxClasses["stx.test.TestSuite"] = stx_test_TestSuite;
stx_test_TestSuite.__name__ = "stx.test.TestSuite";
stx_test_TestSuite.prototype = {
	test_cases: null
	,is_clean: function() {
		var clean = true;
		var _g_current = 0;
		var _g_array = this.test_cases;
		while(_g_current < _g_array.length) {
			var tcd = _g_array[_g_current++];
			if(tcd.has_failures()) {
				clean = false;
				break;
			}
		}
		return clean;
	}
	,__class__: stx_test_TestSuite
};
var stx_test_Util = function() { };
$hxClasses["stx.test.Util"] = stx_test_Util;
stx_test_Util.__name__ = "stx.test.Util";
stx_test_Util.or_res = function(fn,pos) {
	try {
		return stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,fn());
	} catch( _g ) {
		var _g1 = haxe_Exception.caught(_g);
		var _g2 = _g1.unwrap();
		if(js_Boot.__implements(_g2,stx_fail_ErrorApi)) {
			var e = _g2;
			var tmp = e.get_stack();
			haxe_Log.trace(tmp == null ? "null" : stx_pico_Option.toString(tmp),{ fileName : "stx/test/Util.hx", lineNumber : 8, className : "stx.test.Util", methodName : "or_res"});
			return stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.errate(stx_fail_Refuse.lift(stx_fail_Error.errate(e,stx_fail_DeclineSum.EXTERIOR)),stx_fail_TestFailureSum.E_Test_Refuse)),{ fileName : "stx/test/Util.hx", lineNumber : 9, className : "stx.test.Util", methodName : "or_res"});
		} else {
			var e = _g1;
			var tmp = e.get_stack();
			haxe_Log.trace(tmp == null ? "null" : haxe_CallStack.toString(tmp),{ fileName : "stx/test/Util.hx", lineNumber : 11, className : "stx.test.Util", methodName : "or_res"});
			return stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.make(haxe_ds_Option.Some(stx_fail_DeclineSum.EXTERIOR(stx_fail_TestFailureSum.E_Test_Exception(e))),haxe_ds_Option.None,stx_pico_Option.fromNullT(pos))),{ fileName : "stx/test/Util.hx", lineNumber : 12, className : "stx.test.Util", methodName : "or_res"});
		}
	}
};
var stx_test_WrappedFuture = {};
stx_test_WrappedFuture._new = function(self) {
	var this1 = self;
	return this1;
};
stx_test_WrappedFuture.consume = function(this1,cb,async) {
	var link = this1.handle(function(x) {
		var self;
		try {
			var self1 = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,cb(stx_nano_TripleLift.thd(x)));
			var v = stx_nano_Report.unit();
			var self2;
			if(self1._hx_index == 0) {
				var v1 = self1.v;
				self2 = v1;
			} else {
				self2 = v;
			}
			if(self2 != null) {
				switch(self2._hx_index) {
				case 0:
					var v = self2.v;
					var str = stx_Show.show(stx_nano_Wildcard.__,v.get_data());
					stx_nano_TripleLift.snd(x).error(v,stx_nano_TripleLift.fst(x));
					break;
				case 1:
					break;
				}
			}
			self = stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,null);
		} catch( _g ) {
			var _g1 = haxe_Exception.caught(_g);
			var _g2 = _g1.unwrap();
			if(js_Boot.__implements(_g2,stx_fail_ErrorApi)) {
				var e = _g2;
				var tmp = e.get_stack();
				haxe_Log.trace(tmp == null ? "null" : stx_pico_Option.toString(tmp),{ fileName : "stx/test/Util.hx", lineNumber : 8, className : "stx.test.Util", methodName : "or_res"});
				self = stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.errate(stx_fail_Refuse.lift(stx_fail_Error.errate(e,stx_fail_DeclineSum.EXTERIOR)),stx_fail_TestFailureSum.E_Test_Refuse)),{ fileName : "stx/test/Util.hx", lineNumber : 9, className : "stx.test.Util", methodName : "or_res"});
			} else {
				var e = _g1;
				var tmp = e.get_stack();
				haxe_Log.trace(tmp == null ? "null" : haxe_CallStack.toString(tmp),{ fileName : "stx/test/Util.hx", lineNumber : 11, className : "stx.test.Util", methodName : "or_res"});
				self = stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.make(haxe_ds_Option.Some(stx_fail_DeclineSum.EXTERIOR(stx_fail_TestFailureSum.E_Test_Exception(e))),haxe_ds_Option.None,stx_pico_Option.fromNullT({ fileName : "stx/test/WrappedFuture.hx", lineNumber : 8, className : "stx.test._WrappedFuture.WrappedFuture_Impl_", methodName : "consume"}))),{ fileName : "stx/test/Util.hx", lineNumber : 12, className : "stx.test.Util", methodName : "or_res"});
			}
		}
		switch(self._hx_index) {
		case 0:
			var t = self.t;
			break;
		case 1:
			var e = self.e;
			var link = stx_nano_TripleLift.snd(x);
			var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,stx_nano_TripleLift.fst(x));
			link.error(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_TestFailureSum.E_Test_Refuse(e))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1)),stx_nano_TripleLift.fst(x));
			break;
		}
		if(async != null) {
			stx_test_Async.done(async);
		}
	});
};
stx_test_WrappedFuture.lift = function(self) {
	return stx_test_WrappedFuture._new(self);
};
stx_test_WrappedFuture.prj = function(this1) {
	return this1;
};
stx_test_WrappedFuture.get_self = function(this1) {
	return this1;
};
var stx_test_auto_ClassPath = {};
stx_test_auto_ClassPath._new = function(self) {
	var this1 = self;
	return this1;
};
stx_test_auto_ClassPath.make = function(self) {
	return stx_test_auto_ClassPath._new(self);
};
stx_test_auto_ClassPath.prj = function(this1) {
	return this1;
};
var stx_test_auto_Op = $hxEnums["stx.test.auto.Op"] = { __ename__:"stx.test.auto.Op",__constructs__:null
	,Include: {_hx_name:"Include",_hx_index:0,__enum__:"stx.test.auto.Op",toString:$estr}
	,Exclude: {_hx_name:"Exclude",_hx_index:1,__enum__:"stx.test.auto.Op",toString:$estr}
};
stx_test_auto_Op.__constructs__ = [stx_test_auto_Op.Include,stx_test_auto_Op.Exclude];
var stx_test_core_Assertion = {};
stx_test_core_Assertion.make = function(truth,explanation,failure,pos) {
	var self = stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,failure);
	var tmp;
	if(self._hx_index == 0) {
		var v = self.v;
		tmp = v;
	} else {
		tmp = stx_fail_TestFailureSum.TestFailedBecause(explanation);
	}
	return stx_test_core_Assertion._new({ truth : truth, explanation : explanation, failure : tmp, pos : pos});
};
stx_test_core_Assertion.outcome = function(this1) {
	if(this1.truth) {
		return stx_nano_lift_LiftNano.success(stx_nano_Wildcard.__,this1.explanation);
	} else {
		return stx_nano_lift_LiftNano.failure(stx_nano_Wildcard.__,this1.failure);
	}
};
stx_test_core_Assertion.toString = function(this1) {
	var self = stx_test_core_Assertion.outcome(this1);
	switch(self._hx_index) {
	case 0:
		var t = self.t;
		return t;
	case 1:
		var e = self.e;
		return stx_Show.show(stx_nano_Wildcard.__,e);
	}
};
stx_test_core_Assertion._new = function(self) {
	var this1 = self;
	return this1;
};
var stx_test_core_Dependencies = function(source) {
	this.source = source;
};
$hxClasses["stx.test.core.Dependencies"] = stx_test_core_Dependencies;
stx_test_core_Dependencies.__name__ = "stx.test.core.Dependencies";
stx_test_core_Dependencies.prototype = {
	source: null
	,reply: function() {
		var target = this.source.slice();
	}
	,center: function(arr) {
		return Math.round(this.source.length / 2);
	}
	,__class__: stx_test_core_Dependencies
};
var stx_test_core_Errors = function() { };
$hxClasses["stx.test.core.Errors"] = stx_test_core_Errors;
stx_test_core_Errors.__name__ = "stx.test.core.Errors";
stx_test_core_Errors.e_dependency_not_found = function(digests,name) {
	return new stx_test_core_EDependencyNotFound(name);
};
stx_test_core_Errors.e_suite_failed = function(digests) {
	return new stx_test_core_ESuiteFailed();
};
var stx_test_core_EDependencyNotFound = function(name) {
	stx_fail_Digest.call(this,"01FRQ8G5NCTBY7YV908Y41NZPP","Dependency " + name + " not found");
};
$hxClasses["stx.test.core.EDependencyNotFound"] = stx_test_core_EDependencyNotFound;
stx_test_core_EDependencyNotFound.__name__ = "stx.test.core.EDependencyNotFound";
stx_test_core_EDependencyNotFound.__super__ = stx_fail_Digest;
stx_test_core_EDependencyNotFound.prototype = $extend(stx_fail_Digest.prototype,{
	__class__: stx_test_core_EDependencyNotFound
});
var stx_test_core_ESuiteFailed = function() {
	stx_fail_Digest.call(this,"01FRQ8KHEHGBBSTN89XC492A0E","TestSuite failed");
};
$hxClasses["stx.test.core.ESuiteFailed"] = stx_test_core_ESuiteFailed;
stx_test_core_ESuiteFailed.__name__ = "stx.test.core.ESuiteFailed";
stx_test_core_ESuiteFailed.__super__ = stx_fail_Digest;
stx_test_core_ESuiteFailed.prototype = $extend(stx_fail_Digest.prototype,{
	__class__: stx_test_core_ESuiteFailed
});
var stx_test_core_Timeout = function() { };
$hxClasses["stx.test.core.Timeout"] = stx_test_core_Timeout;
stx_test_core_Timeout.__name__ = "stx.test.core.Timeout";
stx_test_core_Timeout.make = function(timeout) {
	return tink_core_Future.map(stx_stream_Timeout._new(timeout),function(_) {
		return stx_test_TestEffect.fromTestFailure(stx_fail_TestFailureSum.TestTimedOut(timeout));
	});
};
var stx_test_module__$Auto_AutoSpecToken = $hxEnums["stx.test.module._Auto.AutoSpecToken"] = { __ename__:"stx.test.module._Auto.AutoSpecToken",__constructs__:null
	,AIndeces: ($_=function(array) { return {_hx_index:0,array:array,__enum__:"stx.test.module._Auto.AutoSpecToken",toString:$estr}; },$_._hx_name="AIndeces",$_.__params__ = ["array"],$_)
	,AClassSpec: ($_=function(typename,op,tests) { return {_hx_index:1,typename:typename,op:op,tests:tests,__enum__:"stx.test.module._Auto.AutoSpecToken",toString:$estr}; },$_._hx_name="AClassSpec",$_.__params__ = ["typename","op","tests"],$_)
	,ASuiteSpec: ($_=function(name,op,classes) { return {_hx_index:2,name:name,op:op,classes:classes,__enum__:"stx.test.module._Auto.AutoSpecToken",toString:$estr}; },$_._hx_name="ASuiteSpec",$_.__params__ = ["name","op","classes"],$_)
};
stx_test_module__$Auto_AutoSpecToken.__constructs__ = [stx_test_module__$Auto_AutoSpecToken.AIndeces,stx_test_module__$Auto_AutoSpecToken.AClassSpec,stx_test_module__$Auto_AutoSpecToken.ASuiteSpec];
var stx_test_module_Auto = function() { };
$hxClasses["stx.test.module.Auto"] = stx_test_module_Auto;
stx_test_module_Auto.__name__ = "stx.test.module.Auto";
stx_test_module_Auto.main = function() {
	var pI = stx_test_module_Auto.indeces();
	var this1 = new stx_parse_parser_term_OneMany(stx_test_module_Auto.suite_spec(),{ fileName : "stx/parse/Parsers.hx", lineNumber : 50, className : "stx.parse.Parsers", methodName : "OneMany"});
	var this2 = new stx_parse_parser_term_CoupleWith(pI,stx_parse_Parser.get_self(this1),{ fileName : "stx/parse/Parsers.hx", lineNumber : 122, className : "stx.parse.Parsers", methodName : "CoupleWith"});
	var this1 = eu_ohmrun_pml_Extract.imbibe(stx_parse_Parser.get_self(this2),"main");
	var this2 = new stx_parse_parser_term_AnonThen(this1,stx_nano_lift_LiftNano.decouple(stx_nano_Wildcard.__,function(tI,tII) {
		if(tI._hx_index == 0) {
			var arr = tI.array;
			var self = stx_nano_Res.bind_fold(stx_nano_Cluster.toIter(tII),function(next,memo) {
				if(next._hx_index == 2) {
					var name = next.name;
					var op = next.op;
					var classes = next.classes;
					var self = stx_nano_Res.bind_fold(stx_nano_Cluster.toIter(classes),function(next,memo) {
						if(next._hx_index == 1) {
							var tname = next.typename;
							var op = next.op;
							var tests = next.tests;
							return stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,stx_nano_ClusterLift.snoc(memo,{ path : stx_test_auto_ClassPath.make(tname), op : op, methods : tests}));
						} else {
							return stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,function(f) {
								return stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_TestFailureSum.E_Test_BadSpec)),haxe_ds_Option.None,stx_pico_Option.fromNullT(f));
							},{ fileName : "stx/test/module/Auto.hx", lineNumber : 37, className : "stx.test.module.Auto", methodName : "main"});
						}
					},stx_nano_Cluster.lift([]));
					var fn = function(x) {
						return { name : name, specs : x, op : op};
					};
					var self1;
					switch(self._hx_index) {
					case 0:
						var t = self.t;
						self1 = stx_nano_ResSum.Accept(fn(t));
						break;
					case 1:
						var e = self.e;
						self1 = stx_nano_ResSum.Reject(e);
						break;
					}
					var this1 = self1;
					var self = this1;
					var _e = memo;
					var fn = function(t) {
						return stx_nano_ClusterLift.snoc(_e,t);
					};
					var self1;
					switch(self._hx_index) {
					case 0:
						var t = self.t;
						self1 = stx_nano_ResSum.Accept(fn(t));
						break;
					case 1:
						var e = self.e;
						self1 = stx_nano_ResSum.Reject(e);
						break;
					}
					var this1 = self1;
					return this1;
				} else {
					return stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,function(f) {
						return stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_TestFailureSum.E_Test_BadSpec)),haxe_ds_Option.None,stx_pico_Option.fromNullT(f));
					},{ fileName : "stx/test/module/Auto.hx", lineNumber : 49, className : "stx.test.module.Auto", methodName : "main"});
				}
			},[]);
			var self1;
			switch(self._hx_index) {
			case 0:
				var t = self.t;
				var specs = t;
				var self2 = stx_nano_Res.bind_fold(stx_nano_Cluster.toIter(arr),function(next,memo) {
					var self = stx_test_module_Auto.resolve_index(next);
					var _e = memo;
					var fn = function(that) {
						return stx_nano_Cluster.concat(_e,that);
					};
					var self1;
					switch(self._hx_index) {
					case 0:
						var t = self.t;
						self1 = stx_nano_ResSum.Accept(fn(t));
						break;
					case 1:
						var e = self.e;
						self1 = stx_nano_ResSum.Reject(e);
						break;
					}
					var this1 = self1;
					return this1;
				},stx_nano_Cluster.lift([]));
				var fn = function(cases) {
					return { cases : cases, specs : specs};
				};
				var self3;
				switch(self2._hx_index) {
				case 0:
					var t = self2.t;
					self3 = stx_nano_ResSum.Accept(fn(t));
					break;
				case 1:
					var e = self2.e;
					self3 = stx_nano_ResSum.Reject(e);
					break;
				}
				var this1 = self3;
				self1 = this1;
				break;
			case 1:
				var e = self.e;
				self1 = stx_nano_ResSum.Reject(e);
				break;
			}
			var this1 = self1;
			return this1;
		} else {
			return stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,function(f) {
				return stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_TestFailureSum.E_Test_NoIndeces)),haxe_ds_Option.None,stx_pico_Option.fromNullT(f));
			},{ fileName : "stx/test/module/Auto.hx", lineNumber : 70, className : "stx.test.module.Auto", methodName : "main"});
		}
	}),{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
	return stx_parse_Parser.get_self(this2);
};
stx_test_module_Auto.reply = function() {
	var pos = { fileName : "stx/test/module/Auto.hx", lineNumber : 76, className : "stx.test.module.Auto", methodName : "reply"};
	var str = "tests";
	if(!stx_nano_Resource.exists(str)) {
		if(pos == null) {
			throw haxe_Exception.thrown("E_ResourceNotFound(" + str + ")");
		} else {
			var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,pos);
			var error = stx_fail_Refuse.make(haxe_ds_Option.Some(stx_fail_DeclineSum.INTERIOR(stx_nano_CTR.apply(function(_) {
				return stx_nano_Digests.e_resource_not_found(_,str);
			},stx_Nano.digests(stx_nano_Wildcard.__)))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1));
			throw haxe_Exception.thrown(error);
		}
	}
	var this1 = str;
	var v = stx_nano_Resource.string(this1);
	var vI = stx_parse_ParseResult.toChunk((eu_ohmrun_Pml.pml(stx_nano_Wildcard.__).parseI())(stx_parse_ParseInput.pure(stx_parse_core_Enumerable.string(v))));
	var self;
	switch(vI._hx_index) {
	case 0:
		var v = vI.v;
		var self1 = stx_parse_ParseResult.toRes(stx_test_module_Auto.main().apply(stx_parse_ParseInput.pure(stx_parse_core_Enumerable.array(stx_nano_Cluster.prj([v])))));
		switch(self1._hx_index) {
		case 0:
			var t = self1.t;
			switch(t._hx_index) {
			case 0:
				var t1 = t.v;
				self = stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,t1);
				break;
			case 1:
				self = stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,function(f) {
					return stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_TestFailureSum.E_Test_BadSpec)),haxe_ds_Option.None,stx_pico_Option.fromNullT(f));
				},{ fileName : "stx/test/module/Auto.hx", lineNumber : 82, className : "stx.test.module.Auto", methodName : "reply"});
				break;
			}
			break;
		case 1:
			var e = self1.e;
			self = stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(e),{ fileName : "stx/test/module/Auto.hx", lineNumber : 84, className : "stx.test.module.Auto", methodName : "reply"});
			break;
		}
		break;
	case 1:
		self = stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,function(f) {
			return stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_TestFailureSum.E_Test_BadSpec)),haxe_ds_Option.None,stx_pico_Option.fromNullT(f));
		},{ fileName : "stx/test/module/Auto.hx", lineNumber : 87, className : "stx.test.module.Auto", methodName : "reply"});
		break;
	case 2:
		var e = vI.err;
		self = stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(e),{ fileName : "stx/test/module/Auto.hx", lineNumber : 86, className : "stx.test.module.Auto", methodName : "reply"});
		break;
	}
	var self1;
	switch(self._hx_index) {
	case 0:
		var t = self.t;
		self1 = stx_nano_Res.accept(t);
		break;
	case 1:
		var e = self.e;
		self1 = stx_nano_Res.reject(stx_fail_Refuse.errate(e,stx_fail_TestFailureSum.E_Test_ParseFailure));
		break;
	}
	var this1 = self1;
	var self = this1;
	var self1;
	switch(self._hx_index) {
	case 0:
		var t = self.t;
		self1 = t;
		break;
	case 1:
		var e = self.e;
		self1 = stx_nano_ResSum.Reject(e);
		break;
	}
	var this1 = self1;
	return this1;
};
stx_test_module_Auto.indeces = function() {
	var pI = eu_ohmrun_pml_Extract.symbol("indeces");
	var this1 = new stx_parse_parser_term_OneMany(eu_ohmrun_pml_Extract.wordish(),{ fileName : "stx/parse/Parsers.hx", lineNumber : 50, className : "stx.parse.Parsers", methodName : "OneMany"});
	var this2 = new stx_parse_parser_term_AndR(pI,stx_parse_Parser.get_self(this1),{ fileName : "stx/parse/Parsers.hx", lineNumber : 110, className : "stx.parse.Parsers", methodName : "AndR"});
	var this1 = stx_parse_Parser.get_self(this2);
	var this2 = new stx_parse_parser_term_AnonThen(this1,stx_test_module__$Auto_AutoSpecToken.AIndeces,{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
	return eu_ohmrun_pml_Extract.imbibe(stx_parse_Parser.get_self(this2),"main");
};
stx_test_module_Auto.suite_spec = function() {
	var this1 = new stx_parse_parser_term_CoupleWith(eu_ohmrun_pml_Extract.wordish(),stx_test_module_Auto.op(),{ fileName : "stx/parse/Parsers.hx", lineNumber : 122, className : "stx.parse.Parsers", methodName : "CoupleWith"});
	var this2 = new stx_parse_parser_term_CoupleWith(stx_parse_Parser.get_self(this1),eu_ohmrun_pml_Extract.imbibe(stx_test_module_Auto.class_spec_list(),"class_spec_list"),{ fileName : "stx/parse/Parsers.hx", lineNumber : 122, className : "stx.parse.Parsers", methodName : "CoupleWith"});
	var this1 = stx_parse_Parser.get_self(this2);
	var this2 = new stx_parse_parser_term_AnonThen(this1,function(x) {
		return stx_test_module__$Auto_AutoSpecToken.ASuiteSpec(stx_nano_CoupleLift.fst(stx_nano_CoupleLift.fst(x)),stx_nano_CoupleLift.snd(stx_nano_CoupleLift.fst(x)),stx_nano_CoupleLift.snd(x));
	},{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
	var this1 = eu_ohmrun_pml_Extract.imbibe(stx_parse_Parser.get_self(this2),"suite_spec");
	var this2 = new stx_parse_parser_term_CoupleWith(eu_ohmrun_pml_Extract.wordish(),stx_test_module_Auto.op(),{ fileName : "stx/parse/Parsers.hx", lineNumber : 122, className : "stx.parse.Parsers", methodName : "CoupleWith"});
	var pI = stx_parse_Parser.get_self(this2);
	var this2 = eu_ohmrun_pml_Extract.wordish();
	var this3 = new stx_parse_parser_term_AnonThen(this2,function(x) {
		return stx_test_module__$Auto_AutoSpecToken.AClassSpec(x);
	},{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
	var this2 = new stx_parse_parser_term_OneMany(stx_parse_Parser.get_self(this3),{ fileName : "stx/parse/Parsers.hx", lineNumber : 50, className : "stx.parse.Parsers", methodName : "OneMany"});
	var this3 = new stx_parse_parser_term_CoupleWith(pI,stx_parse_Parser.get_self(this2),{ fileName : "stx/parse/Parsers.hx", lineNumber : 122, className : "stx.parse.Parsers", methodName : "CoupleWith"});
	var this2 = stx_parse_Parser.get_self(this3);
	var this3 = new stx_parse_parser_term_AnonThen(this2,function(x) {
		return stx_test_module__$Auto_AutoSpecToken.ASuiteSpec(stx_nano_CoupleLift.fst(stx_nano_CoupleLift.fst(x)),stx_nano_CoupleLift.snd(stx_nano_CoupleLift.fst(x)),stx_nano_CoupleLift.snd(x));
	},{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
	var this2 = this1;
	var this1 = new stx_parse_parser_term_Or(this2,eu_ohmrun_pml_Extract.imbibe(stx_parse_Parser.get_self(this3),"suite_spec"),{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
	return stx_parse_Parser.get_self(this1);
};
stx_test_module_Auto.class_spec_list = function() {
	var this1 = eu_ohmrun_pml_Extract.imbibe(stx_test_module_Auto.class_spec_n(),"class_spec_n");
	var this2 = new stx_parse_parser_term_Or(this1,stx_test_module_Auto.class_spec_zero(),{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
	var this1 = new stx_parse_parser_term_OneMany(stx_parse_Parser.get_self(this2),{ fileName : "stx/parse/Parsers.hx", lineNumber : 50, className : "stx.parse.Parsers", methodName : "OneMany"});
	return stx_parse_Parser.get_self(this1);
};
stx_test_module_Auto.class_spec_zero = function() {
	var this1 = eu_ohmrun_pml_Extract.wordish();
	var this2 = new stx_parse_parser_term_AnonThen(this1,function(x) {
		return stx_test_module__$Auto_AutoSpecToken.AClassSpec(x);
	},{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
	return stx_parse_Parser.get_self(this2);
};
stx_test_module_Auto.class_spec_n = function() {
	var this1 = new stx_parse_parser_term_CoupleWith(eu_ohmrun_pml_Extract.wordish(),stx_test_module_Auto.op(),{ fileName : "stx/parse/Parsers.hx", lineNumber : 122, className : "stx.parse.Parsers", methodName : "CoupleWith"});
	var pI = stx_parse_Parser.get_self(this1);
	var this1 = new stx_parse_parser_term_OneMany(eu_ohmrun_pml_Extract.wordish(),{ fileName : "stx/parse/Parsers.hx", lineNumber : 50, className : "stx.parse.Parsers", methodName : "OneMany"});
	var this2 = new stx_parse_parser_term_CoupleWith(pI,stx_parse_Parser.get_self(this1),{ fileName : "stx/parse/Parsers.hx", lineNumber : 122, className : "stx.parse.Parsers", methodName : "CoupleWith"});
	var this1 = stx_parse_Parser.get_self(this2);
	var this2 = new stx_parse_parser_term_AnonThen(this1,function(x) {
		return stx_test_module__$Auto_AutoSpecToken.AClassSpec(stx_nano_CoupleLift.fst(stx_nano_CoupleLift.fst(x)),stx_nano_CoupleLift.snd(stx_nano_CoupleLift.fst(x)),stx_nano_CoupleLift.snd(x));
	},{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
	return stx_parse_Parser.get_self(this2);
};
stx_test_module_Auto.include = function() {
	var this1 = eu_ohmrun_pml_Extract.symbol("include");
	var this2 = new stx_parse_parser_term_AnonThen(this1,function(_) {
		return stx_test_auto_Op.Include;
	},{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
	return stx_parse_Parser.get_self(this2);
};
stx_test_module_Auto.exclude = function() {
	var this1 = eu_ohmrun_pml_Extract.symbol("exclude");
	var this2 = new stx_parse_parser_term_AnonThen(this1,function(_) {
		return stx_test_auto_Op.Exclude;
	},{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
	return stx_parse_Parser.get_self(this2);
};
stx_test_module_Auto.op = function() {
	var this1 = stx_test_module_Auto.include();
	var this2 = new stx_parse_parser_term_Or(this1,stx_test_module_Auto.exclude(),{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
	return stx_parse_Parser.get_self(this2);
};
stx_test_module_Auto.resolve_index = function(self) {
	var clazz = $hxClasses[self];
	return stx_nano_lift_LiftNano.if_else(clazz == null,function() {
		var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/test/module/Auto.hx", lineNumber : 135, className : "stx.test.module.Auto", methodName : "resolve_index"});
		return stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_TestFailureSum.E_Test_AutoClassNotFound(self))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1))),{ fileName : "stx/test/module/Auto.hx", lineNumber : 135, className : "stx.test.module.Auto", methodName : "resolve_index"});
	},function() {
		var self1 = stx_nano_lift_LiftOptionNano.resolve(stx_lift_ArrayLift.search(Type.getClassFields(clazz),function(x) {
			return x == "tests";
		}),function(f) {
			return stx_fail_Refuse.make(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,stx_fail_DeclineSum.EXTERIOR(stx_fail_TestFailureSum.E_Test_AutoFieldNotFound("" + self + ".tests()"))),haxe_ds_Option.None,stx_pico_Option.fromNullT(f));
		},{ fileName : "stx/test/module/Auto.hx", lineNumber : 136, className : "stx.test.module.Auto", methodName : "resolve_index"});
		var self2;
		switch(self1._hx_index) {
		case 0:
			var t = self1.t;
			try {
				var tests = (Reflect.field(clazz,"tests"))();
				self2 = stx_nano_lift_LiftNano.accept(stx_nano_Wildcard.__,tests);
			} catch( _g ) {
				var e = haxe_Exception.caught(_g);
				var this1 = stx_nano_lift_LiftNano.fault(stx_nano_Wildcard.__,{ fileName : "stx/test/module/Auto.hx", lineNumber : 145, className : "stx.test.module.Auto", methodName : "resolve_index"});
				self2 = stx_nano_lift_LiftNano.reject(stx_nano_Wildcard.__,stx_nano_CTR.fromR(stx_fail_Refuse.make(haxe_ds_Option.Some(stx_fail_DeclineSum.INTERIOR(stx_nano_CTR.apply(stx_nano_CTR.fromR(stx_Fail.explain(e)),stx_Nano.digests(stx_nano_Wildcard.__)))),haxe_ds_Option.None,stx_pico_Option.fromNullT(this1))),{ fileName : "stx/test/module/Auto.hx", lineNumber : 145, className : "stx.test.module.Auto", methodName : "resolve_index"});
			}
			break;
		case 1:
			var e = self1.e;
			self2 = stx_nano_ResSum.Reject(e);
			break;
		}
		var this1 = self2;
		return this1;
	});
};
var stx_test_reporter_ReportingApi = function() { };
$hxClasses["stx.test.reporter.ReportingApi"] = stx_test_reporter_ReportingApi;
stx_test_reporter_ReportingApi.__name__ = "stx.test.reporter.ReportingApi";
stx_test_reporter_ReportingApi.__isInterface__ = true;
stx_test_reporter_ReportingApi.prototype = {
	green_tick: null
	,get_green_tick: null
	,green_tick_on_black: null
	,get_green_tick_on_black: null
	,red_cross: null
	,get_red_cross: null
	,red_cross_on_black: null
	,get_red_cross_on_black: null
	,yellow_question_on_black: null
	,get_yellow_question_on_black: null
	,bad: null
	,get_bad: null
	,good: null
	,get_good: null
	,println: null
	,print_status: null
	,method_call_string: null
	,test_case_string: null
	,warn_string: null
	,ok_string: null
	,fail_string: null
	,info_string: null
	,__class__: stx_test_reporter_ReportingApi
};
var stx_test_reporter_RuntimeReporting = function() {
	stx_pico_Clazz.call(this);
};
$hxClasses["stx.test.reporter.RuntimeReporting"] = stx_test_reporter_RuntimeReporting;
stx_test_reporter_RuntimeReporting.__name__ = "stx.test.reporter.RuntimeReporting";
stx_test_reporter_RuntimeReporting.__interfaces__ = [stx_test_reporter_ReportingApi];
stx_test_reporter_RuntimeReporting.__super__ = stx_pico_Clazz;
stx_test_reporter_RuntimeReporting.prototype = $extend(stx_pico_Clazz.prototype,{
	green_tick: null
	,get_green_tick: function() {
		return "<green>✓</green>";
	}
	,green_tick_on_black: null
	,get_green_tick_on_black: function() {
		return "<bg_black>" + this.get_green_tick() + "</bg_black>";
	}
	,red_cross: null
	,get_red_cross: function() {
		return "<red>✗</red>";
	}
	,red_cross_on_black: null
	,get_red_cross_on_black: function() {
		return "<bg_black>" + this.get_red_cross() + "</bg_black>";
	}
	,yellow_question_on_black: null
	,get_yellow_question_on_black: function() {
		return "<bg_black><yellow>?</yellow></bg_black>";
	}
	,bad: null
	,get_bad: function() {
		return this.get_red_cross_on_black();
	}
	,good: null
	,get_good: function() {
		return this.get_green_tick_on_black();
	}
	,println: function(str,indent) {
		if(indent == null) {
			indent = "";
		}
		var v = "" + indent + str;
		var s = Console.logPrefix + ("" + v);
		var outputStream = 0;
		if(outputStream == null) {
			outputStream = 0;
		}
		if(s == null) {
			s = "";
		}
		Console.printFormatted(s + "\n",outputStream);
	}
	,print_status: function(icon,str,indent) {
		if(indent == null) {
			indent = "";
		}
		var v = "" + icon + " " + indent + str;
		var s = Console.logPrefix + ("" + v);
		var outputStream = 0;
		if(outputStream == null) {
			outputStream = 0;
		}
		if(s == null) {
			s = "";
		}
		Console.printFormatted(s + "\n",outputStream);
	}
	,method_call_string: function(test) {
		return "<blue>" + test.class_name + "::" + test.field_name + "</blue>";
	}
	,test_case_string: function(test_case) {
		return "<light_white>" + test_case.class_name + "</light_white>";
	}
	,warn_string: function(string) {
		return "<yellow>" + string + "</yellow>";
	}
	,ok_string: function(string) {
		return "<green>" + string + "</green>";
	}
	,fail_string: function(string) {
		return "<red>" + string + "</red>";
	}
	,info_string: function(string) {
		return "<blue>" + string + "</blue>";
	}
	,__class__: stx_test_reporter_RuntimeReporting
});
var sys_FileSystem = function() { };
$hxClasses["sys.FileSystem"] = sys_FileSystem;
sys_FileSystem.__name__ = "sys.FileSystem";
sys_FileSystem.exists = function(path) {
	try {
		js_node_Fs.accessSync(path);
		return true;
	} catch( _g ) {
		return false;
	}
};
sys_FileSystem.isDirectory = function(path) {
	try {
		return js_node_Fs.statSync(path).isDirectory();
	} catch( _g ) {
		return false;
	}
};
sys_FileSystem.createDirectory = function(path) {
	try {
		js_node_Fs.mkdirSync(path);
	} catch( _g ) {
		var e = haxe_Exception.caught(_g).unwrap();
		if(e.code == "ENOENT") {
			sys_FileSystem.createDirectory(js_node_Path.dirname(path));
			js_node_Fs.mkdirSync(path);
		} else {
			var stat;
			try {
				stat = js_node_Fs.statSync(path);
			} catch( _g1 ) {
				throw e;
			}
			if(!stat.isDirectory()) {
				throw e;
			}
		}
	}
};
var sys_io_FileInput = function(fd) {
	this.hasReachedEof = false;
	this.fd = fd;
	this.pos = 0;
};
$hxClasses["sys.io.FileInput"] = sys_io_FileInput;
sys_io_FileInput.__name__ = "sys.io.FileInput";
sys_io_FileInput.__super__ = haxe_io_Input;
sys_io_FileInput.prototype = $extend(haxe_io_Input.prototype,{
	fd: null
	,pos: null
	,hasReachedEof: null
	,throwEof: function() {
		this.hasReachedEof = true;
		throw haxe_Exception.thrown(new haxe_io_Eof());
	}
	,readByte: function() {
		var buf = js_node_buffer_Buffer.alloc(1);
		var bytesRead;
		try {
			bytesRead = js_node_Fs.readSync(this.fd,buf,0,1,this.pos);
		} catch( _g ) {
			var e = haxe_Exception.caught(_g).unwrap();
			if(e.code == "EOF") {
				this.hasReachedEof = true;
				throw haxe_Exception.thrown(new haxe_io_Eof());
			}
			throw haxe_Exception.thrown(haxe_io_Error.Custom(e));
		}
		if(bytesRead == 0) {
			this.hasReachedEof = true;
			throw haxe_Exception.thrown(new haxe_io_Eof());
		}
		this.pos++;
		return buf[0];
	}
	,readBytes: function(s,pos,len) {
		var data = s.b;
		var buf = js_node_buffer_Buffer.from(data.buffer,data.byteOffset,s.length);
		var bytesRead;
		try {
			bytesRead = js_node_Fs.readSync(this.fd,buf,pos,len,this.pos);
		} catch( _g ) {
			var e = haxe_Exception.caught(_g).unwrap();
			if(e.code == "EOF") {
				this.hasReachedEof = true;
				throw haxe_Exception.thrown(new haxe_io_Eof());
			}
			throw haxe_Exception.thrown(haxe_io_Error.Custom(e));
		}
		if(bytesRead == 0) {
			this.hasReachedEof = true;
			throw haxe_Exception.thrown(new haxe_io_Eof());
		}
		this.pos += bytesRead;
		return bytesRead;
	}
	,close: function() {
		js_node_Fs.closeSync(this.fd);
	}
	,seek: function(p,pos) {
		this.hasReachedEof = false;
		switch(pos._hx_index) {
		case 0:
			this.pos = p;
			break;
		case 1:
			this.pos += p;
			break;
		case 2:
			this.pos = js_node_Fs.fstatSync(this.fd).size + p;
			break;
		}
	}
	,tell: function() {
		return this.pos;
	}
	,eof: function() {
		return this.hasReachedEof;
	}
	,__class__: sys_io_FileInput
});
var sys_io_FileSeek = $hxEnums["sys.io.FileSeek"] = { __ename__:"sys.io.FileSeek",__constructs__:null
	,SeekBegin: {_hx_name:"SeekBegin",_hx_index:0,__enum__:"sys.io.FileSeek",toString:$estr}
	,SeekCur: {_hx_name:"SeekCur",_hx_index:1,__enum__:"sys.io.FileSeek",toString:$estr}
	,SeekEnd: {_hx_name:"SeekEnd",_hx_index:2,__enum__:"sys.io.FileSeek",toString:$estr}
};
sys_io_FileSeek.__constructs__ = [sys_io_FileSeek.SeekBegin,sys_io_FileSeek.SeekCur,sys_io_FileSeek.SeekEnd];
var tink_core_Annex = function(target) {
	this.target = target;
	this.registry = new haxe_ds_ObjectMap();
};
$hxClasses["tink.core.Annex"] = tink_core_Annex;
tink_core_Annex.__name__ = "tink.core.Annex";
tink_core_Annex.prototype = {
	target: null
	,registry: null
	,__class__: tink_core_Annex
};
var tink_core_Callback = {};
tink_core_Callback._new = function(f) {
	var this1 = f;
	return this1;
};
tink_core_Callback.toFunction = function(this1) {
	return this1;
};
tink_core_Callback.invoke = function(this1,data) {
	if(tink_core_Callback.depth < 500) {
		tink_core_Callback.depth++;
		this1(data);
		tink_core_Callback.depth--;
	} else {
		tink_core_Callback.defer(function() {
			this1(data);
		});
	}
};
tink_core_Callback.fromNiladic = function(f) {
	return f;
};
tink_core_Callback.fromMany = function(callbacks) {
	return function(v) {
		var _g = 0;
		while(_g < callbacks.length) {
			var callback = callbacks[_g];
			++_g;
			tink_core_Callback.invoke(callback,v);
		}
	};
};
tink_core_Callback.defer = function(f) {
	global.setImmediate(f);
};
var tink_core_LinkObject = function() { };
$hxClasses["tink.core.LinkObject"] = tink_core_LinkObject;
tink_core_LinkObject.__name__ = "tink.core.LinkObject";
tink_core_LinkObject.__isInterface__ = true;
tink_core_LinkObject.prototype = {
	cancel: null
	,__class__: tink_core_LinkObject
};
var tink_core_CallbackLinkRef = function() {
};
$hxClasses["tink.core.CallbackLinkRef"] = tink_core_CallbackLinkRef;
tink_core_CallbackLinkRef.__name__ = "tink.core.CallbackLinkRef";
tink_core_CallbackLinkRef.__interfaces__ = [tink_core_LinkObject];
tink_core_CallbackLinkRef.prototype = {
	link: null
	,set_link: function(param) {
		var this1 = this.link;
		if(this1 != null) {
			this1.cancel();
		}
		return this.link = param;
	}
	,cancel: function() {
		var this1 = this.link;
		if(this1 != null) {
			this1.cancel();
		}
	}
	,__class__: tink_core_CallbackLinkRef
};
var tink_core_CallbackLink = {};
tink_core_CallbackLink._new = function(link) {
	var this1 = new tink_core_SimpleLink(link);
	return this1;
};
tink_core_CallbackLink.cancel = function(this1) {
	if(this1 != null) {
		this1.cancel();
	}
};
tink_core_CallbackLink.dissolve = function(this1) {
	if(this1 != null) {
		this1.cancel();
	}
};
tink_core_CallbackLink.noop = function() {
};
tink_core_CallbackLink.toFunction = function(this1) {
	if(this1 == null) {
		return tink_core_CallbackLink.noop;
	} else {
		return $bind(this1,this1.cancel);
	}
};
tink_core_CallbackLink.toCallback = function(this1) {
	if(this1 == null) {
		return tink_core_CallbackLink.noop;
	} else {
		return $bind(this1,this1.cancel);
	}
};
tink_core_CallbackLink.fromFunction = function(f) {
	var this1 = new tink_core_SimpleLink(f);
	return this1;
};
tink_core_CallbackLink.join = function(this1,b) {
	return new tink_core__$Callback_LinkPair(this1,b);
};
tink_core_CallbackLink.fromMany = function(callbacks) {
	var this1 = new tink_core_SimpleLink(function() {
		if(callbacks != null) {
			var _g = 0;
			while(_g < callbacks.length) {
				var cb = callbacks[_g];
				++_g;
				if(cb != null) {
					cb.cancel();
				}
			}
		} else {
			callbacks = null;
		}
	});
	return this1;
};
var tink_core_SimpleLink = function(f) {
	this.f = f;
};
$hxClasses["tink.core.SimpleLink"] = tink_core_SimpleLink;
tink_core_SimpleLink.__name__ = "tink.core.SimpleLink";
tink_core_SimpleLink.__interfaces__ = [tink_core_LinkObject];
tink_core_SimpleLink.prototype = {
	f: null
	,cancel: function() {
		if(this.f != null) {
			this.f();
			this.f = null;
		}
	}
	,__class__: tink_core_SimpleLink
};
var tink_core__$Callback_LinkPair = function(a,b) {
	this.dissolved = false;
	this.a = a;
	this.b = b;
};
$hxClasses["tink.core._Callback.LinkPair"] = tink_core__$Callback_LinkPair;
tink_core__$Callback_LinkPair.__name__ = "tink.core._Callback.LinkPair";
tink_core__$Callback_LinkPair.__interfaces__ = [tink_core_LinkObject];
tink_core__$Callback_LinkPair.prototype = {
	a: null
	,b: null
	,dissolved: null
	,cancel: function() {
		if(!this.dissolved) {
			this.dissolved = true;
			var this1 = this.a;
			if(this1 != null) {
				this1.cancel();
			}
			var this1 = this.b;
			if(this1 != null) {
				this1.cancel();
			}
			this.a = null;
			this.b = null;
		}
	}
	,__class__: tink_core__$Callback_LinkPair
};
var tink_core__$Callback_ListCell = function(cb,list) {
	if(cb == null) {
		throw haxe_Exception.thrown("callback expected but null received");
	}
	this.cb = cb;
	this.list = list;
};
$hxClasses["tink.core._Callback.ListCell"] = tink_core__$Callback_ListCell;
tink_core__$Callback_ListCell.__name__ = "tink.core._Callback.ListCell";
tink_core__$Callback_ListCell.__interfaces__ = [tink_core_LinkObject];
tink_core__$Callback_ListCell.prototype = {
	cb: null
	,list: null
	,invoke: function(data) {
		if(this.list != null) {
			this.cb(data);
		}
	}
	,clear: function() {
		this.cb = null;
		this.list = null;
	}
	,cancel: function() {
		if(this.list != null) {
			var list = this.list;
			this.cb = null;
			this.list = null;
			if(--list.used <= list.cells.length >> 1) {
				list.compact();
			}
		}
	}
	,__class__: tink_core__$Callback_ListCell
};
var tink_core_Disposable = function() { };
$hxClasses["tink.core.Disposable"] = tink_core_Disposable;
tink_core_Disposable.__name__ = "tink.core.Disposable";
tink_core_Disposable.__isInterface__ = true;
tink_core_Disposable.prototype = {
	get_disposed: null
	,ondispose: null
	,__class__: tink_core_Disposable
};
var tink_core_OwnedDisposable = function() { };
$hxClasses["tink.core.OwnedDisposable"] = tink_core_OwnedDisposable;
tink_core_OwnedDisposable.__name__ = "tink.core.OwnedDisposable";
tink_core_OwnedDisposable.__isInterface__ = true;
tink_core_OwnedDisposable.__interfaces__ = [tink_core_Disposable];
tink_core_OwnedDisposable.prototype = {
	dispose: null
	,__class__: tink_core_OwnedDisposable
};
var tink_core_SimpleDisposable = function(dispose) {
	this.disposeHandlers = [];
	this.f = dispose;
};
$hxClasses["tink.core.SimpleDisposable"] = tink_core_SimpleDisposable;
tink_core_SimpleDisposable.__name__ = "tink.core.SimpleDisposable";
tink_core_SimpleDisposable.__interfaces__ = [tink_core_OwnedDisposable];
tink_core_SimpleDisposable.noop = function() {
};
tink_core_SimpleDisposable.prototype = {
	f: null
	,disposeHandlers: null
	,get_disposed: function() {
		return this.disposeHandlers == null;
	}
	,ondispose: function(d) {
		var _g = this.disposeHandlers;
		if(_g == null) {
			d();
		} else {
			var v = _g;
			v.push(d);
		}
	}
	,dispose: function() {
		var _g = this.disposeHandlers;
		if(_g != null) {
			var v = _g;
			this.disposeHandlers = null;
			var f = this.f;
			this.f = tink_core_SimpleDisposable.noop;
			f();
			var _g = 0;
			while(_g < v.length) {
				var h = v[_g];
				++_g;
				h();
			}
		}
	}
	,__class__: tink_core_SimpleDisposable
};
var tink_core_CallbackList = function(destructive) {
	if(destructive == null) {
		destructive = false;
	}
	this.onfill = function() {
	};
	this.ondrain = function() {
	};
	this.busy = false;
	this.queue = [];
	this.used = 0;
	var _gthis = this;
	tink_core_SimpleDisposable.call(this,function() {
		if(!_gthis.busy) {
			_gthis.destroy();
		}
	});
	this.destructive = destructive;
	this.cells = [];
};
$hxClasses["tink.core.CallbackList"] = tink_core_CallbackList;
tink_core_CallbackList.__name__ = "tink.core.CallbackList";
tink_core_CallbackList.__super__ = tink_core_SimpleDisposable;
tink_core_CallbackList.prototype = $extend(tink_core_SimpleDisposable.prototype,{
	destructive: null
	,cells: null
	,get_length: function() {
		return this.used;
	}
	,used: null
	,queue: null
	,busy: null
	,ondrain: null
	,onfill: null
	,release: function() {
		if(--this.used <= this.cells.length >> 1) {
			this.compact();
		}
	}
	,destroy: function() {
		var _g = 0;
		var _g1 = this.cells;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			c.cb = null;
			c.list = null;
		}
		this.queue = null;
		this.cells = null;
		if(this.used > 0) {
			this.used = 0;
			var fn = this.ondrain;
			if(tink_core_Callback.depth < 500) {
				tink_core_Callback.depth++;
				fn();
				tink_core_Callback.depth--;
			} else {
				tink_core_Callback.defer(fn);
			}
		}
	}
	,drain: function() {
		var fn = this.ondrain;
		if(tink_core_Callback.depth < 500) {
			tink_core_Callback.depth++;
			fn();
			tink_core_Callback.depth--;
		} else {
			tink_core_Callback.defer(fn);
		}
	}
	,add: function(cb) {
		if(this.disposeHandlers == null) {
			return null;
		}
		var node = new tink_core__$Callback_ListCell(cb,this);
		this.cells.push(node);
		if(this.used++ == 0) {
			var fn = this.onfill;
			if(tink_core_Callback.depth < 500) {
				tink_core_Callback.depth++;
				fn();
				tink_core_Callback.depth--;
			} else {
				tink_core_Callback.defer(fn);
			}
		}
		return node;
	}
	,invoke: function(data) {
		var _gthis = this;
		if(tink_core_Callback.depth < 500) {
			tink_core_Callback.depth++;
			if(_gthis.disposeHandlers != null) {
				if(_gthis.busy) {
					if(_gthis.destructive != true) {
						var _g = _gthis;
						var data1 = data;
						var tmp = function() {
							_g.invoke(data1);
						};
						_gthis.queue.push(tmp);
					}
				} else {
					_gthis.busy = true;
					if(_gthis.destructive) {
						_gthis.dispose();
					}
					var length = _gthis.cells.length;
					var _g1 = 0;
					var _g2 = length;
					while(_g1 < _g2) {
						var i = _g1++;
						var _this = _gthis.cells[i];
						if(_this.list != null) {
							_this.cb(data);
						}
					}
					_gthis.busy = false;
					if(_gthis.disposeHandlers == null) {
						_gthis.destroy();
					} else {
						if(_gthis.used < _gthis.cells.length) {
							_gthis.compact();
						}
						if(_gthis.queue.length > 0) {
							(_gthis.queue.shift())();
						}
					}
				}
			}
			tink_core_Callback.depth--;
		} else {
			tink_core_Callback.defer(function() {
				if(_gthis.disposeHandlers != null) {
					if(_gthis.busy) {
						if(_gthis.destructive != true) {
							var _g = _gthis;
							var data1 = data;
							var tmp = function() {
								_g.invoke(data1);
							};
							_gthis.queue.push(tmp);
						}
					} else {
						_gthis.busy = true;
						if(_gthis.destructive) {
							_gthis.dispose();
						}
						var length = _gthis.cells.length;
						var _g1 = 0;
						var _g2 = length;
						while(_g1 < _g2) {
							var i = _g1++;
							var _this = _gthis.cells[i];
							if(_this.list != null) {
								_this.cb(data);
							}
						}
						_gthis.busy = false;
						if(_gthis.disposeHandlers == null) {
							_gthis.destroy();
						} else {
							if(_gthis.used < _gthis.cells.length) {
								_gthis.compact();
							}
							if(_gthis.queue.length > 0) {
								(_gthis.queue.shift())();
							}
						}
					}
				}
			});
		}
	}
	,compact: function() {
		if(this.busy) {
			return;
		} else if(this.used == 0) {
			this.resize(0);
			var fn = this.ondrain;
			if(tink_core_Callback.depth < 500) {
				tink_core_Callback.depth++;
				fn();
				tink_core_Callback.depth--;
			} else {
				tink_core_Callback.defer(fn);
			}
		} else {
			var compacted = 0;
			var _g = 0;
			var _g1 = this.cells.length;
			while(_g < _g1) {
				var i = _g++;
				var _g2 = this.cells[i];
				var _g3 = _g2.list;
				if(_g2.cb != null) {
					var v = _g2;
					if(compacted != i) {
						this.cells[compacted] = v;
					}
					if(++compacted == this.used) {
						break;
					}
				}
			}
			this.resize(this.used);
		}
	}
	,resize: function(length) {
		this.cells.length = length;
	}
	,clear: function() {
		if(this.busy) {
			this.queue.push($bind(this,this.clear));
		}
		var _g = 0;
		var _g1 = this.cells;
		while(_g < _g1.length) {
			var cell = _g1[_g];
			++_g;
			cell.cb = null;
			cell.list = null;
		}
		this.resize(0);
	}
	,__class__: tink_core_CallbackList
});
var tink_core_AlreadyDisposed = function() {
};
$hxClasses["tink.core.AlreadyDisposed"] = tink_core_AlreadyDisposed;
tink_core_AlreadyDisposed.__name__ = "tink.core.AlreadyDisposed";
tink_core_AlreadyDisposed.__interfaces__ = [tink_core_OwnedDisposable];
tink_core_AlreadyDisposed.prototype = {
	get_disposed: function() {
		return true;
	}
	,ondispose: function(d) {
		d();
	}
	,dispose: function() {
	}
	,__class__: tink_core_AlreadyDisposed
};
var tink_core_TypedError = function(code,message,pos) {
	if(code == null) {
		code = 500;
	}
	this.isTinkError = true;
	this.code = code;
	this.message = message;
	this.pos = pos;
	this.exceptionStack = [];
	this.callStack = [];
};
$hxClasses["tink.core.TypedError"] = tink_core_TypedError;
tink_core_TypedError.__name__ = "tink.core.TypedError";
tink_core_TypedError.withData = function(code,message,data,pos) {
	return tink_core_TypedError.typed(code,message,data,pos);
};
tink_core_TypedError.typed = function(code,message,data,pos) {
	var ret = new tink_core_TypedError(code,message,pos);
	ret.data = data;
	return ret;
};
tink_core_TypedError.ofJsError = function(e,pos) {
	return tink_core_TypedError.withData(500,e.message,e,pos);
};
tink_core_TypedError.asError = function(v) {
	if(v != null && v.isTinkError) {
		return v;
	} else {
		return null;
	}
};
tink_core_TypedError.catchExceptions = function(f,report,pos) {
	try {
		return tink_core_Outcome.Success(f());
	} catch( _g ) {
		var ex = haxe_Exception.caught(_g).unwrap();
		var e = tink_core_TypedError.asError(ex);
		var tmp;
		if(e == null) {
			tmp = report == null ? tink_core_TypedError.withData(null,"Unexpected Error",ex,pos) : report(ex);
		} else {
			var e1 = e;
			tmp = e1;
		}
		return tink_core_Outcome.Failure(tmp);
	}
};
tink_core_TypedError.reporter = function(code,message,pos) {
	return function(e) {
		return tink_core_TypedError.withData(code,message,e,pos);
	};
};
tink_core_TypedError.rethrow = function(any) {
	throw haxe_Exception.thrown(any);
};
tink_core_TypedError.tryFinally = function(f,cleanup) {
	try { return f(); } finally { cleanup(); }
	return null;
};
tink_core_TypedError.prototype = {
	message: null
	,code: null
	,data: null
	,pos: null
	,callStack: null
	,exceptionStack: null
	,isTinkError: null
	,printPos: function() {
		return this.pos.className + "." + this.pos.methodName + ":" + this.pos.lineNumber;
	}
	,toString: function() {
		var ret = "Error#" + this.code + ": " + this.message;
		if(this.pos != null) {
			ret += " @ " + this.printPos();
		}
		return ret;
	}
	,toPromise: function() {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Failure(this)));
	}
	,throwSelf: function() {
		var any = this;
		throw haxe_Exception.thrown(any);
	}
	,toJsError: function() {
		if(((this.data) instanceof Error)) {
			return this.data;
		} else {
			return new tink_core__$Error_TinkError(this);
		}
	}
	,__class__: tink_core_TypedError
};
var tink_core_Stack = {};
tink_core_Stack.toString = function(this1) {
	return "Error stack not available. Compile with -D error_stack.";
};
var tink_core__$Error_TinkError = function(e) {
	Error.call(this);
	this.message = e.message;
	this.data = e;
};
$hxClasses["tink.core._Error.TinkError"] = tink_core__$Error_TinkError;
tink_core__$Error_TinkError.__name__ = "tink.core._Error.TinkError";
tink_core__$Error_TinkError.__super__ = Error;
tink_core__$Error_TinkError.prototype = $extend(Error.prototype,{
	data: null
	,__class__: tink_core__$Error_TinkError
});
var tink_core__$Future_FutureObject = function() {
};
$hxClasses["tink.core._Future.FutureObject"] = tink_core__$Future_FutureObject;
tink_core__$Future_FutureObject.__name__ = "tink.core._Future.FutureObject";
tink_core__$Future_FutureObject.prototype = {
	getStatus: function() {
		return tink_core_FutureStatus.NeverEver;
	}
	,handle: function(callback) {
		return null;
	}
	,eager: function() {
	}
	,__class__: tink_core__$Future_FutureObject
};
var tink_core__$Lazy_Computable = function() { };
$hxClasses["tink.core._Lazy.Computable"] = tink_core__$Lazy_Computable;
tink_core__$Lazy_Computable.__name__ = "tink.core._Lazy.Computable";
tink_core__$Lazy_Computable.__isInterface__ = true;
tink_core__$Lazy_Computable.prototype = {
	isComputed: null
	,compute: null
	,underlying: null
	,__class__: tink_core__$Lazy_Computable
};
var tink_core__$Lazy_LazyObject = function() { };
$hxClasses["tink.core._Lazy.LazyObject"] = tink_core__$Lazy_LazyObject;
tink_core__$Lazy_LazyObject.__name__ = "tink.core._Lazy.LazyObject";
tink_core__$Lazy_LazyObject.__isInterface__ = true;
tink_core__$Lazy_LazyObject.__interfaces__ = [tink_core__$Lazy_Computable];
tink_core__$Lazy_LazyObject.prototype = {
	get: null
	,__class__: tink_core__$Lazy_LazyObject
};
var tink_core__$Lazy_LazyConst = function(value) {
	this.value = value;
};
$hxClasses["tink.core._Lazy.LazyConst"] = tink_core__$Lazy_LazyConst;
tink_core__$Lazy_LazyConst.__name__ = "tink.core._Lazy.LazyConst";
tink_core__$Lazy_LazyConst.__interfaces__ = [tink_core__$Lazy_LazyObject];
tink_core__$Lazy_LazyConst.prototype = {
	value: null
	,isComputed: function() {
		return true;
	}
	,get: function() {
		return this.value;
	}
	,compute: function() {
	}
	,underlying: function() {
		return null;
	}
	,__class__: tink_core__$Lazy_LazyConst
};
var tink_core__$Future_SyncFuture = function(value) {
	tink_core__$Future_FutureObject.call(this);
	this.value = value;
};
$hxClasses["tink.core._Future.SyncFuture"] = tink_core__$Future_SyncFuture;
tink_core__$Future_SyncFuture.__name__ = "tink.core._Future.SyncFuture";
tink_core__$Future_SyncFuture.__super__ = tink_core__$Future_FutureObject;
tink_core__$Future_SyncFuture.prototype = $extend(tink_core__$Future_FutureObject.prototype,{
	value: null
	,getStatus: function() {
		return tink_core_FutureStatus.Ready(this.value);
	}
	,handle: function(cb) {
		tink_core_Callback.invoke(cb,tink_core_Lazy.get(this.value));
		return null;
	}
	,eager: function() {
		if(!this.value.isComputed()) {
			tink_core_Lazy.get(this.value);
		}
	}
	,__class__: tink_core__$Future_SyncFuture
});
var tink_core_Future = {};
tink_core_Future.never = function() {
	return tink_core_Future.NEVER_INST;
};
tink_core_Future.get_status = function(this1) {
	return this1.getStatus();
};
tink_core_Future._new = function(wakeup) {
	var this1 = new tink_core__$Future_SuspendableFuture(wakeup);
	return this1;
};
tink_core_Future.handle = function(this1,callback) {
	return this1.handle(callback);
};
tink_core_Future.eager = function(this1) {
	this1.eager();
	return this1;
};
tink_core_Future.noise = function(this1) {
	if(this1.getStatus()._hx_index == 4) {
		return tink_core_Future.never();
	} else {
		return tink_core_Future.map(this1,function(_) {
			return null;
		});
	}
};
tink_core_Future.first = function(this1,that) {
	var _g = this1;
	var _g1 = _g.getStatus();
	switch(_g1._hx_index) {
	case 3:
		var _g2 = _g1.result;
		var _g1 = that.getStatus();
		switch(_g1._hx_index) {
		case 3:
			var _g2 = _g1.result;
			var v = _g;
			return v;
		case 4:
			var v = _g;
			return v;
		default:
			var v = _g;
			return v;
		}
		break;
	case 4:
		var v = that;
		return v;
	default:
		var _g1 = that.getStatus();
		switch(_g1._hx_index) {
		case 3:
			var _g2 = _g1.result;
			var v = that;
			return v;
		case 4:
			var v = _g;
			return v;
		default:
			return new tink_core__$Future_SuspendableFuture(function(fire) {
				return new tink_core__$Callback_LinkPair(this1.handle(fire),that.handle(fire));
			});
		}
	}
};
tink_core_Future.map = function(this1,f,gather) {
	var _g = this1.getStatus();
	switch(_g._hx_index) {
	case 3:
		var l = _g.result;
		var this2 = l;
		var f1 = f;
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyFunc(function() {
			return f1(this2.get());
		},this2));
	case 4:
		return tink_core_Future.never();
	default:
		return new tink_core__$Future_SuspendableFuture(function(fire) {
			return this1.handle(function(v) {
				fire(f(v));
			});
		});
	}
};
tink_core_Future.flatMap = function(this1,next,gather) {
	var _g = this1.getStatus();
	switch(_g._hx_index) {
	case 3:
		var l = _g.result;
		return new tink_core__$Future_SuspendableFuture(function(fire) {
			return next(tink_core_Lazy.get(l)).handle(function(v) {
				fire(v);
			});
		});
	case 4:
		return tink_core_Future.never();
	default:
		return new tink_core__$Future_SuspendableFuture(function($yield) {
			var inner = new tink_core_CallbackLinkRef();
			var outer = this1.handle(function(v) {
				var param = next(v).handle($yield);
				var this1 = inner.link;
				if(this1 != null) {
					this1.cancel();
				}
				inner.link = param;
			});
			return new tink_core__$Callback_LinkPair(outer,inner);
		});
	}
};
tink_core_Future.swap = function(this1,v) {
	return tink_core_Future.map(this1,function(_) {
		return v;
	});
};
tink_core_Future.next = function(this1,n) {
	return tink_core_Future.flatMap(this1,n);
};
tink_core_Future.withSideEffect = function(this1,c) {
	return tink_core_Future.map(this1,function(v) {
		tink_core_Callback.invoke(c,v);
		return v;
	});
};
tink_core_Future.gather = function(this1) {
	return this1;
};
tink_core_Future.merge = function(this1,that,combine) {
	var _g = this1.getStatus();
	var _g1 = that.getStatus();
	if(_g._hx_index == 4) {
		return tink_core_Future.never();
	} else if(_g1._hx_index == 4) {
		return tink_core_Future.never();
	} else {
		return new tink_core__$Future_SuspendableFuture(function($yield) {
			var check = function(v) {
				var _g = this1.getStatus();
				var _g1 = that.getStatus();
				if(_g._hx_index == 3) {
					if(_g1._hx_index == 3) {
						var b = _g1.result;
						var a = _g.result;
						$yield(combine(tink_core_Lazy.get(a),tink_core_Lazy.get(b)));
					}
				}
			};
			return new tink_core__$Callback_LinkPair(this1.handle(check),that.handle(check));
		});
	}
};
tink_core_Future.flatten = function(f) {
	return tink_core_Future.flatMap(f,function(v) {
		return v;
	});
};
tink_core_Future.ofJsPromise = function(promise,transformError) {
	return tink_core_Future.irreversible(function(cb) {
		promise.then(function(a) {
			var _g = cb;
			var a1 = tink_core_Outcome.Success(a);
			tink_core_Callback.defer(function() {
				_g(a1);
			});
		},function(e) {
			var cb1 = cb;
			var tmp;
			if(transformError == null) {
				var e1 = e;
				tmp = tink_core_TypedError.withData(500,e1.message,e1,{ fileName : "tink/core/Future.hx", lineNumber : 176, className : "tink.core._Future.Future_Impl_", methodName : "ofJsPromise"});
			} else {
				var f = transformError;
				tmp = f(e);
			}
			cb1(tink_core_Outcome.Failure(tmp));
		});
	});
};
tink_core_Future.fromJsPromise = function(promise) {
	return tink_core_Future.ofJsPromise(promise);
};
tink_core_Future.neverToAny = function(l) {
	return l;
};
tink_core_Future.ofAny = function(v) {
	return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(v));
};
tink_core_Future.asPromise = function(s) {
	return s;
};
tink_core_Future.ofMany = function(futures,gather) {
	return tink_core_Future.inSequence(futures);
};
tink_core_Future.inParallel = function(futures,concurrency) {
	return tink_core_Future.many(futures,concurrency);
};
tink_core_Future.inSequence = function(futures) {
	return tink_core_Future.many(futures,1);
};
tink_core_Future.many = function(a,concurrency) {
	return tink_core_Future.processMany(a,concurrency,tink_core_Outcome.Success,function(o) {
		return tink_core_OutcomeTools.orNull(o);
	});
};
tink_core_Future.processMany = function(a,concurrency,fn,lift) {
	if(a.length == 0) {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(lift(tink_core_Outcome.Success([]))));
	} else {
		var this1 = new tink_core__$Future_SuspendableFuture(function($yield) {
			var links = [];
			var _g = [];
			var _g1 = 0;
			while(_g1 < a.length) {
				var x = a[_g1];
				++_g1;
				_g.push(null);
			}
			var ret = _g;
			var index = 0;
			var pending = 0;
			var done = false;
			var concurrency1;
			if(concurrency == null) {
				concurrency1 = a.length;
			} else {
				var v = concurrency;
				concurrency1 = v < 1 ? 1 : v > a.length ? a.length : v;
			}
			var fireWhenReady = function() {
				if(index == ret.length) {
					if(pending == 0) {
						var v = lift(tink_core_Outcome.Success(ret));
						done = true;
						$yield(v);
						return true;
					} else {
						return false;
					}
				} else {
					return false;
				}
			};
			var step = null;
			step = function() {
				if(!done && !fireWhenReady()) {
					while(index < ret.length) {
						index += 1;
						var index1 = [index - 1];
						var p = a[index1[0]];
						var check = [(function(index) {
							return function(o) {
								var _g = fn(o);
								switch(_g._hx_index) {
								case 0:
									var v = _g.data;
									ret[index[0]] = v;
									fireWhenReady();
									break;
								case 1:
									var e = _g.failure;
									var _g = 0;
									while(_g < links.length) {
										var l = links[_g];
										++_g;
										if(l != null) {
											l.cancel();
										}
									}
									var v = lift(tink_core_Outcome.Failure(e));
									done = true;
									$yield(v);
									break;
								}
							};
						})(index1)];
						var _g = p.getStatus();
						if(_g._hx_index == 3) {
							var _hx_tmp;
							_hx_tmp = tink_core_Lazy.get(_g.result);
							var v = _hx_tmp;
							check[0](v);
							if(!done) {
								continue;
							}
						} else {
							pending += 1;
							links.push(p.handle((function(check) {
								return function(o) {
									pending -= 1;
									check[0](o);
									if(!done) {
										step();
									}
								};
							})(check)));
						}
						break;
					}
				}
			};
			var _g = 0;
			var _g1 = concurrency1;
			while(_g < _g1) {
				var i = _g++;
				step();
			}
			return tink_core_CallbackLink.fromMany(links);
		});
		return this1;
	}
};
tink_core_Future.lazy = function(l) {
	return new tink_core__$Future_SyncFuture(l);
};
tink_core_Future.sync = function(v) {
	return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(v));
};
tink_core_Future.isFuture = function(maybeFuture) {
	return ((maybeFuture) instanceof tink_core__$Future_FutureObject);
};
tink_core_Future.async = function(init,lazy) {
	if(lazy == null) {
		lazy = false;
	}
	var ret = tink_core_Future.irreversible(init);
	if(lazy) {
		return ret;
	} else {
		ret.eager();
		return ret;
	}
};
tink_core_Future.irreversible = function(init) {
	return new tink_core__$Future_SuspendableFuture(function($yield) {
		init($yield);
		return null;
	});
};
tink_core_Future.or = function(a,b) {
	return tink_core_Future.first(a,b);
};
tink_core_Future.either = function(a,b) {
	return tink_core_Future.first(tink_core_Future.map(a,haxe_ds_Either.Left),tink_core_Future.map(b,haxe_ds_Either.Right));
};
tink_core_Future.and = function(a,b) {
	return tink_core_Future.merge(a,b,function(a,b) {
		var this1 = new tink_core_MPair(a,b);
		return this1;
	});
};
tink_core_Future._tryFailingFlatMap = function(f,map) {
	return tink_core_Future.flatMap(f,function(o) {
		switch(o._hx_index) {
		case 0:
			var d = o.data;
			return map(d);
		case 1:
			var f = o.failure;
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Failure(f)));
		}
	});
};
tink_core_Future._tryFlatMap = function(f,map) {
	return tink_core_Future.flatMap(f,function(o) {
		switch(o._hx_index) {
		case 0:
			var d = o.data;
			return tink_core_Future.map(map(d),tink_core_Outcome.Success);
		case 1:
			var f = o.failure;
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Failure(f)));
		}
	});
};
tink_core_Future._tryFailingMap = function(f,map) {
	return tink_core_Future.map(f,function(o) {
		return tink_core_OutcomeTools.flatMap(o,tink_core__$Outcome_OutcomeMapper.withSameError(map));
	});
};
tink_core_Future._tryMap = function(f,map) {
	return tink_core_Future.map(f,function(o) {
		return tink_core_OutcomeTools.map(o,map);
	});
};
tink_core_Future._flatMap = function(f,map) {
	return tink_core_Future.flatMap(f,map);
};
tink_core_Future._map = function(f,map) {
	return tink_core_Future.map(f,map);
};
tink_core_Future.trigger = function() {
	return new tink_core_FutureTrigger();
};
tink_core_Future.delay = function(ms,value) {
	var this1 = tink_core_Future.irreversible(function(cb) {
		haxe_Timer.delay(function() {
			cb(tink_core_Lazy.get(value));
		},ms);
	});
	this1.eager();
	return this1;
};
var tink_core_FutureStatus = $hxEnums["tink.core.FutureStatus"] = { __ename__:"tink.core.FutureStatus",__constructs__:null
	,Suspended: {_hx_name:"Suspended",_hx_index:0,__enum__:"tink.core.FutureStatus",toString:$estr}
	,Awaited: {_hx_name:"Awaited",_hx_index:1,__enum__:"tink.core.FutureStatus",toString:$estr}
	,EagerlyAwaited: {_hx_name:"EagerlyAwaited",_hx_index:2,__enum__:"tink.core.FutureStatus",toString:$estr}
	,Ready: ($_=function(result) { return {_hx_index:3,result:result,__enum__:"tink.core.FutureStatus",toString:$estr}; },$_._hx_name="Ready",$_.__params__ = ["result"],$_)
	,NeverEver: {_hx_name:"NeverEver",_hx_index:4,__enum__:"tink.core.FutureStatus",toString:$estr}
};
tink_core_FutureStatus.__constructs__ = [tink_core_FutureStatus.Suspended,tink_core_FutureStatus.Awaited,tink_core_FutureStatus.EagerlyAwaited,tink_core_FutureStatus.Ready,tink_core_FutureStatus.NeverEver];
var tink_core_FutureTrigger = function() {
	this.status = tink_core_FutureStatus.Awaited;
	tink_core__$Future_FutureObject.call(this);
	this.list = new tink_core_CallbackList(true);
};
$hxClasses["tink.core.FutureTrigger"] = tink_core_FutureTrigger;
tink_core_FutureTrigger.__name__ = "tink.core.FutureTrigger";
tink_core_FutureTrigger.__super__ = tink_core__$Future_FutureObject;
tink_core_FutureTrigger.prototype = $extend(tink_core__$Future_FutureObject.prototype,{
	status: null
	,list: null
	,getStatus: function() {
		return this.status;
	}
	,handle: function(callback) {
		var _g = this.status;
		if(_g._hx_index == 3) {
			var result = _g.result;
			tink_core_Callback.invoke(callback,tink_core_Lazy.get(result));
			return null;
		} else {
			var v = _g;
			var _this = this.list;
			if(_this.disposeHandlers == null) {
				return null;
			} else {
				var node = new tink_core__$Callback_ListCell(callback,_this);
				_this.cells.push(node);
				if(_this.used++ == 0) {
					var fn = _this.onfill;
					if(tink_core_Callback.depth < 500) {
						tink_core_Callback.depth++;
						fn();
						tink_core_Callback.depth--;
					} else {
						tink_core_Callback.defer(fn);
					}
				}
				return node;
			}
		}
	}
	,asFuture: function() {
		return this;
	}
	,trigger: function(result) {
		var _g = this.status;
		if(_g._hx_index == 3) {
			var _g1 = _g.result;
			return false;
		} else {
			this.status = tink_core_FutureStatus.Ready(new tink_core__$Lazy_LazyConst(result));
			this.list.invoke(result);
			return true;
		}
	}
	,__class__: tink_core_FutureTrigger
});
var tink_core_JsPromiseTools = function() { };
$hxClasses["tink.core.JsPromiseTools"] = tink_core_JsPromiseTools;
tink_core_JsPromiseTools.__name__ = "tink.core.JsPromiseTools";
tink_core_JsPromiseTools.toSurprise = function(promise) {
	return tink_core_Future.ofJsPromise(promise);
};
tink_core_JsPromiseTools.toPromise = function(promise) {
	return tink_core_Future.ofJsPromise(promise);
};
var tink_core__$Future_SuspendableFuture = function(wakeup) {
	this.status = tink_core_FutureStatus.Suspended;
	var _gthis = this;
	tink_core__$Future_FutureObject.call(this);
	this.wakeup = wakeup;
	this.callbacks = new tink_core_CallbackList(true);
	this.callbacks.ondrain = function() {
		if(_gthis.status == tink_core_FutureStatus.Awaited) {
			_gthis.status = tink_core_FutureStatus.Suspended;
			var this1 = _gthis.link;
			if(this1 != null) {
				this1.cancel();
			}
			_gthis.link = null;
		}
	};
	this.callbacks.onfill = function() {
		if(_gthis.status == tink_core_FutureStatus.Suspended) {
			_gthis.status = tink_core_FutureStatus.Awaited;
			_gthis.arm();
		}
	};
};
$hxClasses["tink.core._Future.SuspendableFuture"] = tink_core__$Future_SuspendableFuture;
tink_core__$Future_SuspendableFuture.__name__ = "tink.core._Future.SuspendableFuture";
tink_core__$Future_SuspendableFuture.__super__ = tink_core__$Future_FutureObject;
tink_core__$Future_SuspendableFuture.prototype = $extend(tink_core__$Future_FutureObject.prototype,{
	callbacks: null
	,status: null
	,link: null
	,wakeup: null
	,getStatus: function() {
		return this.status;
	}
	,trigger: function(value) {
		var _g = this.status;
		if(_g._hx_index == 3) {
			var _g1 = _g.result;
		} else {
			this.status = tink_core_FutureStatus.Ready(new tink_core__$Lazy_LazyConst(value));
			var link = this.link;
			this.link = null;
			this.wakeup = null;
			this.callbacks.invoke(value);
			if(link != null) {
				link.cancel();
			}
		}
	}
	,handle: function(callback) {
		var _g = this.status;
		if(_g._hx_index == 3) {
			var result = _g.result;
			tink_core_Callback.invoke(callback,tink_core_Lazy.get(result));
			return null;
		} else {
			var _this = this.callbacks;
			if(_this.disposeHandlers == null) {
				return null;
			} else {
				var node = new tink_core__$Callback_ListCell(callback,_this);
				_this.cells.push(node);
				if(_this.used++ == 0) {
					var fn = _this.onfill;
					if(tink_core_Callback.depth < 500) {
						tink_core_Callback.depth++;
						fn();
						tink_core_Callback.depth--;
					} else {
						tink_core_Callback.defer(fn);
					}
				}
				return node;
			}
		}
	}
	,arm: function() {
		var _gthis = this;
		this.link = this.wakeup(function(x) {
			_gthis.trigger(x);
		});
	}
	,eager: function() {
		switch(this.status._hx_index) {
		case 0:
			this.status = tink_core_FutureStatus.EagerlyAwaited;
			this.arm();
			break;
		case 1:
			this.status = tink_core_FutureStatus.EagerlyAwaited;
			break;
		default:
		}
	}
	,__class__: tink_core__$Future_SuspendableFuture
});
var tink_core_Lazy = {};
tink_core_Lazy.get_computed = function(this1) {
	return this1.isComputed();
};
tink_core_Lazy.get = function(this1) {
	this1.compute();
	return this1.get();
};
tink_core_Lazy.fromNoise = function(l) {
	return l;
};
tink_core_Lazy.ofFunc = function(f) {
	return new tink_core__$Lazy_LazyFunc(f);
};
tink_core_Lazy.map = function(this1,f) {
	return new tink_core__$Lazy_LazyFunc(function() {
		return f(this1.get());
	},this1);
};
tink_core_Lazy.flatMap = function(this1,f) {
	return new tink_core__$Lazy_LazyFunc(function() {
		return tink_core_Lazy.get(f(this1.get()));
	},this1);
};
tink_core_Lazy.ofConst = function(c) {
	return new tink_core__$Lazy_LazyConst(c);
};
var tink_core__$Lazy_LazyFunc = function(f,from) {
	this.busy = false;
	this.f = f;
	this.from = from;
};
$hxClasses["tink.core._Lazy.LazyFunc"] = tink_core__$Lazy_LazyFunc;
tink_core__$Lazy_LazyFunc.__name__ = "tink.core._Lazy.LazyFunc";
tink_core__$Lazy_LazyFunc.__interfaces__ = [tink_core__$Lazy_LazyObject];
tink_core__$Lazy_LazyFunc.prototype = {
	f: null
	,from: null
	,result: null
	,busy: null
	,underlying: function() {
		return this.from;
	}
	,isComputed: function() {
		return this.f == null;
	}
	,get: function() {
		return this.result;
	}
	,compute: function() {
		if(this.busy) {
			throw haxe_Exception.thrown(new tink_core_TypedError(null,"circular lazyness",{ fileName : "tink/core/Lazy.hx", lineNumber : 85, className : "tink.core._Lazy.LazyFunc", methodName : "compute"}));
		}
		var _g = this.f;
		if(_g != null) {
			var v = _g;
			this.busy = true;
			this.f = null;
			var _g = this.from;
			if(_g != null) {
				var cur = _g;
				this.from = null;
				var stack = [];
				while(cur != null && !cur.isComputed()) {
					stack.push(cur);
					cur = cur.underlying();
				}
				stack.reverse();
				var _g = 0;
				while(_g < stack.length) {
					var c = stack[_g];
					++_g;
					c.compute();
				}
			}
			this.result = v();
			this.busy = false;
		}
	}
	,__class__: tink_core__$Lazy_LazyFunc
};
var tink_core_NamedWith = function(name,value) {
	this.name = name;
	this.value = value;
};
$hxClasses["tink.core.NamedWith"] = tink_core_NamedWith;
tink_core_NamedWith.__name__ = "tink.core.NamedWith";
tink_core_NamedWith.prototype = {
	name: null
	,value: null
	,__class__: tink_core_NamedWith
};
var tink_core_Noise = {};
tink_core_Noise.ofAny = function(t) {
	return null;
};
var tink_core_OptionTools = function() { };
$hxClasses["tink.core.OptionTools"] = tink_core_OptionTools;
tink_core_OptionTools.__name__ = "tink.core.OptionTools";
tink_core_OptionTools.force = function(o,pos) {
	if(o._hx_index == 0) {
		var v = o.v;
		return v;
	} else {
		throw haxe_Exception.thrown(new tink_core_TypedError(404,"Some value expected but none found",pos));
	}
};
tink_core_OptionTools.sure = function(o,pos) {
	if(o._hx_index == 0) {
		var v = o.v;
		return v;
	} else {
		throw haxe_Exception.thrown(new tink_core_TypedError(404,"Some value expected but none found",pos));
	}
};
tink_core_OptionTools.toOutcome = function(o,pos) {
	switch(o._hx_index) {
	case 0:
		var value = o.v;
		return tink_core_Outcome.Success(value);
	case 1:
		return tink_core_Outcome.Failure(new tink_core_TypedError(404,"Some value expected but none found in " + pos.fileName + "@line " + pos.lineNumber,{ fileName : "tink/core/Option.hx", lineNumber : 31, className : "tink.core.OptionTools", methodName : "toOutcome"}));
	}
};
tink_core_OptionTools.or = function(o,l) {
	if(o._hx_index == 0) {
		var v = o.v;
		return v;
	} else {
		return tink_core_Lazy.get(l);
	}
};
tink_core_OptionTools.orTry = function(o,fallback) {
	if(o._hx_index == 0) {
		var v = o.v;
		return o;
	} else {
		return tink_core_Lazy.get(fallback);
	}
};
tink_core_OptionTools.orNull = function(o) {
	if(o._hx_index == 0) {
		var v = o.v;
		return v;
	} else {
		return null;
	}
};
tink_core_OptionTools.filter = function(o,f) {
	if(o._hx_index == 0) {
		if(f(o.v) == false) {
			return haxe_ds_Option.None;
		} else {
			return o;
		}
	} else {
		return o;
	}
};
tink_core_OptionTools.satisfies = function(o,f) {
	if(o._hx_index == 0) {
		var v = o.v;
		return f(v);
	} else {
		return false;
	}
};
tink_core_OptionTools.equals = function(o,v) {
	if(o._hx_index == 0) {
		var v1 = o.v;
		return v1 == v;
	} else {
		return false;
	}
};
tink_core_OptionTools.map = function(o,f) {
	if(o._hx_index == 0) {
		var v = o.v;
		return haxe_ds_Option.Some(f(v));
	} else {
		return haxe_ds_Option.None;
	}
};
tink_core_OptionTools.flatMap = function(o,f) {
	if(o._hx_index == 0) {
		var v = o.v;
		return f(v);
	} else {
		return haxe_ds_Option.None;
	}
};
tink_core_OptionTools.iterator = function(o) {
	return new tink_core_OptionIter(o);
};
tink_core_OptionTools.toArray = function(o) {
	if(o._hx_index == 0) {
		var v = o.v;
		return [v];
	} else {
		return [];
	}
};
var tink_core_OptionIter = function(o) {
	this.alive = true;
	if(o._hx_index == 0) {
		var v = o.v;
		this.value = v;
	} else {
		this.alive = false;
	}
};
$hxClasses["tink.core.OptionIter"] = tink_core_OptionIter;
tink_core_OptionIter.__name__ = "tink.core.OptionIter";
tink_core_OptionIter.prototype = {
	value: null
	,alive: null
	,hasNext: function() {
		return this.alive;
	}
	,next: function() {
		this.alive = false;
		return this.value;
	}
	,__class__: tink_core_OptionIter
};
var tink_core_Outcome = $hxEnums["tink.core.Outcome"] = { __ename__:"tink.core.Outcome",__constructs__:null
	,Success: ($_=function(data) { return {_hx_index:0,data:data,__enum__:"tink.core.Outcome",toString:$estr}; },$_._hx_name="Success",$_.__params__ = ["data"],$_)
	,Failure: ($_=function(failure) { return {_hx_index:1,failure:failure,__enum__:"tink.core.Outcome",toString:$estr}; },$_._hx_name="Failure",$_.__params__ = ["failure"],$_)
};
tink_core_Outcome.__constructs__ = [tink_core_Outcome.Success,tink_core_Outcome.Failure];
var tink_core_OutcomeTools = function() { };
$hxClasses["tink.core.OutcomeTools"] = tink_core_OutcomeTools;
tink_core_OutcomeTools.__name__ = "tink.core.OutcomeTools";
tink_core_OutcomeTools.sure = function(outcome) {
	switch(outcome._hx_index) {
	case 0:
		var data = outcome.data;
		return data;
	case 1:
		var failure = outcome.failure;
		var _g = tink_core_TypedError.asError(failure);
		if(_g == null) {
			throw haxe_Exception.thrown(failure);
		} else {
			var e = _g;
			return e.throwSelf();
		}
		break;
	}
};
tink_core_OutcomeTools.toOption = function(outcome) {
	switch(outcome._hx_index) {
	case 0:
		var data = outcome.data;
		return haxe_ds_Option.Some(data);
	case 1:
		var _g = outcome.failure;
		return haxe_ds_Option.None;
	}
};
tink_core_OutcomeTools.orNull = function(outcome) {
	switch(outcome._hx_index) {
	case 0:
		var data = outcome.data;
		return data;
	case 1:
		var _g = outcome.failure;
		return null;
	}
};
tink_core_OutcomeTools.orUse = function(outcome,fallback) {
	return tink_core_OutcomeTools.or(outcome,fallback);
};
tink_core_OutcomeTools.or = function(outcome,fallback) {
	switch(outcome._hx_index) {
	case 0:
		var data = outcome.data;
		return data;
	case 1:
		var _g = outcome.failure;
		return tink_core_Lazy.get(fallback);
	}
};
tink_core_OutcomeTools.orTry = function(outcome,fallback) {
	switch(outcome._hx_index) {
	case 0:
		var _g = outcome.data;
		return outcome;
	case 1:
		var _g = outcome.failure;
		return tink_core_Lazy.get(fallback);
	}
};
tink_core_OutcomeTools.equals = function(outcome,to) {
	switch(outcome._hx_index) {
	case 0:
		var data = outcome.data;
		return data == to;
	case 1:
		var _g = outcome.failure;
		return false;
	}
};
tink_core_OutcomeTools.map = function(outcome,transform) {
	switch(outcome._hx_index) {
	case 0:
		var a = outcome.data;
		return tink_core_Outcome.Success(transform(a));
	case 1:
		var f = outcome.failure;
		return tink_core_Outcome.Failure(f);
	}
};
tink_core_OutcomeTools.isSuccess = function(outcome) {
	if(outcome._hx_index == 0) {
		var _g = outcome.data;
		return true;
	} else {
		return false;
	}
};
tink_core_OutcomeTools.flatMap = function(o,mapper) {
	return tink_core__$Outcome_OutcomeMapper.apply(mapper,o);
};
tink_core_OutcomeTools.swap = function(outcome,v) {
	switch(outcome._hx_index) {
	case 0:
		var a = outcome.data;
		return tink_core_Outcome.Success(v);
	case 1:
		var f = outcome.failure;
		return tink_core_Outcome.Failure(f);
	}
};
tink_core_OutcomeTools.next = function(outcome,f) {
	switch(outcome._hx_index) {
	case 0:
		var v = outcome.data;
		return f(v);
	case 1:
		var e = outcome.failure;
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Failure(e)));
	}
};
tink_core_OutcomeTools.attempt = function(f,report) {
	try {
		return tink_core_Outcome.Success(f());
	} catch( _g ) {
		var e = haxe_Exception.caught(_g).unwrap();
		return tink_core_Outcome.Failure(report(e));
	}
};
tink_core_OutcomeTools.satisfies = function(o,f) {
	if(o._hx_index == 0) {
		var d = o.data;
		return f(d);
	} else {
		return false;
	}
};
tink_core_OutcomeTools.flatten = function(o) {
	switch(o._hx_index) {
	case 0:
		var _g = o.data;
		switch(_g._hx_index) {
		case 0:
			var d = _g.data;
			return tink_core_Outcome.Success(d);
		case 1:
			var f = _g.failure;
			return tink_core_Outcome.Failure(f);
		}
		break;
	case 1:
		var f = o.failure;
		return tink_core_Outcome.Failure(f);
	}
};
var tink_core__$Outcome_OutcomeMapper = {};
tink_core__$Outcome_OutcomeMapper._new = function(f) {
	var this1 = { f : f};
	return this1;
};
tink_core__$Outcome_OutcomeMapper.apply = function(this1,o) {
	return this1.f(o);
};
tink_core__$Outcome_OutcomeMapper.withSameError = function(f) {
	return tink_core__$Outcome_OutcomeMapper._new(function(o) {
		switch(o._hx_index) {
		case 0:
			var d = o.data;
			return f(d);
		case 1:
			var f1 = o.failure;
			return tink_core_Outcome.Failure(f1);
		}
	});
};
tink_core__$Outcome_OutcomeMapper.withEitherError = function(f) {
	return tink_core__$Outcome_OutcomeMapper._new(function(o) {
		switch(o._hx_index) {
		case 0:
			var d = o.data;
			var _g = f(d);
			switch(_g._hx_index) {
			case 0:
				var d = _g.data;
				return tink_core_Outcome.Success(d);
			case 1:
				var f1 = _g.failure;
				return tink_core_Outcome.Failure(haxe_ds_Either.Right(f1));
			}
			break;
		case 1:
			var f1 = o.failure;
			return tink_core_Outcome.Failure(haxe_ds_Either.Left(f1));
		}
	});
};
var tink_core_Pair = {};
tink_core_Pair._new = function(a,b) {
	var this1 = new tink_core_MPair(a,b);
	return this1;
};
tink_core_Pair.get_a = function(this1) {
	return this1.a;
};
tink_core_Pair.get_b = function(this1) {
	return this1.b;
};
tink_core_Pair.toBool = function(this1) {
	return this1 != null;
};
tink_core_Pair.isNil = function(this1) {
	return this1 == null;
};
tink_core_Pair.nil = function() {
	return null;
};
var tink_core_MPair = function(a,b) {
	this.a = a;
	this.b = b;
};
$hxClasses["tink.core.MPair"] = tink_core_MPair;
tink_core_MPair.__name__ = "tink.core.MPair";
tink_core_MPair.prototype = {
	a: null
	,b: null
	,__class__: tink_core_MPair
};
var tink_core_ProgressValue = {};
tink_core_ProgressValue._new = function(value,total) {
	var this1 = new tink_core_MPair(value,total);
	var this2 = this1;
	return this2;
};
tink_core_ProgressValue.normalize = function(this1) {
	var o = this1.b;
	if(o._hx_index == 0) {
		var v = o.v;
		return haxe_ds_Option.Some(this1.a / v);
	} else {
		return haxe_ds_Option.None;
	}
};
tink_core_ProgressValue.get_value = function(this1) {
	return this1.a;
};
tink_core_ProgressValue.get_total = function(this1) {
	return this1.b;
};
var tink_core_Progress = {};
tink_core_Progress.listen = function(this1,cb) {
	return this1.progressed.listen(cb);
};
tink_core_Progress.handle = function(this1,cb) {
	return this1.result.handle(cb);
};
tink_core_Progress.trigger = function() {
	return new tink_core_ProgressTrigger();
};
tink_core_Progress.make = function(f) {
	return new tink_core__$Progress_SuspendableProgress(function(fire) {
		return f(function(value,total) {
			var fire1 = fire;
			var this1 = new tink_core_MPair(value,total);
			var this2 = this1;
			fire1(tink_core_ProgressStatus.InProgress(this2));
		},function(result) {
			fire(tink_core_ProgressStatus.Finished(result));
		});
	});
};
tink_core_Progress.map = function(this1,f) {
	return new tink_core__$Progress_ProgressObject(tink_core_Signal.map(this1.changed,function(s) {
		return tink_core_ProgressStatusTools.map(s,f);
	}),function() {
		return tink_core_ProgressStatusTools.map(this1.getStatus(),f);
	});
};
tink_core_Progress.asFuture = function(this1) {
	return this1.result;
};
tink_core_Progress.promise = function(v) {
	return new tink_core__$Progress_SuspendableProgress(function(fire) {
		var inner = new tink_core_CallbackLinkRef();
		return new tink_core__$Callback_LinkPair(v.handle(function(o) {
			switch(o._hx_index) {
			case 0:
				var p = o.data;
				var param = p.changed.listen(function(s) {
					fire(tink_core_ProgressStatusTools.map(s,tink_core_Outcome.Success));
				});
				var this1 = inner.link;
				if(this1 != null) {
					this1.cancel();
				}
				inner.link = param;
				break;
			case 1:
				var e = o.failure;
				fire(tink_core_ProgressStatus.Finished(tink_core_Outcome.Failure(e)));
				break;
			}
		}),inner);
	});
};
tink_core_Progress.flatten = function(v) {
	return tink_core_Progress.map(tink_core_Progress.promise(v),function(o) {
		switch(o._hx_index) {
		case 0:
			var _g = o.data;
			switch(_g._hx_index) {
			case 0:
				var v = _g.data;
				return tink_core_Outcome.Success(v);
			case 1:
				var e = _g.failure;
				return tink_core_Outcome.Failure(e);
			}
			break;
		case 1:
			var e = o.failure;
			return tink_core_Outcome.Failure(e);
		}
	});
};
tink_core_Progress.future = function(v) {
	return new tink_core__$Progress_SuspendableProgress(function(fire) {
		var inner = new tink_core_CallbackLinkRef();
		return new tink_core__$Callback_LinkPair(v.handle(function(p) {
			var param = p.changed.listen(fire);
			var this1 = inner.link;
			if(this1 != null) {
				this1.cancel();
			}
			inner.link = param;
		}),inner);
	});
};
tink_core_Progress.next = function(this1,f) {
	return tink_core_Future.flatMap(this1.result,f);
};
var tink_core__$Progress_ProgressObject = function(changed,getStatus) {
	this.changed = changed;
	var this1 = new tink_core__$Signal_Suspendable(function(fire) {
		return changed.listen(function(s) {
			if(s._hx_index == 0) {
				var v = s.v;
				fire(v);
			}
		});
	},null);
	this.progressed = this1;
	this.getStatus = getStatus;
	var this1 = new tink_core__$Future_SuspendableFuture(function(fire) {
		var _g = getStatus();
		if(_g._hx_index == 1) {
			var v = _g.v;
			fire(v);
			return null;
		} else {
			return changed.listen(function(s) {
				if(s._hx_index == 1) {
					var v = s.v;
					fire(v);
				}
			});
		}
	});
	this.result = this1;
};
$hxClasses["tink.core._Progress.ProgressObject"] = tink_core__$Progress_ProgressObject;
tink_core__$Progress_ProgressObject.__name__ = "tink.core._Progress.ProgressObject";
tink_core__$Progress_ProgressObject.prototype = {
	get_status: function() {
		return this.getStatus();
	}
	,getStatus: null
	,changed: null
	,progressed: null
	,result: null
	,__class__: tink_core__$Progress_ProgressObject
};
var tink_core__$Progress_SuspendableProgress = function(wakeup,status) {
	if(status == null) {
		status = tink_core_ProgressStatus.InProgress(tink_core_ProgressValue.ZERO);
	}
	var disposable = tink_core_AlreadyDisposed.INST;
	var changed;
	switch(status._hx_index) {
	case 0:
		var _g = status.v;
		var this1 = new tink_core__$Signal_Suspendable(function(fire) {
			return wakeup(function(s) {
				status = s;
				fire(status);
			});
		},function(d) {
			disposable = d;
		});
		changed = this1;
		break;
	case 1:
		var _g = status.v;
		changed = tink_core_Signal.dead();
		break;
	}
	tink_core__$Progress_ProgressObject.call(this,changed,function() {
		return status;
	});
};
$hxClasses["tink.core._Progress.SuspendableProgress"] = tink_core__$Progress_SuspendableProgress;
tink_core__$Progress_SuspendableProgress.__name__ = "tink.core._Progress.SuspendableProgress";
tink_core__$Progress_SuspendableProgress.__super__ = tink_core__$Progress_ProgressObject;
tink_core__$Progress_SuspendableProgress.prototype = $extend(tink_core__$Progress_ProgressObject.prototype,{
	noop: function(_,_1) {
		return null;
	}
	,__class__: tink_core__$Progress_SuspendableProgress
});
var tink_core_ProgressTrigger = function(status) {
	this._changed = null;
	var _gthis = this;
	if(status == null) {
		status = tink_core_ProgressStatus.InProgress(tink_core_ProgressValue.ZERO);
		this._status = status;
	}
	var tmp;
	if(status == null) {
		tmp = false;
	} else if(status._hx_index == 1) {
		var _g = status.v;
		tmp = true;
	} else {
		tmp = false;
	}
	tink_core__$Progress_ProgressObject.call(this,tmp ? tink_core_Signal.dead() : this._changed = tink_core_Signal.trigger(),function() {
		return _gthis._status;
	});
};
$hxClasses["tink.core.ProgressTrigger"] = tink_core_ProgressTrigger;
tink_core_ProgressTrigger.__name__ = "tink.core.ProgressTrigger";
tink_core_ProgressTrigger.__super__ = tink_core__$Progress_ProgressObject;
tink_core_ProgressTrigger.prototype = $extend(tink_core__$Progress_ProgressObject.prototype,{
	_status: null
	,_changed: null
	,asProgress: function() {
		return this;
	}
	,progress: function(v,total) {
		var _g = this._status;
		var tmp;
		if(_g._hx_index == 1) {
			var _g1 = _g.v;
			tmp = true;
		} else {
			tmp = false;
		}
		if(!tmp) {
			var _this = this._changed;
			var this1 = new tink_core_MPair(v,total);
			var this2 = this1;
			_this.handlers.invoke(this._status = tink_core_ProgressStatus.InProgress(this2));
		}
	}
	,finish: function(v) {
		var _g = this._status;
		var tmp;
		if(_g._hx_index == 1) {
			var _g1 = _g.v;
			tmp = true;
		} else {
			tmp = false;
		}
		if(!tmp) {
			this._changed.handlers.invoke(this._status = tink_core_ProgressStatus.Finished(v));
		}
	}
	,__class__: tink_core_ProgressTrigger
});
var tink_core_UnitInterval = {};
tink_core_UnitInterval.toPercentageString = function(this1,dp) {
	var m = Math.pow(10,dp);
	var v = Math.round(this1 * m * 100) / m;
	var s = v == null ? "null" : "" + v;
	var _g = s.indexOf(".");
	if(_g == -1) {
		return s + "." + StringTools.lpad("","0",dp) + "%";
	} else {
		var i = _g;
		if(s.length - i > dp) {
			return HxOverrides.substr(s,0,dp + i + 1) + "%";
		} else {
			var i = _g;
			return StringTools.rpad(s,"0",i + dp + 1) + "%";
		}
	}
};
var tink_core_ProgressStatus = $hxEnums["tink.core.ProgressStatus"] = { __ename__:"tink.core.ProgressStatus",__constructs__:null
	,InProgress: ($_=function(v) { return {_hx_index:0,v:v,__enum__:"tink.core.ProgressStatus",toString:$estr}; },$_._hx_name="InProgress",$_.__params__ = ["v"],$_)
	,Finished: ($_=function(v) { return {_hx_index:1,v:v,__enum__:"tink.core.ProgressStatus",toString:$estr}; },$_._hx_name="Finished",$_.__params__ = ["v"],$_)
};
tink_core_ProgressStatus.__constructs__ = [tink_core_ProgressStatus.InProgress,tink_core_ProgressStatus.Finished];
var tink_core_ProgressStatusTools = function() { };
$hxClasses["tink.core.ProgressStatusTools"] = tink_core_ProgressStatusTools;
tink_core_ProgressStatusTools.__name__ = "tink.core.ProgressStatusTools";
tink_core_ProgressStatusTools.map = function(p,f) {
	switch(p._hx_index) {
	case 0:
		var v = p.v;
		return tink_core_ProgressStatus.InProgress(v);
	case 1:
		var v = p.v;
		return tink_core_ProgressStatus.Finished(f(v));
	}
};
var tink_core_TotalTools = function() { };
$hxClasses["tink.core.TotalTools"] = tink_core_TotalTools;
tink_core_TotalTools.__name__ = "tink.core.TotalTools";
tink_core_TotalTools.eq = function(a,b) {
	switch(a._hx_index) {
	case 0:
		if(b._hx_index == 0) {
			var t2 = b.v;
			var t1 = a.v;
			return t1 == t2;
		} else {
			return false;
		}
		break;
	case 1:
		if(b._hx_index == 1) {
			return true;
		} else {
			return false;
		}
		break;
	}
};
var tink_core_ProgressTools = function() { };
$hxClasses["tink.core.ProgressTools"] = tink_core_ProgressTools;
tink_core_ProgressTools.__name__ = "tink.core.ProgressTools";
tink_core_ProgressTools.asPromise = function(p) {
	return p.result;
};
var tink_core_Promise = {};
tink_core_Promise.never = function() {
	return tink_core_Future.never();
};
tink_core_Promise._new = function(f) {
	var this1 = new tink_core__$Future_SuspendableFuture(function(cb) {
		return f(function(v) {
			cb(tink_core_Outcome.Success(v));
		},function(e) {
			cb(tink_core_Outcome.Failure(e));
		});
	});
	var this2 = this1;
	return this2;
};
tink_core_Promise.eager = function(this1) {
	this1.eager();
	return this1;
};
tink_core_Promise.map = function(this1,f) {
	return tink_core_Future.map(this1,f);
};
tink_core_Promise.flatMap = function(this1,f) {
	return tink_core_Future.flatMap(this1,f);
};
tink_core_Promise.tryRecover = function(this1,f) {
	return tink_core_Future.flatMap(this1,function(o) {
		switch(o._hx_index) {
		case 0:
			var d = o.data;
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(o));
		case 1:
			var e = o.failure;
			return f(e);
		}
	});
};
tink_core_Promise.recover = function(this1,f) {
	return tink_core_Future.flatMap(this1,function(o) {
		switch(o._hx_index) {
		case 0:
			var d = o.data;
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(d));
		case 1:
			var e = o.failure;
			return f(e);
		}
	});
};
tink_core_Promise.mapError = function(this1,f) {
	return tink_core_Future.map(this1,function(o) {
		switch(o._hx_index) {
		case 0:
			var _g = o.data;
			return o;
		case 1:
			var e = o.failure;
			return tink_core_Outcome.Failure(f(e));
		}
	});
};
tink_core_Promise.withSideEffect = function(this1,c) {
	var c1 = function(o) {
		if(o._hx_index == 0) {
			var data = o.data;
			tink_core_Callback.invoke(c,data);
		}
	};
	return tink_core_Future.map(this1,function(v) {
		tink_core_Callback.invoke(c1,v);
		return v;
	});
};
tink_core_Promise.handle = function(this1,cb) {
	return this1.handle(cb);
};
tink_core_Promise.noise = function(this1) {
	if(this1.getStatus()._hx_index == 4) {
		return tink_core_Promise.never();
	} else {
		return tink_core_Promise.next(this1,tink_core_Next.ofSafeSync(function(v) {
			return null;
		}));
	}
};
tink_core_Promise.isSuccess = function(this1) {
	return tink_core_Future.map(this1,function(o) {
		return tink_core_OutcomeTools.isSuccess(o);
	});
};
tink_core_Promise.next = function(this1,f,gather) {
	return tink_core_Future.flatMap(this1,function(o) {
		switch(o._hx_index) {
		case 0:
			var d = o.data;
			return f(d);
		case 1:
			var f1 = o.failure;
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Failure(f1)));
		}
	});
};
tink_core_Promise.swap = function(this1,v) {
	return tink_core_Promise.next(this1,tink_core_Next.ofSafeSync(function(_) {
		return v;
	}));
};
tink_core_Promise.swapError = function(this1,e) {
	return tink_core_Promise.mapError(this1,function(_) {
		return e;
	});
};
tink_core_Promise.merge = function(this1,other,merger,gather) {
	return tink_core_Future.flatMap(tink_core_Future.merge(this1,other,function(a,b) {
		switch(a._hx_index) {
		case 0:
			var _g = a.data;
			switch(b._hx_index) {
			case 0:
				var b1 = b.data;
				var a1 = _g;
				return merger(a1,b1);
			case 1:
				var e = b.failure;
				return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Failure(e)));
			}
			break;
		case 1:
			var e = a.failure;
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Failure(e)));
		}
	}),function(o) {
		return o;
	});
};
tink_core_Promise.irreversible = function(f) {
	var f1 = function(res,rej) {
		f(res,rej);
		return null;
	};
	var this1 = new tink_core__$Future_SuspendableFuture(function(cb) {
		return f1(function(v) {
			cb(tink_core_Outcome.Success(v));
		},function(e) {
			cb(tink_core_Outcome.Failure(e));
		});
	});
	var this2 = this1;
	return this2;
};
tink_core_Promise.and = function(a,b) {
	return tink_core_Promise.merge(a,b,tink_core_Combiner.ofSafeSync(function(a,b) {
		var this1 = new tink_core_MPair(a,b);
		return this1;
	}));
};
tink_core_Promise.iterate = function(promises,$yield,fallback,fallThroughOnError) {
	if(fallThroughOnError == null) {
		fallThroughOnError = false;
	}
	return tink_core_Future.irreversible(function(cb) {
		var iter = $getIterator(promises);
		var next = null;
		next = function() {
			if(iter.hasNext()) {
				iter.next().handle(function(o) {
					switch(o._hx_index) {
					case 0:
						var v = o.data;
						$yield(v).handle(function(o) {
							switch(o._hx_index) {
							case 0:
								var _g = o.data;
								switch(_g._hx_index) {
								case 0:
									var ret = _g.v;
									cb(tink_core_Outcome.Success(ret));
									break;
								case 1:
									next();
									break;
								}
								break;
							case 1:
								var e = o.failure;
								cb(tink_core_Outcome.Failure(e));
								break;
							}
						});
						break;
					case 1:
						var e = o.failure;
						if(fallThroughOnError) {
							next();
						} else {
							cb(tink_core_Outcome.Failure(e));
						}
						break;
					}
				});
			} else {
				fallback.handle(cb);
			}
		};
		next();
	});
};
tink_core_Promise.retry = function(gen,next) {
	var stamp = function() {
		return HxOverrides.now() / 1000 * 1000;
	};
	var start = stamp();
	var attempt = null;
	attempt = function(count) {
		var f = function(error) {
			return tink_core_Promise.next(next({ attempt : count, error : error, elapsed : stamp() - start}),function(_) {
				return attempt(count + 1);
			});
		};
		return tink_core_Future.flatMap(gen(),function(o) {
			switch(o._hx_index) {
			case 0:
				var d = o.data;
				return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(o));
			case 1:
				var e = o.failure;
				return f(e);
			}
		});
	};
	return attempt(1);
};
tink_core_Promise.ofJsPromise = function(promise,transformError) {
	return tink_core_Future.ofJsPromise(promise,transformError);
};
tink_core_Promise.fromJsPromise = function(promise) {
	return tink_core_Future.ofJsPromise(promise);
};
tink_core_Promise.toJsPromise = function(this1) {
	return new Promise(function(resolve,reject) {
		this1.handle(function(o) {
			switch(o._hx_index) {
			case 0:
				var v = o.data;
				resolve(v);
				break;
			case 1:
				var e = o.failure;
				reject(e.toJsError());
				break;
			}
		});
	});
};
tink_core_Promise.ofSpecific = function(s) {
	return s;
};
tink_core_Promise.fromNever = function(l) {
	return l;
};
tink_core_Promise.ofTrigger = function(f) {
	return f;
};
tink_core_Promise.ofHappyTrigger = function(f) {
	return tink_core_Future.map(f,tink_core_Outcome.Success);
};
tink_core_Promise.ofFuture = function(f) {
	return tink_core_Future.map(f,tink_core_Outcome.Success);
};
tink_core_Promise.ofOutcome = function(o) {
	return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(o));
};
tink_core_Promise.ofError = function(e) {
	return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Failure(e)));
};
tink_core_Promise.ofData = function(d) {
	return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success(d)));
};
tink_core_Promise.asFuture = function(this1) {
	return this1;
};
tink_core_Promise.lazy = function(p) {
	var this1 = new tink_core__$Future_SuspendableFuture(function(cb) {
		return tink_core_Lazy.get(p).handle(cb);
	});
	return this1;
};
tink_core_Promise.inParallel = function(a,concurrency) {
	return tink_core_Promise.many(a,concurrency);
};
tink_core_Promise.many = function(a,concurrency) {
	return tink_core_Future.processMany(a,concurrency,function(o) {
		return o;
	},function(o) {
		return o;
	});
};
tink_core_Promise.inSequence = function(a) {
	return tink_core_Promise.many(a,1);
};
tink_core_Promise.cache = function(gen) {
	var p = null;
	return function() {
		var ret = p;
		if(ret == null) {
			var sync = false;
			ret = tink_core_Promise.next(gen(),tink_core_Next.ofSafeSync(function(o) {
				o.b.handle(function(_) {
					sync = true;
					p = null;
				});
				return o.a;
			}));
			if(!sync) {
				p = ret;
			}
		}
		return tink_core_Future.map(ret,function(o) {
			if(!tink_core_OutcomeTools.isSuccess(o)) {
				p = null;
			}
			return o;
		});
	};
};
tink_core_Promise.lift = function(p) {
	return p;
};
tink_core_Promise.trigger = function() {
	var this1 = new tink_core_FutureTrigger();
	return this1;
};
tink_core_Promise.resolve = function(v) {
	return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success(v)));
};
tink_core_Promise.reject = function(e) {
	return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Failure(e)));
};
var tink_core_Next = {};
tink_core_Next.ofSafe = function(f) {
	return function(x) {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(f(x)));
	};
};
tink_core_Next.ofSync = function(f) {
	return function(x) {
		return tink_core_Future.map(f(x),tink_core_Outcome.Success);
	};
};
tink_core_Next.ofSafeSync = function(f) {
	return function(x) {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success(f(x))));
	};
};
tink_core_Next._chain = function(a,b) {
	return function(v) {
		return tink_core_Promise.next(a(v),b);
	};
};
var tink_core_Recover = {};
tink_core_Recover.ofSync = function(f) {
	return function(e) {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(f(e)));
	};
};
var tink_core_Combiner = {};
tink_core_Combiner.ofSync = function(f) {
	return function(x1,x2) {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(f(x1,x2)));
	};
};
tink_core_Combiner.ofSafe = function(f) {
	return function(x1,x2) {
		return tink_core_Future.map(f(x1,x2),tink_core_Outcome.Success);
	};
};
tink_core_Combiner.ofSafeSync = function(f) {
	return function(x1,x2) {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success(f(x1,x2))));
	};
};
var tink_core_PromiseTrigger = {};
tink_core_PromiseTrigger._new = function() {
	var this1 = new tink_core_FutureTrigger();
	return this1;
};
tink_core_PromiseTrigger.resolve = function(this1,v) {
	return this1.trigger(tink_core_Outcome.Success(v));
};
tink_core_PromiseTrigger.reject = function(this1,e) {
	return this1.trigger(tink_core_Outcome.Failure(e));
};
tink_core_PromiseTrigger.asPromise = function(this1) {
	return this1;
};
var tink_core_Ref = {};
tink_core_Ref._new = function() {
	var this1 = new Array(1);
	var this2 = this1;
	return this2;
};
tink_core_Ref.get_value = function(this1) {
	return this1[0];
};
tink_core_Ref.set_value = function(this1,param) {
	return this1[0] = param;
};
tink_core_Ref.toString = function(this1) {
	return "@[" + Std.string(this1[0]) + "]";
};
tink_core_Ref.to = function(v) {
	var this1 = new Array(1);
	var this2 = this1;
	var ret = this2;
	ret[0] = v;
	return ret;
};
var tink_core_Gather = {};
tink_core_Gather._new = function(v) {
	var this1 = v;
	return this1;
};
tink_core_Gather.ofBool = function(b) {
	var this1 = b;
	return this1;
};
var tink_core_Signal = {};
tink_core_Signal._new = function(f,init) {
	var this1 = new tink_core__$Signal_Suspendable(f,init);
	return this1;
};
tink_core_Signal.handle = function(this1,handler) {
	return this1.listen(handler);
};
tink_core_Signal.map = function(this1,f,gather) {
	return tink_core__$Signal_Suspendable.over(this1,function(fire) {
		return this1.listen(function(v) {
			fire(f(v));
		});
	});
};
tink_core_Signal.flatMap = function(this1,f,gather) {
	return tink_core__$Signal_Suspendable.over(this1,function(fire) {
		return this1.listen(function(v) {
			f(v).handle(fire);
		});
	});
};
tink_core_Signal.filter = function(this1,f,gather) {
	return tink_core__$Signal_Suspendable.over(this1,function(fire) {
		return this1.listen(function(v) {
			if(f(v)) {
				fire(v);
			}
		});
	});
};
tink_core_Signal.select = function(this1,selector,gather) {
	return tink_core__$Signal_Suspendable.over(this1,function(fire) {
		return this1.listen(function(v) {
			var _g = selector(v);
			if(_g._hx_index == 0) {
				var v = _g.v;
				fire(v);
			}
		});
	});
};
tink_core_Signal.join = function(this1,that,gather) {
	if(this1.get_disposed()) {
		return that;
	} else if(that.get_disposed()) {
		return this1;
	} else {
		return new tink_core__$Signal_Suspendable(function(fire) {
			var cb = fire;
			return new tink_core__$Callback_LinkPair(this1.listen(cb),that.listen(cb));
		},function(self) {
			var release = function() {
				if(this1.get_disposed() && that.get_disposed()) {
					self.dispose();
				}
			};
			this1.ondispose(release);
			that.ondispose(release);
		});
	}
};
tink_core_Signal.nextTime = function(this1,condition) {
	return tink_core_Signal.pickNext(this1,function(v) {
		if(condition == null || condition(v)) {
			return haxe_ds_Option.Some(v);
		} else {
			return haxe_ds_Option.None;
		}
	});
};
tink_core_Signal.pickNext = function(this1,selector) {
	var ret = new tink_core_FutureTrigger();
	var link = null;
	link = this1.listen(function(v) {
		var _g = selector(v);
		switch(_g._hx_index) {
		case 0:
			var v = _g.v;
			ret.trigger(v);
			break;
		case 1:
			break;
		}
	});
	ret.handle(link == null ? tink_core_CallbackLink.noop : ($_=link,$bind($_,$_.cancel)));
	return ret;
};
tink_core_Signal.until = function(this1,end) {
	return new tink_core__$Signal_Suspendable(function($yield) {
		return this1.listen($yield);
	},function(self) {
		end.handle($bind(self,self.dispose));
	});
};
tink_core_Signal.next = function(this1,condition) {
	return tink_core_Signal.nextTime(this1,condition);
};
tink_core_Signal.noise = function(this1) {
	return tink_core_Signal.map(this1,function(_) {
		return null;
	});
};
tink_core_Signal.gather = function(this1) {
	return this1;
};
tink_core_Signal.create = function(f) {
	var this1 = new tink_core__$Signal_Suspendable(f,null);
	return this1;
};
tink_core_Signal.generate = function(generator,init) {
	var this1 = new tink_core__$Signal_Suspendable(function(fire) {
		generator(fire);
		return null;
	},init);
	return this1;
};
tink_core_Signal.trigger = function() {
	return new tink_core_SignalTrigger();
};
tink_core_Signal.ofClassical = function(add,remove,gather) {
	return new tink_core__$Signal_Suspendable(function(fire) {
		add(fire);
		var _g = remove;
		var a1 = fire;
		var this1 = new tink_core_SimpleLink(function() {
			_g(a1);
		});
		return this1;
	});
};
tink_core_Signal.dead = function() {
	return tink_core__$Signal_Disposed.INST;
};
var tink_core__$Signal_SignalObject = function() { };
$hxClasses["tink.core._Signal.SignalObject"] = tink_core__$Signal_SignalObject;
tink_core__$Signal_SignalObject.__name__ = "tink.core._Signal.SignalObject";
tink_core__$Signal_SignalObject.__isInterface__ = true;
tink_core__$Signal_SignalObject.__interfaces__ = [tink_core_Disposable];
tink_core__$Signal_SignalObject.prototype = {
	listen: null
	,__class__: tink_core__$Signal_SignalObject
};
var tink_core__$Signal_Disposed = function() {
	tink_core_AlreadyDisposed.call(this);
};
$hxClasses["tink.core._Signal.Disposed"] = tink_core__$Signal_Disposed;
tink_core__$Signal_Disposed.__name__ = "tink.core._Signal.Disposed";
tink_core__$Signal_Disposed.__interfaces__ = [tink_core__$Signal_SignalObject];
tink_core__$Signal_Disposed.__super__ = tink_core_AlreadyDisposed;
tink_core__$Signal_Disposed.prototype = $extend(tink_core_AlreadyDisposed.prototype,{
	listen: function(cb) {
		return null;
	}
	,__class__: tink_core__$Signal_Disposed
});
var tink_core__$Signal_Suspendable = function(activate,init) {
	this.handlers = new tink_core_CallbackList();
	var _gthis = this;
	this.activate = activate;
	this.init = init;
	this.handlers.ondrain = function() {
		var this1 = _gthis.subscription;
		if(this1 != null) {
			this1.cancel();
		}
	};
	this.handlers.onfill = function() {
		if(init != null) {
			var f = init;
			init = null;
			f(_gthis);
		}
		_gthis.subscription = activate(($_=_gthis.handlers,$bind($_,$_.invoke)));
	};
};
$hxClasses["tink.core._Signal.Suspendable"] = tink_core__$Signal_Suspendable;
tink_core__$Signal_Suspendable.__name__ = "tink.core._Signal.Suspendable";
tink_core__$Signal_Suspendable.__interfaces__ = [tink_core_OwnedDisposable,tink_core__$Signal_SignalObject];
tink_core__$Signal_Suspendable.over = function(s,activate) {
	if(s.get_disposed()) {
		return tink_core_Signal.dead();
	} else {
		var ret = new tink_core__$Signal_Suspendable(activate);
		s.ondispose($bind(ret,ret.dispose));
		return ret;
	}
};
tink_core__$Signal_Suspendable.prototype = {
	handlers: null
	,activate: null
	,init: null
	,subscription: null
	,get_disposed: function() {
		return this.handlers.disposeHandlers == null;
	}
	,dispose: function() {
		this.handlers.dispose();
	}
	,ondispose: function(handler) {
		this.handlers.ondispose(handler);
	}
	,listen: function(cb) {
		var _this = this.handlers;
		if(_this.disposeHandlers == null) {
			return null;
		} else {
			var node = new tink_core__$Callback_ListCell(cb,_this);
			_this.cells.push(node);
			if(_this.used++ == 0) {
				var fn = _this.onfill;
				if(tink_core_Callback.depth < 500) {
					tink_core_Callback.depth++;
					fn();
					tink_core_Callback.depth--;
				} else {
					tink_core_Callback.defer(fn);
				}
			}
			return node;
		}
	}
	,__class__: tink_core__$Signal_Suspendable
};
var tink_core_SignalTrigger = function() {
	this.handlers = new tink_core_CallbackList();
};
$hxClasses["tink.core.SignalTrigger"] = tink_core_SignalTrigger;
tink_core_SignalTrigger.__name__ = "tink.core.SignalTrigger";
tink_core_SignalTrigger.__interfaces__ = [tink_core_OwnedDisposable,tink_core__$Signal_SignalObject];
tink_core_SignalTrigger.prototype = {
	get_disposed: function() {
		return this.handlers.disposeHandlers == null;
	}
	,handlers: null
	,dispose: function() {
		this.handlers.dispose();
	}
	,ondispose: function(d) {
		this.handlers.ondispose(d);
	}
	,trigger: function(event) {
		this.handlers.invoke(event);
	}
	,getLength: function() {
		return this.handlers.used;
	}
	,listen: function(cb) {
		var _this = this.handlers;
		if(_this.disposeHandlers == null) {
			return null;
		} else {
			var node = new tink_core__$Callback_ListCell(cb,_this);
			_this.cells.push(node);
			if(_this.used++ == 0) {
				var fn = _this.onfill;
				if(tink_core_Callback.depth < 500) {
					tink_core_Callback.depth++;
					fn();
					tink_core_Callback.depth--;
				} else {
					tink_core_Callback.defer(fn);
				}
			}
			return node;
		}
	}
	,clear: function() {
		this.handlers.clear();
	}
	,asSignal: function() {
		return this;
	}
	,__class__: tink_core_SignalTrigger
};
var tink_xml_NodeName = {};
tink_xml_NodeName._new = function(s) {
	var this1 = s;
	return this1;
};
tink_xml_NodeName.ofString = function(s) {
	var this1 = s;
	return this1;
};
tink_xml_NodeName.equalsString = function(a,b) {
	var this1 = b;
	return a.toLowerCase() == this1.toLowerCase();
};
tink_xml_NodeName.equalsName = function(a,b) {
	return a.toLowerCase() == b.toLowerCase();
};
var tink_xml_Reader = function() {
};
$hxClasses["tink.xml.Reader"] = tink_xml_Reader;
tink_xml_Reader.__name__ = "tink.xml.Reader";
tink_xml_Reader.prototype = {
	doRead: function(x) {
		throw haxe_Exception.thrown("abstract");
	}
	,read: function(x) {
		try {
			return tink_core_Outcome.Success(this.doRead(x));
		} catch( _g ) {
			var _g1 = haxe_Exception.caught(_g).unwrap();
			if(((_g1) instanceof tink_xml_ReaderError)) {
				var e = _g1;
				return tink_core_Outcome.Failure(e);
			} else {
				var e = _g1;
				return tink_core_Outcome.Failure(new tink_xml_ReaderError("error \"" + Std.string(e) + "\"",x,{ fileName : "tink/xml/Reader.hx", lineNumber : 21, className : "tink.xml.Reader", methodName : "read"}));
			}
		}
	}
	,__class__: tink_xml_Reader
};
var tink_xml_ReaderError = function(msg,data,pos) {
	tink_core_TypedError.call(this,422,msg,pos);
	this.data = data;
};
$hxClasses["tink.xml.ReaderError"] = tink_xml_ReaderError;
tink_xml_ReaderError.__name__ = "tink.xml.ReaderError";
tink_xml_ReaderError.__super__ = tink_core_TypedError;
tink_xml_ReaderError.prototype = $extend(tink_core_TypedError.prototype,{
	toString: function() {
		return "" + this.message + " at element:" + this.data.toString();
	}
	,__class__: tink_xml_ReaderError
});
var tink_xml_Source = {};
tink_xml_Source.fromString = function(s) {
	try {
		return tink_xml_Source.fromXml(Xml.parse(s));
	} catch( _g ) {
		var e = haxe_Exception.caught(_g).unwrap();
		return new tink_xml__$Source_InvalidSource(s,e);
	}
};
tink_xml_Source.fromXml = function(x) {
	return new tink_xml__$Source_XmlSource(x.nodeType == 6 ? x.firstElement() : x);
};
tink_xml_Source.fromDom = function(e) {
	return new tink_xml__$Source_DomSource(e);
};
var tink_xml_ISource = function() { };
$hxClasses["tink.xml.ISource"] = tink_xml_ISource;
tink_xml_ISource.__name__ = "tink.xml.ISource";
tink_xml_ISource.__isInterface__ = true;
tink_xml_ISource.prototype = {
	get_name: null
	,getText: null
	,getAttribute: null
	,attributes: null
	,elements: null
	,toString: null
	,__class__: tink_xml_ISource
};
var tink_xml__$Source_DomSource = function(target) {
	this.target = target;
};
$hxClasses["tink.xml._Source.DomSource"] = tink_xml__$Source_DomSource;
tink_xml__$Source_DomSource.__name__ = "tink.xml._Source.DomSource";
tink_xml__$Source_DomSource.__interfaces__ = [tink_xml_ISource];
tink_xml__$Source_DomSource.prototype = {
	get_name: function() {
		var this1 = this.target.nodeName;
		return this1;
	}
	,target: null
	,getText: function() {
		return this.target.innerHTML;
	}
	,attributes: function() {
		return new haxe_iterators_ArrayIterator(this.target.getAttributeNames());
	}
	,getAttribute: function(name) {
		return this.target.getAttribute(name);
	}
	,elements: function() {
		var _gthis = this;
		var ret_min;
		var ret_max;
		ret_min = 0;
		ret_max = this.target.children.length;
		return { hasNext : function() {
			return ret_min < ret_max;
		}, next : function() {
			ret_min += 1;
			return new tink_xml__$Source_DomSource(_gthis.target.children[ret_min - 1]);
		}};
	}
	,toString: function() {
		return this.target.outerHTML;
	}
	,__class__: tink_xml__$Source_DomSource
};
var tink_xml__$Source_InvalidSource = function(source,error) {
	this.source = source;
	this.error = new tink_xml_ReaderError("Failed to parse Xml because " + Std.string(error),this,{ fileName : "tink/xml/Source.hx", lineNumber : 79, className : "tink.xml._Source.InvalidSource", methodName : "new"});
};
$hxClasses["tink.xml._Source.InvalidSource"] = tink_xml__$Source_InvalidSource;
tink_xml__$Source_InvalidSource.__name__ = "tink.xml._Source.InvalidSource";
tink_xml__$Source_InvalidSource.__interfaces__ = [tink_xml_ISource];
tink_xml__$Source_InvalidSource.prototype = {
	get_name: function() {
		throw haxe_Exception.thrown(this.error);
	}
	,error: null
	,source: null
	,attributes: function() {
		throw haxe_Exception.thrown(this.error);
	}
	,getText: function() {
		throw haxe_Exception.thrown(this.error);
	}
	,getAttribute: function(name) {
		throw haxe_Exception.thrown(this.error);
	}
	,elements: function() {
		throw haxe_Exception.thrown(this.error);
	}
	,toString: function() {
		return this.source;
	}
	,__class__: tink_xml__$Source_InvalidSource
};
var tink_xml__$Source_XmlSource = function(x) {
	this.x = x;
};
$hxClasses["tink.xml._Source.XmlSource"] = tink_xml__$Source_XmlSource;
tink_xml__$Source_XmlSource.__name__ = "tink.xml._Source.XmlSource";
tink_xml__$Source_XmlSource.__interfaces__ = [tink_xml_ISource];
tink_xml__$Source_XmlSource.prototype = {
	x: null
	,get_name: function() {
		var _this = this.x;
		if(_this.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element but found " + (_this.nodeType == null ? "null" : XmlType.toString(_this.nodeType)));
		}
		var this1 = _this.nodeName;
		return this1;
	}
	,getText: function() {
		var _g = [];
		var _this = this.x;
		if(_this.nodeType != Xml.Document && _this.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (_this.nodeType == null ? "null" : XmlType.toString(_this.nodeType)));
		}
		var c_current = 0;
		var c_array = _this.children;
		while(c_current < c_array.length) {
			var c = c_array[c_current++];
			if(c.nodeType != Xml.Comment) {
				var tmp;
				try {
					if(c.nodeType == Xml.Document || c.nodeType == Xml.Element) {
						throw haxe_Exception.thrown("Bad node type, unexpected " + (c.nodeType == null ? "null" : XmlType.toString(c.nodeType)));
					}
					tmp = c.nodeValue;
				} catch( _g1 ) {
					tmp = haxe_xml_Printer.print(c);
				}
				_g.push(tmp);
			}
		}
		return _g.join("");
	}
	,attributes: function() {
		return this.x.attributes();
	}
	,getAttribute: function(name) {
		return this.x.get(name);
	}
	,elements: function() {
		var ret = this.x.elements();
		return { hasNext : function() {
			return ret.hasNext();
		}, next : function() {
			return new tink_xml__$Source_XmlSource(ret.next());
		}};
	}
	,toString: function() {
		return haxe_xml_Printer.print(this.x);
	}
	,__class__: tink_xml__$Source_XmlSource
};
var tink_xml_Structure = function() { };
$hxClasses["tink.xml.Structure"] = tink_xml_Structure;
tink_xml_Structure.__name__ = "tink.xml.Structure";
var tink_xml_Structure0 = function() {
	tink_xml_Reader.call(this);
};
$hxClasses["tink.xml.Structure0"] = tink_xml_Structure0;
tink_xml_Structure0.__name__ = "tink.xml.Structure0";
tink_xml_Structure0.__super__ = tink_xml_Reader;
tink_xml_Structure0.prototype = $extend(tink_xml_Reader.prototype,{
	doRead: function(x) {
		var ret = { groups : []};
		var i = 0;
		var child = x.elements();
		while(child.hasNext()) {
			var child1 = child.next();
			var n = ++i;
			var this1 = "tc:group";
			if(child1.get_name().toLowerCase() == this1.toLowerCase()) {
				ret.groups.push(tink_xml_Structure1.inst.doRead(child1));
				continue;
			}
		}
		return ret;
	}
	,__class__: tink_xml_Structure0
});
var tink_xml_Structure1 = function() {
	tink_xml_Reader.call(this);
};
$hxClasses["tink.xml.Structure1"] = tink_xml_Structure1;
tink_xml_Structure1.__name__ = "tink.xml.Structure1";
tink_xml_Structure1.__super__ = tink_xml_Reader;
tink_xml_Structure1.prototype = $extend(tink_xml_Reader.prototype,{
	doRead: function(x) {
		var __tink_has_desc0 = false;
		var ret = { desc : null, href : null, id : null, tests : []};
		var i = 0;
		var child = x.elements();
		while(child.hasNext()) {
			var child1 = child.next();
			var n = ++i;
			var this1 = "tc:desc";
			if(child1.get_name().toLowerCase() == this1.toLowerCase()) {
				if(!__tink_has_desc0) {
					__tink_has_desc0 = true;
					ret.desc = tink_xml_Structure2.inst.doRead(child1);
				} else {
					throw haxe_Exception.thrown(new tink_xml_ReaderError("Duplicate element \"tc:desc\"",x,{ fileName : "tink/xml/macros/Builder.hx", lineNumber : 172, className : "tink.xml.Structure1", methodName : "doRead"}));
				}
				continue;
			}
			var this2 = "tc:test";
			if(child1.get_name().toLowerCase() == this2.toLowerCase()) {
				ret.tests.push(tink_xml_Structure3.inst.doRead(child1));
				continue;
			}
		}
		if(!__tink_has_desc0) {
			throw haxe_Exception.thrown(new tink_xml_ReaderError("Missing element \"tc:desc\"",x,{ fileName : "tink/xml/macros/Builder.hx", lineNumber : 172, className : "tink.xml.Structure1", methodName : "doRead"}));
		}
		var _g = x.getAttribute("href");
		if(_g == null) {
			throw haxe_Exception.thrown(new tink_xml_ReaderError("Missing attribute \"href\"",x,{ fileName : "tink/xml/macros/Builder.hx", lineNumber : 172, className : "tink.xml.Structure1", methodName : "doRead"}));
		} else {
			var v = _g;
			ret.href = v;
		}
		var _g = x.getAttribute("id");
		if(_g == null) {
			throw haxe_Exception.thrown(new tink_xml_ReaderError("Missing attribute \"id\"",x,{ fileName : "tink/xml/macros/Builder.hx", lineNumber : 172, className : "tink.xml.Structure1", methodName : "doRead"}));
		} else {
			var v = _g;
			ret.id = v;
		}
		return ret;
	}
	,__class__: tink_xml_Structure1
});
var tink_xml_Structure2 = function() {
	tink_xml_Reader.call(this);
};
$hxClasses["tink.xml.Structure2"] = tink_xml_Structure2;
tink_xml_Structure2.__name__ = "tink.xml.Structure2";
tink_xml_Structure2.__super__ = tink_xml_Reader;
tink_xml_Structure2.prototype = $extend(tink_xml_Reader.prototype,{
	doRead: function(x) {
		return x.getText();
	}
	,__class__: tink_xml_Structure2
});
var tink_xml_Structure3 = function() {
	tink_xml_Reader.call(this);
};
$hxClasses["tink.xml.Structure3"] = tink_xml_Structure3;
tink_xml_Structure3.__name__ = "tink.xml.Structure3";
tink_xml_Structure3.__super__ = tink_xml_Reader;
tink_xml_Structure3.prototype = $extend(tink_xml_Reader.prototype,{
	doRead: function(x) {
		var __tink_has_uri5 = false;
		var __tink_has_scheme4 = false;
		var __tink_has_ref3 = false;
		var __tink_has_expectRef2 = false;
		var __tink_has_base1 = false;
		var ret = { id : null};
		var i = 0;
		var child = x.elements();
		while(child.hasNext()) {
			var child1 = child.next();
			var n = ++i;
			var this1 = "tc:uri";
			if(child1.get_name().toLowerCase() == this1.toLowerCase()) {
				if(!__tink_has_uri5) {
					__tink_has_uri5 = true;
					ret.uri = tink_xml_Structure2.inst.doRead(child1);
				} else {
					throw haxe_Exception.thrown(new tink_xml_ReaderError("Duplicate element \"tc:uri\"",x,{ fileName : "tink/xml/macros/Builder.hx", lineNumber : 172, className : "tink.xml.Structure3", methodName : "doRead"}));
				}
				continue;
			}
			var this2 = "tc:scheme";
			if(child1.get_name().toLowerCase() == this2.toLowerCase()) {
				if(!__tink_has_scheme4) {
					__tink_has_scheme4 = true;
					ret.scheme = tink_xml_Structure2.inst.doRead(child1);
				} else {
					throw haxe_Exception.thrown(new tink_xml_ReaderError("Duplicate element \"tc:scheme\"",x,{ fileName : "tink/xml/macros/Builder.hx", lineNumber : 172, className : "tink.xml.Structure3", methodName : "doRead"}));
				}
				continue;
			}
			var this3 = "tc:ref";
			if(child1.get_name().toLowerCase() == this3.toLowerCase()) {
				if(!__tink_has_ref3) {
					__tink_has_ref3 = true;
					ret.ref = tink_xml_Structure2.inst.doRead(child1);
				} else {
					throw haxe_Exception.thrown(new tink_xml_ReaderError("Duplicate element \"tc:ref\"",x,{ fileName : "tink/xml/macros/Builder.hx", lineNumber : 172, className : "tink.xml.Structure3", methodName : "doRead"}));
				}
				continue;
			}
			var this4 = "tc:expectRef";
			if(child1.get_name().toLowerCase() == this4.toLowerCase()) {
				if(!__tink_has_expectRef2) {
					__tink_has_expectRef2 = true;
					ret.expectRef = tink_xml_Structure2.inst.doRead(child1);
				} else {
					throw haxe_Exception.thrown(new tink_xml_ReaderError("Duplicate element \"tc:expectRef\"",x,{ fileName : "tink/xml/macros/Builder.hx", lineNumber : 172, className : "tink.xml.Structure3", methodName : "doRead"}));
				}
				continue;
			}
			var this5 = "tc:base";
			if(child1.get_name().toLowerCase() == this5.toLowerCase()) {
				if(!__tink_has_base1) {
					__tink_has_base1 = true;
					ret.base = tink_xml_Structure2.inst.doRead(child1);
				} else {
					throw haxe_Exception.thrown(new tink_xml_ReaderError("Duplicate element \"tc:base\"",x,{ fileName : "tink/xml/macros/Builder.hx", lineNumber : 172, className : "tink.xml.Structure3", methodName : "doRead"}));
				}
				continue;
			}
		}
		var _g = x.getAttribute("id");
		if(_g == null) {
			throw haxe_Exception.thrown(new tink_xml_ReaderError("Missing attribute \"id\"",x,{ fileName : "tink/xml/macros/Builder.hx", lineNumber : 172, className : "tink.xml.Structure3", methodName : "doRead"}));
		} else {
			var v = _g;
			ret.id = v;
		}
		return ret;
	}
	,__class__: tink_xml_Structure3
});
var tink_xml_Text = {};
tink_xml_Text.toFloat = function(this1) {
	if(this1 == null) {
		return NaN;
	} else {
		return parseFloat(StringTools.trim(this1));
	}
};
tink_xml_Text.toInt = function(this1) {
	if(this1 == null) {
		return 0;
	} else {
		return Std.parseInt(StringTools.trim(this1));
	}
};
tink_xml_Text.toBool = function(this1) {
	if(this1 == null) {
		return false;
	} else {
		switch(StringTools.trim(this1).toLowerCase()) {
		case "":case "0":case "false":case "null":
			return false;
		default:
			return true;
		}
	}
};
function $iterator(o) { if( o instanceof Array ) return function() { return new haxe_iterators_ArrayIterator(o); }; return typeof(o.iterator) == 'function' ? $bind(o,o.iterator) : o.iterator; }
function $keyValueIterator(o) { if( o instanceof Array ) return function() { return HxOverrides.keyValueIter(o); }; return typeof(o.keyValueIterator) == 'function' ? $bind(o,o.keyValueIterator) : o.keyValueIterator; }
function $getIterator(o) { if( o instanceof Array ) return new haxe_iterators_ArrayIterator(o); else return o.iterator(); }
function $getKeyValueIterator(o) { if( o instanceof Array ) return HxOverrides.keyValueIter(o); else return o.keyValueIterator(); }
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $global.$haxeUID++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = m.bind(o); o.hx__closures__[m.__id__] = f; } return f; }
$global.$haxeUID |= 0;
if( String.fromCodePoint == null ) String.fromCodePoint = function(c) { return c < 0x10000 ? String.fromCharCode(c) : String.fromCharCode((c>>10)+0xD7C0)+String.fromCharCode((c&0x3FF)+0xDC00); }
Object.defineProperty(String.prototype,"__class__",{ value : $hxClasses["String"] = String, enumerable : false});
String.__name__ = "String";
$hxClasses["Array"] = Array;
Array.__name__ = "Array";
Date.prototype.__class__ = $hxClasses["Date"] = Date;
Date.__name__ = "Date";
var Int = { };
var Dynamic = { };
var Float = Number;
var Bool = Boolean;
var Class = { };
var Enum = { };
if(typeof(performance) != "undefined" ? typeof(performance.now) == "function" : false) {
	HxOverrides.now = performance.now.bind(performance);
}
$hxClasses["Math"] = Math;
haxe_Resource.content = [{ name : "iris", data : ""},{ name : "tests", data : "KGluZGVjZXMgInN0eC5uZXQudXJpLlRlc3QiKQooCiAgIm1haW4iIGluY2x1ZGUgInN0eC5uZXQudXJpLnRlc3QuVXJpVGVzdCIKKQooCiAgImlyaXMiIGluY2x1ZGUgKCJzdHgubmV0LnVyaS50ZXN0LklyaXNUZXN0IikKKQooCiAgImlwdjYiIGluY2x1ZGUgKAogICAgKCJzdHgubmV0LnVyaS50ZXN0LklQVjZUZXN0IiBpbmNsdWRlICJ0ZXN0IikKICApCik"},{ name : "ipv6", data : ""},{ name : "stx.bake.session.id", data : "Y2U3MjcyY2UtNzE5My00ZmRiLTkxYmMtYjRhNjBiNjA5OWY5"}];
js_Boot.__toStr = ({ }).toString;
var facade = stx_log_logger_Global.get_ZERO();
stx_log_Signal.get_instance().attach(facade);
var v = $iterator(stx_pico_OptionLift)(stx_nano_lift_LiftNano.option(stx_nano_Wildcard.__,process.env["STX_LOG__FILE"]));
while(v.hasNext()) {
	var v1 = v.next();
	var bake = stx_Bake.bake(stx_nano_Wildcard.__);
	var output = new sys_io_FileOutput(js_node_Fs.openSync(v1,"a"));
	var log = new stx_log_logger_File(output);
	stx_log_Signal.get_instance().attach(log);
}
stx_log_Signal.has_custom = false;
Console.formatMode = Console.determineConsoleFormatMode();
Console.logPrefix = "<b,gray>><//> ";
Console.warnPrefix = "<b,yellow>><//> ";
Console.errorPrefix = "<b,red>></b> ";
Console.successPrefix = "<b,light_green>><//> ";
Console.debugPrefix = "<b,magenta>><//> ";
Console.printIntercept = null;
Console.argSeparator = " ";
Console.unicodeCompatibilityMode = Sys.systemName() == "Windows" ? 1 : 0;
Console.unicodeCompatibilityEnabled = false;
Console.formatTagPattern = new EReg("(\\\\)?<(/)?([^><{}\\s]*|{[^}<>]*})>","g");
FormatFlag.RESET = "reset";
FormatFlag.BOLD = "bold";
FormatFlag.ITALIC = "italic";
FormatFlag.DIM = "dim";
FormatFlag.UNDERLINE = "underline";
FormatFlag.BLINK = "blink";
FormatFlag.INVERT = "invert";
FormatFlag.HIDDEN = "hidden";
FormatFlag.BLACK = "black";
FormatFlag.RED = "red";
FormatFlag.GREEN = "green";
FormatFlag.YELLOW = "yellow";
FormatFlag.BLUE = "blue";
FormatFlag.MAGENTA = "magenta";
FormatFlag.CYAN = "cyan";
FormatFlag.WHITE = "white";
FormatFlag.LIGHT_BLACK = "light_black";
FormatFlag.LIGHT_RED = "light_red";
FormatFlag.LIGHT_GREEN = "light_green";
FormatFlag.LIGHT_YELLOW = "light_yellow";
FormatFlag.LIGHT_BLUE = "light_blue";
FormatFlag.LIGHT_MAGENTA = "light_magenta";
FormatFlag.LIGHT_CYAN = "light_cyan";
FormatFlag.LIGHT_WHITE = "light_white";
FormatFlag.BG_BLACK = "bg_black";
FormatFlag.BG_RED = "bg_red";
FormatFlag.BG_GREEN = "bg_green";
FormatFlag.BG_YELLOW = "bg_yellow";
FormatFlag.BG_BLUE = "bg_blue";
FormatFlag.BG_MAGENTA = "bg_magenta";
FormatFlag.BG_CYAN = "bg_cyan";
FormatFlag.BG_WHITE = "bg_white";
FormatFlag.BG_LIGHT_BLACK = "bg_light_black";
FormatFlag.BG_LIGHT_RED = "bg_light_red";
FormatFlag.BG_LIGHT_GREEN = "bg_light_green";
FormatFlag.BG_LIGHT_YELLOW = "bg_light_yellow";
FormatFlag.BG_LIGHT_BLUE = "bg_light_blue";
FormatFlag.BG_LIGHT_MAGENTA = "bg_light_magenta";
FormatFlag.BG_LIGHT_CYAN = "bg_light_cyan";
FormatFlag.BG_LIGHT_WHITE = "bg_light_white";
Printf.DEFAULT_PRECISION = 6;
Printf.DEFAULT_NUM_EXP_DIGITS = 2;
Printf._initialized = false;
Printf.PAD_0 = 0;
Printf.PAD_SPACE = 20;
Xml.Element = 0;
Xml.PCData = 1;
Xml.CData = 2;
Xml.Comment = 3;
Xml.DocType = 4;
Xml.ProcessingInstruction = 5;
Xml.Document = 6;
eu_ohmrun_Fletcher._ = eu_ohmrun_FletcherLift;
eu_ohmrun_fletcher_Arrange._ = eu_ohmrun_fletcher_ArrangeLift;
eu_ohmrun_fletcher_Attempt._ = eu_ohmrun_fletcher_AttemptLift;
eu_ohmrun_fletcher_Command._ = eu_ohmrun_fletcher_CommandLift;
eu_ohmrun_fletcher_Convert._ = eu_ohmrun_fletcher_ConvertLift;
eu_ohmrun_fletcher_Diffuse._ = eu_ohmrun_fletcher_DiffuseLift;
eu_ohmrun_fletcher_Fiber._ = eu_ohmrun_fletcher_FiberLift;
eu_ohmrun_fletcher_Modulate._ = eu_ohmrun_fletcher_ModulateLift;
eu_ohmrun_fletcher_Produce._ = eu_ohmrun_fletcher_ProduceLift;
eu_ohmrun_fletcher_Propose._ = eu_ohmrun_fletcher_ProposeLift;
eu_ohmrun_fletcher_Provide._ = eu_ohmrun_fletcher_ProvideLift;
eu_ohmrun_fletcher_Receiver._ = eu_ohmrun_fletcher_ReceiverLift;
eu_ohmrun_fletcher_ReceiverInput._ = eu_ohmrun_fletcher_ReceiverInputLift;
eu_ohmrun_fletcher_Reframe._ = eu_ohmrun_fletcher_ReframeLift;
eu_ohmrun_fletcher_Regulate._ = eu_ohmrun_fletcher_RegulateLift;
eu_ohmrun_fletcher_Scenario._ = eu_ohmrun_fletcher_ScenarioLift;
eu_ohmrun_fletcher_Venture._ = eu_ohmrun_fletcher_VentureLift;
eu_ohmrun_fletcher_core_Cont._ = eu_ohmrun_fletcher_core_ContLift;
eu_ohmrun_fletcher_core_Settle._ = eu_ohmrun_fletcher_core_SettleLift;
eu_ohmrun_pml_Atom._ = eu_ohmrun_pml_AtomLift;
eu_ohmrun_pml_Extract.e_not_a_group = "Head not a group";
eu_ohmrun_pml_PExpr._ = eu_ohmrun_pml_PExprLift;
haxe_EntryPoint.pending = [];
haxe_EntryPoint.threadCount = 0;
haxe_crypto_Base64.CHARS = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
haxe_crypto_Base64.BYTES = haxe_io_Bytes.ofString(haxe_crypto_Base64.CHARS);
haxe_io_FPHelper.i64tmp = (function($this) {
	var $r;
	var this1 = new haxe__$Int64__$_$_$Int64(0,0);
	$r = this1;
	return $r;
}(this));
haxe_io_FPHelper.helper = new DataView(new ArrayBuffer(8));
haxe_xml_Parser.escapes = (function($this) {
	var $r;
	var h = new haxe_ds_StringMap();
	h.h["lt"] = "<";
	h.h["gt"] = ">";
	h.h["amp"] = "&";
	h.h["quot"] = "\"";
	h.h["apos"] = "'";
	$r = h;
	return $r;
}(this));
hre_RegExp.LATIN_SMALL_LETTER_G = 103;
hre_RegExp.LATIN_SMALL_LETTER_I = 105;
hre_RegExp.LATIN_SMALL_LETTER_M = 109;
hre_RegExp.LATIN_SMALL_LETTER_U = 117;
hre_RegExp.LATIN_SMALL_LETTER_Y = 121;
hre_RegExpMatcher.lineTerminators = [10,13,8232,8233];
hre_RegExpMatcher.whiteSpaces = [9,11,12,32,160,65279];
hre_RegExpMatcher.separators = hre_RegExpMatcher.lineTerminators.concat(hre_RegExpMatcher.whiteSpaces);
hx_strings_Char.CHAR_CASE_MAPPER = new hx_strings__$Char_CharCaseMapper();
hx_strings_Char.BACKSPACE = 8;
hx_strings_Char.TAB = 9;
hx_strings_Char.LF = 10;
hx_strings_Char.CR = 13;
hx_strings_Char.ESC = 27;
hx_strings_Char.SPACE = 32;
hx_strings_Char.EXCLAMATION_MARK = 33;
hx_strings_Char.DOUBLE_QUOTE = 34;
hx_strings_Char.HASH = 35;
hx_strings_Char.DOLLAR = 36;
hx_strings_Char.AMPERSAND = 38;
hx_strings_Char.SINGLE_QUOTE = 39;
hx_strings_Char.BRACKET_ROUND_LEFT = 40;
hx_strings_Char.BRACKET_ROUND_RIGHT = 41;
hx_strings_Char.ASTERISK = 42;
hx_strings_Char.PLUS = 43;
hx_strings_Char.COMMA = 44;
hx_strings_Char.MINUS = 45;
hx_strings_Char.DOT = 46;
hx_strings_Char.SLASH = 47;
hx_strings_Char.ZERO = 48;
hx_strings_Char.ONE = 49;
hx_strings_Char.TWO = 50;
hx_strings_Char.TRHEE = 51;
hx_strings_Char.FOUR = 52;
hx_strings_Char.FIVE = 53;
hx_strings_Char.SIX = 54;
hx_strings_Char.SEVEN = 55;
hx_strings_Char.EIGHT = 56;
hx_strings_Char.NINE = 57;
hx_strings_Char.COLON = 58;
hx_strings_Char.SEMICOLON = 59;
hx_strings_Char.LOWER_THAN = 60;
hx_strings_Char.EQUALS = 61;
hx_strings_Char.GREATER_THAN = 62;
hx_strings_Char.QUESTION_MARK = 63;
hx_strings_Char.BRACKET_SQUARE_LEFT = 91;
hx_strings_Char.BACKSLASH = 92;
hx_strings_Char.BRACKET_SQUARE_RIGHT = 93;
hx_strings_Char.CARET = 94;
hx_strings_Char.UNDERSCORE = 95;
hx_strings_Char.BRACKET_CURLY_LEFT = 123;
hx_strings_Char.PIPE = 124;
hx_strings_Char.BRACKET_CURLY_RIGHT = 125;
hx_strings__$CharIterator_NullCharIterator.INSTANCE = new hx_strings__$CharIterator_NullCharIterator();
hx_strings_Pattern.__meta__ = { obj : { immutable : null, threadSafe : null}};
hx_strings_Matcher.__meta__ = { obj : { notThreadSafe : null}};
hx_strings_internal_OS.isNodeJS = (typeof process !== 'undefined') && (typeof process.release !== 'undefined') && (process.release.name === 'node');
hx_strings_internal_OS.isWindows = (function($this) {
	var $r;
	var os = hx_strings_internal_OS.isNodeJS ? process.platform : $global.navigator.platform;
	$r = new EReg("win","i").match(os);
	return $r;
}(this));
hx_strings_Strings.REGEX_ANSI_ESC = (function($this) {
	var $r;
	var this1 = hx_strings_internal__$Either3__$Either3.b("g");
	$r = hx_strings_Pattern.compile(String.fromCodePoint(27) + "\\[[;\\d]*m",this1);
	return $r;
}(this));
hx_strings_Strings.REGEX_HTML_UNESCAPE = (function($this) {
	var $r;
	var this1 = hx_strings_internal__$Either3__$Either3.b("g");
	$r = hx_strings_Pattern.compile("&(#\\d+|amp|nbsp|apos|lt|gt|quot);",this1);
	return $r;
}(this));
hx_strings_Strings.REGEX_SPLIT_LINES = (function($this) {
	var $r;
	var this1 = hx_strings_internal__$Either3__$Either3.b("g");
	$r = hx_strings_Pattern.compile("\\r?\\n",this1);
	return $r;
}(this));
hx_strings_Strings.REGEX_REMOVE_XML_TAGS = (function($this) {
	var $r;
	var this1 = hx_strings_internal__$Either3__$Either3.b("g");
	$r = hx_strings_Pattern.compile("<[!a-zA-Z\\/][^>]*>",this1);
	return $r;
}(this));
hx_strings_Strings.POS_NOT_FOUND = -1;
hx_strings_Strings.NEW_LINE_NIX = "\n";
hx_strings_Strings.NEW_LINE_WIN = "\r\n";
hx_strings_Strings.NEW_LINE = hx_strings_internal_OS.isWindows ? "\r\n" : "\n";
stx_log_Logic._ = stx_log_LogicLift;
stx_nano_ClusterLift._ = stx_lift_ArrayLift;
stx_nano_Cluster._ = stx_nano_ClusterLift;
stx_fail_Refuse._ = stx_fail_RefuseLift;
stx_Nano._ = stx_nano_lift_LiftNano;
stx_pico_Option.__ = stx_pico_OptionLift;
stx_log_Signal.ZERO = (function($this) {
	var $r;
	var this1 = stx_log_Signal.get_instance();
	$r = this1;
	return $r;
}(this));
stx_log_Signal.has_custom = false;
stx_Log._ = stx_LogLift;
stx_Log.ZERO = stx_Log.LOG;
stx_parse_Parser._ = stx_parse_parser_ParserLift;
stx_fail_Decline._ = stx_fail_DeclineLift;
stx_fail_ParseFailure.FAIL = "FAIL";
stx_Parse.boolean = (function($this) {
	var $r;
	var _this = stx_LiftParse.parse(stx_nano_Wildcard.__);
	var this1 = new stx_parse_parser_term_Identifier("true",{ fileName : "stx/parse/Parsers.hx", lineNumber : 71, className : "stx.parse.Parsers", methodName : "Identifier"});
	var _this = stx_LiftParse.parse(stx_nano_Wildcard.__);
	var this2 = new stx_parse_parser_term_Identifier("false",{ fileName : "stx/parse/Parsers.hx", lineNumber : 71, className : "stx.parse.Parsers", methodName : "Identifier"});
	var this3 = this1;
	var this1 = new stx_parse_parser_term_Or(this3,this2,{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
	$r = stx_parse_Parser.get_self(this1);
	return $r;
}(this));
stx_Parse.integer = (function($this) {
	var $r;
	var _this = stx_LiftParse.parse(stx_nano_Wildcard.__);
	var this1 = new stx_parse_parser_term_Regex("^[\\+\\-]?\\d+",{ fileName : "stx/parse/Parsers.hx", lineNumber : 32, className : "stx.parse.Parsers", methodName : "Regex"});
	$r = stx_parse_Parser.get_self(this1);
	return $r;
}(this));
stx_Parse.float = (function($this) {
	var $r;
	var _this = stx_LiftParse.parse(stx_nano_Wildcard.__);
	var this1 = new stx_parse_parser_term_Regex("^[\\+\\-]?\\d+(\\.\\d+)?",{ fileName : "stx/parse/Parsers.hx", lineNumber : 32, className : "stx.parse.Parsers", methodName : "Regex"});
	$r = stx_parse_Parser.get_self(this1);
	return $r;
}(this));
stx_Parse.lower = (function($this) {
	var $r;
	var this1 = new stx_parse_parser_term_Range(97,122,{ fileName : "stx/parse/Parsers.hx", lineNumber : 26, className : "stx.parse.Parsers", methodName : "Range"});
	$r = this1;
	return $r;
}(this));
stx_Parse.upper = (function($this) {
	var $r;
	var this1 = new stx_parse_parser_term_Range(65,90,{ fileName : "stx/parse/Parsers.hx", lineNumber : 26, className : "stx.parse.Parsers", methodName : "Range"});
	$r = this1;
	return $r;
}(this));
stx_Parse.alpha = (function($this) {
	var $r;
	var this1 = new stx_parse_parser_term_Or(stx_Parse.upper,stx_Parse.lower,{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
	$r = this1;
	return $r;
}(this));
stx_Parse.digit = (function($this) {
	var $r;
	var this1 = new stx_parse_parser_term_Range(48,57,{ fileName : "stx/parse/Parsers.hx", lineNumber : 26, className : "stx.parse.Parsers", methodName : "Range"});
	$r = this1;
	return $r;
}(this));
stx_Parse.alphanum = (function($this) {
	var $r;
	var this1 = stx_Parse.alpha;
	var this2 = new stx_parse_parser_term_Or(this1,stx_Parse.digit,{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
	$r = stx_parse_Parser.get_self(this2);
	return $r;
}(this));
stx_Parse.ascii = (function($this) {
	var $r;
	var this1 = new stx_parse_parser_term_Range(0,255,{ fileName : "stx/parse/Parsers.hx", lineNumber : 26, className : "stx.parse.Parsers", methodName : "Range"});
	$r = this1;
	return $r;
}(this));
stx_Parse.valid = (function($this) {
	var $r;
	var this1 = stx_Parse.alpha;
	var this2 = new stx_parse_parser_term_Or(this1,stx_Parse.digit,{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
	var this1 = stx_parse_Parser.get_self(this2);
	var _this = stx_LiftParse.parse(stx_nano_Wildcard.__);
	var this2 = new stx_parse_parser_term_Identifier("_",{ fileName : "stx/parse/Parsers.hx", lineNumber : 71, className : "stx.parse.Parsers", methodName : "Identifier"});
	var this3 = this1;
	var this1 = new stx_parse_parser_term_Or(this3,this2,{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
	$r = stx_parse_Parser.get_self(this1);
	return $r;
}(this));
stx_Parse.tab = (function($this) {
	var $r;
	var _this = stx_LiftParse.parse(stx_nano_Wildcard.__);
	var this1 = new stx_parse_parser_term_Identifier("\t",{ fileName : "stx/parse/Parsers.hx", lineNumber : 71, className : "stx.parse.Parsers", methodName : "Identifier"});
	$r = this1;
	return $r;
}(this));
stx_Parse.space = (function($this) {
	var $r;
	var _this = stx_LiftParse.parse(stx_nano_Wildcard.__);
	var this1 = new stx_parse_parser_term_Identifier(" ",{ fileName : "stx/parse/Parsers.hx", lineNumber : 71, className : "stx.parse.Parsers", methodName : "Identifier"});
	$r = this1;
	return $r;
}(this));
stx_Parse.nl = (function($this) {
	var $r;
	var _this = stx_LiftParse.parse(stx_nano_Wildcard.__);
	var this1 = new stx_parse_parser_term_Identifier("\n",{ fileName : "stx/parse/Parsers.hx", lineNumber : 71, className : "stx.parse.Parsers", methodName : "Identifier"});
	$r = this1;
	return $r;
}(this));
stx_Parse.cr = (function($this) {
	var $r;
	var _this = stx_LiftParse.parse(stx_nano_Wildcard.__);
	var this1 = new stx_parse_parser_term_Identifier("\r\n",{ fileName : "stx/parse/Parsers.hx", lineNumber : 71, className : "stx.parse.Parsers", methodName : "Identifier"});
	$r = this1;
	return $r;
}(this));
stx_Parse.cr_or_nl = (function($this) {
	var $r;
	var this1 = stx_Parse.nl;
	var this2 = new stx_parse_parser_term_Or(this1,stx_Parse.cr,{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
	$r = stx_parse_Parser.get_self(this2);
	return $r;
}(this));
stx_Parse.gap = (function($this) {
	var $r;
	var this1 = stx_Parse.tab;
	var this2 = new stx_parse_parser_term_Or(this1,stx_Parse.space,{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
	$r = stx_parse_Parser.get_self(this2);
	return $r;
}(this));
stx_Parse.whitespace = (function($this) {
	var $r;
	var this1 = new stx_parse_parser_term_Range(0,32,{ fileName : "stx/parse/Parsers.hx", lineNumber : 26, className : "stx.parse.Parsers", methodName : "Range"});
	var p = this1;
	p.tag = haxe_ds_Option.Some("whitespace");
	var this1 = new stx_parse_parser_term_TagRefuse(p,"whitespace",{ fileName : "stx/Parse.hx", lineNumber : 164, className : "stx.LiftParse", methodName : "tagged"});
	$r = this1;
	return $r;
}(this));
stx_Parse.word = (function($this) {
	var $r;
	var this1 = stx_Parse.lower;
	var this2 = new stx_parse_parser_term_Or(this1,stx_Parse.upper,{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
	var this1 = new stx_parse_parser_term_OneMany(stx_parse_Parser.get_self(this2),{ fileName : "stx/parse/Parsers.hx", lineNumber : 50, className : "stx.parse.Parsers", methodName : "OneMany"});
	$r = stx_parse_parser_ParserLift.tokenize(stx_parse_Parser.get_self(this1));
	return $r;
}(this));
stx_Parse.quote = (function($this) {
	var $r;
	var _this = stx_LiftParse.parse(stx_nano_Wildcard.__);
	var this1 = new stx_parse_parser_term_Identifier("\"",{ fileName : "stx/parse/Parsers.hx", lineNumber : 71, className : "stx.parse.Parsers", methodName : "Identifier"});
	var _this = stx_LiftParse.parse(stx_nano_Wildcard.__);
	var this2 = new stx_parse_parser_term_Identifier("'",{ fileName : "stx/parse/Parsers.hx", lineNumber : 71, className : "stx.parse.Parsers", methodName : "Identifier"});
	var this3 = this1;
	var this1 = new stx_parse_parser_term_Or(this3,this2,{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
	$r = stx_parse_Parser.get_self(this1);
	return $r;
}(this));
stx_Parse.escape = (function($this) {
	var $r;
	var _this = stx_LiftParse.parse(stx_nano_Wildcard.__);
	var this1 = new stx_parse_parser_term_Identifier("\\",{ fileName : "stx/parse/Parsers.hx", lineNumber : 71, className : "stx.parse.Parsers", methodName : "Identifier"});
	$r = this1;
	return $r;
}(this));
stx_Parse.not_escaped = (function($this) {
	var $r;
	var _this = stx_LiftParse.parse(stx_nano_Wildcard.__);
	var this1 = new stx_parse_parser_term_Identifier("\\\\",{ fileName : "stx/parse/Parsers.hx", lineNumber : 71, className : "stx.parse.Parsers", methodName : "Identifier"});
	$r = this1;
	return $r;
}(this));
stx_Parse.x = (function($this) {
	var $r;
	var this1 = new stx_parse_parser_term_Not(stx_Parse.not_escaped,{ fileName : "stx/Parse.hx", lineNumber : 80, className : "stx.Parse", methodName : "x"});
	var this2 = new stx_parse_parser_term_AndR(stx_parse_Parser.get_self(this1),stx_Parse.escape,{ fileName : "stx/parse/Parsers.hx", lineNumber : 110, className : "stx.parse.Parsers", methodName : "AndR"});
	$r = stx_parse_Parser.get_self(this2);
	return $r;
}(this));
stx_Parse.x_quote = (function($this) {
	var $r;
	var this1 = new stx_parse_parser_term_AndR(stx_Parse.x,stx_Parse.quote,{ fileName : "stx/parse/Parsers.hx", lineNumber : 110, className : "stx.parse.Parsers", methodName : "AndR"});
	$r = stx_parse_Parser.get_self(this1);
	return $r;
}(this));
stx_Parse.literal = (function($this) {
	var $r;
	var this1 = new stx_parse_term_Literal(null,null,{ fileName : "stx/Parse.hx", lineNumber : 83, className : "stx.Parse", methodName : "literal"});
	$r = this1;
	return $r;
}(this));
stx_Parse.symbol = (function($this) {
	var $r;
	var this1 = new stx_parse_parser_term_When(function(x) {
		return x.charCodeAt(0) >= 33;
	},null,{ fileName : "stx/Parse.hx", lineNumber : 84, className : "stx.Parse", methodName : "symbol"});
	var this2 = new stx_parse_parser_term_OneMany(this1,{ fileName : "stx/parse/Parsers.hx", lineNumber : 50, className : "stx.parse.Parsers", methodName : "OneMany"});
	var p = stx_parse_parser_ParserLift.tokenize(stx_parse_Parser.get_self(this2));
	p.tag = haxe_ds_Option.Some("symbol");
	var this1 = new stx_parse_parser_term_TagRefuse(p,"symbol",{ fileName : "stx/Parse.hx", lineNumber : 164, className : "stx.LiftParse", methodName : "tagged"});
	$r = this1;
	return $r;
}(this));
stx_Parse.brkt_l_square = (function($this) {
	var $r;
	var _this = stx_LiftParse.parse(stx_nano_Wildcard.__);
	var this1 = new stx_parse_parser_term_Identifier("[",{ fileName : "stx/parse/Parsers.hx", lineNumber : 71, className : "stx.parse.Parsers", methodName : "Identifier"});
	$r = this1;
	return $r;
}(this));
stx_Parse.brkt_r_square = (function($this) {
	var $r;
	var _this = stx_LiftParse.parse(stx_nano_Wildcard.__);
	var this1 = new stx_parse_parser_term_Identifier("]",{ fileName : "stx/parse/Parsers.hx", lineNumber : 71, className : "stx.parse.Parsers", methodName : "Identifier"});
	$r = this1;
	return $r;
}(this));
stx_Tag.Tag = null;
stx_assert_Eq.__ = new stx_assert_EqCtr();
stx_assert_EqualedSum.AreEqual = true;
stx_assert_EqualedSum.NotEqual = false;
stx_assert_Equaled.AreEqual = true;
stx_assert_Equaled.NotEqual = false;
stx_assert_OrderedSum.LessThan = true;
stx_assert_OrderedSum.NotLessThan = false;
stx_assert_Predicate._ = stx_assert_PredicateLift;
stx_asys_Distro.Windows = "Windows";
stx_asys_Distro.Linux = "Linux";
stx_asys_Distro.BSD = "BSD";
stx_asys_Distro.Mac = "Mac";
stx_coroutine_core_Coroutine.STOP = stx_coroutine_core_CoroutineSum.Halt(stx_coroutine_core_ReturnSum.Production(null));
stx_coroutine_core_Coroutine._ = stx_coroutine_core_CoroutineLift;
stx_coroutine_pack_Derive._ = stx_coroutine_pack_DeriveLift;
stx_coroutine_pack_Effect._ = stx_coroutine_pack_EffectLift;
stx_coroutine_pack_Emiter._ = stx_coroutine_pack_EmiterLift;
stx_coroutine_pack_Relate._ = stx_coroutine_pack_RelateLift;
stx_coroutine_pack_Secure._ = stx_coroutine_pack_SecureLift;
stx_coroutine_pack_Source._ = stx_coroutine_pack_SourceLift;
stx_coroutine_pack_Tunnel._ = stx_coroutine_pack_TunnelLift;
stx_ds_KaryTree._ = stx_ds_KaryTreeLift;
stx_ds_KaryTree.ZERO = stx_ds_KaryTreeSum.Nought;
stx_ds_RedBlackMap._ = stx_ds_RedBlackMapLift;
stx_ds_RedBlackSet._ = stx_ds_RedBlackSetLift;
stx_ds_RedBlackTree._ = stx_ds_RedBlackTreeLift;
stx_ds_kary_$tree_KaryTreeZip.ZERO = stx_ds_kary_$tree_KaryTreeZip.unit();
stx_fail_Error._ = stx_fail_ErrorLift;
stx_fail_FsFailure._ = stx_fail_FsFailureLift;
stx_fail_ShowFailure._ = stx_fail_ShowFailureLift;
stx_fn_Binary._ = stx_fn_BinaryLift;
stx_fn_Block.ZERO = function() {
};
stx_fn_Block._ = stx_fn_BlockLift;
stx_fn_Dual._ = stx_fn_DualLift;
stx_fn_Sink._ = stx_fn_SinkLift;
stx_fn_Ternary._ = stx_fn_TernaryLift;
stx_fn_ThunkLift.__meta__ = { statics : { cache : { params : ["The Thunk to call once"], returns : ["A Thunk which will call the input Thunk once."]}}};
stx_fn_Thunk._ = stx_fn_ThunkLift;
stx_fn_Unary._ = stx_fn_UnaryLift;
stx_fp_Continuation._ = stx_fp_ContinuationLift;
stx_fp_LazyStream.ZERO = stx_fp_LazyStream.unit();
stx_fp_StateMLift.__meta__ = { statics : { exec : { doc : ["Run `StateM` with `s`, dropping the result and returning `s`."]}, 'eval' : { doc : ["Run `StateM` with `s`, returning the result."]}}};
stx_fs_path_Archive._ = stx_fs_path_ArchiveLift;
stx_fs_path_Directory._ = stx_fs_path_DirectoryLift;
stx_fs_path_Directory.pos = stx_nano_lift_LiftNano.here(stx_nano_Wildcard.__,{ fileName : "stx/fs/path/Directory.hx", lineNumber : 80, className : "stx.fs.path._Directory.Directory_Impl_", methodName : "pos"});
stx_fs_path_Raw._ = stx_fs_path_RawLift;
stx_fs_path_Separator.WinSeparator = "\\\\";
stx_fs_path_Separator.PosixSeparator = "/";
stx_g_lang_expr_GAccess.__ = new stx_g_lang_expr_GAccessCtr();
stx_g_lang_expr_GCase.__ = new stx_g_lang_expr_GCaseCtr();
stx_g_lang_expr_GCatch._ = stx_g_lang_expr_GCatchLift;
stx_g_lang_expr_GCatch.__ = new stx_g_lang_expr_GCatchCtr();
stx_g_lang_expr_GComplexType.__ = new stx_g_lang_expr_GComplexTypeCtr();
stx_g_lang_expr_GConstant.__ = new stx_g_lang_expr_GConstantCtr();
stx_g_lang_expr_GExpr.__ = new stx_g_lang_expr_GExprCtr();
stx_g_lang_expr_GField.__ = new stx_g_lang_expr_GFieldCtr();
stx_g_lang_expr_GFieldType.__ = new stx_g_lang_expr_GFieldTypeCtr();
stx_g_lang_expr_GFunction.__ = new stx_g_lang_expr_GFunctionCtr();
stx_g_lang_expr_GFunction._ = stx_g_lang_expr_GFunctionLift;
stx_g_lang_expr_GFunctionArg.__ = new stx_g_lang_expr_GFunctionArgCtr();
stx_g_lang_expr_GMetadataEntry.__ = new stx_g_lang_expr_GMetadataEntryCtr();
stx_g_lang_expr_GObjectField.__ = new stx_g_lang_expr_GObjectFieldCtr();
stx_g_lang_expr_GObjectField._ = stx_g_lang_expr_GObjectFieldLift;
stx_g_lang_expr_GPropAccess.__ = new stx_g_lang_expr_GPropAccessCtr();
stx_g_lang_expr_GTypeDefKind.__ = new stx_g_lang_expr_GTypeDefKindCtr();
stx_g_lang_expr_GTypeDefinition.__ = new stx_g_lang_expr_GTypeDefinitionCtr();
stx_g_lang_expr_GTypeDefinition._ = stx_g_lang_expr_GTypeDefinitionLift;
stx_g_lang_expr_GTypeParamDecl.__ = new stx_g_lang_expr_GTypeParamDeclCtr();
stx_g_lang_expr_GTypePath.__ = new stx_g_lang_expr_GTypePathCtr();
stx_g_lang_expr_GVar._ = stx_g_lang_expr_GVarLift;
stx_g_lang_expr_GVar.__ = new stx_g_lang_expr_GVarCtr();
stx_io_Input._ = stx_io_InputLift;
stx_io_Output._ = stx_io_OutputLift;
stx_io_StdIn._ = stx_io_StdInLift;
stx_io_StdOut._ = stx_io_StdOutLift;
stx_io_input_term_Keyboard._ = stx_io_input_term_KeyboardLift;
stx_io_process_ProcessClient._ = stx_io_process_ProcessClientLift;
stx_log_LevelSum.BLANK = 0;
stx_log_LevelSum.TRACE = 1;
stx_log_LevelSum.DEBUG = 2;
stx_log_LevelSum.INFO = 3;
stx_log_LevelSum.WARN = 4;
stx_log_LevelSum.ERROR = 5;
stx_log_LevelSum.FATAL = 6;
stx_log_Stamp.ZERO = new stx_log_Stamp();
stx_nano_Accrual._ = stx_nano_AccrualLift;
stx_nano_Alert._ = stx_nano_AlertLift;
stx_nano_ByteSize.I8 = "i8";
stx_nano_ByteSize.I16BE = "i16+";
stx_nano_ByteSize.I16LE = "i16-";
stx_nano_ByteSize.UI16BE = "ui16+";
stx_nano_ByteSize.UI16LE = "ui16-";
stx_nano_ByteSize.I24BE = "i24+";
stx_nano_ByteSize.I24LE = "i24-";
stx_nano_ByteSize.UI24BE = "ui24+";
stx_nano_ByteSize.UI24LE = "ui24-";
stx_nano_ByteSize.I32BE = "i32+";
stx_nano_ByteSize.I32LE = "i32-";
stx_nano_ByteSize.FBE = "fbe";
stx_nano_ByteSize.FLE = "fle";
stx_nano_ByteSize.DBE = "dbe";
stx_nano_ByteSize.DLE = "dle";
stx_nano_ByteSize.LINE = "ln";
stx_nano_CharsLift.__meta__ = { statics : { underscore : { thx : null}}};
stx_nano_Chars._ = stx_nano_CharsLift;
stx_nano_Chunk._ = stx_nano_ChunkLift;
stx_nano_CompilerTarget._ = stx_nano_CompilerTargetLift;
stx_nano_Contract._ = stx_nano_ContractLift;
stx_nano_Couple._ = stx_nano_CoupleLift;
stx_nano_Defect._ = stx_nano_DefectLift;
stx_nano_Equity._ = stx_nano_EquityLift;
stx_nano_Floats.__meta__ = { statics : { clamp : { doc : ["Produce a number based on `n` that is `min` if less than `min`, \n\t\t`max` if `n` is greater than `max` and is left untouched if\n\t\tbetween the two."]}}};
stx_nano_Ints.__meta__ = { statics : { xor : { doc : ["Returns `a ^ b`"]}}};
stx_nano_Ints.ZERO = 0;
stx_nano_Ints.ONE = 1;
stx_nano_Iter._ = stx_nano_IterLift;
stx_nano_Junction._ = stx_nano_JunctionLift;
stx_nano_KV._ = stx_nano_KVLift;
stx_nano_Knuckle._ = stx_nano_KnuckleLift;
stx_nano_Ledger._ = stx_nano_LedgerLift;
stx_nano_LogicalClock.lifetime = 0;
stx_nano_LogicalClock.counter = 0;
stx_nano_Math.PRIMES = [1,3,7,13,31,61,127,251,509,1021,2039,4093,8191,16381,32749,65521,131071,262139,524287,1048573,2097143,4194301,8388593,16777213,33554393,67108859,134217689,268435399,536870909,1073741789,2147483647];
stx_nano_Pledge._ = stx_nano_PledgeLift;
stx_nano_Position.ZERO = stx_nano_Position.make(null,null,null,null);
stx_nano_Position._ = stx_nano_PositionLift;
stx_nano_PrimitiveType._ = stx_nano_PrimitiveTypeLift;
stx_nano_Receipt._ = stx_nano_ReceiptLift;
stx_nano_Record._ = stx_nano_RecordLift;
stx_nano_Register._ = stx_nano__$Register_RegisterLift;
stx_nano__$Register_RegisterState.max = -1;
stx_nano_Report._ = stx_nano_ReportLift;
stx_nano_Res._ = stx_nano_ResLift;
stx_nano_Signal._ = stx_nano_SignalLift;
stx_nano_Slot._ = stx_nano_SlotLift;
stx_nano_Triple._ = stx_nano_TripleLift;
stx_test_TestCase.__rtti = "<class path=\"stx.test.TestCase\" params=\"\">\n\t<extends path=\"stx.test.Assert\"/>\n\t<__stx__tests set=\"method\" line=\"4\"><f a=\"timeout\">\n\t<x path=\"Int\"/>\n\t<c path=\"stx.test.TestCaseData\"/>\n</f></__stx__tests>\n\t<__setup public=\"1\" set=\"method\" line=\"7\"><f a=\"\"><t path=\"stx.Option\"><t path=\"stx.Async\"/></t></f></__setup>\n\t<__teardown public=\"1\" set=\"method\" line=\"10\"><f a=\"\"><t path=\"stx.Option\"><t path=\"stx.Async\"/></t></f></__teardown>\n\t<__before public=\"1\" set=\"method\" line=\"13\"><f a=\"\"><t path=\"stx.Option\"><t path=\"stx.Async\"/></t></f></__before>\n\t<__after public=\"1\" set=\"method\" line=\"16\"><f a=\"\"><t path=\"stx.Option\"><t path=\"stx.Async\"/></t></f></__after>\n\t<asTestCase public=\"1\" set=\"method\" line=\"19\"><f a=\"\"><c path=\"stx.test.TestCase\"/></f></asTestCase>\n\t<wrap public=\"1\" params=\"T\" set=\"method\" line=\"22\"><f a=\"future:?pos\">\n\t<x path=\"tink.core.Future\"><c path=\"wrap.T\"/></x>\n\t<x path=\"Null\"><t path=\"stx.Pos\"/></x>\n\t<t path=\"stx.WrappedFuture\"><c path=\"wrap.T\"/></t>\n</f></wrap>\n\t<new public=\"1\" set=\"method\" line=\"3\"><f a=\"\"><x path=\"Void\"/></f></new>\n\t<meta><m n=\":rtti\"/></meta>\n</class>";
stx_net_uri_test_IPV6Test.__rtti = "<class path=\"stx.net.uri.test.IPV6Test\" params=\"\">\n\t<extends path=\"stx.test.TestCase\"/>\n\t<value><c path=\"Array\"><c path=\"String\"/></c></value>\n\t<__setup public=\"1\" set=\"method\" line=\"10\" override=\"1\"><f a=\"\"><t path=\"stx.Option\"><t path=\"stx.Async\"/></t></f></__setup>\n\t<test public=\"1\" set=\"method\" line=\"16\"><f a=\"\"><x path=\"Void\"/></f></test>\n\t<test_h16 public=\"1\" set=\"method\" line=\"38\"><f a=\"\"><x path=\"Void\"/></f></test_h16>\n\t<test_full public=\"1\" set=\"method\" line=\"45\"><f a=\"\"><x path=\"Void\"/></f></test_full>\n\t<test_null_error public=\"1\" set=\"method\" line=\"50\"><f a=\"\"><x path=\"Void\"/></f></test_null_error>\n\t<new public=\"1\" set=\"method\" line=\"7\"><f a=\"\"><x path=\"Void\"/></f></new>\n\t<meta><m n=\":directlyUsed\"/></meta>\n</class>";
stx_net_uri_test__$IrisTest_Util.cdata_r = "<!\\[CDATA\\[((?!]]>).*)]]>";
stx_net_uri_test_IrisTest.__rtti = "<class path=\"stx.net.uri.test.IrisTest\" params=\"\">\n\t<extends path=\"stx.test.TestCase\"/>\n\t<p set=\"method\" line=\"30\"><f a=\"\"><x path=\"Void\"/></f></p>\n\t<source set=\"method\" line=\"33\"><f a=\"\"><t path=\"stx.StdString\"/></f></source>\n\t<value get=\"accessor\" set=\"null\"><t path=\"stx.net.uri.test.IrisRoot\"/></value>\n\t<get_value public=\"1\" set=\"method\" line=\"37\"><f a=\"\"><t path=\"stx.net.uri.test.IrisRoot\"/></f></get_value>\n\t<test_value set=\"method\" line=\"42\"><f a=\"\"><x path=\"Void\"/></f></test_value>\n\t<new public=\"1\" set=\"method\" line=\"29\"><f a=\"\"><x path=\"Void\"/></f></new>\n\t<meta><m n=\":directlyUsed\"/></meta>\n</class>";
stx_net_uri_test_UriTest.__rtti = "<class path=\"stx.net.uri.test.UriTest\" params=\"\">\n\t<extends path=\"stx.test.TestCase\"/>\n\t<test_ipv4 public=\"1\" set=\"method\" line=\"11\">\n\t\t<f a=\"\"><x path=\"Void\"/></f>\n\t\t<haxe_doc>TODO number ranges</haxe_doc>\n\t</test_ipv4>\n\t<new public=\"1\" set=\"method\" line=\"7\"><f a=\"\"><x path=\"Void\"/></f></new>\n\t<meta><m n=\":directlyUsed\"/></meta>\n</class>";
stx_parse_ParseResult._ = stx_parse_ParseResultLift;
stx_parse_core_LR._ = stx_parse_core_LRLift;
stx_parse_core__$UID_UIDs._parserUid = 0;
stx_parse_parser_term_SyncAnon._ = stx_parse_parser_term_SyncAnonLift;
stx_parse_parser_term_Uri.ALPHA = stx_Parse.alpha;
stx_parse_parser_term_Uri.DIGIT = stx_Parse.digit;
stx_parse_parser_term_Uri.HEXDIG = (function($this) {
	var $r;
	var this1 = new stx_parse_parser_term_Regex("^[a-fA-F0-9]",{ fileName : "stx/parse/Parsers.hx", lineNumber : 32, className : "stx.parse.Parsers", methodName : "Regex"});
	$r = this1;
	return $r;
}(this));
stx_parse_parser_term_Uri.unreserved = (function($this) {
	var $r;
	var this1 = stx_parse_parser_term_Uri.ALPHA;
	var this2 = new stx_parse_parser_term_Or(this1,stx_parse_parser_term_Uri.DIGIT,{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
	var this1 = stx_parse_Parser.get_self(this2);
	var this2 = new stx_parse_parser_term_Or(this1,stx_parse_parser_term_Uri.id("-"),{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
	var this1 = stx_parse_Parser.get_self(this2);
	var this2 = new stx_parse_parser_term_Or(this1,stx_parse_parser_term_Uri.id("."),{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
	var this1 = stx_parse_Parser.get_self(this2);
	var this2 = new stx_parse_parser_term_Or(this1,stx_parse_parser_term_Uri.id("_"),{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
	var this1 = stx_parse_Parser.get_self(this2);
	var this2 = new stx_parse_parser_term_Or(this1,stx_parse_parser_term_Uri.id("~"),{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
	$r = stx_parse_Parser.get_self(this2);
	return $r;
}(this));
stx_parse_parser_term_Uri.pct_encoded = (function($this) {
	var $r;
	var this1 = new stx_parse_parser_term_AndR(stx_parse_parser_term_Uri.id("#"),stx_parse_parser_term_Uri.HEXDIG,{ fileName : "stx/parse/Parsers.hx", lineNumber : 110, className : "stx.parse.Parsers", methodName : "AndR"});
	var this2 = new stx_parse_parser_term_CoupleWith(stx_parse_Parser.get_self(this1),stx_parse_parser_term_Uri.HEXDIG,{ fileName : "stx/parse/Parsers.hx", lineNumber : 122, className : "stx.parse.Parsers", methodName : "CoupleWith"});
	var this1 = stx_parse_Parser.get_self(this2);
	var this2 = new stx_parse_parser_term_AnonThen(this1,stx_nano_lift_LiftNano.decouple(stx_nano_Wildcard.__,function(x,y) {
		return "" + x + y;
	}),{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
	$r = stx_parse_Parser.get_self(this2);
	return $r;
}(this));
stx_parse_parser_term_Uri.sub_delims = (function($this) {
	var $r;
	var this1 = new stx_parse_parser_term_Regex("[!\\$&'\\(\\)\\*\\+,;=]",{ fileName : "stx/parse/Parsers.hx", lineNumber : 32, className : "stx.parse.Parsers", methodName : "Regex"});
	$r = this1;
	return $r;
}(this));
stx_parse_parser_term_Uri.reg_name = (function($this) {
	var $r;
	var this1 = stx_parse_parser_term_Uri.unreserved;
	var this2 = new stx_parse_parser_term_Or(this1,stx_parse_parser_term_Uri.pct_encoded,{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
	var this1 = stx_parse_Parser.get_self(this2);
	var this2 = new stx_parse_parser_term_Or(this1,stx_parse_parser_term_Uri.sub_delims,{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
	var this1 = new stx_parse_parser_term_Many(stx_parse_Parser.get_self(this2),{ fileName : "stx/parse/Parsers.hx", lineNumber : 47, className : "stx.parse.Parsers", methodName : "Many"});
	$r = stx_parse_parser_ParserLift.tokenize(stx_parse_Parser.get_self(this1));
	return $r;
}(this));
stx_parse_parser_term_Uri.h16 = (function($this) {
	var $r;
	var this1 = new stx_parse_parser_term_RepeatedUpto(stx_parse_parser_term_Uri.HEXDIG,4,{ fileName : "stx/parse/Parsers.hx", lineNumber : 56, className : "stx.parse.Parsers", methodName : "RepeatedUpto"});
	$r = stx_parse_parser_ParserLift.tokenize(this1);
	return $r;
}(this));
stx_parse_parser_term_Uri.ls32 = (function($this) {
	var $r;
	var this1 = new stx_parse_parser_term_CoupleWith(stx_parse_parser_term_Uri.h16,stx_parse_parser_term_Uri.id(":"),{ fileName : "stx/parse/Parsers.hx", lineNumber : 122, className : "stx.parse.Parsers", methodName : "CoupleWith"});
	var this2 = stx_parse_Parser.get_self(this1);
	var this1 = new stx_parse_parser_term_AnonThen(this2,stx_parse_parser_term_Uri.tp(stx_parse_parser_term_Uri.ct),{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
	var this2 = new stx_parse_parser_term_CoupleWith(stx_parse_Parser.get_self(this1),stx_parse_parser_term_Uri.h16,{ fileName : "stx/parse/Parsers.hx", lineNumber : 122, className : "stx.parse.Parsers", methodName : "CoupleWith"});
	var this1 = stx_parse_Parser.get_self(this2);
	var this2 = new stx_parse_parser_term_AnonThen(this1,stx_parse_parser_term_Uri.tp(stx_parse_parser_term_Uri.ct),{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
	var this1 = stx_parse_Parser.get_self(this2);
	var this2 = new stx_parse_parser_term_Or(this1,stx_parse_parser_term_Uri.IPv4address(),{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
	$r = stx_parse_Parser.get_self(this2);
	return $r;
}(this));
stx_parse_parser_term_Uri.IPv6Section = (function($this) {
	var $r;
	var this1 = new stx_parse_parser_term_CoupleWith(stx_parse_parser_term_Uri.h16,stx_parse_parser_term_Uri.id(":"),{ fileName : "stx/parse/Parsers.hx", lineNumber : 122, className : "stx.parse.Parsers", methodName : "CoupleWith"});
	var this2 = stx_parse_Parser.get_self(this1);
	var this1 = new stx_parse_parser_term_AnonThen(this2,stx_parse_parser_term_Uri.tp(stx_parse_parser_term_Uri.ct),{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
	$r = stx_parse_Parser.get_self(this1);
	return $r;
}(this));
stx_parse_parser_term_Uri.IPv6Address = (function($this) {
	var $r;
	var this1 = new stx_parse_parser_term_RepeatedOnly(stx_parse_parser_term_Uri.IPv6Section,6,{ fileName : "stx/parse/Parsers.hx", lineNumber : 62, className : "stx.parse.Parsers", methodName : "RepeatedOnly"});
	var this2 = new stx_parse_parser_term_CoupleWith(stx_parse_parser_ParserLift.tokenize(this1),stx_parse_parser_term_Uri.ls32,{ fileName : "stx/parse/Parsers.hx", lineNumber : 122, className : "stx.parse.Parsers", methodName : "CoupleWith"});
	var this1 = stx_parse_Parser.get_self(this2);
	var this2 = new stx_parse_parser_term_AnonThen(this1,stx_parse_parser_term_Uri.tp(stx_parse_parser_term_Uri.ct),{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
	var this1 = stx_parse_Parser.get_self(this2);
	var pI = stx_parse_parser_term_Uri.id("::");
	var this2 = new stx_parse_parser_term_RepeatedOnly(stx_parse_parser_term_Uri.IPv6Section,5,{ fileName : "stx/parse/Parsers.hx", lineNumber : 62, className : "stx.parse.Parsers", methodName : "RepeatedOnly"});
	var this3 = new stx_parse_parser_term_CoupleWith(pI,stx_parse_parser_ParserLift.tokenize(this2),{ fileName : "stx/parse/Parsers.hx", lineNumber : 122, className : "stx.parse.Parsers", methodName : "CoupleWith"});
	var this2 = stx_parse_Parser.get_self(this3);
	var this3 = new stx_parse_parser_term_AnonThen(this2,stx_parse_parser_term_Uri.tp(stx_parse_parser_term_Uri.ct),{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
	var this2 = new stx_parse_parser_term_CoupleWith(stx_parse_Parser.get_self(this3),stx_parse_parser_term_Uri.ls32,{ fileName : "stx/parse/Parsers.hx", lineNumber : 122, className : "stx.parse.Parsers", methodName : "CoupleWith"});
	var this3 = stx_parse_Parser.get_self(this2);
	var this2 = new stx_parse_parser_term_AnonThen(this3,stx_parse_parser_term_Uri.tp(stx_parse_parser_term_Uri.ct),{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
	var this3 = this1;
	var this1 = new stx_parse_parser_term_Or(this3,stx_parse_Parser.get_self(this2),{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
	var this2 = stx_parse_Parser.get_self(this1);
	var this1 = new stx_parse_parser_term_Option(stx_parse_parser_term_Uri.h16,{ fileName : "stx/parse/parser/ParserLift.hx", lineNumber : 94, className : "stx.parse.parser.ParserLift", methodName : "option"});
	var this3 = new stx_parse_parser_term_CoupleWith(this1,stx_parse_parser_term_Uri.id("::"),{ fileName : "stx/parse/Parsers.hx", lineNumber : 122, className : "stx.parse.Parsers", methodName : "CoupleWith"});
	var this1 = stx_parse_Parser.get_self(this3);
	var this3 = new stx_parse_parser_term_AnonThen(this1,stx_parse_parser_term_Uri.tp(stx_parse_parser_term_Uri.ctlo),{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
	var pI = stx_parse_Parser.get_self(this3);
	var this1 = new stx_parse_parser_term_RepeatedOnly(stx_parse_parser_term_Uri.IPv6Section,4,{ fileName : "stx/parse/Parsers.hx", lineNumber : 62, className : "stx.parse.Parsers", methodName : "RepeatedOnly"});
	var this3 = new stx_parse_parser_term_CoupleWith(pI,stx_parse_parser_ParserLift.tokenize(this1),{ fileName : "stx/parse/Parsers.hx", lineNumber : 122, className : "stx.parse.Parsers", methodName : "CoupleWith"});
	var this1 = stx_parse_Parser.get_self(this3);
	var this3 = new stx_parse_parser_term_AnonThen(this1,stx_parse_parser_term_Uri.tp(stx_parse_parser_term_Uri.ct),{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
	var this1 = new stx_parse_parser_term_CoupleWith(stx_parse_Parser.get_self(this3),stx_parse_parser_term_Uri.ls32,{ fileName : "stx/parse/Parsers.hx", lineNumber : 122, className : "stx.parse.Parsers", methodName : "CoupleWith"});
	var this3 = stx_parse_Parser.get_self(this1);
	var this1 = new stx_parse_parser_term_AnonThen(this3,stx_parse_parser_term_Uri.tp(stx_parse_parser_term_Uri.ct),{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
	var this3 = this2;
	var this2 = new stx_parse_parser_term_Or(this3,stx_parse_Parser.get_self(this1),{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
	var this1 = stx_parse_Parser.get_self(this2);
	var this2 = new stx_parse_parser_term_Option(stx_parse_parser_term_Uri.IPv6Section,{ fileName : "stx/parse/parser/ParserLift.hx", lineNumber : 94, className : "stx.parse.parser.ParserLift", methodName : "option"});
	var this3 = new stx_parse_parser_term_CoupleWith(this2,stx_parse_parser_term_Uri.h16,{ fileName : "stx/parse/Parsers.hx", lineNumber : 122, className : "stx.parse.Parsers", methodName : "CoupleWith"});
	var this2 = stx_parse_Parser.get_self(this3);
	var this3 = new stx_parse_parser_term_AnonThen(this2,stx_parse_parser_term_Uri.tp(stx_parse_parser_term_Uri.ctlo),{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
	var this2 = new stx_parse_parser_term_Option(stx_parse_Parser.get_self(this3),{ fileName : "stx/parse/parser/ParserLift.hx", lineNumber : 94, className : "stx.parse.parser.ParserLift", methodName : "option"});
	var this3 = new stx_parse_parser_term_CoupleWith(this2,stx_parse_parser_term_Uri.id("::"),{ fileName : "stx/parse/Parsers.hx", lineNumber : 122, className : "stx.parse.Parsers", methodName : "CoupleWith"});
	var this2 = stx_parse_Parser.get_self(this3);
	var this3 = new stx_parse_parser_term_AnonThen(this2,stx_parse_parser_term_Uri.tp(stx_parse_parser_term_Uri.ctlo),{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
	var pI = stx_parse_Parser.get_self(this3);
	var this2 = new stx_parse_parser_term_RepeatedOnly(stx_parse_parser_term_Uri.IPv6Section,3,{ fileName : "stx/parse/Parsers.hx", lineNumber : 62, className : "stx.parse.Parsers", methodName : "RepeatedOnly"});
	var this3 = new stx_parse_parser_term_CoupleWith(pI,stx_parse_parser_ParserLift.tokenize(this2),{ fileName : "stx/parse/Parsers.hx", lineNumber : 122, className : "stx.parse.Parsers", methodName : "CoupleWith"});
	var this2 = stx_parse_Parser.get_self(this3);
	var this3 = new stx_parse_parser_term_AnonThen(this2,stx_parse_parser_term_Uri.tp(stx_parse_parser_term_Uri.ct),{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
	var this2 = new stx_parse_parser_term_CoupleWith(stx_parse_Parser.get_self(this3),stx_parse_parser_term_Uri.ls32,{ fileName : "stx/parse/Parsers.hx", lineNumber : 122, className : "stx.parse.Parsers", methodName : "CoupleWith"});
	var this3 = stx_parse_Parser.get_self(this2);
	var this2 = new stx_parse_parser_term_AnonThen(this3,stx_parse_parser_term_Uri.tp(stx_parse_parser_term_Uri.ct),{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
	var this3 = this1;
	var this1 = new stx_parse_parser_term_Or(this3,stx_parse_Parser.get_self(this2),{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
	var this2 = stx_parse_Parser.get_self(this1);
	var this1 = new stx_parse_parser_term_RepeatedOnlyUpto(stx_parse_parser_term_Uri.IPv6Section,2,{ fileName : "stx/parse/Parsers.hx", lineNumber : 59, className : "stx.parse.Parsers", methodName : "RepeatedOnlyUpto"});
	var this3 = new stx_parse_parser_term_CoupleWith(stx_parse_parser_ParserLift.tokenize(this1),stx_parse_parser_term_Uri.h16,{ fileName : "stx/parse/Parsers.hx", lineNumber : 122, className : "stx.parse.Parsers", methodName : "CoupleWith"});
	var this1 = stx_parse_Parser.get_self(this3);
	var this3 = new stx_parse_parser_term_AnonThen(this1,stx_parse_parser_term_Uri.tp(stx_parse_parser_term_Uri.ct),{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
	var this1 = new stx_parse_parser_term_Option(stx_parse_Parser.get_self(this3),{ fileName : "stx/parse/parser/ParserLift.hx", lineNumber : 94, className : "stx.parse.parser.ParserLift", methodName : "option"});
	var this3 = new stx_parse_parser_term_CoupleWith(this1,stx_parse_parser_term_Uri.id("::"),{ fileName : "stx/parse/Parsers.hx", lineNumber : 122, className : "stx.parse.Parsers", methodName : "CoupleWith"});
	var this1 = stx_parse_Parser.get_self(this3);
	var this3 = new stx_parse_parser_term_AnonThen(this1,stx_parse_parser_term_Uri.tp(stx_parse_parser_term_Uri.ctlo),{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
	var pI = stx_parse_Parser.get_self(this3);
	var this1 = new stx_parse_parser_term_RepeatedOnly(stx_parse_parser_term_Uri.IPv6Section,2,{ fileName : "stx/parse/Parsers.hx", lineNumber : 62, className : "stx.parse.Parsers", methodName : "RepeatedOnly"});
	var this3 = new stx_parse_parser_term_CoupleWith(pI,stx_parse_parser_ParserLift.tokenize(this1),{ fileName : "stx/parse/Parsers.hx", lineNumber : 122, className : "stx.parse.Parsers", methodName : "CoupleWith"});
	var this1 = stx_parse_Parser.get_self(this3);
	var this3 = new stx_parse_parser_term_AnonThen(this1,stx_parse_parser_term_Uri.tp(stx_parse_parser_term_Uri.ct),{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
	var this1 = new stx_parse_parser_term_CoupleWith(stx_parse_Parser.get_self(this3),stx_parse_parser_term_Uri.ls32,{ fileName : "stx/parse/Parsers.hx", lineNumber : 122, className : "stx.parse.Parsers", methodName : "CoupleWith"});
	var this3 = stx_parse_Parser.get_self(this1);
	var this1 = new stx_parse_parser_term_AnonThen(this3,stx_parse_parser_term_Uri.tp(stx_parse_parser_term_Uri.ct),{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
	var this3 = this2;
	var this2 = new stx_parse_parser_term_Or(this3,stx_parse_Parser.get_self(this1),{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
	var this1 = stx_parse_Parser.get_self(this2);
	var this2 = new stx_parse_parser_term_RepeatedOnlyUpto(stx_parse_parser_term_Uri.IPv6Section,3,{ fileName : "stx/parse/Parsers.hx", lineNumber : 59, className : "stx.parse.Parsers", methodName : "RepeatedOnlyUpto"});
	var this3 = new stx_parse_parser_term_CoupleWith(stx_parse_parser_ParserLift.tokenize(this2),stx_parse_parser_term_Uri.h16,{ fileName : "stx/parse/Parsers.hx", lineNumber : 122, className : "stx.parse.Parsers", methodName : "CoupleWith"});
	var this2 = stx_parse_Parser.get_self(this3);
	var this3 = new stx_parse_parser_term_AnonThen(this2,stx_parse_parser_term_Uri.tp(stx_parse_parser_term_Uri.ct),{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
	var this2 = new stx_parse_parser_term_Option(stx_parse_Parser.get_self(this3),{ fileName : "stx/parse/parser/ParserLift.hx", lineNumber : 94, className : "stx.parse.parser.ParserLift", methodName : "option"});
	var this3 = new stx_parse_parser_term_CoupleWith(this2,stx_parse_parser_term_Uri.id("::"),{ fileName : "stx/parse/Parsers.hx", lineNumber : 122, className : "stx.parse.Parsers", methodName : "CoupleWith"});
	var this2 = stx_parse_Parser.get_self(this3);
	var this3 = new stx_parse_parser_term_AnonThen(this2,stx_parse_parser_term_Uri.tp(stx_parse_parser_term_Uri.ctlo),{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
	var this2 = new stx_parse_parser_term_CoupleWith(stx_parse_Parser.get_self(this3),stx_parse_parser_term_Uri.h16,{ fileName : "stx/parse/Parsers.hx", lineNumber : 122, className : "stx.parse.Parsers", methodName : "CoupleWith"});
	var this3 = stx_parse_Parser.get_self(this2);
	var this2 = new stx_parse_parser_term_AnonThen(this3,stx_parse_parser_term_Uri.tp(stx_parse_parser_term_Uri.ct),{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
	var this3 = new stx_parse_parser_term_CoupleWith(stx_parse_Parser.get_self(this2),stx_parse_parser_term_Uri.ls32,{ fileName : "stx/parse/Parsers.hx", lineNumber : 122, className : "stx.parse.Parsers", methodName : "CoupleWith"});
	var this2 = stx_parse_Parser.get_self(this3);
	var this3 = new stx_parse_parser_term_AnonThen(this2,stx_parse_parser_term_Uri.tp(stx_parse_parser_term_Uri.ct),{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
	var this2 = this1;
	var this1 = new stx_parse_parser_term_Or(this2,stx_parse_Parser.get_self(this3),{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
	var this2 = stx_parse_Parser.get_self(this1);
	var this1 = new stx_parse_parser_term_RepeatedOnlyUpto(stx_parse_parser_term_Uri.IPv6Section,4,{ fileName : "stx/parse/Parsers.hx", lineNumber : 59, className : "stx.parse.Parsers", methodName : "RepeatedOnlyUpto"});
	var this3 = new stx_parse_parser_term_CoupleWith(stx_parse_parser_ParserLift.tokenize(this1),stx_parse_parser_term_Uri.h16,{ fileName : "stx/parse/Parsers.hx", lineNumber : 122, className : "stx.parse.Parsers", methodName : "CoupleWith"});
	var this1 = stx_parse_Parser.get_self(this3);
	var this3 = new stx_parse_parser_term_AnonThen(this1,stx_parse_parser_term_Uri.tp(stx_parse_parser_term_Uri.ct),{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
	var this1 = new stx_parse_parser_term_Option(stx_parse_Parser.get_self(this3),{ fileName : "stx/parse/parser/ParserLift.hx", lineNumber : 94, className : "stx.parse.parser.ParserLift", methodName : "option"});
	var this3 = new stx_parse_parser_term_CoupleWith(this1,stx_parse_parser_term_Uri.id("::"),{ fileName : "stx/parse/Parsers.hx", lineNumber : 122, className : "stx.parse.Parsers", methodName : "CoupleWith"});
	var this1 = stx_parse_Parser.get_self(this3);
	var this3 = new stx_parse_parser_term_AnonThen(this1,stx_parse_parser_term_Uri.tp(stx_parse_parser_term_Uri.ctlo),{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
	var this1 = new stx_parse_parser_term_CoupleWith(stx_parse_Parser.get_self(this3),stx_parse_parser_term_Uri.ls32,{ fileName : "stx/parse/Parsers.hx", lineNumber : 122, className : "stx.parse.Parsers", methodName : "CoupleWith"});
	var this3 = stx_parse_Parser.get_self(this1);
	var this1 = new stx_parse_parser_term_AnonThen(this3,stx_parse_parser_term_Uri.tp(stx_parse_parser_term_Uri.ct),{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
	var this3 = this2;
	var this2 = new stx_parse_parser_term_Or(this3,stx_parse_Parser.get_self(this1),{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
	var this1 = stx_parse_Parser.get_self(this2);
	var this2 = new stx_parse_parser_term_RepeatedOnlyUpto(stx_parse_parser_term_Uri.IPv6Section,5,{ fileName : "stx/parse/Parsers.hx", lineNumber : 59, className : "stx.parse.Parsers", methodName : "RepeatedOnlyUpto"});
	var this3 = new stx_parse_parser_term_CoupleWith(stx_parse_parser_ParserLift.tokenize(this2),stx_parse_parser_term_Uri.h16,{ fileName : "stx/parse/Parsers.hx", lineNumber : 122, className : "stx.parse.Parsers", methodName : "CoupleWith"});
	var this2 = stx_parse_Parser.get_self(this3);
	var this3 = new stx_parse_parser_term_AnonThen(this2,stx_parse_parser_term_Uri.tp(stx_parse_parser_term_Uri.ct),{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
	var this2 = new stx_parse_parser_term_Option(stx_parse_Parser.get_self(this3),{ fileName : "stx/parse/parser/ParserLift.hx", lineNumber : 94, className : "stx.parse.parser.ParserLift", methodName : "option"});
	var this3 = new stx_parse_parser_term_CoupleWith(this2,stx_parse_parser_term_Uri.id("::"),{ fileName : "stx/parse/Parsers.hx", lineNumber : 122, className : "stx.parse.Parsers", methodName : "CoupleWith"});
	var this2 = stx_parse_Parser.get_self(this3);
	var this3 = new stx_parse_parser_term_AnonThen(this2,stx_parse_parser_term_Uri.tp(stx_parse_parser_term_Uri.ctlo),{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
	var this2 = new stx_parse_parser_term_CoupleWith(stx_parse_Parser.get_self(this3),stx_parse_parser_term_Uri.h16,{ fileName : "stx/parse/Parsers.hx", lineNumber : 122, className : "stx.parse.Parsers", methodName : "CoupleWith"});
	var this3 = stx_parse_Parser.get_self(this2);
	var this2 = new stx_parse_parser_term_AnonThen(this3,stx_parse_parser_term_Uri.tp(stx_parse_parser_term_Uri.ct),{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
	var this3 = this1;
	var this1 = new stx_parse_parser_term_Or(this3,stx_parse_Parser.get_self(this2),{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
	var this2 = stx_parse_Parser.get_self(this1);
	var this1 = new stx_parse_parser_term_RepeatedOnlyUpto(stx_parse_parser_term_Uri.IPv6Section,6,{ fileName : "stx/parse/Parsers.hx", lineNumber : 59, className : "stx.parse.Parsers", methodName : "RepeatedOnlyUpto"});
	var this3 = new stx_parse_parser_term_CoupleWith(stx_parse_parser_ParserLift.tokenize(this1),stx_parse_parser_term_Uri.h16,{ fileName : "stx/parse/Parsers.hx", lineNumber : 122, className : "stx.parse.Parsers", methodName : "CoupleWith"});
	var this1 = stx_parse_Parser.get_self(this3);
	var this3 = new stx_parse_parser_term_AnonThen(this1,stx_parse_parser_term_Uri.tp(stx_parse_parser_term_Uri.ct),{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
	var this1 = new stx_parse_parser_term_Option(stx_parse_Parser.get_self(this3),{ fileName : "stx/parse/parser/ParserLift.hx", lineNumber : 94, className : "stx.parse.parser.ParserLift", methodName : "option"});
	var this3 = new stx_parse_parser_term_CoupleWith(this1,stx_parse_parser_term_Uri.id("::"),{ fileName : "stx/parse/Parsers.hx", lineNumber : 122, className : "stx.parse.Parsers", methodName : "CoupleWith"});
	var this1 = stx_parse_Parser.get_self(this3);
	var this3 = new stx_parse_parser_term_AnonThen(this1,stx_parse_parser_term_Uri.tp(stx_parse_parser_term_Uri.ctlo),{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
	var this1 = this2;
	var this2 = new stx_parse_parser_term_Or(this1,stx_parse_Parser.get_self(this3),{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
	$r = stx_parse_Parser.get_self(this2);
	return $r;
}(this));
stx_parse_parser_term_Uri.digit = stx_Parse.digit;
stx_parse_parser_term_Uri.alpha = stx_Parse.alpha;
stx_parse_parser_term_Uri.alphanum = stx_Parse.alphanum;
stx_parse_parser_term_Uri.hexR = "[A-F1-9]";
stx_parse_parser_term_Uri.hex = (function($this) {
	var $r;
	var this1 = new stx_parse_parser_term_Regex(stx_parse_parser_term_Uri.hexR,{ fileName : "stx/parse/Parsers.hx", lineNumber : 32, className : "stx.parse.Parsers", methodName : "Regex"});
	var this2 = this1;
	var this1 = new stx_parse_parser_term_AnonThen(this2,stx_parse_parser_term_Uri.parseHex,{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
	$r = stx_parse_Parser.get_self(this1);
	return $r;
}(this));
stx_parse_parser_term_Uri.escaped = (function($this) {
	var $r;
	var this1 = new stx_parse_parser_term_AndR(stx_parse_parser_term_Uri.id("%"),stx_parse_parser_term_Uri.hex,{ fileName : "stx/parse/Parsers.hx", lineNumber : 110, className : "stx.parse.Parsers", methodName : "AndR"});
	var this2 = new stx_parse_parser_term_CoupleWith(stx_parse_Parser.get_self(this1),stx_parse_parser_term_Uri.hex,{ fileName : "stx/parse/Parsers.hx", lineNumber : 122, className : "stx.parse.Parsers", methodName : "CoupleWith"});
	var this1 = stx_parse_Parser.get_self(this2);
	var this2 = new stx_parse_parser_term_AnonThen(this1,function(x) {
		return Std.string(stx_nano_CoupleLift.fst(x) << 8 | stx_nano_CoupleLift.snd(x));
	},{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
	$r = stx_parse_Parser.get_self(this2);
	return $r;
}(this));
stx_parse_parser_term_Uri.reservedR = "[;/?:+@&=~$,]";
stx_parse_parser_term_Uri.reserved = (function($this) {
	var $r;
	var this1 = new stx_parse_parser_term_Regex(stx_parse_parser_term_Uri.reservedR,{ fileName : "stx/parse/Parsers.hx", lineNumber : 32, className : "stx.parse.Parsers", methodName : "Regex"});
	$r = this1;
	return $r;
}(this));
stx_parse_parser_term_Uri.uric = (function($this) {
	var $r;
	var self = stx_lift_ArrayLift.lfold1([stx_parse_parser_term_Uri.reserved,stx_parse_parser_term_Uri.unreserved,stx_parse_parser_term_Uri.escaped],function(memo,next) {
		var this1 = memo;
		var this2 = new stx_parse_parser_term_Or(this1,next,{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
		return stx_parse_Parser.get_self(this2);
	});
	var this1 = new stx_parse_parser_term_Failed("No Parser in Array",false,{ fileName : "stx/parse/lift/LiftArrayOfParser.hx", lineNumber : 6, className : "stx.parse.lift.LiftArrayOfParser", methodName : "ors"});
	$r = self._hx_index == 0 ? (function($this) {
		var $r;
		var v = self.v;
		$r = v;
		return $r;
	}($this)) : this1;
	return $r;
}(this));
stx_parse_parser_term_Uri.fragment = (function($this) {
	var $r;
	var this1 = new stx_parse_parser_term_Not(stx_parse_parser_term_Uri.id("&"),{ fileName : "src/main/haxe/stx/parse/parser/term/Uri.hx", lineNumber : 120, className : "stx.parse.parser.term.Uri", methodName : "fragment"});
	var this2 = new stx_parse_parser_term_AndR(stx_parse_Parser.get_self(this1),stx_parse_parser_term_Uri.uric,{ fileName : "stx/parse/Parsers.hx", lineNumber : 110, className : "stx.parse.Parsers", methodName : "AndR"});
	var this1 = new stx_parse_parser_term_Many(stx_parse_Parser.get_self(this2),{ fileName : "stx/parse/Parsers.hx", lineNumber : 47, className : "stx.parse.Parsers", methodName : "Many"});
	var this2 = stx_parse_parser_ParserLift.tokenize(stx_parse_Parser.get_self(this1));
	var this1 = new stx_parse_parser_term_AnonThen(this2,stx_net_uri_AddressNode.Fragment,{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
	$r = stx_parse_Parser.get_self(this1);
	return $r;
}(this));
stx_parse_parser_term_Uri.fragments = (function($this) {
	var $r;
	var this1 = new stx_parse_parser_term_Rep1Sep(stx_parse_parser_term_Uri.fragment,stx_parse_parser_term_Uri.id("&"));
	var this2 = stx_parse_Parser.get_self(this1);
	var this1 = new stx_parse_parser_term_AnonThen(this2,stx_net_uri_AddressNode.Segments,{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
	$r = stx_parse_Parser.get_self(this1);
	return $r;
}(this));
stx_parse_parser_term_Uri.query = (function($this) {
	var $r;
	var this1 = new stx_parse_parser_term_Many(stx_parse_parser_term_Uri.uric,{ fileName : "stx/parse/Parsers.hx", lineNumber : 47, className : "stx.parse.Parsers", methodName : "Many"});
	var this2 = stx_parse_parser_ParserLift.tokenize(stx_parse_Parser.get_self(this1));
	var this1 = new stx_parse_parser_term_AnonThen(this2,stx_net_uri_AddressNode.Query,{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
	$r = stx_parse_Parser.get_self(this1);
	return $r;
}(this));
stx_parse_parser_term_Uri.pcharR = ":@&=~$,";
stx_parse_parser_term_Uri.pchar = (function($this) {
	var $r;
	var self = stx_lift_ArrayLift.lfold1([stx_parse_parser_term_Uri.unreserved,stx_parse_parser_term_Uri.escaped],function(memo,next) {
		var this1 = memo;
		var this2 = new stx_parse_parser_term_Or(this1,next,{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
		return stx_parse_Parser.get_self(this2);
	});
	var this1 = new stx_parse_parser_term_Failed("No Parser in Array",false,{ fileName : "stx/parse/lift/LiftArrayOfParser.hx", lineNumber : 6, className : "stx.parse.lift.LiftArrayOfParser", methodName : "ors"});
	var this2;
	if(self._hx_index == 0) {
		var v = self.v;
		this2 = v;
	} else {
		this2 = this1;
	}
	var this1 = new stx_parse_parser_term_Regex(stx_parse_parser_term_Uri.pcharR,{ fileName : "stx/parse/Parsers.hx", lineNumber : 32, className : "stx.parse.Parsers", methodName : "Regex"});
	var this3 = this2;
	var this2 = new stx_parse_parser_term_Or(this3,this1,{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
	$r = stx_parse_Parser.get_self(this2);
	return $r;
}(this));
stx_parse_parser_term_Uri.param = (function($this) {
	var $r;
	var this1 = new stx_parse_parser_term_Many(stx_parse_parser_term_Uri.pchar,{ fileName : "stx/parse/Parsers.hx", lineNumber : 47, className : "stx.parse.Parsers", methodName : "Many"});
	var this2 = stx_parse_parser_ParserLift.tokenize(stx_parse_Parser.get_self(this1));
	var this1 = new stx_parse_parser_term_AnonThen(this2,stx_net_uri_AddressNode.Param,{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
	$r = stx_parse_Parser.get_self(this1);
	return $r;
}(this));
stx_parse_parser_term_Uri.segment = (function($this) {
	var $r;
	var pI = stx_parse_parser_term_Uri.param;
	var this1 = new stx_parse_parser_term_AndR(stx_parse_parser_term_Uri.id(";"),stx_parse_parser_term_Uri.param,{ fileName : "stx/parse/Parsers.hx", lineNumber : 110, className : "stx.parse.Parsers", methodName : "AndR"});
	var this2 = new stx_parse_parser_term_Many(stx_parse_Parser.get_self(this1),{ fileName : "stx/parse/Parsers.hx", lineNumber : 47, className : "stx.parse.Parsers", methodName : "Many"});
	var this1 = new stx_parse_parser_term_AnonWith(pI,stx_parse_Parser.get_self(this2),stx_fn_BinaryLift.then(stx_fn_Binary._new(stx_net_uri_AddressNode.Segment),haxe_ds_Option.Some),{ fileName : "stx/parse/Parsers.hx", lineNumber : 119, className : "stx.parse.Parsers", methodName : "AnonWith"});
	$r = stx_parse_Parser.get_self(this1);
	return $r;
}(this));
stx_parse_parser_term_Uri.path_segments = (function($this) {
	var $r;
	var pI = stx_parse_parser_term_Uri.segment;
	var this1 = new stx_parse_parser_term_AndR(stx_parse_parser_term_Uri.id("/"),stx_parse_parser_term_Uri.segment,{ fileName : "stx/parse/Parsers.hx", lineNumber : 110, className : "stx.parse.Parsers", methodName : "AndR"});
	var this2 = new stx_parse_parser_term_Many(stx_parse_Parser.get_self(this1),{ fileName : "stx/parse/Parsers.hx", lineNumber : 47, className : "stx.parse.Parsers", methodName : "Many"});
	var this1 = new stx_parse_parser_term_AnonWith(pI,stx_parse_Parser.get_self(this2),function(a,b) {
		return haxe_ds_Option.Some(stx_nano_Cluster.concat(stx_nano_Cluster.lift([a]),b));
	},{ fileName : "stx/parse/Parsers.hx", lineNumber : 119, className : "stx.parse.Parsers", methodName : "AnonWith"});
	$r = stx_parse_Parser.get_self(this1);
	return $r;
}(this));
stx_parse_parser_term_Uri.port = (function($this) {
	var $r;
	var this1 = new stx_parse_parser_term_Many(stx_Parse.digit,{ fileName : "stx/parse/Parsers.hx", lineNumber : 47, className : "stx.parse.Parsers", methodName : "Many"});
	var this2 = stx_parse_parser_ParserLift.tokenize(stx_parse_Parser.get_self(this1));
	var this1 = new stx_parse_parser_term_AnonThen(this2,Std.parseInt,{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
	$r = stx_parse_Parser.get_self(this1);
	return $r;
}(this));
stx_parse_parser_term_Uri.digP = (function($this) {
	var $r;
	var this1 = new stx_parse_parser_term_OneMany(stx_Parse.digit,{ fileName : "stx/parse/Parsers.hx", lineNumber : 50, className : "stx.parse.Parsers", methodName : "OneMany"});
	var this2 = stx_parse_parser_ParserLift.tokenize(stx_parse_Parser.get_self(this1));
	var this1 = new stx_parse_parser_term_AnonThen(this2,Std.parseInt,{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
	$r = stx_parse_Parser.get_self(this1);
	return $r;
}(this));
stx_parse_parser_term_Uri.IPv4addressR = "[1-9]+\\.[1-9]+\\.[1-9]+\\.[1-9]+";
stx_parse_parser_term_Uri.toplabel = (function($this) {
	var $r;
	var this1 = stx_parse_parser_term_Uri.alpha;
	var pI = stx_parse_parser_term_Uri.alpha;
	var this2 = stx_parse_parser_term_Uri.alphanum;
	var this3 = new stx_parse_parser_term_Or(this2,stx_parse_parser_term_Uri.id("-"),{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
	var this2 = new stx_parse_parser_term_Many(stx_parse_Parser.get_self(this3),{ fileName : "stx/parse/Parsers.hx", lineNumber : 47, className : "stx.parse.Parsers", methodName : "Many"});
	var this3 = new stx_parse_parser_term_AnonWith(stx_parse_parser_ParserLift.tokenize(stx_parse_Parser.get_self(this2)),stx_parse_parser_term_Uri.alphanum,stx_parse_parser_term_Uri.sBnd,{ fileName : "stx/parse/Parsers.hx", lineNumber : 119, className : "stx.parse.Parsers", methodName : "AnonWith"});
	var this2 = new stx_parse_parser_term_AnonWith(pI,stx_parse_Parser.get_self(this3),stx_parse_parser_term_Uri.sBnd,{ fileName : "stx/parse/Parsers.hx", lineNumber : 119, className : "stx.parse.Parsers", methodName : "AnonWith"});
	var this3 = this1;
	var this1 = new stx_parse_parser_term_Or(this3,stx_parse_Parser.get_self(this2),{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
	$r = stx_parse_Parser.get_self(this1);
	return $r;
}(this));
stx_parse_parser_term_Uri.domainlabel = (function($this) {
	var $r;
	var this1 = stx_parse_parser_term_Uri.alphanum;
	var pI = stx_parse_parser_term_Uri.alphanum;
	var this2 = stx_parse_parser_term_Uri.alphanum;
	var this3 = new stx_parse_parser_term_Or(this2,stx_parse_parser_term_Uri.id("-"),{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
	var this2 = new stx_parse_parser_term_Many(stx_parse_Parser.get_self(this3),{ fileName : "stx/parse/Parsers.hx", lineNumber : 47, className : "stx.parse.Parsers", methodName : "Many"});
	var this3 = new stx_parse_parser_term_AnonWith(stx_parse_parser_ParserLift.tokenize(stx_parse_Parser.get_self(this2)),stx_parse_parser_term_Uri.alphanum,stx_parse_parser_term_Uri.sBnd,{ fileName : "stx/parse/Parsers.hx", lineNumber : 119, className : "stx.parse.Parsers", methodName : "AnonWith"});
	var this2 = new stx_parse_parser_term_AnonWith(pI,stx_parse_Parser.get_self(this3),stx_parse_parser_term_Uri.sBnd,{ fileName : "stx/parse/Parsers.hx", lineNumber : 119, className : "stx.parse.Parsers", methodName : "AnonWith"});
	var this3 = this1;
	var this1 = new stx_parse_parser_term_Or(this3,stx_parse_Parser.get_self(this2),{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
	$r = stx_parse_Parser.get_self(this1);
	return $r;
}(this));
stx_parse_parser_term_Uri.hostname = (function($this) {
	var $r;
	var this1 = new stx_parse_parser_term_AndL(stx_parse_parser_term_Uri.domainlabel,stx_parse_parser_term_Uri.id("."),{ fileName : "stx/parse/Parsers.hx", lineNumber : 113, className : "stx.parse.Parsers", methodName : "AndL"});
	var this2 = new stx_parse_parser_term_CoupleWith(stx_parse_Parser.get_self(this1),stx_parse_parser_term_Uri.toplabel,{ fileName : "stx/parse/Parsers.hx", lineNumber : 122, className : "stx.parse.Parsers", methodName : "CoupleWith"});
	var this1 = stx_parse_Parser.get_self(this2);
	var this2 = new stx_parse_parser_term_AnonThen(this1,stx_parse_parser_term_Uri.tp(stx_parse_parser_term_Uri.ct),{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
	var pI = stx_parse_Parser.get_self(this2);
	var this1 = new stx_parse_parser_term_Option(stx_parse_parser_term_Uri.id("."),{ fileName : "stx/parse/parser/ParserLift.hx", lineNumber : 94, className : "stx.parse.parser.ParserLift", methodName : "option"});
	var this2 = new stx_parse_parser_term_CoupleWith(pI,this1,{ fileName : "stx/parse/Parsers.hx", lineNumber : 122, className : "stx.parse.Parsers", methodName : "CoupleWith"});
	var this1 = stx_parse_Parser.get_self(this2);
	var this2 = new stx_parse_parser_term_AnonThen(this1,stx_parse_parser_term_Uri.tp(stx_parse_parser_term_Uri.ctro),{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
	$r = stx_parse_Parser.get_self(this2);
	return $r;
}(this));
stx_parse_parser_term_Uri.host = (function($this) {
	var $r;
	var this1 = stx_parse_parser_term_Uri.hostname;
	var this2 = new stx_parse_parser_term_Or(this1,stx_parse_parser_term_Uri.IPv4address(),{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
	$r = stx_parse_Parser.get_self(this2);
	return $r;
}(this));
stx_parse_parser_term_Uri.hostport = (function($this) {
	var $r;
	var pI = stx_parse_parser_term_Uri.host;
	var this1 = new stx_parse_parser_term_AndR(stx_parse_parser_term_Uri.id(":"),stx_parse_parser_term_Uri.port,{ fileName : "stx/parse/Parsers.hx", lineNumber : 110, className : "stx.parse.Parsers", methodName : "AndR"});
	var this2 = new stx_parse_parser_term_Option(stx_parse_Parser.get_self(this1),{ fileName : "stx/parse/parser/ParserLift.hx", lineNumber : 94, className : "stx.parse.parser.ParserLift", methodName : "option"});
	var this1 = new stx_parse_parser_term_AnonWith(pI,this2,stx_fn_BinaryLift.then(stx_fn_Binary._new(stx_net_uri_Host.Named),haxe_ds_Option.Some),{ fileName : "stx/parse/Parsers.hx", lineNumber : 119, className : "stx.parse.Parsers", methodName : "AnonWith"});
	$r = stx_parse_Parser.get_self(this1);
	return $r;
}(this));
stx_parse_parser_term_Uri.userinfoR = ";:&=+$,";
stx_parse_parser_term_Uri.userinfo = (function($this) {
	var $r;
	var self = stx_lift_ArrayLift.lfold1([stx_parse_parser_term_Uri.unreserved,stx_parse_parser_term_Uri.escaped],function(memo,next) {
		var this1 = memo;
		var this2 = new stx_parse_parser_term_Or(this1,next,{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
		return stx_parse_Parser.get_self(this2);
	});
	var this1 = new stx_parse_parser_term_Failed("No Parser in Array",false,{ fileName : "stx/parse/lift/LiftArrayOfParser.hx", lineNumber : 6, className : "stx.parse.lift.LiftArrayOfParser", methodName : "ors"});
	var this2;
	if(self._hx_index == 0) {
		var v = self.v;
		this2 = v;
	} else {
		this2 = this1;
	}
	var this1 = new stx_parse_parser_term_Regex(stx_parse_parser_term_Uri.userinfoR,{ fileName : "stx/parse/Parsers.hx", lineNumber : 32, className : "stx.parse.Parsers", methodName : "Regex"});
	var this3 = this2;
	var this2 = new stx_parse_parser_term_Or(this3,this1,{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
	var this1 = new stx_parse_parser_term_Many(stx_parse_Parser.get_self(this2),{ fileName : "stx/parse/Parsers.hx", lineNumber : 47, className : "stx.parse.Parsers", methodName : "Many"});
	$r = stx_parse_parser_ParserLift.tokenize(stx_parse_Parser.get_self(this1));
	return $r;
}(this));
stx_parse_parser_term_Uri.server = (function($this) {
	var $r;
	var this1 = new stx_parse_parser_term_AndL(stx_parse_parser_term_Uri.userinfo,stx_parse_parser_term_Uri.id("@"),{ fileName : "stx/parse/Parsers.hx", lineNumber : 113, className : "stx.parse.Parsers", methodName : "AndL"});
	var this2 = new stx_parse_parser_term_Option(stx_parse_Parser.get_self(this1),{ fileName : "stx/parse/parser/ParserLift.hx", lineNumber : 94, className : "stx.parse.parser.ParserLift", methodName : "option"});
	var this1 = new stx_parse_parser_term_AnonWith(this2,stx_parse_parser_term_Uri.hostport,function(a,b) {
		if(a == null) {
			return stx_pico_Option.fromNullT(stx_net_uri_Server.Simple(b));
		} else if(a._hx_index == 0) {
			var v = a.v;
			return stx_pico_Option.fromNullT(stx_net_uri_Server.Authenticated(v,b));
		} else {
			return stx_pico_Option.fromNullT(stx_net_uri_Server.Simple(b));
		}
	},{ fileName : "stx/parse/Parsers.hx", lineNumber : 119, className : "stx.parse.Parsers", methodName : "AnonWith"});
	$r = stx_parse_Parser.get_self(this1);
	return $r;
}(this));
stx_parse_parser_term_Uri.authority = (function($this) {
	var $r;
	var this1 = stx_parse_parser_term_Uri.server;
	var this2 = new stx_parse_parser_term_AnonThen(this1,stx_net_uri_Authority.Serve,{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
	var this1 = stx_parse_Parser.get_self(this2);
	var this2 = stx_parse_parser_term_Uri.reg_name;
	var this3 = new stx_parse_parser_term_AnonThen(this2,stx_net_uri_Authority.Reg,{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
	var this2 = this1;
	var this1 = new stx_parse_parser_term_Or(this2,stx_parse_Parser.get_self(this3),{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
	$r = stx_parse_Parser.get_self(this1);
	return $r;
}(this));
stx_parse_parser_term_Uri.schemeR = "[+-.]";
stx_parse_parser_term_Uri.scheme = (function($this) {
	var $r;
	var pI = stx_parse_parser_term_Uri.alpha;
	var self = stx_lift_ArrayLift.lfold1([stx_parse_parser_term_Uri.alpha,stx_parse_parser_term_Uri.digit],function(memo,next) {
		var this1 = memo;
		var this2 = new stx_parse_parser_term_Or(this1,next,{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
		return stx_parse_Parser.get_self(this2);
	});
	var this1 = new stx_parse_parser_term_Failed("No Parser in Array",false,{ fileName : "stx/parse/lift/LiftArrayOfParser.hx", lineNumber : 6, className : "stx.parse.lift.LiftArrayOfParser", methodName : "ors"});
	var this2;
	if(self._hx_index == 0) {
		var v = self.v;
		this2 = v;
	} else {
		this2 = this1;
	}
	var this1 = new stx_parse_parser_term_Regex(stx_parse_parser_term_Uri.schemeR,{ fileName : "stx/parse/Parsers.hx", lineNumber : 32, className : "stx.parse.Parsers", methodName : "Regex"});
	var this3 = this2;
	var this2 = new stx_parse_parser_term_Or(this3,this1,{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
	var this1 = new stx_parse_parser_term_Many(stx_parse_Parser.get_self(this2),{ fileName : "stx/parse/Parsers.hx", lineNumber : 47, className : "stx.parse.Parsers", methodName : "Many"});
	var this2 = new stx_parse_parser_term_AnonWith(pI,stx_parse_parser_ParserLift.tokenize(stx_parse_Parser.get_self(this1)),stx_parse_parser_term_Uri.sBnd,{ fileName : "stx/parse/Parsers.hx", lineNumber : 119, className : "stx.parse.Parsers", methodName : "AnonWith"});
	$r = stx_parse_Parser.get_self(this2);
	return $r;
}(this));
stx_parse_parser_term_Uri.abs_path = (function($this) {
	var $r;
	var this1 = new stx_parse_parser_term_AndR(stx_parse_parser_term_Uri.id("/"),stx_parse_parser_term_Uri.path_segments,{ fileName : "stx/parse/Parsers.hx", lineNumber : 110, className : "stx.parse.Parsers", methodName : "AndR"});
	var this2 = stx_parse_Parser.get_self(this1);
	var this1 = new stx_parse_parser_term_AnonThen(this2,stx_net_uri_Path.Absolute,{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
	$r = stx_parse_Parser.get_self(this1);
	return $r;
}(this));
stx_parse_parser_term_Uri.net_path = (function($this) {
	var $r;
	var pI = stx_parse_parser_term_Uri.id("//");
	var pI1 = stx_parse_parser_term_Uri.authority;
	var this1 = new stx_parse_parser_term_Option(stx_parse_parser_term_Uri.abs_path,{ fileName : "stx/parse/parser/ParserLift.hx", lineNumber : 94, className : "stx.parse.parser.ParserLift", methodName : "option"});
	var this2 = new stx_parse_parser_term_AnonWith(pI1,this1,stx_fn_BinaryLift.then(stx_fn_Binary._new(stx_net_uri_Path.Net),haxe_ds_Option.Some),{ fileName : "stx/parse/Parsers.hx", lineNumber : 119, className : "stx.parse.Parsers", methodName : "AnonWith"});
	var this1 = new stx_parse_parser_term_AndR(pI,stx_parse_Parser.get_self(this2),{ fileName : "stx/parse/Parsers.hx", lineNumber : 110, className : "stx.parse.Parsers", methodName : "AndR"});
	$r = stx_parse_Parser.get_self(this1);
	return $r;
}(this));
stx_parse_parser_term_Uri.rel_segmentR = "[;@&=~$,]";
stx_parse_parser_term_Uri.rel_segment = (function($this) {
	var $r;
	var self = stx_lift_ArrayLift.lfold1([stx_parse_parser_term_Uri.unreserved,stx_parse_parser_term_Uri.escaped],function(memo,next) {
		var this1 = memo;
		var this2 = new stx_parse_parser_term_Or(this1,next,{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
		return stx_parse_Parser.get_self(this2);
	});
	var this1 = new stx_parse_parser_term_Failed("No Parser in Array",false,{ fileName : "stx/parse/lift/LiftArrayOfParser.hx", lineNumber : 6, className : "stx.parse.lift.LiftArrayOfParser", methodName : "ors"});
	var this2;
	if(self._hx_index == 0) {
		var v = self.v;
		this2 = v;
	} else {
		this2 = this1;
	}
	var this1 = new stx_parse_parser_term_Regex(stx_parse_parser_term_Uri.rel_segmentR,{ fileName : "stx/parse/Parsers.hx", lineNumber : 32, className : "stx.parse.Parsers", methodName : "Regex"});
	var this3 = this2;
	var this2 = new stx_parse_parser_term_Or(this3,this1,{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
	var this1 = new stx_parse_parser_term_OneMany(stx_parse_Parser.get_self(this2),{ fileName : "stx/parse/Parsers.hx", lineNumber : 50, className : "stx.parse.Parsers", methodName : "OneMany"});
	$r = stx_parse_parser_ParserLift.tokenize(stx_parse_Parser.get_self(this1));
	return $r;
}(this));
stx_parse_parser_term_Uri.rel_path = (function($this) {
	var $r;
	var pI = stx_parse_parser_term_Uri.rel_segment;
	var this1 = new stx_parse_parser_term_Option(stx_parse_parser_term_Uri.abs_path,{ fileName : "stx/parse/parser/ParserLift.hx", lineNumber : 94, className : "stx.parse.parser.ParserLift", methodName : "option"});
	var this2 = new stx_parse_parser_term_AnonWith(pI,this1,stx_fn_BinaryLift.then(stx_fn_Binary._new(stx_net_uri_Path.Relative),haxe_ds_Option.Some),{ fileName : "stx/parse/Parsers.hx", lineNumber : 119, className : "stx.parse.Parsers", methodName : "AnonWith"});
	$r = stx_parse_Parser.get_self(this2);
	return $r;
}(this));
stx_parse_parser_term_Uri.uric_no_slashR = "[;?:@&=+$,]";
stx_parse_parser_term_Uri.uric_no_slash = (function($this) {
	var $r;
	var self = stx_lift_ArrayLift.lfold1([stx_parse_parser_term_Uri.unreserved,stx_parse_parser_term_Uri.escaped],function(memo,next) {
		var this1 = memo;
		var this2 = new stx_parse_parser_term_Or(this1,next,{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
		return stx_parse_Parser.get_self(this2);
	});
	var this1 = new stx_parse_parser_term_Failed("No Parser in Array",false,{ fileName : "stx/parse/lift/LiftArrayOfParser.hx", lineNumber : 6, className : "stx.parse.lift.LiftArrayOfParser", methodName : "ors"});
	var this2;
	if(self._hx_index == 0) {
		var v = self.v;
		this2 = v;
	} else {
		this2 = this1;
	}
	var this1 = new stx_parse_parser_term_Regex(stx_parse_parser_term_Uri.uric_no_slashR,{ fileName : "stx/parse/Parsers.hx", lineNumber : 32, className : "stx.parse.Parsers", methodName : "Regex"});
	var this3 = this2;
	var this2 = new stx_parse_parser_term_Or(this3,this1,{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
	$r = stx_parse_Parser.get_self(this2);
	return $r;
}(this));
stx_parse_parser_term_Uri.opaque_part = (function($this) {
	var $r;
	var pI = stx_parse_parser_term_Uri.uric_no_slash;
	var this1 = new stx_parse_parser_term_Many(stx_parse_parser_term_Uri.uric,{ fileName : "stx/parse/Parsers.hx", lineNumber : 47, className : "stx.parse.Parsers", methodName : "Many"});
	var this2 = new stx_parse_parser_term_AnonWith(pI,stx_parse_parser_ParserLift.tokenize(stx_parse_Parser.get_self(this1)),stx_parse_parser_term_Uri.sBnd,{ fileName : "stx/parse/Parsers.hx", lineNumber : 119, className : "stx.parse.Parsers", methodName : "AnonWith"});
	var this1 = stx_parse_Parser.get_self(this2);
	var this2 = new stx_parse_parser_term_AnonThen(this1,stx_net_uri_Part.Opaque,{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
	$r = stx_parse_Parser.get_self(this2);
	return $r;
}(this));
stx_parse_parser_term_Uri.hier_part = (function($this) {
	var $r;
	var this1 = stx_parse_parser_term_Uri.net_path;
	var this2 = new stx_parse_parser_term_Or(this1,stx_parse_parser_term_Uri.abs_path,{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
	var pI = stx_parse_Parser.get_self(this2);
	var this1 = new stx_parse_parser_term_AndR(stx_parse_parser_term_Uri.id("?"),stx_parse_parser_term_Uri.query,{ fileName : "stx/parse/Parsers.hx", lineNumber : 110, className : "stx.parse.Parsers", methodName : "AndR"});
	var this2 = new stx_parse_parser_term_Option(stx_parse_Parser.get_self(this1),{ fileName : "stx/parse/parser/ParserLift.hx", lineNumber : 94, className : "stx.parse.parser.ParserLift", methodName : "option"});
	var this1 = new stx_parse_parser_term_AnonWith(pI,this2,function(a,b) {
		if(b == null) {
			return stx_pico_Option.fromNullT(stx_net_uri_Part.Simple(a));
		} else if(b._hx_index == 0) {
			var v = b.v;
			return stx_pico_Option.fromNullT(stx_net_uri_Part.Query(a,v));
		} else {
			return stx_pico_Option.fromNullT(stx_net_uri_Part.Simple(a));
		}
	},{ fileName : "stx/parse/Parsers.hx", lineNumber : 119, className : "stx.parse.Parsers", methodName : "AnonWith"});
	$r = stx_parse_Parser.get_self(this1);
	return $r;
}(this));
stx_parse_parser_term_Uri.relativeURI = (function($this) {
	var $r;
	var this1 = stx_parse_parser_term_Uri.net_path;
	var this2 = new stx_parse_parser_term_Or(this1,stx_parse_parser_term_Uri.abs_path,{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
	var this1 = stx_parse_Parser.get_self(this2);
	var this2 = new stx_parse_parser_term_Or(this1,stx_parse_parser_term_Uri.rel_path,{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
	var pI = stx_parse_Parser.get_self(this2);
	var this1 = new stx_parse_parser_term_AndR(stx_parse_parser_term_Uri.id("?"),stx_parse_parser_term_Uri.query,{ fileName : "stx/parse/Parsers.hx", lineNumber : 110, className : "stx.parse.Parsers", methodName : "AndR"});
	var this2 = new stx_parse_parser_term_Option(stx_parse_Parser.get_self(this1),{ fileName : "stx/parse/parser/ParserLift.hx", lineNumber : 94, className : "stx.parse.parser.ParserLift", methodName : "option"});
	var this1 = new stx_parse_parser_term_AnonWith(pI,this2,stx_fn_BinaryLift.then(stx_fn_Binary._new(stx_net_uri_Uri.Relative),haxe_ds_Option.Some),{ fileName : "stx/parse/Parsers.hx", lineNumber : 119, className : "stx.parse.Parsers", methodName : "AnonWith"});
	$r = stx_parse_Parser.get_self(this1);
	return $r;
}(this));
stx_parse_parser_term_Uri.absoluteURI = (function($this) {
	var $r;
	var this1 = new stx_parse_parser_term_AndL(stx_parse_parser_term_Uri.scheme,stx_parse_parser_term_Uri.id(":"),{ fileName : "stx/parse/Parsers.hx", lineNumber : 113, className : "stx.parse.Parsers", methodName : "AndL"});
	var pI = stx_parse_Parser.get_self(this1);
	var this1 = stx_parse_parser_term_Uri.hier_part;
	var this2 = new stx_parse_parser_term_Or(this1,stx_parse_parser_term_Uri.opaque_part,{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
	var this1 = new stx_parse_parser_term_AnonWith(pI,stx_parse_Parser.get_self(this2),stx_fn_BinaryLift.then(stx_fn_Binary._new(stx_net_uri_Uri.Absolute),haxe_ds_Option.Some),{ fileName : "stx/parse/Parsers.hx", lineNumber : 119, className : "stx.parse.Parsers", methodName : "AnonWith"});
	$r = stx_parse_Parser.get_self(this1);
	return $r;
}(this));
stx_parse_parser_term_Uri.UriReference = (function($this) {
	var $r;
	var this1 = stx_parse_parser_term_Uri.absoluteURI;
	var this2 = new stx_parse_parser_term_Or(this1,stx_parse_parser_term_Uri.relativeURI,{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
	var pI = stx_parse_Parser.get_self(this2);
	var this1 = new stx_parse_parser_term_AndR(stx_parse_parser_term_Uri.id("#"),stx_parse_parser_term_Uri.fragments,{ fileName : "stx/parse/Parsers.hx", lineNumber : 110, className : "stx.parse.Parsers", methodName : "AndR"});
	var this2 = new stx_parse_parser_term_Option(stx_parse_Parser.get_self(this1),{ fileName : "stx/parse/parser/ParserLift.hx", lineNumber : 94, className : "stx.parse.parser.ParserLift", methodName : "option"});
	var this1 = new stx_parse_parser_term_CoupleWith(pI,this2,{ fileName : "stx/parse/Parsers.hx", lineNumber : 122, className : "stx.parse.Parsers", methodName : "CoupleWith"});
	var pI = stx_parse_Parser.get_self(this1);
	var this1 = new stx_parse_parser_term_Eof(null,{ fileName : "stx/parse/Parsers.hx", lineNumber : 65, className : "stx.parse.Parsers", methodName : "Eof"});
	var this2 = new stx_parse_parser_term_AndL(pI,this1,{ fileName : "stx/parse/Parsers.hx", lineNumber : 113, className : "stx.parse.Parsers", methodName : "AndL"});
	$r = stx_parse_Parser.get_self(this2);
	return $r;
}(this));
var stx_parse_parser_term_Uri_alts = ($_=stx_LiftParse.parse(stx_nano_Wildcard.__),$bind($_,$_.alts));
stx_parse_pml_Lexer.tl_paren = (function($this) {
	var $r;
	var _this = stx_LiftParse.parse(stx_nano_Wildcard.__);
	var this1 = new stx_parse_parser_term_Identifier("(",{ fileName : "stx/parse/Parsers.hx", lineNumber : 71, className : "stx.parse.Parsers", methodName : "Identifier"});
	var this2 = this1;
	var this1 = new stx_parse_parser_term_AnonThen(this2,function(_) {
		return eu_ohmrun_pml_Token.TLParen;
	},{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
	var p = stx_parse_Parser.get_self(this1);
	p.tag = haxe_ds_Option.Some("lparen");
	var this1 = new stx_parse_parser_term_TagRefuse(p,"lparen",{ fileName : "stx/Parse.hx", lineNumber : 164, className : "stx.LiftParse", methodName : "tagged"});
	$r = this1;
	return $r;
}(this));
stx_parse_pml_Lexer.tr_paren = (function($this) {
	var $r;
	var _this = stx_LiftParse.parse(stx_nano_Wildcard.__);
	var this1 = new stx_parse_parser_term_Identifier(")",{ fileName : "stx/parse/Parsers.hx", lineNumber : 71, className : "stx.parse.Parsers", methodName : "Identifier"});
	var this2 = this1;
	var this1 = new stx_parse_parser_term_AnonThen(this2,function(_) {
		return eu_ohmrun_pml_Token.TRParen;
	},{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
	var p = stx_parse_Parser.get_self(this1);
	p.tag = haxe_ds_Option.Some("rparen");
	var this1 = new stx_parse_parser_term_TagRefuse(p,"rparen",{ fileName : "stx/Parse.hx", lineNumber : 164, className : "stx.LiftParse", methodName : "tagged"});
	$r = this1;
	return $r;
}(this));
stx_parse_pml_Lexer.whitespace = (function($this) {
	var $r;
	var p = stx_Parse.whitespace;
	p.tag = haxe_ds_Option.Some("whitespace");
	var this1 = new stx_parse_parser_term_TagRefuse(p,"whitespace",{ fileName : "stx/Parse.hx", lineNumber : 164, className : "stx.LiftParse", methodName : "tagged"});
	$r = this1;
	return $r;
}(this));
stx_parse_pml_Lexer.k_float = (function($this) {
	var $r;
	var _this = stx_LiftParse.parse(stx_nano_Wildcard.__);
	var this1 = new stx_parse_parser_term_Regex("\\\\-?[0-9]+(\\\\.[0-9]+)?",{ fileName : "stx/parse/Parsers.hx", lineNumber : 32, className : "stx.parse.Parsers", methodName : "Regex"});
	var this2 = stx_parse_Parser.get_self(this1);
	var this1 = new stx_parse_parser_term_AnonThen(this2,stx_parse_pml_Lexer.float,{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
	var p = stx_parse_Parser.get_self(this1);
	p.tag = haxe_ds_Option.Some("float");
	var this1 = new stx_parse_parser_term_TagRefuse(p,"float",{ fileName : "stx/Parse.hx", lineNumber : 164, className : "stx.LiftParse", methodName : "tagged"});
	$r = this1;
	return $r;
}(this));
stx_parse_pml_Lexer.k_number = (function($this) {
	var $r;
	var p = stx_parse_pml_Lexer.k_float;
	p.tag = haxe_ds_Option.Some("number");
	var this1 = new stx_parse_parser_term_TagRefuse(p,"number",{ fileName : "stx/Parse.hx", lineNumber : 164, className : "stx.LiftParse", methodName : "tagged"});
	$r = this1;
	return $r;
}(this));
stx_parse_pml_Lexer.k_string = (function($this) {
	var $r;
	var this1 = stx_Parse.literal;
	var this2 = new stx_parse_parser_term_AnonThen(this1,function(x) {
		return eu_ohmrun_pml_Token.TAtom(eu_ohmrun_pml_AtomSum.Str(x));
	},{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
	var p = stx_parse_Parser.get_self(this2);
	p.tag = haxe_ds_Option.Some("string");
	var this1 = new stx_parse_parser_term_TagRefuse(p,"string",{ fileName : "stx/Parse.hx", lineNumber : 164, className : "stx.LiftParse", methodName : "tagged"});
	$r = this1;
	return $r;
}(this));
stx_parse_pml_Lexer.k_bool = (function($this) {
	var $r;
	var _this = stx_LiftParse.parse(stx_nano_Wildcard.__);
	var this1 = new stx_parse_parser_term_Regex("\\(true|false\\)",{ fileName : "stx/parse/Parsers.hx", lineNumber : 32, className : "stx.parse.Parsers", methodName : "Regex"});
	var this2 = stx_parse_Parser.get_self(this1);
	var this1 = new stx_parse_parser_term_AnonThen(this2,function(x) {
		return eu_ohmrun_pml_Token.TAtom(eu_ohmrun_pml_AtomSum.B(x == "true"));
	},{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
	var p = stx_parse_Parser.get_self(this1);
	p.tag = haxe_ds_Option.Some("bool");
	var this1 = new stx_parse_parser_term_TagRefuse(p,"bool",{ fileName : "stx/Parse.hx", lineNumber : 164, className : "stx.LiftParse", methodName : "tagged"});
	$r = this1;
	return $r;
}(this));
stx_parse_pml_Lexer.k_atom = (function($this) {
	var $r;
	var _this = stx_LiftParse.parse(stx_nano_Wildcard.__);
	var this1 = new stx_parse_parser_term_Regex("[^ \r\t\n\\(\\)]+",{ fileName : "stx/parse/Parsers.hx", lineNumber : 32, className : "stx.parse.Parsers", methodName : "Regex"});
	var this2 = stx_parse_Parser.get_self(this1);
	var this1 = new stx_parse_parser_term_AnonThen(this2,function(x) {
		return eu_ohmrun_pml_Token.TAtom(eu_ohmrun_pml_AtomSum.AnSym(x));
	},{ fileName : "stx/parse/Parsers.hx", lineNumber : 41, className : "stx.parse.Parsers", methodName : "AnonThen"});
	var p = stx_parse_Parser.get_self(this1);
	p.tag = haxe_ds_Option.Some("atom");
	var this1 = new stx_parse_parser_term_TagRefuse(p,"atom",{ fileName : "stx/Parse.hx", lineNumber : 164, className : "stx.LiftParse", methodName : "tagged"});
	$r = this1;
	return $r;
}(this));
stx_parse_pml_Lexer.main = (function($this) {
	var $r;
	var this1 = new stx_parse_parser_term_Many(stx_parse_pml_Lexer.whitespace,{ fileName : "stx/parse/Parsers.hx", lineNumber : 47, className : "stx.parse.Parsers", methodName : "Many"});
	var pI = stx_parse_Parser.get_self(this1);
	var self = stx_lift_ArrayLift.lfold1([stx_parse_pml_Lexer.tl_paren,stx_parse_pml_Lexer.tr_paren,stx_parse_pml_Lexer.k_number,stx_parse_pml_Lexer.k_string,stx_parse_pml_Lexer.k_bool,stx_parse_pml_Lexer.k_atom],function(memo,next) {
		var this1 = memo;
		var this2 = new stx_parse_parser_term_Or(this1,next,{ fileName : "stx/parse/Parsers.hx", lineNumber : 35, className : "stx.parse.Parsers", methodName : "Or"});
		return stx_parse_Parser.get_self(this2);
	});
	var this1 = new stx_parse_parser_term_Failed("No Parser in Array",false,{ fileName : "stx/parse/lift/LiftArrayOfParser.hx", lineNumber : 6, className : "stx.parse.lift.LiftArrayOfParser", methodName : "ors"});
	var p2;
	if(self._hx_index == 0) {
		var v = self.v;
		p2 = v;
	} else {
		p2 = this1;
	}
	var this1 = new stx_parse_parser_term_AndR(pI,p2,{ fileName : "stx/parse/Parsers.hx", lineNumber : 110, className : "stx.parse.Parsers", methodName : "AndR"});
	var this2 = new stx_parse_parser_term_OneMany(stx_parse_Parser.get_self(this1),{ fileName : "stx/parse/Parsers.hx", lineNumber : 50, className : "stx.parse.Parsers", methodName : "OneMany"});
	var pI = stx_parse_Parser.get_self(this2);
	var this1 = new stx_parse_parser_term_Many(stx_parse_pml_Lexer.whitespace,{ fileName : "stx/parse/Parsers.hx", lineNumber : 47, className : "stx.parse.Parsers", methodName : "Many"});
	var this2 = new stx_parse_parser_term_AndL(pI,stx_parse_Parser.get_self(this1),{ fileName : "stx/parse/Parsers.hx", lineNumber : 113, className : "stx.parse.Parsers", methodName : "AndL"});
	var pI = stx_parse_Parser.get_self(this2);
	var this1 = new stx_parse_parser_term_Eof(null,{ fileName : "stx/parse/Parsers.hx", lineNumber : 65, className : "stx.parse.Parsers", methodName : "Eof"});
	var this2 = new stx_parse_parser_term_AndL(pI,this1,{ fileName : "stx/parse/Parsers.hx", lineNumber : 113, className : "stx.parse.Parsers", methodName : "AndL"});
	$r = stx_parse_Parser.get_self(this2);
	return $r;
}(this));
stx_pico_Apply._ = stx_pico_ApplyLift;
stx_pico_Comply._ = stx_pico_ComplyLift;
stx_pico_Either.__ = stx_pico_EitherLift;
stx_pico_Outcome.__ = stx_pico_OutcomeLift;
stx_pkg__$Pkg_Registry.instance = new stx_pkg__$Pkg_Registry();
stx_proxy_core_Client._ = stx_proxy_core_ClientLift;
stx_proxy_core_Closed.ZERO = stx_proxy_core_Closed._new();
stx_proxy_core_Producer._ = stx_proxy_core_ProducerLift;
stx_proxy_core_Proxy._ = stx_proxy_core_ProxyLift;
stx_proxy_core_ProxyCat._ = stx_proxy_core_ProxyCatLift;
stx_proxy_core_Pull._ = stx_proxy_core_PullLift;
stx_proxy_core_PullCat._ = stx_proxy_core_PullCatLift;
stx_proxy_core_Push._ = stx_proxy_core_PushLift;
stx_proxy_core_PushCat._ = stx_proxy_core_PushCatLift;
stx_proxy_core_Request._ = stx_proxy_core_RequestLift;
stx_proxy_core_RequestCat._ = stx_proxy_core_RequestCatLift;
stx_proxy_core_Respond._ = stx_proxy_core_RespondLift;
stx_proxy_core_RespondCat._ = stx_proxy_core_RespondCatLift;
stx_proxy_core_Server._ = stx_proxy_core_ServerLift;
stx_show_core_LayoutNode._ = stx_show_core_LayoutNodeLift;
tink_core_Callback.depth = 0;
tink_core_Callback.MAX_DEPTH = 500;
tink_core_AlreadyDisposed.INST = new tink_core_AlreadyDisposed();
tink_core_Future.NOISE = new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(null));
tink_core_Future.NEVER_INST = new tink_core__$Future_FutureObject();
tink_core_Future.NEVER = tink_core_Future.NEVER_INST;
tink_core_Lazy.NOISE = new tink_core__$Lazy_LazyConst(null);
tink_core_Lazy.NULL = tink_core_Lazy.NOISE;
tink_core_Noise.Noise = null;
tink_core_ProgressValue.ZERO = (function($this) {
	var $r;
	var this1 = new tink_core_MPair(0,haxe_ds_Option.None);
	var this2 = this1;
	$r = this2;
	return $r;
}(this));
tink_core_Progress.INIT = tink_core_ProgressValue.ZERO;
tink_core_Promise.NOISE = new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success(null)));
tink_core_Promise.NEVER = tink_core_Promise.never();
tink_core__$Signal_Disposed.INST = new tink_core__$Signal_Disposed();
tink_xml_Structure0.inst = new tink_xml_Structure0();
tink_xml_Structure1.inst = new tink_xml_Structure1();
tink_xml_Structure2.inst = new tink_xml_Structure2();
tink_xml_Structure3.inst = new tink_xml_Structure3();
{
	stx_net_uri_Test.main();
	haxe_EntryPoint.run();
}
})(typeof exports != "undefined" ? exports : typeof window != "undefined" ? window : typeof self != "undefined" ? self : this, typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
